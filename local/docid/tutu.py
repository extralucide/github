#!/usr/bin/env python 2.7.3
# -*- coding: utf-8 -*-
#This file was originally generated by PyScripter's unitest wizard
import unittest
import docid
from docid import Interface,Gui,ChangeGui
from ConfigParser import ConfigParser
from Tkinter import *
try:
    import Pmw
except ImportError:
    print "DoCID requires the Python MegaWidgets for Python. " \
          "See http://sourceforge.net/projects/pmw/"
import Queue
from check_is import CheckIS
from check_llr import CheckLLR
from export_derived import Derived
from synergy_thread import ThreadQuery
import os
from os.path import join
sys.path.append("python-docx")
try:
    import docx
except ImportError:
    print "DoCID requires the python-docx library for Python. " \
            "See https://github.com/mikemaccana/python-docx/"
                #    raise ImportError, "DoCID requires the python-docx library
from tool import Tool,BProc_HTMLParser
import re
from lxml import etree
import zipfile
def stub():
    return False
import urllib
from conf.check_conf import Conf
from ccb import CCB
#import matplotlib.pyplot as plt
#import numpy as np
from export_doc import BuildDoc
from synergy import Synergy
from convert_xml_html import HtmlConverter
def updateCheck():
    #Gets downloaded version
    versionSource = open('version.txt', 'r')
    versionContents = versionSource.read()
    #gets newest version
    updateSource = urllib.urlopen("http://olivier.appere.free.fr/python/docid/version.txt")
    updateContents = updateSource.read()
    #checks for updates
    if updateContents != versionContents:
        print "A new version of doCID is available: {:s}".format(updateContents)
    else:
        print "You are already running the most up to date version of doCID: {:s}".format(updateContents)
class Gui_(Interface):
    gen_dir = "result"
    def onLink(self, event):
        event.widget.configure(cursor="arrow")
    def outsideLink(self, event):
        event.widget.configure(cursor="xterm")
    def displayOutput(self,
                  master,
                  width_output_log):
        #
        # Output log
        #
        general_output_frame = Frame(master)
        general_output_frame.pack(ipadx=5, ipady=5)
        sub_general_output_frame = Frame(general_output_frame)
        sub_general_output_frame.pack(fill=X, expand=1)
        self.log_scrollbar = log_scrollbar = Scrollbar(sub_general_output_frame)
        self.log_scrollbar.pack(side=RIGHT, fill=Y)
        self.general_output_txt = Text(sub_general_output_frame,
                                       wrap=WORD,
                                       width=width_output_log,
                                       height=28,
                                       fg='green',
                                       bg='black')
        self.log_scrollbar["command"] = self.general_output_txt.yview
        self.general_output_txt["yscrollcommand"] = log_scrollbar.set
        self.general_output_txt.bind("<MouseWheel>", self.log_scrollEvent)
        self.general_output_txt.bind("<Key-Up>", self.log_upEvent)
        self.general_output_txt.bind("<Key-Down>", self.log_downEvent)
        self.general_output_txt.pack()
        # Clear
        self.button_clear = Button(general_output_frame, text='Clear', command=self.click_clear)
        self.button_clear.pack(side=LEFT, padx=0, pady=10)
class StubIHM():
    def resultStartSession(self,stdout,stderr):
        pass
    class Success():
        def config(self,**kwargs):
            pass
    class Text():
        def tag_configure(self,color,foreground="",underline=1):
            pass
        def insert(self,begin,text,hlink=""):
            pass
        def see(self,begin):
            pass
        def get(self):
            return "TEST"
        def tag_bind(self,hlink="hlink", button="<Button-1>", function=stub):
            pass
    class Image():
        def itemconfigure(self,**kwargs):
            pass
    class Canvas():
        def itemconfigure(self,image="",state=""):
            pass
    class Checkbutton():
        def __init__(self,stub_value=True):
            self.stub_value = stub_value
        def get(self):
            return self.stub_value
    class Entry():
        def __init__(self,stub_value="NO ENTRY"):
            self.stub_value = stub_value
        def get(self):
            return self.stub_value
    def onLink(self):
        return False
    def outsideLink(self):
        return False
    def openHLink_ccb(self):
        return False
    def getCIDType(self):
        return  self.cid_type
    def getCCBType(self):
        return  self.ccb_type
    def setParameters(self,dico):
        self.dico_parameters = dico
        print "set",self.dico_parameters
    def getParameters(self):
        print "get",self.dico_parameters
        return self.dico_parameters
    def displayEOC_Info(self,data=()):
        return
    def __init__(self):
        self.success = self.Success()
        self.verbose = ""
        self.skip_change_synergy_var = self.Checkbutton()
        self.general_output_txt = self.Text()
        self.hsid_entry = self.Text()
        self.component = "SW_ENM"
        self.release = ""
        self.aircraft = ""
        self.ccb_word_img_can = self.Canvas()
        self.ccb_word_img = self.Image()
        # Used by _getCR in ThreadQuery class in synergy_thread module
        self.entry_value_stub = False
        self.cr_type_entry = self.Entry()
        self.author_entry = self.Entry()
        self.reference_entry = self.Entry()
        self.revision_entry = self.Entry()
        self.revision_entry = self.Entry()
        self.part_number_entry = self.Entry()
        self.board_part_number_entry = self.Entry()
        self.checksum_entry = self.Entry()
        self.dal_entry = self.Entry()
        self.regexp_entry = self.Entry()

        self.previous_release_entry = self.Entry("SW_ENM/06") # Detected on
        self.impl_release_entry = self.Entry()
        self.cr_for_review_var = self.Checkbutton(False)
        self.cr_with_parent = self.Checkbutton(True)
        self.log_on_var = self.Checkbutton(True)
        # For CID
        self.cid_word_img_can = self.Canvas()
        self.cid_word_img = self.Image()
        self.status_released = False
        self.status_integrate = False
        self.project_set_list = []
        self.dico_parameters = {}
        self.cid_type = "SCI"
        self.ccb_type = "SCR"
    def getTypeWorkflow(self):
        return False
    def displayHyperlink(self,tag,filename,txt=""):
        pass
    def log(self,text="",color="",display_gui=False):
        print text
    def defill(self):
        pass
    def cr_activate_all_button(self):
        pass
    def _createConditionStatus(self,
                               detect_release="",
                               impl_release="",
                               cr_type="",
                               old_cr_workflow=False,
                               cr_status="",
                               attribute="CR_implemented_for"):
        detect_attribut = "%CR_detected_on;%CR_implemented_for"
        condition = "\"(cvtype='problem') and ((CR_implemented_for='SW_ENM/06')) and ((CR_type='SW_ENM'))\" "
        return condition, detect_attribut
class TestDoCID(unittest.TestCase):
    def testDialog(self):
        return
        root = Tk()
        root.update()
        conf_text = Tool.getConfigList(id=1)
        result = docid.tkSimpleDialog.askstring("Customize configuration name", "Label", initialvalue=conf_text)
        print "RESULT",result
        return
        ihm = Tk()
        conf_text = Tool.getConfigList(id=1)
        #title="Customize configuration name"
        #initialvalue=conf_text
        d = docid.MyDialog(parent=ihm,title="Customize configuration name")
        print "RESULT:",d.result
    def testExtractSRTS(self):
        return
        if 0==0:
            current_dir = os.getcwd()
            self.dirname = join(current_dir,"qualification")
            doc_name = "SRTS_SW_STANDARD_ET3157-1.5.docx"
            filename = join(self.dirname,doc_name)
        else:
            doc_name = "SWRD_ENM_ET3135_S-5.1.docx"
            filename = join(self.dirname_req,doc_name)
        llr_xmltree = docx.opendocx(filename)
        txt = docx.getdocumenttext(llr_xmltree)
        for line in txt:
            print line
    def testExtractWithXslt(self):
        return
        current_dir = os.getcwd()
        self.dirname = join(current_dir,"qualification")
        doc_name = "SRTS_SW_STANDARD_ET3157-1.5.docx"
        filename = join(self.dirname,doc_name)
        mydoc = zipfile.ZipFile(filename)
        xmlcontent = mydoc.read('word/document.xml')
        xmlclean = Tool.removeNonAscii(xmlcontent)
        print "XML:",xmlclean
        doc = etree.parse(xmlclean)
        transform = etree.XSLT("template/parse_docx_simple.xslt")
        result_tree = transform(doc)
        print "RESULT",result_tree
    def testExtractDocx(self):
        return
        if 1==0:
            current_dir = os.getcwd()
            self.dirname = join(current_dir,"qualification")
            doc_name = "SRTS_SW_STANDARD_ET3157-1.5.docx"
            filename = join(self.dirname,doc_name)
        else:
            doc_name = "SWRD_ENM_ET3135_S-5.1.docx"
            filename = join(self.dirname_req,doc_name)
        llr_xmltree = docx.opendocx(filename)
        txt = docx.getdocumenttext(llr_xmltree)
        parse_spec = CheckLLR()
        tag = {}
        found_tag = {}
        list_tag = ("bottom_up_matrix","top_bottom_matrix","derived_matrix","tbd_matrix","tbc_matrix","deletion_matrix")
        tbl_top_bottom_matrix = {}
        tbl_bottom_up_matrix = {}
        tbl_derived_matrix = []
        tbl_tbd_matrix = []
        tbl_tbc_matrix = []
        tbl_deletion_matrix = []
        for x in list_tag:
            tag[x] = parse_spec.dico_specifications["SWRD"][x]
            found_tag[x] = False
        index_row = 0
        for line in txt:
            if not found_tag["bottom_up_matrix"]:
                found_tag["bottom_up_matrix"] = parse_spec.matchBeginParagraph(tag["bottom_up_matrix"],line)
            elif not found_tag["top_bottom_matrix"]:
                # Inside top-bottom matrix
                found_tag["top_bottom_matrix"] = parse_spec.matchBeginParagraph(tag["top_bottom_matrix"],line)
                if found_tag["top_bottom_matrix"]:
                    index_row = 0
                    upper_req = False
                    high_req = False
                else:
                    # SRS_31
                    m = re.match(r'^\s*((ICD|SSCS)_.*)', line)
                    if m:
                        upper_req = line
                    m = re.match(r'^\s*(SWRD_.*|NOT COVERED)', line)
                    if m:
                        high_req = line
                        tbl_top_bottom_matrix[upper_req] = high_req
                    #print "TOP-BOTTOM:",line
            elif not found_tag["derived_matrix"]:
                # Inside bottom-up matrix
                found_tag["derived_matrix"] = parse_spec.matchBeginParagraph(tag["derived_matrix"],line)
                if found_tag["derived_matrix"]:
                    upper_req = False
                    high_req = False
                else:
                    # SRS 32
                    m = re.match(r'^\s*((ICD|SSCS)_.*)', line)
                    if m:
                        upper_req = line
                    m = re.match(r'^\s*(SWRD_.*)', line)
                    if m:
                        high_req = line
                        tbl_bottom_up_matrix[high_req] = upper_req
                    #print "BOTTOM-UP:",line
            elif not found_tag["tbd_matrix"]:
                # Inside derived matrix
                found_tag["tbd_matrix"] = parse_spec.matchBeginParagraph(tag["tbd_matrix"],line)
                if found_tag["tbd_matrix"]:
                    pass
                else:
                    # SRS 33
                    m = re.match(r'^\s*(SWRD_.*)', line)
                    if m:
                        high_req = line
                        tbl_derived_matrix.append(high_req)
                    #print "DERIVED:",line
            elif not found_tag["tbc_matrix"]:
                # Inside TBD matrix
                found_tag["tbc_matrix"] = parse_spec.matchBeginParagraph(tag["tbc_matrix"],line)
                if found_tag["tbc_matrix"]:
                    pass
                else:
                    # SRS 34
                    m = re.match(r'^\s*(SWRD_.*)', line)
                    if m:
                        high_req = line
                        tbl_tbd_matrix.append(high_req)
                    print "TBD:",line
            elif not found_tag["deletion_matrix"]:
                # Inside TBC matrix
                found_tag["deletion_matrix"] = parse_spec.matchBeginParagraph(tag["deletion_matrix"],line)
                if found_tag["deletion_matrix"]:
                    pass
                else:
                    # SRS 35
                    m = re.match(r'^\s*(SWRD_.*)', line)
                    if m:
                        high_req = line
                        tbl_tbc_matrix.append(high_req)
                    print "TBC:",line
            else:
                # Inside derived matrix
                # SRS 36
                m = re.match(r'^\s*(SWRD_.*)', line)
                if m:
                    high_req = line
                    tbl_deletion_matrix.append(high_req)
                print "DELETION:",line
        for x in list_tag:
            assert found_tag[x]
        nb = len(tbl_top_bottom_matrix)
        print "Found {:d} upper requirements.".format(nb)
        nb = len(tbl_bottom_up_matrix)
        print "Found {:d} high requirements.".format(nb)
        nb = len(tbl_derived_matrix)
        print "Found {:d} derived high requirements.".format(nb)
        nb = len(tbl_tbd_matrix)
        print "Found {:d} high requirements TBD.".format(nb)
        nb = len(tbl_tbc_matrix)
        print "Found {:d} high requirements TBC.".format(nb)
        nb = len(tbl_deletion_matrix)
        print "Found {:d} high requirements deleted.".format(nb)
    def testuUpdateCheck(self):
        return
        tool = Tool()
        tool.updateCheck()
    def logSynergy(self,
                   ihm,
                   system="Dassault F5X PDS",
                   item="ESSNESS"):
        login = "appereo1"
        password = "jeudi2009"
        queue = Queue.Queue()
        thread = ThreadQuery("doc",master=ihm,queue=queue)
        thread._startSession(system=system,
                             item=item,
                             database="db_sms_pds",
                             login=login,
                             password=password)
        thread.setSessionStarted()
        return thread
    def test_plans(self):
        return
        tbl_plans = [['Title', 'Reference', 'Synergy Name', 'Version', 'Type', 'Instance', 'Release', 'CR'], ['Software Configuration Management Plan', 'ET3134', 'SCMP_SW_PLAN_ET3134.docx', '2.0', 'doc', '1', 'SW_PLAN/02', '543'], ['Software Verification Plan', 'ET3133', 'SVP_SW_PLAN_ET3133.docx', '2.0', 'doc', '1', 'SW_PLAN/02', '544'], ['Software Quality Assurance Plan', 'PQ 0.1.0.155', 'SQAP_SW_PLAN_PQ 0.1.0.155.docx', '2.0', 'doc', '1', 'SW_PLAN/02', '351,365'], ['Software Configuration Management Plan', 'ET3134', 'SCMP_SW_PLAN_ET3134.pdf', '2.0', 'pdf', '1', 'SW_PLAN/02', ''], ['Software Quality Assurance Plan', 'PQ 0.1.0.155', 'SQAP_SW_PLAN_PQ 0.1.0.155.pdf', '2.0', 'pdf', '1', 'SW_PLAN/02', ''], ['Software Verification Plan', 'ET3133', 'SVP_SW_PLAN_ET3133.pdf', '2.0', 'pdf', '1', 'SW_PLAN/02', ''], ['Software Quality Assurance Plan', 'PQ 0.1.0.155', 'SQAP_SW_PLAN_PQ 0.1.0.155.pdf', '2.0.1', 'pdf', '1', 'SW_PLAN/02', '']]
        BuildDoc.sortByName(tbl_plans,2)
        for x in tbl_plans:
            print x
    def test_sortByName(self):
        return
        print "test_sortByName"
        tbl_in = [[' SMS ESSNESS Supplier Specific Component Specification (SSCS)', 'ET2788-S', 'SSCS_ESSNESS_ET2788_S.pdf', '6', 'pdf', '4', 'BOARD_ESSNESS/01', '562'],
                       [' SMS ESSNESS Supplier Specific Component Specification (SSCS)', 'ET2788-S', 'SSCS_ESSNESS_ET2788_S.doc', '8', 'doc', '2', 'BOARD_ESSNESS/01', '235,589']
]
        for x in tbl_in:
            print "tbl_in",x
        tbl_out = []
        BuildDoc.sortByName(tbl_in,tbl_out)
        for x in tbl_out:
            print "tbl_out",x
    def test_sortData(self):
        return
        print "test_sortData"
        table_input_data = ['51284H_MPLAB_Compiler.pdf', '51317G_Link_Asm.pdf', '70157F_Programmer_ref_guide.pdf', '70182C_DMA.pdf', '70183D_ADC.pdf', '70184C_Interrupt.pdf', '70185C_ECAN.pdf', '70186E_Oscillator.pdf', '70188E_UART.pdf', '70191E_FlashProg.pdf', '70192C_Reset.pdf', '70193D_IOport.pdf', '70194F_DeviceConfiguration.pdf', '70195E_I2C.pdf', '70198D_InputCapture.pdf', '70202C_DataMemory.pdf', '70203D_ProgramMemory.pdf', '70204C_CPU.pdf', '70205D_Timers.pdf', '70206D_SPI.pdf', '70209A_OutputCompare.pdf', '70288C_DCI.pdf', '70593D_General.pdf', '80483G_Errata.pdf', 'MPLAB_C_Compiler_ReleaseNote.html', 'A429_RX_hi3588.pdf', 'Comparator_74HC_HCT85.pdf', 'Counter_cd74hc4017.pdf', 'Decoder_sn54hct138.pdf', 'IOexpander_MCP23S17.pdf', 'Shift_Register_74HC_HCT4094.pdf', 'TempSensor_LM75B.pdf', 'VoltageDetector_tps3803.pdf', 'SMS_ESNESS_FUNC_HSID_ET2717_E.docx', 'SMS_EPDS_ESSNESS_SPI_Annex_ET3547_S.xls', 'SMS_EPDS_SPI_ICD_ET3532_S.docx', 'SMS_EPDS_SPI_ICD_ET3532_S.pdf', 'SSCS_ESSNESS_ET2788_S.doc', 'SSCS_ESSNESS_ET2788_S.pdf', 'CRI_F_01_Appendix.pdf', 'CRI_F_01_Software_Aspects_of_Certification.pdf', 'CRI_F_03_Non_operational_embedded_Software.pdf', 'CRI_F_04_Data_Buses.pdf', 'CRI_F_05_Aeronautical_data_bases.pdf', 'IP SW_3.pdf', 'IP_SW_1.pdf', 'IP_SW_2.pdf', 'SCS_SW_STANDARD_ET3159.pdf', 'SDTS_SW_STANDARD_ET3158.pdf', 'SRTS_SW_STANDARD_ET3157.pdf', 'SMS_EPDS_DAL_GS3134.pdf']
        #table_input_data = ['SSCS_ESSNESS_ET2788_S.pdf',
        #                    'SMS_EPDS_SPI_ICD_ET3532_S.pdf',
        #                    'SSCS_ESSNESS_ET2788_S.doc',
        #                    'SMS_EPDS_SPI_ICD_ET3532_S.doc']
        ihm = StubIHM()
        cid = BuildDoc(ihm,
                       session_started=True)
        cid.tableau_items = [[' SMS ESSNESS Supplier Specific Component Specification (SSCS)', 'ET2788-S', 'SSCS_ESSNESS_ET2788_S.pdf', '6', 'pdf', '4', 'BOARD_ESSNESS/01', ''],
                       [' SMS ESSNESS FUNC HSID (HSID)', 'ET2717-E', 'SMS_ESNESS_FUNC_HSID_ET2717_E.docx', '1D10', 'doc', '1', 'BOARD_ESSNESS/01', '916,926'],
                       [' SMS EPDS ESSNESS SPI Annex (ICD Data)', 'ET3547-S', 'SMS_EPDS_ESSNESS_SPI_Annex_ET3547_S.xls', '4D3', 'xls', '1', 'BOARD_ESSNESS/01', ''],
                       [' SMS ESSNESS Supplier Specific Component Specification (SSCS)', 'ET2788-S', 'SSCS_ESSNESS_ET2788_S.doc', '8', 'doc', '2', 'BOARD_ESSNESS/01', ''],
                       [' SMS EPDS SPI ICD (ICD Protocol)', 'ET3252-S', 'SMS_EPDS_SPI_ICD_ET3532_S.docx', '3', 'doc', '4', 'SMS_EPDS/01', ''],
                       [' SMS EPDS SPI ICD (ICD Protocol)', 'ET3252-S', 'SMS_EPDS_SPI_ICD_ET3532_S.pdf', '3', 'pdf', '4', 'SMS_EPDS/01', ''],
                       [' Voltage Detector', 'SLVS392A', 'VoltageDetector_tps3803.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
                       ['Digital temperature sensor and thermal watchdog', 'LM75B5', 'TempSensor_LM75B.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
                       ['16-Bit I/O Expander with Serial Interface', 'DS21952B', 'IOexpander_MCP23S17.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
                       ['3-Line to 8-Line Decoders/Demultiplexers', 'SCLS171E', 'Decoder_sn54hct138.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
                       ['High-Speed CMOS Logic Decade Counter/Divider with 10 Decoded Outputs', 'SCHS200D', 'Counter_cd74hc4017.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
                       ['16-bit Digital Signal Controllers (up to 256 KB Flash and 30 KB SRAM) with Advanced Analog', '70593D', '70593D_General.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
                       ['Section 20. Data Converter Interface', '70288C', '70288C_DCI.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
                       ['Section 13. Output Compare', '70209A', '70209A_OutputCompare.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
                       ['Section 18. Serial Peripheral Interface', '70206D', '70206D_SPI.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
                       ['Section 11. Timers', '70205D', '70205D_Timers.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
                       ['Section 2. CPU', '70204C', '70204C_CPU.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
                       ['Section 4. Program Memory', '70203D', '70203D_ProgramMemory.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
                       ['Section 3. Data Memory ', '70202C', '70202C_DataMemory.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
                       ['Section 12. Input Capture', '70198D', '70198D_InputCapture.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
                       ['Section 19. Inter-Integrated Circuit', '70195E', '70195E_I2C.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
                       ['Section 25. Device Configuration', '70194F', '70194F_DeviceConfiguration.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
                       ['Section 10. I/O Ports', '70193D', '70193D_IOport.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
                       ['Section 8. Reset', '70192C', '70192C_Reset.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
                       ['Section 5. Flash Programming', '70191E', '70191E_FlashProg.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
                       ['Section 17. UART', '70188E', '70188E_UART.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
                       ['Section 7. Oscillator', '70186E', '70186E_Oscillator.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
                       ['Section 21. ECAN', '70185C', '70185C_ECAN.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
                       ['Section 6. Interrupts', '70184C', '70184C_Interrupt.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
                       ['Section 16. Analog-to-Digital Converter (ADC)', '70183D', '70183D_ADC.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
                       ['Section 22. Direct Memory Access (DMA)', '70182C', '70182C_DMA.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
                       ['dsPIC33FJ256GPX06A/X08A/X10A Family Silicon Errata and Data Sheet Clarification', '80483G', '80483G_Errata.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
                       [' MPLAB\xae C COMPILER FOR PIC24 MCUs AND dsPIC\xae DSCs USER\x92S GUIDE', '51284H', '51284H_MPLAB_Compiler.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
                       [' MPLAB\xae ASSEMBLER LINKER AND UTILITIES FOR PIC24 MCUs AND dsPIC\xae DSCs USER.S GUIDE', '51317G', '51317G_Link_Asm.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
                       ["16-bit MCU and DSC Programmer's Reference Manual ", '70157F', '70157F_Programmer_ref_guide.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
                       ['ARINC 429 Receiver with SPI Interface', 'DS3588G', 'A429_RX_hi3588.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
                       ['CCB minutes', '', 'CCB_Minutes_SW_ENM_001.docx', '1.0', 'doc', '1', 'SW_ENM/02', ''],
                       ['CCB minutes', '', 'CCB_Minutes_SW_ENM_002.docx', '1.0', 'doc', '1', 'SW_ENM/02', ''],
                       ['CCB minutes', '', 'CCB_Minutes_SW_ENM_003.docx', '1.0', 'doc', '1', 'SW_ENM/02', ''],
                       ['CCB minutes', '', 'CCB_Minutes_SW_ENM_004.docx', '1.0', 'doc', '1', 'SW_ENM/02', ''],
                       ['CCB minutes', '', 'CCB_Minutes_SW_ENM_005.docx', '1.0', 'doc', '1', 'SW_ENM/02', ''],
                       ['CCB minutes', '', 'CCB_Minutes_SW_ENM_006.docx', '3.0', 'doc', '1', 'SW_ENM/03', ''],
                       ['CCB minutes', '', 'CCB_Minutes_SW_ENM_007.docx', '3.0', 'doc', '1', 'SW_ENM/03', ''],
                       ['', '', 'Gen_ini_File_BProc.xlsm', '3.1', 'xls', '1', 'SW_ENM/03', ''],
                       ['CCB minutes', '', 'CCB_Minutes_SW_ENM_008.docx', '3.0', 'doc', '1', 'SW_ENM/03', ''],
                       ['CCB minutes', '', 'CCB_Minutes_SW_ENM_009.docx', '3.0', 'doc', '1', 'SW_ENM/03', ''],
                       ['Comparator', '74HC_HCT85', 'Comparator_74HC_HCT85.pdf', '3.0', 'pdf', '1', 'SW_ENM/03', ''],
                       ['Shift Register', '74HC_HCT4094', 'Shift_Register_74HC_HCT4094.pdf', '3.0', 'pdf', '1', 'SW_ENM/03', ''],
                       ['CCB minutes', '', 'CCB_Minutes_SW_ENM_010.docx', '4.0', 'doc', '1', 'SW_ENM/04', ''],
                       ['CCB minutes', '', 'CCB_Minutes_SW_ENM_011.docx', '5.0', 'doc', '1', 'SW_ENM/05', ''],
                       ['', '', 'GenerationXml.xls', '5.1', 'xls', '1', 'SW_ENM/05', ''],
                       ['', '', 'Asi_tables.xls', '5.0', 'xls', '1', 'SW_ENM/05', ''],
                       ['', '', 'calcul_coefs.xls', '5.0', 'xls', '1', 'SW_ENM/05', ''],
                       ['', '', 'PCB sensor.xlsx', '5.0', 'xls', '1', 'SW_ENM/05', ''],
                       ['CCB minutes', '', 'CCB_Minutes_SW_ENM_012.docx', '5.0', 'doc', '1', 'SW_ENM/05', ''],
                       ['Software Requirements Document', '', 'Tests_ECE3FA3380401_vs_SwRD_5_1.xls', '5.0', 'xls', '1', 'SW_ENM/05', ''],
                       ['', '', 'Timings Verifications.xls', '5.0', 'xls', '1', 'SW_ENM/05', ''],
                       ['Software Design Document', 'ET3136-S', 'SwDD_ENM_ET3136_S.docx', '5.0', 'doc', '1', 'SW_ENM/05', ''],
                       ['Software High-Level Derived Requirement document', 'ET3196-S', 'SHLDR_ENM_ET3196_S.xls', '5.1', 'xls', '1', 'SW_ENM/05', ''],
                       ['CCB minutes', '', 'CCB_Minutes_SW_ENM_013.docx', '5.0', 'doc', '1', 'SW_ENM/05', ''],
                       [' Software Requirements Document', 'ET3135-S', 'SWRD_ENM_ET3135_S.pdf', '5.1', 'pdf', '1', 'SW_ENM/05', ''],
                       [' Software Requirements Document', 'ET3135-S', 'SWRD_ENM_ET3135_S.doc', '6.2', 'doc', '1', 'SW_ENM/06', ''],
                       ['EASA Certification Review Item', '', 'CRI_F_01_Appendix.pdf', '1', 'pdf', '1', 'SW_PLAN/01', ''],
                       ['EASA Certification Review Item', '', 'CRI_F_04_Data_Buses.pdf', '1', 'pdf', '1', 'SW_PLAN/01', ''],
                       ['EASA Certification Review Item', '', 'CRI_F_05_Aeronautical_data_bases.pdf', '1', 'pdf', '1', 'SW_PLAN/01', ''],
                       [' DAL assignment document', 'GS3134', 'SMS_EPDS_DAL_GS3134.pdf', '3', 'pdf', '1', 'SW_PLAN/01', '182'],
                       ['CCB minutes', '', 'CCB_Minutes_SW_PLAN_001.docx', '1.0', 'doc', '1', 'SW_PLAN/01', ''],
                       ['', '', 'IP SW_3.pdf', '1', 'pdf', '1', 'SW_PLAN/01', ''],
                       ['FAA Issue Paper', '', 'IP_SW_1.pdf', '1', 'pdf', '1', 'SW_PLAN/01', ''],
                       ['FAA Issue Paper', '', 'IP_SW_2.pdf', '1', 'pdf', '1', 'SW_PLAN/01', ''],
                       ['EASA Certification Review Item', '', 'CRI_F_01_Software_Aspects_of_Certification.pdf', '2', 'pdf', '1', 'SW_PLAN/01', ''],
                       ['EASA Certification Review Item', '', 'CRI_F_03_Non_operational_embedded_Software.pdf', '2', 'pdf', '1', 'SW_PLAN/01', ''],
                       ['CCB minutes', '', 'CCB_Minutes_SW_PLAN_002.docx', '1.0', 'doc', '1', 'SW_PLAN/01', ''],
                       ['CCB minutes', '', 'CCB_Minutes_SW_PLAN_003.docx', '2.0', 'doc', '1', 'SW_PLAN/02', ''],
                       ['CCB minutes', '', 'CCB_Minutes_SW_PLAN_PDS_SDS_001.docx', '1.0', 'doc', '1', 'SW_PLAN_PDS_SDS/01', ''],
                       ['CCB minutes', '', 'CCB_Minutes_SW_PLAN_PDS_SDS_002.docx', '1.0', 'doc', '1', 'SW_PLAN_PDS_SDS/01', ''],
                       ['CCB minutes', '', 'CCB_Minutes_SW_PLAN_PDS_SDS_003.docx', '2.0', 'doc', '1', 'SW_PLAN_PDS_SDS/02', '']]
        table_exclude = ['dln.2.0.3.exe', 'BProc_Editor.exe', 'BProc_Publisher.exe', 'BProc_SDK.dll', 'BProc_Scheduler.exe', 'BProcPluginHw.dll', 'BProcPluginHwLEss.dll', 'BProcPluginHwLNess.dll', 'BProcPluginHwREss.dll', 'BProcPluginHwRNess.dll', 'BProcPluginSpi.dll', 'BProc_Tools.dll', '_BProc_Report.bat', '_BProc_Scheduler Remote.bat', '_BProc_Scheduler.bat', '_BProc_Server.bat', 'dln.net.dll', 'LABEL_LESS_values.ini', 'LABEL_LNESS_values.ini', 'LABEL_RESS_values.ini', 'LABEL_RNESS_values.ini', 'Gen_ini_File_BProc.xlsm', 'CFG_TCP.ini', 'F5X_LRU_HW_TB.dll', 'F5X_LRU_HW_TB.lib', 'INIT_ARINC.txt', 'INIT_ESS.txt', 'INIT_NESS.txt', 'INIT_SDS.txt', 'INIT_TB.txt', 'INIT_TIE.txt', 'LABEL_ARINC.ini', 'LABEL_ESS.ini', 'LABEL_GOM.ini', 'LABEL_LESS.ini', 'LABEL_LNESS.ini', 'LABEL_NESS.ini', 'LABEL_NOT_WIRED.ini', 'LABEL_PWR_SUP.ini', 'LABEL_RESS.ini', 'LABEL_RNESS.ini', 'LABEL_SDS_IO_HW.ini', 'LABEL_SDS_IO_LH.ini', 'LABEL_SDS_IO_RH.ini', 'LABEL_TB.ini', 'LABEL_TIE.ini', 'Readme.txt', 'TestDll.exe', 'server.exe', 'icd_spi_LEss.xml', 'icd_spi_LNess.xml', 'icd_spi_LSdsio.xml', 'icd_spi_REss.xml', 'icd_spi_RNess.xml', 'icd_spi_RSdsio.xml', 'icd_spi_RTie.xml', 'GenerationXml.xls', 'ReportsScripts.br', 'SW_ENM.filters', 'SW_ENM.rqtf', 'SW_ENM.rqtfimage', 'SW_ENM.types', 'StandardRules.br', 'Project Reports.xml']
        tableau_sources_finduse = ['AplActuation_ContactorAtrc1.c', 'AplActuation_ContactorAtrc2.c', 'AplActuation_ContactorBc1.c', 'AplActuation_ContactorBc2.c', 'AplActuation_ContactorBooc.c', 'AplActuation_ContactorCabc1.c', 'AplActuation_ContactorCabc2.c', 'AplActuation_ContactorGalc1.c', 'AplActuation_ContactorGalc2.c', 'AplActuation_ContactorGpulc.c', 'AplActuation_ContactorLaltc1.c', 'AplActuation_ContactorRaltc1.c', 'AplActuation_ContactorShp.c', 'AplActuation_ContactorTc1.c', 'AplActuation_ContactorTc2.c', 'AplActuation_ContactorTrc1.c', 'AplActuation_ContactorTrc2.c', 'AplActuation_DsoAftWaterHeaterAuthorised.c', 'AplActuation_DsoApuEcuHppRelayCmd.c', 'AplActuation_DsoBatHeaterRelay2.c', 'AplActuation_DsoBatHeaterTruFanPower.c', 'AplActuation_DsoBatTruLt.c', 'AplActuation_DsoCabGalLt.c', 'AplActuation_DsoCabcShed.c', 'AplActuation_DsoCabinAcMasterGalleyMaster.c', 'AplActuation_DsoCabinGalleyMaster.c', 'AplActuation_DsoCabinMasterOn.c', 'AplActuation_DsoEppLt.c', 'AplActuation_DsoEssTruStatus.c', 'AplActuation_DsoFanPowerPpdb.c', 'AplActuation_DsoFwdWaterHeaterAuthorised.c', 'AplActuation_DsoGalleyMasterOn.c', 'AplActuation_DsoGpuConnectionStatus.c', 'AplActuation_DsoMasterShedOffLt.c', 'AplActuation_DsoShedEngFail.c', 'AplActuation_DsoShedGeneratorFail.c', 'AplActuation_DsoShedStart.c', 'AplActuation_DsoTcReset.c', 'AplActuation_DsoTrcCmd.c', 'AplActuation_DsoXaltc1HesTruCurrent.c', 'AplActuation_Initialize.c', 'AplActuation_Less.c', 'AplActuation_Lness.c', 'AplActuation_Manage.c', 'AplActuation_Private.h', 'AplActuation_RefreshDsoSpare.c', 'AplActuation_Ress.c', 'AplActuation_Rness.c', 'AplActuation_ContactorAtrc1.lst', 'AplActuation_ContactorAtrc2.lst', 'AplActuation_ContactorBc1.lst', 'AplActuation_ContactorBc2.lst', 'AplActuation_ContactorBooc.lst', 'AplActuation_ContactorCabc1.lst', 'AplActuation_ContactorCabc2.lst', 'AplActuation_ContactorGalc1.lst', 'AplActuation_ContactorGalc2.lst', 'AplActuation_ContactorGpulc.lst', 'AplActuation_ContactorLaltc1.lst', 'AplActuation_ContactorRaltc1.lst', 'AplActuation_ContactorShp.lst', 'AplActuation_ContactorTc1.lst', 'AplActuation_ContactorTc2.lst', 'AplActuation_ContactorTrc1.lst', 'AplActuation_ContactorTrc2.lst', 'AplActuation_DsoAftWaterHeaterAuthorised.lst', 'AplActuation_DsoApuEcuHppRelayCmd.lst', 'AplActuation_DsoBatHeaterRelay2.lst', 'AplActuation_DsoBatHeaterTruFanPower.lst', 'AplActuation_DsoBatTruLt.lst', 'AplActuation_DsoCabGalLt.lst', 'AplActuation_DsoCabcShed.lst', 'AplActuation_DsoCabinAcMasterGalleyMaster.lst', 'AplActuation_DsoCabinGalleyMaster.lst', 'AplActuation_DsoCabinMasterOn.lst', 'AplActuation_DsoEppLt.lst', 'AplActuation_DsoEssTruStatus.lst', 'AplActuation_DsoFanPowerPpdb.lst', 'AplActuation_DsoFwdWaterHeaterAuthorised.lst', 'AplActuation_DsoGalleyMasterOn.lst', 'AplActuation_DsoGpuConnectionStatus.lst', 'AplActuation_DsoMasterShedOffLt.lst', 'AplActuation_DsoShedEngFail.lst', 'AplActuation_DsoShedGeneratorFail.lst', 'AplActuation_DsoShedStart.lst', 'AplActuation_DsoTcReset.lst', 'AplActuation_DsoTrcCmd.lst', 'AplActuation_DsoXaltc1HesTruCurrent.lst', 'AplActuation_Initialize.lst', 'AplActuation_Less.lst', 'AplActuation_Lness.lst', 'AplActuation_Manage.lst', 'AplActuation_RefreshDsoSpare.lst', 'AplActuation_Ress.lst', 'AplActuation_Rness.lst', 'AplActuation_ContactorAtrc1.o', 'AplActuation_ContactorAtrc2.o', 'AplActuation_ContactorBc1.o', 'AplActuation_ContactorBc2.o', 'AplActuation_ContactorBooc.o', 'AplActuation_ContactorCabc1.o', 'AplActuation_ContactorCabc2.o', 'AplActuation_ContactorGalc1.o', 'AplActuation_ContactorGalc2.o', 'AplActuation_ContactorGpulc.o', 'AplActuation_ContactorLaltc1.o', 'AplActuation_ContactorRaltc1.o', 'AplActuation_ContactorShp.o', 'AplActuation_ContactorTc1.o', 'AplActuation_ContactorTc2.o', 'AplActuation_ContactorTrc1.o', 'AplActuation_ContactorTrc2.o', 'AplActuation_DsoAftWaterHeaterAuthorised.o', 'AplActuation_DsoApuEcuHppRelayCmd.o', 'AplActuation_DsoBatHeaterRelay2.o', 'AplActuation_DsoBatHeaterTruFanPower.o', 'AplActuation_DsoBatTruLt.o', 'AplActuation_DsoCabGalLt.o', 'AplActuation_DsoCabcShed.o', 'AplActuation_DsoCabinAcMasterGalleyMaster.o', 'AplActuation_DsoCabinGalleyMaster.o', 'AplActuation_DsoCabinMasterOn.o', 'AplActuation_DsoEppLt.o', 'AplActuation_DsoEssTruStatus.o', 'AplActuation_DsoFanPowerPpdb.o', 'AplActuation_DsoFwdWaterHeaterAuthorised.o', 'AplActuation_DsoGalleyMasterOn.o', 'AplActuation_DsoGpuConnectionStatus.o', 'AplActuation_DsoMasterShedOffLt.o', 'AplActuation_DsoShedEngFail.o', 'AplActuation_DsoShedGeneratorFail.o', 'AplActuation_DsoShedStart.o', 'AplActuation_DsoTcReset.o', 'AplActuation_DsoTrcCmd.o', 'AplActuation_DsoXaltc1HesTruCurrent.o', 'AplActuation_Initialize.o', 'AplActuation_Less.o', 'AplActuation_Lness.o', 'AplActuation_Manage.o', 'AplActuation_RefreshDsoSpare.o', 'AplActuation_Ress.o', 'AplActuation_Rness.o', 'AplScom_ComputeMsg0.c', 'AplScom_ComputeMsg1.c', 'AplScom_ComputeMsg2.c', 'AplScom_ComputeMsg3.c', 'AplScom_ComputeMsg4.c', 'AplScom_ComputeMsg5.c', 'AplScom_ComputeMsg6.c', 'AplScom_ComputeMsg7.c', 'AplScom_ComputeMsg8.c', 'AplScom_ComputeMsg9.c', 'AplScom_ComputeMsg10.c', 'AplScom_ComputeMsg11.c', 'AplScom_ComputeMsg12.c', 'AplScom_ComputeMsg13.c', 'AplScom_ComputeMsg14.c', 'AplScom_ComputeMsg15.c', 'AplScom_ComputeMsg16.c', 'AplScom_ComputeMsg17.c', 'AplScom_ComputeMsg18.c', 'AplScom_ComputeMsg19.c', 'AplScom_ComputeMsg20.c', 'AplScom_ComputeMsg21.c', 'AplScom_ComputeMsg22.c', 'AplScom_ComputeMsg23.c', 'AplScom_ComputeMsg24.c', 'AplScom_ComputeMsg25.c', 'AplScom_ComputeMsg26.c', 'AplScom_ComputeMsg27.c', 'AplScom_ComputeMsg28.c', 'AplScom_ComputeMsg29.c', 'AplScom_ComputeMsg30.c', 'AplScom_ComputeMsg31.c', 'AplScom_ComputeMsg32.c', 'AplScom_ComputeMsg33.c', 'AplScom_ComputeMsg34.c', 'AplScom_ComputeMsg35.c', 'AplScom_ComputeMsg36.c', 'AplScom_ComputeMsg37.c', 'AplScom_ComputeMsg38.c', 'AplScom_ComputeMsg39.c', 'AplScom_ComputeMsg40.c', 'AplScom_ComputeMsg41.c', 'AplScom_ComputeMsg42.c', 'AplScom_ComputeMsg43.c', 'AplScom_ComputeMsg44.c', 'AplScom_ComputeMsg45.c', 'AplScom_ComputeMsg46.c', 'AplScom_ComputeMsg47.c', 'AplScom_ComputeMsg48.c', 'AplScom_ComputeMsg49.c', 'AplScom_ComputeMsg50.c', 'AplScom_ComputeMsg51.c', 'AplScom_ComputeMsg52.c', 'AplScom_ComputeMsg53.c', 'AplScom_ComputeMsg54.c', 'AplScom_ComputeMsg55.c', 'AplScom_ComputeMsg56.c', 'AplScom_ComputeMsg57.c', 'AplScom_ComputeMsg58.c', 'AplScom_ComputeMsg59.c', 'AplScom_ComputeMsg60.c', 'AplScom_ComputeMsg61.c', 'AplScom_ComputeMsg62.c', 'AplScom_ComputeMsg63.c', 'AplScom_ComputeMsg64.c', 'AplScom_ComputeMsg65.c', 'AplScom_ComputeMsg66.c', 'AplScom_ComputeMsg67.c', 'AplScom_ComputeMsg68.c', 'AplScom_ComputeMsg69.c', 'AplScom_ComputeMsg70.c', 'AplScom_ComputeMsg71.c', 'AplScom_ComputeMsg72.c', 'AplScom_ComputeMsg73.c', 'AplScom_ComputeMsg74.c', 'AplScom_ComputeMsg75.c', 'AplScom_ComputeMsg76.c', 'AplScom_ComputeMsg77.c', 'AplScom_ComputeMsg78.c', 'AplScom_ComputeMsg79.c', 'AplScom_ComputeMsg80.c', 'AplScom_ComputeMsg81.c', 'AplScom_ComputeMsg82.c', 'AplScom_ComputeMsg83.c', 'AplScom_ComputeMsg84.c', 'AplScom_ComputeMsg85.c', 'AplScom_ComputeMsg86.c', 'AplScom_ComputeMsg87.c', 'AplScom_ComputeMsg88.c', 'AplScom_ComputeMsg89.c', 'AplScom_ComputeMsg90.c', 'AplScom_ComputeMsg91.c', 'AplScom_ComputeMsg92.c', 'AplScom_ComputeMsg93.c', 'AplScom_ComputeMsg94.c', 'AplScom_ComputeMsg95.c', 'AplScom_ComputeMsg96.c', 'AplScom_ComputeMsg97.c', 'AplScom_ComputeMsg98.c', 'AplScom_ComputeMsg99.c', 'AplScom_ComputeMsg100.c', 'AplScom_ComputeMsg101.c', 'AplScom_ComputeMsg102.c', 'AplScom_ComputeMsg103.c', 'AplScom_ComputeMsg104.c', 'AplScom_ComputeMsg105.c', 'AplScom_ComputeMsg106.c', 'AplScom_ComputeMsg107.c', 'AplScom_ComputeMsg108.c', 'AplScom_ComputeMsg109.c', 'AplScom_ComputeMsg110.c', 'AplScom_ComputeMsg111.c', 'AplScom_ComputeMsg112.c', 'AplScom_ComputeMsg113.c', 'AplScom_ComputeMsg114.c', 'AplScom_ComputeMsg115.c', 'AplScom_ComputeMsg116.c', 'AplScom_ComputeMsg117.c', 'AplScom_ComputeMsg118.c', 'AplScom_ComputeMsg119.c', 'AplScom_ComputeMsg120.c', 'AplScom_ComputeMsg121.c', 'AplScom_ComputeMsg122.c', 'AplScom_ComputeMsg123.c', 'AplScom_ComputeMsg124.c', 'AplScom_ComputeMsg125.c', 'AplScom_ComputeMsg126.c', 'AplScom_ComputeMsg127.c', 'AplScom_ComputeMsg128.c', 'AplScom_ComputeMsg129.c', 'AplScom_ComputeMsg130.c', 'AplScom_ComputeMsg131.c', 'AplScom_ComputeMsg132.c', 'AplScom_ComputeMsg133.c', 'AplScom_ComputeMsg134.c', 'AplScom_ComputeMsg135.c', 'AplScom_ComputeMsg136.c', 'AplScom_ComputeMsg137.c', 'AplScom_ComputeMsg138.c', 'AplScom_Initialize.c', 'AplScom_ManageActivity.c', 'AplScom_Private.c', 'AplScom_Private.h', 'AplScom_Public.c', 'AplScom_ComputeMsg0.lst', 'AplScom_ComputeMsg1.lst', 'AplScom_ComputeMsg2.lst', 'AplScom_ComputeMsg3.lst', 'AplScom_ComputeMsg4.lst', 'AplScom_ComputeMsg5.lst', 'AplScom_ComputeMsg6.lst', 'AplScom_ComputeMsg7.lst', 'AplScom_ComputeMsg8.lst', 'AplScom_ComputeMsg9.lst', 'AplScom_ComputeMsg10.lst', 'AplScom_ComputeMsg11.lst', 'AplScom_ComputeMsg12.lst', 'AplScom_ComputeMsg13.lst', 'AplScom_ComputeMsg14.lst', 'AplScom_ComputeMsg15.lst', 'AplScom_ComputeMsg16.lst', 'AplScom_ComputeMsg17.lst', 'AplScom_ComputeMsg18.lst', 'AplScom_ComputeMsg19.lst', 'AplScom_ComputeMsg20.lst', 'AplScom_ComputeMsg21.lst', 'AplScom_ComputeMsg22.lst', 'AplScom_ComputeMsg23.lst', 'AplScom_ComputeMsg24.lst', 'AplScom_ComputeMsg25.lst', 'AplScom_ComputeMsg26.lst', 'AplScom_ComputeMsg27.lst', 'AplScom_ComputeMsg28.lst', 'AplScom_ComputeMsg29.lst', 'AplScom_ComputeMsg30.lst', 'AplScom_ComputeMsg31.lst', 'AplScom_ComputeMsg32.lst', 'AplScom_ComputeMsg33.lst', 'AplScom_ComputeMsg34.lst', 'AplScom_ComputeMsg35.lst', 'AplScom_ComputeMsg36.lst', 'AplScom_ComputeMsg37.lst', 'AplScom_ComputeMsg38.lst', 'AplScom_ComputeMsg39.lst', 'AplScom_ComputeMsg40.lst', 'AplScom_ComputeMsg41.lst', 'AplScom_ComputeMsg42.lst', 'AplScom_ComputeMsg43.lst', 'AplScom_ComputeMsg44.lst', 'AplScom_ComputeMsg45.lst', 'AplScom_ComputeMsg46.lst', 'AplScom_ComputeMsg47.lst', 'AplScom_ComputeMsg48.lst', 'AplScom_ComputeMsg49.lst', 'AplScom_ComputeMsg50.lst', 'AplScom_ComputeMsg51.lst', 'AplScom_ComputeMsg52.lst', 'AplScom_ComputeMsg53.lst', 'AplScom_ComputeMsg54.lst', 'AplScom_ComputeMsg55.lst', 'AplScom_ComputeMsg56.lst', 'AplScom_ComputeMsg57.lst', 'AplScom_ComputeMsg58.lst', 'AplScom_ComputeMsg59.lst', 'AplScom_ComputeMsg60.lst', 'AplScom_ComputeMsg61.lst', 'AplScom_ComputeMsg62.lst', 'AplScom_ComputeMsg63.lst', 'AplScom_ComputeMsg64.lst', 'AplScom_ComputeMsg65.lst', 'AplScom_ComputeMsg66.lst', 'AplScom_ComputeMsg67.lst', 'AplScom_ComputeMsg68.lst', 'AplScom_ComputeMsg69.lst', 'AplScom_ComputeMsg70.lst', 'AplScom_ComputeMsg71.lst', 'AplScom_ComputeMsg72.lst', 'AplScom_ComputeMsg73.lst', 'AplScom_ComputeMsg74.lst', 'AplScom_ComputeMsg75.lst', 'AplScom_ComputeMsg76.lst', 'AplScom_ComputeMsg77.lst', 'AplScom_ComputeMsg78.lst', 'AplScom_ComputeMsg79.lst', 'AplScom_ComputeMsg80.lst', 'AplScom_ComputeMsg81.lst', 'AplScom_ComputeMsg82.lst', 'AplScom_ComputeMsg83.lst', 'AplScom_ComputeMsg84.lst', 'AplScom_ComputeMsg85.lst', 'AplScom_ComputeMsg86.lst', 'AplScom_ComputeMsg87.lst', 'AplScom_ComputeMsg88.lst', 'AplScom_ComputeMsg89.lst', 'AplScom_ComputeMsg90.lst', 'AplScom_ComputeMsg91.lst', 'AplScom_ComputeMsg92.lst', 'AplScom_ComputeMsg93.lst', 'AplScom_ComputeMsg94.lst', 'AplScom_ComputeMsg95.lst', 'AplScom_ComputeMsg96.lst', 'AplScom_ComputeMsg97.lst', 'AplScom_ComputeMsg98.lst', 'AplScom_ComputeMsg99.lst', 'AplScom_ComputeMsg100.lst', 'AplScom_ComputeMsg101.lst', 'AplScom_ComputeMsg102.lst', 'AplScom_ComputeMsg103.lst', 'AplScom_ComputeMsg104.lst', 'AplScom_ComputeMsg105.lst', 'AplScom_ComputeMsg106.lst', 'AplScom_ComputeMsg107.lst', 'AplScom_ComputeMsg108.lst', 'AplScom_ComputeMsg109.lst', 'AplScom_ComputeMsg110.lst', 'AplScom_ComputeMsg111.lst', 'AplScom_ComputeMsg112.lst', 'AplScom_ComputeMsg113.lst', 'AplScom_ComputeMsg114.lst', 'AplScom_ComputeMsg115.lst', 'AplScom_ComputeMsg116.lst', 'AplScom_ComputeMsg117.lst', 'AplScom_ComputeMsg118.lst', 'AplScom_ComputeMsg119.lst', 'AplScom_ComputeMsg120.lst', 'AplScom_ComputeMsg121.lst', 'AplScom_ComputeMsg122.lst', 'AplScom_ComputeMsg123.lst', 'AplScom_ComputeMsg124.lst', 'AplScom_ComputeMsg125.lst', 'AplScom_ComputeMsg126.lst', 'AplScom_ComputeMsg127.lst', 'AplScom_ComputeMsg128.lst', 'AplScom_ComputeMsg129.lst', 'AplScom_ComputeMsg130.lst', 'AplScom_ComputeMsg131.lst', 'AplScom_ComputeMsg132.lst', 'AplScom_ComputeMsg133.lst', 'AplScom_ComputeMsg134.lst', 'AplScom_ComputeMsg135.lst', 'AplScom_ComputeMsg136.lst', 'AplScom_ComputeMsg137.lst', 'AplScom_ComputeMsg138.lst', 'AplScom_Initialize.lst', 'AplScom_ManageActivity.lst', 'AplScom_Private.lst', 'AplScom_Public.lst', 'AplScom_ComputeMsg0.o', 'AplScom_ComputeMsg1.o', 'AplScom_ComputeMsg2.o', 'AplScom_ComputeMsg3.o', 'AplScom_ComputeMsg4.o', 'AplScom_ComputeMsg5.o', 'AplScom_ComputeMsg6.o', 'AplScom_ComputeMsg7.o', 'AplScom_ComputeMsg8.o', 'AplScom_ComputeMsg9.o', 'AplScom_ComputeMsg10.o', 'AplScom_ComputeMsg11.o', 'AplScom_ComputeMsg12.o', 'AplScom_ComputeMsg13.o', 'AplScom_ComputeMsg14.o', 'AplScom_ComputeMsg15.o', 'AplScom_ComputeMsg16.o', 'AplScom_ComputeMsg17.o', 'AplScom_ComputeMsg18.o', 'AplScom_ComputeMsg19.o', 'AplScom_ComputeMsg20.o', 'AplScom_ComputeMsg21.o', 'AplScom_ComputeMsg22.o', 'AplScom_ComputeMsg23.o', 'AplScom_ComputeMsg24.o', 'AplScom_ComputeMsg25.o', 'AplScom_ComputeMsg26.o', 'AplScom_ComputeMsg27.o', 'AplScom_ComputeMsg28.o', 'AplScom_ComputeMsg29.o', 'AplScom_ComputeMsg30.o', 'AplScom_ComputeMsg31.o', 'AplScom_ComputeMsg32.o', 'AplScom_ComputeMsg33.o', 'AplScom_ComputeMsg34.o', 'AplScom_ComputeMsg35.o', 'AplScom_ComputeMsg36.o', 'AplScom_ComputeMsg37.o', 'AplScom_ComputeMsg38.o', 'AplScom_ComputeMsg39.o', 'AplScom_ComputeMsg40.o', 'AplScom_ComputeMsg41.o', 'AplScom_ComputeMsg42.o', 'AplScom_ComputeMsg43.o', 'AplScom_ComputeMsg44.o', 'AplScom_ComputeMsg45.o', 'AplScom_ComputeMsg46.o', 'AplScom_ComputeMsg47.o', 'AplScom_ComputeMsg48.o', 'AplScom_ComputeMsg49.o', 'AplScom_ComputeMsg50.o', 'AplScom_ComputeMsg51.o', 'AplScom_ComputeMsg52.o', 'AplScom_ComputeMsg53.o', 'AplScom_ComputeMsg54.o', 'AplScom_ComputeMsg55.o', 'AplScom_ComputeMsg56.o', 'AplScom_ComputeMsg57.o', 'AplScom_ComputeMsg58.o', 'AplScom_ComputeMsg59.o', 'AplScom_ComputeMsg60.o', 'AplScom_ComputeMsg61.o', 'AplScom_ComputeMsg62.o', 'AplScom_ComputeMsg63.o', 'AplScom_ComputeMsg64.o', 'AplScom_ComputeMsg65.o', 'AplScom_ComputeMsg66.o', 'AplScom_ComputeMsg67.o', 'AplScom_ComputeMsg68.o', 'AplScom_ComputeMsg69.o', 'AplScom_ComputeMsg70.o', 'AplScom_ComputeMsg71.o', 'AplScom_ComputeMsg72.o', 'AplScom_ComputeMsg73.o', 'AplScom_ComputeMsg74.o', 'AplScom_ComputeMsg75.o', 'AplScom_ComputeMsg76.o', 'AplScom_ComputeMsg77.o', 'AplScom_ComputeMsg78.o', 'AplScom_ComputeMsg79.o', 'AplScom_ComputeMsg80.o', 'AplScom_ComputeMsg81.o', 'AplScom_ComputeMsg82.o', 'AplScom_ComputeMsg83.o', 'AplScom_ComputeMsg84.o', 'AplScom_ComputeMsg85.o', 'AplScom_ComputeMsg86.o', 'AplScom_ComputeMsg87.o', 'AplScom_ComputeMsg88.o', 'AplScom_ComputeMsg89.o', 'AplScom_ComputeMsg90.o', 'AplScom_ComputeMsg91.o', 'AplScom_ComputeMsg92.o', 'AplScom_ComputeMsg93.o', 'AplScom_ComputeMsg94.o', 'AplScom_ComputeMsg95.o', 'AplScom_ComputeMsg96.o', 'AplScom_ComputeMsg97.o', 'AplScom_ComputeMsg98.o', 'AplScom_ComputeMsg99.o', 'AplScom_ComputeMsg100.o', 'AplScom_ComputeMsg101.o', 'AplScom_ComputeMsg102.o', 'AplScom_ComputeMsg103.o', 'AplScom_ComputeMsg104.o', 'AplScom_ComputeMsg105.o', 'AplScom_ComputeMsg106.o', 'AplScom_ComputeMsg107.o', 'AplScom_ComputeMsg108.o', 'AplScom_ComputeMsg109.o', 'AplScom_ComputeMsg110.o', 'AplScom_ComputeMsg111.o', 'AplScom_ComputeMsg112.o', 'AplScom_ComputeMsg113.o', 'AplScom_ComputeMsg114.o', 'AplScom_ComputeMsg115.o', 'AplScom_ComputeMsg116.o', 'AplScom_ComputeMsg117.o', 'AplScom_ComputeMsg118.o', 'AplScom_ComputeMsg119.o', 'AplScom_ComputeMsg120.o', 'AplScom_ComputeMsg121.o', 'AplScom_ComputeMsg122.o', 'AplScom_ComputeMsg123.o', 'AplScom_ComputeMsg124.o', 'AplScom_ComputeMsg125.o', 'AplScom_ComputeMsg126.o', 'AplScom_ComputeMsg127.o', 'AplScom_ComputeMsg128.o', 'AplScom_ComputeMsg129.o', 'AplScom_ComputeMsg130.o', 'AplScom_ComputeMsg131.o', 'AplScom_ComputeMsg132.o', 'AplScom_ComputeMsg133.o', 'AplScom_ComputeMsg134.o', 'AplScom_ComputeMsg135.o', 'AplScom_ComputeMsg136.o', 'AplScom_ComputeMsg137.o', 'AplScom_ComputeMsg138.o', 'AplScom_Initialize.o', 'AplScom_ManageActivity.o', 'AplScom_Private.o', 'AplScom_Public.o', 'AplSwpr_AliasBatCurrent.c', 'AplSwpr_AliasBatTruHes1Ch1Current.c', 'AplSwpr_AliasBatTruHes1Ch1RefEss.c', 'AplSwpr_AliasBatTruHes1Ch1RefNess.c', 'AplSwpr_AliasBatTruHes1Ch1ValidityEss.c', 'AplSwpr_AliasBatTruHes1Ch1ValidityNess.c', 'AplSwpr_AliasBatTruHes1Ch2Current.c', 'AplSwpr_AliasBatTruHes1Ch2RefEss.c', 'AplSwpr_AliasBatTruHes1Ch2RefNess.c', 'AplSwpr_AliasBatTruHes1Ch2ValidityEss.c', 'AplSwpr_AliasBatTruHes1Ch2ValidityNess.c', 'AplSwpr_AliasCabcxAutoShedLness.c', 'AplSwpr_AliasCabcxAutoShedRness.c', 'AplSwpr_AliasCabcxShedLness.c', 'AplSwpr_AliasCabcxShedRness.c', 'AplSwpr_AliasComputeGpuPhaseOrder.c', 'AplSwpr_AliasCt3Sum.c', 'AplSwpr_AliasFuncTruFanFailure.c', 'AplSwpr_AliasGpuAuto.c', 'AplSwpr_AliasGpuFault.c', 'AplSwpr_AliasGpuPower.c', 'AplSwpr_AliasGpuPowerReady.c', 'AplSwpr_AliasHesTruCh2Current.c', 'AplSwpr_AliasTcOvlUv.c', 'AplSwpr_AliasTruCurrent.c', 'AplSwpr_AliasTruHighCurrent.c', 'AplSwpr_AliasXaltc1HighCurrent.c', 'AplSwpr_Initialize.c', 'AplSwpr_Private.h', 'AplSwpr_ProtectionAtrc.c', 'AplSwpr_ProtectionAtrcDriverFail.c', 'AplSwpr_ProtectionAtrcOverload.c', 'AplSwpr_ProtectionAtrcReset.c', 'AplSwpr_ProtectionBat.c', 'AplSwpr_ProtectionBatDeepDischarge.c', 'AplSwpr_ProtectionBatDriverFail.c', 'AplSwpr_ProtectionBatOverload.c', 'AplSwpr_ProtectionBatReset.c', 'AplSwpr_ProtectionBatReverse.c', 'AplSwpr_ProtectionBooc.c', 'AplSwpr_ProtectionBoocDriverFail.c', 'AplSwpr_ProtectionBoocOverload.c', 'AplSwpr_ProtectionBoocReset.c', 'AplSwpr_ProtectionBoocUndervoltage.c', 'AplSwpr_ProtectionCabcDriverFail.c', 'AplSwpr_ProtectionCabcOverload.c', 'AplSwpr_ProtectionCabcReset.c', 'AplSwpr_ProtectionGalc.c', 'AplSwpr_ProtectionGalcDriverFail.c', 'AplSwpr_ProtectionGalcOverload.c', 'AplSwpr_ProtectionGalcReset.c', 'AplSwpr_ProtectionGalcShedNess.c', 'AplSwpr_ProtectionGalcUnbalanced.c', 'AplSwpr_ProtectionGalcUndervoltage.c', 'AplSwpr_ProtectionGpu.c', 'AplSwpr_ProtectionGpuDriverFail.c', 'AplSwpr_ProtectionGpuFrequency.c', 'AplSwpr_ProtectionGpuOverload.c', 'AplSwpr_ProtectionGpuOvervoltage.c', 'AplSwpr_ProtectionGpuPhaseOrder.c', 'AplSwpr_ProtectionGpuReset.c', 'AplSwpr_ProtectionGpuUndervoltage.c', 'AplSwpr_ProtectionShp.c', 'AplSwpr_ProtectionShpDriverFail.c', 'AplSwpr_ProtectionShpOverload.c', 'AplSwpr_ProtectionShpReset.c', 'AplSwpr_ProtectionTc.c', 'AplSwpr_ProtectionTcDriverFail.c', 'AplSwpr_ProtectionTcOverload.c', 'AplSwpr_ProtectionTcReset.c', 'AplSwpr_ProtectionTcUndervoltage.c', 'AplSwpr_ProtectionTru.c', 'AplSwpr_ProtectionTruDriverFail.c', 'AplSwpr_ProtectionTruOverRipple.c', 'AplSwpr_ProtectionTruOverload.c', 'AplSwpr_ProtectionTruOvlInProgress.c', 'AplSwpr_ProtectionTruReset.c', 'AplSwpr_ProtectionTruReverse.c', 'AplSwpr_ProtectionTruUndervoltage.c', 'AplSwpr_ProtectionXaltc1.c', 'AplSwpr_ProtectionXaltc1DriverFail.c', 'AplSwpr_ProtectionXaltc1Overload.c', 'AplSwpr_ProtectionXaltc1Reset.c', 'AplSwpr_Public.c', 'AplSwpr_SwitchBat.c', 'AplSwpr_SwitchCabin.c', 'AplSwpr_SwitchCabinMaster.c', 'AplSwpr_SwitchGalley.c', 'AplSwpr_SwitchTru.c', 'AplSwpr_AliasBatCurrent.lst', 'AplSwpr_AliasBatTruHes1Ch1Current.lst', 'AplSwpr_AliasBatTruHes1Ch1RefEss.lst', 'AplSwpr_AliasBatTruHes1Ch1RefNess.lst', 'AplSwpr_AliasBatTruHes1Ch1ValidityEss.lst', 'AplSwpr_AliasBatTruHes1Ch1ValidityNess.lst', 'AplSwpr_AliasBatTruHes1Ch2Current.lst', 'AplSwpr_AliasBatTruHes1Ch2RefEss.lst', 'AplSwpr_AliasBatTruHes1Ch2RefNess.lst', 'AplSwpr_AliasBatTruHes1Ch2ValidityEss.lst', 'AplSwpr_AliasBatTruHes1Ch2ValidityNess.lst', 'AplSwpr_AliasCabcxAutoShedLness.lst', 'AplSwpr_AliasCabcxAutoShedRness.lst', 'AplSwpr_AliasCabcxShedLness.lst', 'AplSwpr_AliasCabcxShedRness.lst', 'AplSwpr_AliasComputeGpuPhaseOrder.lst', 'AplSwpr_AliasCt3Sum.lst', 'AplSwpr_AliasFuncTruFanFailure.lst', 'AplSwpr_AliasGpuAuto.lst', 'AplSwpr_AliasGpuFault.lst', 'AplSwpr_AliasGpuPower.lst', 'AplSwpr_AliasGpuPowerReady.lst', 'AplSwpr_AliasHesTruCh2Current.lst', 'AplSwpr_AliasTcOvlUv.lst', 'AplSwpr_AliasTruCurrent.lst', 'AplSwpr_AliasTruHighCurrent.lst', 'AplSwpr_AliasXaltc1HighCurrent.lst', 'AplSwpr_Initialize.lst', 'AplSwpr_ProtectionAtrc.lst', 'AplSwpr_ProtectionAtrcDriverFail.lst', 'AplSwpr_ProtectionAtrcOverload.lst', 'AplSwpr_ProtectionAtrcReset.lst', 'AplSwpr_ProtectionBat.lst', 'AplSwpr_ProtectionBatDeepDischarge.lst', 'AplSwpr_ProtectionBatDriverFail.lst', 'AplSwpr_ProtectionBatOverload.lst', 'AplSwpr_ProtectionBatReset.lst', 'AplSwpr_ProtectionBatReverse.lst', 'AplSwpr_ProtectionBooc.lst', 'AplSwpr_ProtectionBoocDriverFail.lst', 'AplSwpr_ProtectionBoocOverload.lst', 'AplSwpr_ProtectionBoocReset.lst', 'AplSwpr_ProtectionBoocUndervoltage.lst', 'AplSwpr_ProtectionCabcDriverFail.lst', 'AplSwpr_ProtectionCabcOverload.lst', 'AplSwpr_ProtectionCabcReset.lst', 'AplSwpr_ProtectionGalc.lst', 'AplSwpr_ProtectionGalcDriverFail.lst', 'AplSwpr_ProtectionGalcOverload.lst', 'AplSwpr_ProtectionGalcReset.lst', 'AplSwpr_ProtectionGalcShedNess.lst', 'AplSwpr_ProtectionGalcUnbalanced.lst', 'AplSwpr_ProtectionGalcUndervoltage.lst', 'AplSwpr_ProtectionGpu.lst', 'AplSwpr_ProtectionGpuDriverFail.lst', 'AplSwpr_ProtectionGpuFrequency.lst', 'AplSwpr_ProtectionGpuOverload.lst', 'AplSwpr_ProtectionGpuOvervoltage.lst', 'AplSwpr_ProtectionGpuPhaseOrder.lst', 'AplSwpr_ProtectionGpuReset.lst', 'AplSwpr_ProtectionGpuUndervoltage.lst', 'AplSwpr_ProtectionShp.lst', 'AplSwpr_ProtectionShpDriverFail.lst', 'AplSwpr_ProtectionShpOverload.lst', 'AplSwpr_ProtectionShpReset.lst', 'AplSwpr_ProtectionTc.lst', 'AplSwpr_ProtectionTcDriverFail.lst', 'AplSwpr_ProtectionTcOverload.lst', 'AplSwpr_ProtectionTcReset.lst', 'AplSwpr_ProtectionTcUndervoltage.lst', 'AplSwpr_ProtectionTru.lst', 'AplSwpr_ProtectionTruDriverFail.lst', 'AplSwpr_ProtectionTruOverRipple.lst', 'AplSwpr_ProtectionTruOverload.lst', 'AplSwpr_ProtectionTruOvlInProgress.lst', 'AplSwpr_ProtectionTruReset.lst', 'AplSwpr_ProtectionTruReverse.lst', 'AplSwpr_ProtectionTruUndervoltage.lst', 'AplSwpr_ProtectionXaltc1.lst', 'AplSwpr_ProtectionXaltc1DriverFail.lst', 'AplSwpr_ProtectionXaltc1Overload.lst', 'AplSwpr_ProtectionXaltc1Reset.lst', 'AplSwpr_Public.lst', 'AplSwpr_SwitchBat.lst', 'AplSwpr_SwitchCabin.lst', 'AplSwpr_SwitchCabinMaster.lst', 'AplSwpr_SwitchGalley.lst', 'AplSwpr_SwitchTru.lst', 'AplSwpr_AliasBatCurrent.o', 'AplSwpr_AliasBatTruHes1Ch1Current.o', 'AplSwpr_AliasBatTruHes1Ch1RefEss.o', 'AplSwpr_AliasBatTruHes1Ch1RefNess.o', 'AplSwpr_AliasBatTruHes1Ch1ValidityEss.o', 'AplSwpr_AliasBatTruHes1Ch1ValidityNess.o', 'AplSwpr_AliasBatTruHes1Ch2Current.o', 'AplSwpr_AliasBatTruHes1Ch2RefEss.o', 'AplSwpr_AliasBatTruHes1Ch2RefNess.o', 'AplSwpr_AliasBatTruHes1Ch2ValidityEss.o', 'AplSwpr_AliasBatTruHes1Ch2ValidityNess.o', 'AplSwpr_AliasCabcxAutoShedLness.o', 'AplSwpr_AliasCabcxAutoShedRness.o', 'AplSwpr_AliasCabcxShedLness.o', 'AplSwpr_AliasCabcxShedRness.o', 'AplSwpr_AliasComputeGpuPhaseOrder.o', 'AplSwpr_AliasCt3Sum.o', 'AplSwpr_AliasFuncTruFanFailure.o', 'AplSwpr_AliasGpuAuto.o', 'AplSwpr_AliasGpuFault.o', 'AplSwpr_AliasGpuPower.o', 'AplSwpr_AliasGpuPowerReady.o', 'AplSwpr_AliasHesTruCh2Current.o', 'AplSwpr_AliasTcOvlUv.o', 'AplSwpr_AliasTruCurrent.o', 'AplSwpr_AliasTruHighCurrent.o', 'AplSwpr_AliasXaltc1HighCurrent.o', 'AplSwpr_Initialize.o', 'AplSwpr_ProtectionAtrc.o', 'AplSwpr_ProtectionAtrcDriverFail.o', 'AplSwpr_ProtectionAtrcOverload.o', 'AplSwpr_ProtectionAtrcReset.o', 'AplSwpr_ProtectionBat.o', 'AplSwpr_ProtectionBatDeepDischarge.o', 'AplSwpr_ProtectionBatDriverFail.o', 'AplSwpr_ProtectionBatOverload.o', 'AplSwpr_ProtectionBatReset.o', 'AplSwpr_ProtectionBatReverse.o', 'AplSwpr_ProtectionBooc.o', 'AplSwpr_ProtectionBoocDriverFail.o', 'AplSwpr_ProtectionBoocOverload.o', 'AplSwpr_ProtectionBoocReset.o', 'AplSwpr_ProtectionBoocUndervoltage.o', 'AplSwpr_ProtectionCabcDriverFail.o', 'AplSwpr_ProtectionCabcOverload.o', 'AplSwpr_ProtectionCabcReset.o', 'AplSwpr_ProtectionGalc.o', 'AplSwpr_ProtectionGalcDriverFail.o', 'AplSwpr_ProtectionGalcOverload.o', 'AplSwpr_ProtectionGalcReset.o', 'AplSwpr_ProtectionGalcShedNess.o', 'AplSwpr_ProtectionGalcUnbalanced.o', 'AplSwpr_ProtectionGalcUndervoltage.o', 'AplSwpr_ProtectionGpu.o', 'AplSwpr_ProtectionGpuDriverFail.o', 'AplSwpr_ProtectionGpuFrequency.o', 'AplSwpr_ProtectionGpuOverload.o', 'AplSwpr_ProtectionGpuOvervoltage.o', 'AplSwpr_ProtectionGpuPhaseOrder.o', 'AplSwpr_ProtectionGpuReset.o', 'AplSwpr_ProtectionGpuUndervoltage.o', 'AplSwpr_ProtectionShp.o', 'AplSwpr_ProtectionShpDriverFail.o', 'AplSwpr_ProtectionShpOverload.o', 'AplSwpr_ProtectionShpReset.o', 'AplSwpr_ProtectionTc.o', 'AplSwpr_ProtectionTcDriverFail.o', 'AplSwpr_ProtectionTcOverload.o', 'AplSwpr_ProtectionTcReset.o', 'AplSwpr_ProtectionTcUndervoltage.o', 'AplSwpr_ProtectionTru.o', 'AplSwpr_ProtectionTruDriverFail.o', 'AplSwpr_ProtectionTruOverRipple.o', 'AplSwpr_ProtectionTruOverload.o', 'AplSwpr_ProtectionTruOvlInProgress.o', 'AplSwpr_ProtectionTruReset.o', 'AplSwpr_ProtectionTruReverse.o', 'AplSwpr_ProtectionTruUndervoltage.o', 'AplSwpr_ProtectionXaltc1.o', 'AplSwpr_ProtectionXaltc1DriverFail.o', 'AplSwpr_ProtectionXaltc1Overload.o', 'AplSwpr_ProtectionXaltc1Reset.o', 'AplSwpr_Public.o', 'AplSwpr_SwitchBat.o', 'AplSwpr_SwitchCabin.o', 'AplSwpr_SwitchCabinMaster.o', 'AplSwpr_SwitchGalley.o', 'AplSwpr_SwitchTru.o', 'CmpArx_GetFrameData.c', 'CmpArx_InitializeConf.c', 'CmpArx_SendReadCommand.c', 'CmpArx_WaitTransfert.c', 'CmpArx_GetFrameData.lst', 'CmpArx_InitializeConf.lst', 'CmpArx_SendReadCommand.lst', 'CmpArx_WaitTransfert.lst', 'CmpArx_GetFrameData.o', 'CmpArx_InitializeConf.o', 'CmpArx_SendReadCommand.o', 'CmpArx_WaitTransfert.o', 'CmpAsi_Initialize.c', 'CmpAsi_Refresh.c', 'CmpAsi_Initialize.lst', 'CmpAsi_Refresh.lst', 'CmpAsi_Initialize.o', 'CmpAsi_Refresh.o', 'CmpCaim_ForceStartupRead.c', 'CmpCaim_ForceStartupWrite.c', 'CmpCaim_Initialize.c', 'CmpCaim_Private.h', 'CmpCaim_Public.c', 'CmpCaim_ReadDataArinc.c', 'CmpCaim_ReadDataIOEx.c', 'CmpCaim_Refresh.c', 'CmpCaim_ForceStartupRead.lst', 'CmpCaim_ForceStartupWrite.lst', 'CmpCaim_Initialize.lst', 'CmpCaim_Public.lst', 'CmpCaim_ReadDataArinc.lst', 'CmpCaim_ReadDataIOEx.lst', 'CmpCaim_Refresh.lst', 'CmpCaim_ForceStartupRead.o', 'CmpCaim_ForceStartupWrite.o', 'CmpCaim_Initialize.o', 'CmpCaim_Public.o', 'CmpCaim_ReadDataArinc.o', 'CmpCaim_ReadDataIOEx.o', 'CmpCaim_Refresh.o', 'CmpCtc_GetHoPuLevel.c', 'CmpCtc_Initialize.c', 'CmpCtc_ManageActivity.c', 'CmpCtc_Private.c', 'CmpCtc_Private.h', 'CmpCtc_RequestComand.c', 'CmpCtc_GetHoPuLevel.lst', 'CmpCtc_Initialize.lst', 'CmpCtc_ManageActivity.lst', 'CmpCtc_Private.lst', 'CmpCtc_RequestComand.lst', 'CmpCtc_GetHoPuLevel.o', 'CmpCtc_Initialize.o', 'CmpCtc_ManageActivity.o', 'CmpCtc_Private.o', 'CmpCtc_RequestComand.o', 'CmpDsi_GetBoardDsi.c', 'CmpDsi_GetGalcDistoDsi.c', 'CmpDsi_GetUcDsi.c', 'CmpDsi_Initialize.c', 'CmpDsi_Private.c', 'CmpDsi_Private.h', 'CmpDsi_Public.c', 'CmpDsi_GetBoardDsi.lst', 'CmpDsi_GetGalcDistoDsi.lst', 'CmpDsi_GetUcDsi.lst', 'CmpDsi_Initialize.lst', 'CmpDsi_Private.lst', 'CmpDsi_Public.lst', 'CmpDsi_GetBoardDsi.o', 'CmpDsi_GetGalcDistoDsi.o', 'CmpDsi_GetUcDsi.o', 'CmpDsi_Initialize.o', 'CmpDsi_Private.o', 'CmpDsi_Public.o', 'CmpIoex_ForceReadCmd.c', 'CmpIoex_ForceReadData.c', 'CmpIoex_ForceWriteCmd.c', 'CmpIoex_GetValueToRead.c', 'CmpIoex_InitConf.c', 'CmpIoex_Initialize.c', 'CmpIoex_Private.c', 'CmpIoex_Private.h', 'CmpIoex_Public.c', 'CmpIoex_ReadData.c', 'CmpIoex_ReconfIoex.c', 'CmpIoex_SendCmdRead.c', 'CmpIoex_SendCmdWrite.c', 'CmpIoex_TransformToFunctional.c', 'CmpIoex_TransformToLogical.c', 'CmpIoex_WaitTransfert.c', 'CmpIoex_ForceReadCmd.lst', 'CmpIoex_ForceReadData.lst', 'CmpIoex_ForceWriteCmd.lst', 'CmpIoex_GetValueToRead.lst', 'CmpIoex_InitConf.lst', 'CmpIoex_Initialize.lst', 'CmpIoex_Private.lst', 'CmpIoex_Public.lst', 'CmpIoex_ReadData.lst', 'CmpIoex_ReconfIoex.lst', 'CmpIoex_SendCmdRead.lst', 'CmpIoex_SendCmdWrite.lst', 'CmpIoex_TransformToFunctional.lst', 'CmpIoex_TransformToLogical.lst', 'CmpIoex_WaitTransfert.lst', 'CmpIoex_ForceReadCmd.o', 'CmpIoex_ForceReadData.o', 'CmpIoex_ForceWriteCmd.o', 'CmpIoex_GetValueToRead.o', 'CmpIoex_InitConf.o', 'CmpIoex_Initialize.o', 'CmpIoex_Private.o', 'CmpIoex_Public.o', 'CmpIoex_ReadData.o', 'CmpIoex_ReconfIoex.o', 'CmpIoex_SendCmdRead.o', 'CmpIoex_SendCmdWrite.o', 'CmpIoex_TransformToFunctional.o', 'CmpIoex_TransformToLogical.o', 'CmpIoex_WaitTransfert.o', 'CmpLed_Control.c', 'CmpLed_Initialize.c', 'CmpLed_ManageActivity.c', 'CmpLed_Private.c', 'CmpLed_Private.h', 'CmpLed_Control.lst', 'CmpLed_Initialize.lst', 'CmpLed_ManageActivity.lst', 'CmpLed_Private.lst', 'CmpLed_Control.o', 'CmpLed_Initialize.o', 'CmpLed_ManageActivity.o', 'CmpLed_Private.o', 'CmpMemory_Public.c', 'CmpMemory_TestRam.c', 'CmpMemory_TestRom.c', 'CmpMemory_Public.lst', 'CmpMemory_TestRam.lst', 'CmpMemory_TestRom.lst', 'CmpMemory_Public.o', 'CmpMemory_TestRam.o', 'CmpMemory_TestRom.o', 'CmpMux_Initialize.c', 'CmpMux_Private.h', 'CmpMux_ReleaseAll.c', 'CmpMux_SelectItem.c', 'CmpMux_Initialize.lst', 'CmpMux_ReleaseAll.lst', 'CmpMux_SelectItem.lst', 'CmpMux_Initialize.o', 'CmpMux_ReleaseAll.o', 'CmpMux_SelectItem.o', 'CmpPts_Initialize.c', 'CmpPts_ManageActivity.c', 'CmpPts_Private.h', 'CmpPts_Public.c', 'CmpPts_Initialize.lst', 'CmpPts_ManageActivity.lst', 'CmpPts_Public.lst', 'CmpPts_Initialize.o', 'CmpPts_ManageActivity.o', 'CmpPts_Public.o', 'CmpWdog_Initialize.c', 'CmpWdog_ManageActivity.c', 'CmpWdog_ManageCheckpoint.c', 'CmpWdog_ManualRefresh.c', 'CmpWdog_PerformSelftest.c', 'CmpWdog_Private.c', 'CmpWdog_Private.h', 'CmpWdog_SetMode.c', 'CmpWdog_WritePattern.c', 'CmpWdog_Initialize.lst', 'CmpWdog_ManageActivity.lst', 'CmpWdog_ManageCheckpoint.lst', 'CmpWdog_ManualRefresh.lst', 'CmpWdog_PerformSelftest.lst', 'CmpWdog_Private.lst', 'CmpWdog_SetMode.lst', 'CmpWdog_WritePattern.lst', 'CmpWdog_Initialize.o', 'CmpWdog_ManageActivity.o', 'CmpWdog_ManageCheckpoint.o', 'CmpWdog_ManualRefresh.o', 'CmpWdog_PerformSelftest.o', 'CmpWdog_Private.o', 'CmpWdog_SetMode.o', 'CmpWdog_WritePattern.o', 'CtrlScheduler_EntryPoint.c', 'CtrlScheduler_IdleTask.c', 'CtrlScheduler_Initialize.c', 'CtrlScheduler_IsrAddressError.c', 'CtrlScheduler_IsrCriticalException.c', 'CtrlScheduler_IsrDmaError.c', 'CtrlScheduler_IsrMathError.c', 'CtrlScheduler_IsrOscillatorFail.c', 'CtrlScheduler_IsrStackError.c', 'CtrlScheduler_IsrTimer8.c', 'CtrlScheduler_IsrTimer9.c', 'CtrlScheduler_Main.c', 'CtrlScheduler_Private.c', 'CtrlScheduler_Private.h', 'CtrlScheduler_Shutdown.c', 'CtrlScheduler_Start.c', 'CtrlScheduler_TaskManager.c', 'CtrlScheduler_EntryPoint.lst', 'CtrlScheduler_IdleTask.lst', 'CtrlScheduler_Initialize.lst', 'CtrlScheduler_IsrAddressError.lst', 'CtrlScheduler_IsrCriticalException.lst', 'CtrlScheduler_IsrDmaError.lst', 'CtrlScheduler_IsrMathError.lst', 'CtrlScheduler_IsrOscillatorFail.lst', 'CtrlScheduler_IsrStackError.lst', 'CtrlScheduler_IsrTimer8.lst', 'CtrlScheduler_IsrTimer9.lst', 'CtrlScheduler_Main.lst', 'CtrlScheduler_Private.lst', 'CtrlScheduler_Shutdown.lst', 'CtrlScheduler_Start.lst', 'CtrlScheduler_TaskManager.lst', 'CtrlScheduler_EntryPoint.o', 'CtrlScheduler_IdleTask.o', 'CtrlScheduler_Initialize.o', 'CtrlScheduler_IsrAddressError.o', 'CtrlScheduler_IsrCriticalException.o', 'CtrlScheduler_IsrDmaError.o', 'CtrlScheduler_IsrMathError.o', 'CtrlScheduler_IsrOscillatorFail.o', 'CtrlScheduler_IsrStackError.o', 'CtrlScheduler_IsrTimer8.o', 'CtrlScheduler_IsrTimer9.o', 'CtrlScheduler_Main.o', 'CtrlScheduler_Private.o', 'CtrlScheduler_Shutdown.o', 'CtrlScheduler_Start.o', 'CtrlScheduler_TaskManager.o', 'DplAcq_ComputeAlias28vBatTruMinEss.c', 'DplAcq_ComputeAlias28vBatTruMinNess.c', 'DplAcq_ComputeAlias28vPresenceMainNess.c', 'DplAcq_ComputeAliasAcWow.c', 'DplAcq_ComputeAliasAlt115vacNominalEss.c', 'DplAcq_ComputeAliasArincRxFail.c', 'DplAcq_ComputeAliasBatTruTemp.c', 'DplAcq_ComputeAliasBatTruTempAValidity.c', 'DplAcq_ComputeAliasBatTruTempBValidity.c', 'DplAcq_ComputeAliasBatTruValidity.c', 'DplAcq_ComputeAliasBatType.c', 'DplAcq_ComputeAliasCabcShpHes2Ch1Current.c', 'DplAcq_ComputeAliasCabcShpHes2Ch1Ref.c', 'DplAcq_ComputeAliasCabcShpHes2Ch1ValidityLness.c', 'DplAcq_ComputeAliasCabcShpHes2Ch1ValidityRess.c', 'DplAcq_ComputeAliasCabcShpHes2Ch1ValidityRness.c', 'DplAcq_ComputeAliasCtAtrcMax.c', 'DplAcq_ComputeAliasCtGalcMax.c', 'DplAcq_ComputeAliasCtGpuMax.c', 'DplAcq_ComputeAliasCtXaltc1Max.c', 'DplAcq_ComputeAliasDcAreaTempValidity.c', 'DplAcq_ComputeAliasEng1Off.c', 'DplAcq_ComputeAliasEng2Off.c', 'DplAcq_ComputeAliasFlight.c', 'DplAcq_ComputeAliasGpuAlt115vacPresence.c', 'DplAcq_ComputeAliasGpuMax.c', 'DplAcq_ComputeAliasGpuMin.c', 'DplAcq_ComputeAliasGpuPresence.c', 'DplAcq_ComputeAliasMain115Min.c', 'DplAcq_ComputeAliasMain115vacNominal.c', 'DplAcq_ComputeAliasMain115vacPresence.c', 'DplAcq_ComputeAliasOppCabinMasterSwRness.c', 'DplAcq_ComputeAliasPcbOverTemp.c', 'DplAcq_ComputeAliasPcbTemp.c', 'DplAcq_ComputeAliasPcbTempAValidity.c', 'DplAcq_ComputeAliasPcbTempBValidity.c', 'DplAcq_ComputeAliasStbyTruFanFail.c', 'DplAcq_ComputeAliasStbyTruTemp.c', 'DplAcq_ComputeAliasTakeOff.c', 'DplAcq_ComputeUcAndBoardType.c', 'DplAcq_ForceStartupRead.c', 'DplAcq_ForceStartupWrite.c', 'DplAcq_GetBoardType.c', 'DplAcq_GetPcbTempSensorsValue.c', 'DplAcq_GetUcAndBoardDsi.c', 'DplAcq_Initialize.c', 'DplAcq_InitializeDsi.c', 'DplAcq_ManageActivity.c', 'DplAcq_ManageAlias.c', 'DplAcq_ManageArinc.c', 'DplAcq_ManageAsi.c', 'DplAcq_ManageDsi.c', 'DplAcq_ManageIoex.c', 'DplAcq_Private.c', 'DplAcq_Private.h', 'DplAcq_Public.c', 'DplAcq_ComputeAlias28vBatTruMinEss.lst', 'DplAcq_ComputeAlias28vBatTruMinNess.lst', 'DplAcq_ComputeAlias28vPresenceMainNess.lst', 'DplAcq_ComputeAliasAcWow.lst', 'DplAcq_ComputeAliasAlt115vacNominalEss.lst', 'DplAcq_ComputeAliasArincRxFail.lst', 'DplAcq_ComputeAliasBatTruTemp.lst', 'DplAcq_ComputeAliasBatTruTempAValidity.lst', 'DplAcq_ComputeAliasBatTruTempBValidity.lst', 'DplAcq_ComputeAliasBatTruValidity.lst', 'DplAcq_ComputeAliasBatType.lst', 'DplAcq_ComputeAliasCabcShpHes2Ch1Current.lst', 'DplAcq_ComputeAliasCabcShpHes2Ch1Ref.lst', 'DplAcq_ComputeAliasCabcShpHes2Ch1ValidityLness.lst', 'DplAcq_ComputeAliasCabcShpHes2Ch1ValidityRess.lst', 'DplAcq_ComputeAliasCabcShpHes2Ch1ValidityRness.lst', 'DplAcq_ComputeAliasCtAtrcMax.lst', 'DplAcq_ComputeAliasCtGalcMax.lst', 'DplAcq_ComputeAliasCtGpuMax.lst', 'DplAcq_ComputeAliasCtXaltc1Max.lst', 'DplAcq_ComputeAliasDcAreaTempValidity.lst', 'DplAcq_ComputeAliasEng1Off.lst', 'DplAcq_ComputeAliasEng2Off.lst', 'DplAcq_ComputeAliasFlight.lst', 'DplAcq_ComputeAliasGpuAlt115vacPresence.lst', 'DplAcq_ComputeAliasGpuMax.lst', 'DplAcq_ComputeAliasGpuMin.lst', 'DplAcq_ComputeAliasGpuPresence.lst', 'DplAcq_ComputeAliasMain115Min.lst', 'DplAcq_ComputeAliasMain115vacNominal.lst', 'DplAcq_ComputeAliasMain115vacPresence.lst', 'DplAcq_ComputeAliasOppCabinMasterSwRness.lst', 'DplAcq_ComputeAliasPcbOverTemp.lst', 'DplAcq_ComputeAliasPcbTemp.lst', 'DplAcq_ComputeAliasPcbTempAValidity.lst', 'DplAcq_ComputeAliasPcbTempBValidity.lst', 'DplAcq_ComputeAliasStbyTruFanFail.lst', 'DplAcq_ComputeAliasStbyTruTemp.lst', 'DplAcq_ComputeAliasTakeOff.lst', 'DplAcq_ComputeUcAndBoardType.lst', 'DplAcq_ForceStartupRead.lst', 'DplAcq_ForceStartupWrite.lst', 'DplAcq_GetBoardType.lst', 'DplAcq_GetPcbTempSensorsValue.lst', 'DplAcq_GetUcAndBoardDsi.lst', 'DplAcq_Initialize.lst', 'DplAcq_InitializeDsi.lst', 'DplAcq_ManageActivity.lst', 'DplAcq_ManageAlias.lst', 'DplAcq_ManageArinc.lst', 'DplAcq_ManageAsi.lst', 'DplAcq_ManageDsi.lst', 'DplAcq_ManageIoex.lst', 'DplAcq_Private.lst', 'DplAcq_Public.lst', 'DplAcq_ComputeAlias28vBatTruMinEss.o', 'DplAcq_ComputeAlias28vBatTruMinNess.o', 'DplAcq_ComputeAlias28vPresenceMainNess.o', 'DplAcq_ComputeAliasAcWow.o', 'DplAcq_ComputeAliasAlt115vacNominalEss.o', 'DplAcq_ComputeAliasArincRxFail.o', 'DplAcq_ComputeAliasBatTruTemp.o', 'DplAcq_ComputeAliasBatTruTempAValidity.o', 'DplAcq_ComputeAliasBatTruTempBValidity.o', 'DplAcq_ComputeAliasBatTruValidity.o', 'DplAcq_ComputeAliasBatType.o', 'DplAcq_ComputeAliasCabcShpHes2Ch1Current.o', 'DplAcq_ComputeAliasCabcShpHes2Ch1Ref.o', 'DplAcq_ComputeAliasCabcShpHes2Ch1ValidityLness.o', 'DplAcq_ComputeAliasCabcShpHes2Ch1ValidityRess.o', 'DplAcq_ComputeAliasCabcShpHes2Ch1ValidityRness.o', 'DplAcq_ComputeAliasCtAtrcMax.o', 'DplAcq_ComputeAliasCtGalcMax.o', 'DplAcq_ComputeAliasCtGpuMax.o', 'DplAcq_ComputeAliasCtXaltc1Max.o', 'DplAcq_ComputeAliasDcAreaTempValidity.o', 'DplAcq_ComputeAliasEng1Off.o', 'DplAcq_ComputeAliasEng2Off.o', 'DplAcq_ComputeAliasFlight.o', 'DplAcq_ComputeAliasGpuAlt115vacPresence.o', 'DplAcq_ComputeAliasGpuMax.o', 'DplAcq_ComputeAliasGpuMin.o', 'DplAcq_ComputeAliasGpuPresence.o', 'DplAcq_ComputeAliasMain115Min.o', 'DplAcq_ComputeAliasMain115vacNominal.o', 'DplAcq_ComputeAliasMain115vacPresence.o', 'DplAcq_ComputeAliasOppCabinMasterSwRness.o', 'DplAcq_ComputeAliasPcbOverTemp.o', 'DplAcq_ComputeAliasPcbTemp.o', 'DplAcq_ComputeAliasPcbTempAValidity.o', 'DplAcq_ComputeAliasPcbTempBValidity.o', 'DplAcq_ComputeAliasStbyTruFanFail.o', 'DplAcq_ComputeAliasStbyTruTemp.o', 'DplAcq_ComputeAliasTakeOff.o', 'DplAcq_ComputeUcAndBoardType.o', 'DplAcq_ForceStartupRead.o', 'DplAcq_ForceStartupWrite.o', 'DplAcq_GetBoardType.o', 'DplAcq_GetPcbTempSensorsValue.o', 'DplAcq_GetUcAndBoardDsi.o', 'DplAcq_Initialize.o', 'DplAcq_InitializeDsi.o', 'DplAcq_ManageActivity.o', 'DplAcq_ManageAlias.o', 'DplAcq_ManageArinc.o', 'DplAcq_ManageAsi.o', 'DplAcq_ManageDsi.o', 'DplAcq_ManageIoex.o', 'DplAcq_Private.o', 'DplAcq_Public.o', 'DplCmd_Initialize.c', 'DplCmd_PhysicalDataConversion.c', 'DplCmd_Private.h', 'DplCmd_Public.c', 'DplCmd_RefreshActivity.c', 'DplCmd_RefreshDutyCycle.c', 'DplCmd_Initialize.lst', 'DplCmd_PhysicalDataConversion.lst', 'DplCmd_Public.lst', 'DplCmd_RefreshActivity.lst', 'DplCmd_RefreshDutyCycle.lst', 'DplCmd_Initialize.o', 'DplCmd_PhysicalDataConversion.o', 'DplCmd_Public.o', 'DplCmd_RefreshActivity.o', 'DplCmd_RefreshDutyCycle.o', 'DplIc_AliasAltStatusFailure.c', 'DplIc_AliasGen.c', 'DplIc_AliasGenOvlFailure.c', 'DplIc_AliasNessMain115vacFault.c', 'DplIc_AliasNessMain115vacOvl.c', 'DplIc_AliasStbyTruTieAlt.c', 'DplIc_AliasTru.c', 'DplIc_AliasTruOvlFailure.c', 'DplIc_AliasTsbc.c', 'DplIc_AliasTsbcOvlFailure.c', 'DplIc_ComputePeriode.c', 'DplIc_Initialize.c', 'DplIc_ManageInternalAlias.c', 'DplIc_ManagePhaseInit.c', 'DplIc_Private.c', 'DplIc_Private.h', 'DplIc_Public.c', 'DplIc_RefreshAllFreq.c', 'DplIc_RefreshAllTon.c', 'DplIc_RefreshFreq.c', 'DplIc_RefreshPhase.c', 'DplIc_RefreshTonConsecutive.c', 'DplIc_AliasAltStatusFailure.lst', 'DplIc_AliasGen.lst', 'DplIc_AliasGenOvlFailure.lst', 'DplIc_AliasNessMain115vacFault.lst', 'DplIc_AliasNessMain115vacOvl.lst', 'DplIc_AliasStbyTruTieAlt.lst', 'DplIc_AliasTru.lst', 'DplIc_AliasTruOvlFailure.lst', 'DplIc_AliasTsbc.lst', 'DplIc_AliasTsbcOvlFailure.lst', 'DplIc_ComputePeriode.lst', 'DplIc_Initialize.lst', 'DplIc_ManageInternalAlias.lst', 'DplIc_ManagePhaseInit.lst', 'DplIc_Private.lst', 'DplIc_Public.lst', 'DplIc_RefreshAllFreq.lst', 'DplIc_RefreshAllTon.lst', 'DplIc_RefreshFreq.lst', 'DplIc_RefreshPhase.lst', 'DplIc_RefreshTonConsecutive.lst', 'DplIc_AliasAltStatusFailure.o', 'DplIc_AliasGen.o', 'DplIc_AliasGenOvlFailure.o', 'DplIc_AliasNessMain115vacFault.o', 'DplIc_AliasNessMain115vacOvl.o', 'DplIc_AliasStbyTruTieAlt.o', 'DplIc_AliasTru.o', 'DplIc_AliasTruOvlFailure.o', 'DplIc_AliasTsbc.o', 'DplIc_AliasTsbcOvlFailure.o', 'DplIc_ComputePeriode.o', 'DplIc_Initialize.o', 'DplIc_ManageInternalAlias.o', 'DplIc_ManagePhaseInit.o', 'DplIc_Private.o', 'DplIc_Public.o', 'DplIc_RefreshAllFreq.o', 'DplIc_RefreshAllTon.o', 'DplIc_RefreshFreq.o', 'DplIc_RefreshPhase.o', 'DplIc_RefreshTonConsecutive.o', 'DplPnsn_IsHwSwCompatible.c', 'DplPnsn_Public.c', 'DplPnsn_IsHwSwCompatible.lst', 'DplPnsn_Public.lst', 'DplPnsn_IsHwSwCompatible.o', 'DplPnsn_Public.o', 'DplScom_Encode.c', 'DplScom_Initialize.c', 'DplScom_Private.c', 'DplScom_Private.h', 'DplScom_Public.c', 'DplScom_SendData.c', 'DplScom_Encode.lst', 'DplScom_Initialize.lst', 'DplScom_Private.lst', 'DplScom_Public.lst', 'DplScom_SendData.lst', 'DplScom_Encode.o', 'DplScom_Initialize.o', 'DplScom_Private.o', 'DplScom_Public.o', 'DplScom_SendData.o', 'DrvAdc_Initialize.c', 'DrvAdc_Initialize.lst', 'DrvAdc_Initialize.o', 'DrvDma_ClearFlag.c', 'DrvDma_DisableChannel.c', 'DrvDma_EnableChannel.c', 'DrvDma_EnableChannelWithForce.c', 'DrvDma_GetCsSpi2State.c', 'DrvDma_GetFlag.c', 'DrvDma_Initialize.c', 'DrvDma_InitializeById.c', 'DrvDma_Private.c', 'DrvDma_Private.h', 'DrvDma_Public.c', 'DrvDma_SetCounter.c', 'DrvDma_Spi1GetData.c', 'DrvDma_Spi1GetDataWithForce.c', 'DrvDma_Spi1SendCmd.c', 'DrvDma_Spi1SendCmdAndWait.c', 'DrvDma_Spi2StartRequest.c', 'DrvDma_ClearFlag.lst', 'DrvDma_DisableChannel.lst', 'DrvDma_EnableChannel.lst', 'DrvDma_EnableChannelWithForce.lst', 'DrvDma_GetCsSpi2State.lst', 'DrvDma_GetFlag.lst', 'DrvDma_Initialize.lst', 'DrvDma_InitializeById.lst', 'DrvDma_Private.lst', 'DrvDma_Public.lst', 'DrvDma_SetCounter.lst', 'DrvDma_Spi1GetData.lst', 'DrvDma_Spi1GetDataWithForce.lst', 'DrvDma_Spi1SendCmd.lst', 'DrvDma_Spi1SendCmdAndWait.lst', 'DrvDma_Spi2StartRequest.lst', 'DrvDma_ClearFlag.o', 'DrvDma_DisableChannel.o', 'DrvDma_EnableChannel.o', 'DrvDma_EnableChannelWithForce.o', 'DrvDma_GetCsSpi2State.o', 'DrvDma_GetFlag.o', 'DrvDma_Initialize.o', 'DrvDma_InitializeById.o', 'DrvDma_Private.o', 'DrvDma_Public.o', 'DrvDma_SetCounter.o', 'DrvDma_Spi1GetData.o', 'DrvDma_Spi1GetDataWithForce.o', 'DrvDma_Spi1SendCmd.o', 'DrvDma_Spi1SendCmdAndWait.o', 'DrvDma_Spi2StartRequest.o', 'DrvGpio_Initialize.c', 'DrvGpio_InitializeById.c', 'DrvGpio_Private.c', 'DrvGpio_Private.h', 'DrvGpio_ReadInput.c', 'DrvGpio_WriteOutput.c', 'DrvGpio_Initialize.lst', 'DrvGpio_InitializeById.lst', 'DrvGpio_Private.lst', 'DrvGpio_ReadInput.lst', 'DrvGpio_WriteOutput.lst', 'DrvGpio_Initialize.o', 'DrvGpio_InitializeById.o', 'DrvGpio_Private.o', 'DrvGpio_ReadInput.o', 'DrvGpio_WriteOutput.o', 'DrvI2c_GetBusStatus.c', 'DrvI2c_GetRequestStatus.c', 'DrvI2c_Initialize.c', 'DrvI2c_MasterWrite.c', 'DrvI2c_Private.c', 'DrvI2c_Private.h', 'DrvI2c_RefreshActivity.c', 'DrvI2c_SendRequest.c', 'DrvI2c_GetBusStatus.lst', 'DrvI2c_GetRequestStatus.lst', 'DrvI2c_Initialize.lst', 'DrvI2c_MasterWrite.lst', 'DrvI2c_Private.lst', 'DrvI2c_RefreshActivity.lst', 'DrvI2c_SendRequest.lst', 'DrvI2c_GetBusStatus.o', 'DrvI2c_GetRequestStatus.o', 'DrvI2c_Initialize.o', 'DrvI2c_MasterWrite.o', 'DrvI2c_Private.o', 'DrvI2c_RefreshActivity.o', 'DrvI2c_SendRequest.o', 'DrvIc_AcquireById.c', 'DrvIc_ClearFlagById.c', 'DrvIc_DisableModuleById.c', 'DrvIc_GetBufferEmptyFlagById.c', 'DrvIc_GetBufferValueById.c', 'DrvIc_GetFlagById.c', 'DrvIc_GetTimerPeriod.c', 'DrvIc_Initialize.c', 'DrvIc_InitializeById.c', 'DrvIc_Private.c', 'DrvIc_Private.h', 'DrvIc_ReconfAndStartById.c', 'DrvIc_AcquireById.lst', 'DrvIc_ClearFlagById.lst', 'DrvIc_DisableModuleById.lst', 'DrvIc_GetBufferEmptyFlagById.lst', 'DrvIc_GetBufferValueById.lst', 'DrvIc_GetFlagById.lst', 'DrvIc_GetTimerPeriod.lst', 'DrvIc_Initialize.lst', 'DrvIc_InitializeById.lst', 'DrvIc_Private.lst', 'DrvIc_ReconfAndStartById.lst', 'DrvIc_AcquireById.o', 'DrvIc_ClearFlagById.o', 'DrvIc_DisableModuleById.o', 'DrvIc_GetBufferEmptyFlagById.o', 'DrvIc_GetBufferValueById.o', 'DrvIc_GetFlagById.o', 'DrvIc_GetTimerPeriod.o', 'DrvIc_Initialize.o', 'DrvIc_InitializeById.o', 'DrvIc_Private.o', 'DrvIc_ReconfAndStartById.o', 'DrvOc_Initialize.c', 'DrvOc_Private.c', 'DrvOc_Private.h', 'DrvOc_SetDutyCycle.c', 'DrvOc_Initialize.lst', 'DrvOc_Private.lst', 'DrvOc_SetDutyCycle.lst', 'DrvOc_Initialize.o', 'DrvOc_Private.o', 'DrvOc_SetDutyCycle.o', 'DrvOscillator_Initialize.c', 'DrvOscillator_Initialize.lst', 'DrvOscillator_Initialize.o', 'DrvSpi_ClearFlag.c', 'DrvSpi_DisableChannel.c', 'DrvSpi_EnableChannel.c', 'DrvSpi_GetCsSpi2State.c', 'DrvSpi_Initialize.c', 'DrvSpi_Private.c', 'DrvSpi_Private.h', 'DrvSpi_ClearFlag.lst', 'DrvSpi_DisableChannel.lst', 'DrvSpi_EnableChannel.lst', 'DrvSpi_GetCsSpi2State.lst', 'DrvSpi_Initialize.lst', 'DrvSpi_Private.lst', 'DrvSpi_ClearFlag.o', 'DrvSpi_DisableChannel.o', 'DrvSpi_EnableChannel.o', 'DrvSpi_GetCsSpi2State.o', 'DrvSpi_Initialize.o', 'DrvSpi_Private.o', 'DrvTimer_GetCurrentValue.c', 'DrvTimer_GetPeriod.c', 'DrvTimer_Initialize.c', 'DrvTimer_InitializeById.c', 'DrvTimer_Private.c', 'DrvTimer_Private.h', 'DrvTimer_Start.c', 'DrvTimer_GetCurrentValue.lst', 'DrvTimer_GetPeriod.lst', 'DrvTimer_Initialize.lst', 'DrvTimer_InitializeById.lst', 'DrvTimer_Private.lst', 'DrvTimer_Start.lst', 'DrvTimer_GetCurrentValue.o', 'DrvTimer_GetPeriod.o', 'DrvTimer_Initialize.o', 'DrvTimer_InitializeById.o', 'DrvTimer_Private.o', 'DrvTimer_Start.o', 'AplActuation_Public.h', 'AplScom_Public.h', 'AplSwpr_Public.h', 'CmpArx_Public.h', 'CmpAsi_Public.h', 'CmpCaim_Public.h', 'CmpCtc_Public.h', 'CmpDsi_Public.h', 'CmpIoex_Public.h', 'CmpLed_Public.h', 'CmpMemory_Public.h', 'CmpMux_Public.h', 'CmpPts_Public.h', 'CmpWdog_Public.h', 'DplAcq_Public.h', 'DplCmd_Public.h', 'DplIc_Public.h', 'DplPnsn_Public.h', 'DplScom_Public.h', 'DrvAdc_Public.h', 'DrvDma_Public.h', 'DrvGpio_Public.h', 'DrvI2c_Public.h', 'DrvIc_Public.h', 'DrvOc_Public.h', 'DrvOscillator_Public.h', 'DrvSpi_Public.h', 'DrvTimer_Public.h', 'McuAdc_Public.h', 'McuCpu_Public.h', 'McuDma_Public.h', 'McuGpio_Public.h', 'McuI2c_Public.h', 'McuIc_Public.h', 'McuInt_Public.h', 'McuMemory_Public.h', 'McuOc_Public.h', 'McuSpi_Public.h', 'McuTmr_Public.h', 'SrvCpuld_Public.h', 'SrvError_Public.h', 'SrvMath_Public.h', 'SrvMutex_Public.h', 'SrvSeu_Public.h', 'Standard.h', 'McuAdc_Public.lst', 'McuCpu_Public.lst', 'McuDma_Public.lst', 'McuGpio_Public.lst', 'McuI2c_Public.lst', 'McuIc_Public.lst', 'McuInt_Public.lst', 'McuMemory_Public.lst', 'McuOc_Public.lst', 'McuSpi_Public.lst', 'McuTmr_Public.lst', 'Mcu_Registers.lst', 'McuAdc_Public.c', 'McuCpu_Public.c', 'McuDma_Public.c', 'McuGpio_Public.c', 'McuI2c_Public.c', 'McuIc_Public.c', 'McuInt_Public.c', 'McuMemory_Public.c', 'McuOc_Public.c', 'McuSpi_Public.c', 'McuTmr_Public.c', 'Mcu_Registers.c', 'McuAdc_Public.o', 'McuCpu_Public.o', 'McuDma_Public.o', 'McuGpio_Public.o', 'McuI2c_Public.o', 'McuIc_Public.o', 'McuInt_Public.o', 'McuMemory_Public.o', 'McuOc_Public.o', 'McuSpi_Public.o', 'McuTmr_Public.o', 'Mcu_Registers.o', 'SrvCpuld_GetCpuLoad.lst', 'SrvCpuld_Initialize.lst', 'SrvCpuld_Measure.lst', 'SrvCpuld_Private.lst', 'SrvCpuld_TopSync.lst', 'SrvCpuld_GetCpuLoad.o', 'SrvCpuld_Initialize.o', 'SrvCpuld_Measure.o', 'SrvCpuld_Private.o', 'SrvCpuld_TopSync.o', 'SrvCpuld_GetCpuLoad.c', 'SrvCpuld_Initialize.c', 'SrvCpuld_Measure.c', 'SrvCpuld_Private.c', 'SrvCpuld_Private.h', 'SrvCpuld_TopSync.c', 'SrvError_ExceptionRaise.lst', 'SrvError_Initialize.lst', 'SrvError_IsExceptionOccurs.lst', 'SrvError_Private.lst', 'SrvError_SetOperationalMode.lst', 'SrvError_ExceptionRaise.o', 'SrvError_Initialize.o', 'SrvError_IsExceptionOccurs.o', 'SrvError_Private.o', 'SrvError_SetOperationalMode.o', 'SrvError_ExceptionRaise.c', 'SrvError_Initialize.c', 'SrvError_IsExceptionOccurs.c', 'SrvError_Private.c', 'SrvError_Private.h', 'SrvError_SetOperationalMode.c', 'SrvMath_DivideSlBySw.lst', 'SrvMath_DivideUlByUw.lst', 'SrvMath_DivideUlByUwRetUl.lst', 'SrvMath_MaxOfUword.lst', 'SrvMath_MaxOfWord.lst', 'SrvMath_MinOfUword.lst', 'SrvMath_DivideSlBySw.o', 'SrvMath_DivideUlByUw.o', 'SrvMath_DivideUlByUwRetUl.o', 'SrvMath_MaxOfUword.o', 'SrvMath_MaxOfWord.o', 'SrvMath_MinOfUword.o', 'SrvMath_DivideSlBySw.c', 'SrvMath_DivideUlByUw.c', 'SrvMath_DivideUlByUwRetUl.c', 'SrvMath_MaxOfUword.c', 'SrvMath_MaxOfWord.c', 'SrvMath_MinOfUword.c', 'SrvMutex_Unlock.lst', 'SrvMutex_Unlock.o', 'SrvMutex_Unlock.c', 'SrvSeu_CheckSingleWordVariable.lst', 'SrvSeu_CheckXWordVariable.lst', 'SrvSeu_Initialize.lst', 'SrvSeu_UpdateSingleWordVariable.lst', 'SrvSeu_UpdateXWordVariable.lst', 'SrvSeu_CheckSingleWordVariable.o', 'SrvSeu_CheckXWordVariable.o', 'SrvSeu_Initialize.o', 'SrvSeu_UpdateSingleWordVariable.o', 'SrvSeu_UpdateXWordVariable.o', 'SrvSeu_CheckSingleWordVariable.c', 'SrvSeu_CheckXWordVariable.c', 'SrvSeu_Initialize.c', 'SrvSeu_Private.h', 'SrvSeu_UpdateSingleWordVariable.c', 'SrvSeu_UpdateXWordVariable.c']
        tbl_build_finduse = ['Builder.sh',
                             'Makefile',
                             'build.bat',
                             'checksum.exe',
                             'compilation.log',
                             'csu_list.txt',
                             'p33FJ256GP710A.gld']
        header_input = ["Title","Reference","Synergy Name","Version","Type","Instance","Release"]
        tbl_input_data = [header_input]
        header = ["Title","Reference","Synergy Name","Version","Type","Instance","Release","CR"]
        cid.tbl_items_filtered = [header]
        header_soft_sources = ["File Name","Version","Type","Instance","Release","CR"]
        cid.tbl_sources = [header_soft_sources]
        cid.tbl_build = [header_soft_sources]
        cid.tableau_src = [['AplActuation_ContactorAtrc1.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_ContactorAtrc2.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_ContactorBc1.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplActuation_ContactorBc2.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_ContactorBooc.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplActuation_ContactorCabc1.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplActuation_ContactorCabc2.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplActuation_ContactorGalc1.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplActuation_ContactorGalc2.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplActuation_ContactorGpulc.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_ContactorLaltc1.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplActuation_ContactorRaltc1.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplActuation_ContactorShp.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_ContactorTc1.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplActuation_ContactorTc2.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplActuation_ContactorTrc1.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplActuation_ContactorTrc2.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplActuation_DsoAftWaterHeaterAuthorised.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplActuation_DsoApuEcuHppRelayCmd.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_DsoBatHeaterRelay2.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_DsoBatHeaterTruFanPower.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_DsoBatTruLt.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_DsoCabGalLt.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_DsoCabcShed.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_DsoCabinAcMasterGalleyMaster.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_DsoCabinGalleyMaster.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_DsoCabinMasterOn.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_DsoEppLt.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_DsoEssTruStatus.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_DsoFanPowerPpdb.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_DsoFwdWaterHeaterAuthorised.c', '3.1', 'csrc', '2', 'SW_ENM/03', ''], ['AplActuation_DsoGalleyMasterOn.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_DsoGpuConnectionStatus.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_DsoMasterShedOffLt.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplActuation_DsoShedEngFail.c', '5.1', 'csrc', '2', 'SW_ENM/05', ''], ['AplActuation_DsoShedGeneratorFail.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_DsoShedStart.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_DsoTcReset.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplActuation_DsoTrcCmd.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_DsoXaltc1HesTruCurrent.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_Initialize.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_Less.c', '5.1', 'csrc', '2', 'SW_ENM/05', ''], ['AplActuation_Lness.c', '5.1', 'csrc', '2', 'SW_ENM/05', ''], ['AplActuation_Manage.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_Private.h', '1.0', 'incl', '3', 'SW_ENM/01', ''], ['AplActuation_Public.h', '1.0', 'incl', '3', 'SW_ENM/01', ''], ['AplActuation_RefreshDsoSpare.c', '5.1', 'csrc', '2', 'SW_ENM/05', ''], ['AplActuation_Ress.c', '5.1', 'csrc', '2', 'SW_ENM/05', ''], ['AplActuation_Rness.c', '5.1', 'csrc', '2', 'SW_ENM/05', ''], ['AplScom_ComputeMsg0.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg1.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg2.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg3.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg4.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplScom_ComputeMsg5.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg6.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplScom_ComputeMsg7.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg8.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg9.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg10.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg11.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg12.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg13.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg14.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg15.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg16.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplScom_ComputeMsg17.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg18.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg19.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplScom_ComputeMsg20.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg21.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg22.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg23.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg24.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg25.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg26.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg27.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg28.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg29.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg30.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg31.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg32.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg33.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg34.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg35.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg36.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg37.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg38.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg39.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg40.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg41.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg42.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg43.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg44.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplScom_ComputeMsg45.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg46.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg47.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplScom_ComputeMsg48.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg49.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg50.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg51.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg52.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg53.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg54.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg55.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg56.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg57.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg58.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg59.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg60.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg61.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg62.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg63.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg64.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg65.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg66.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg67.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg68.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg69.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg70.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg71.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg72.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg73.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg74.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg75.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg76.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg77.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg78.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg79.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg80.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg81.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg82.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg83.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg84.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg85.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg86.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg87.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg88.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg89.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg90.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg91.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg92.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg93.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg94.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg95.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg96.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg97.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg98.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg99.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg100.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg101.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg102.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg103.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg104.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg105.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg106.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg107.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplScom_ComputeMsg108.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplScom_ComputeMsg109.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplScom_ComputeMsg110.c', '5.1', 'csrc', '2', 'SW_ENM/05', ''], ['AplScom_ComputeMsg111.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg112.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg113.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg114.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg115.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg116.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg117.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplScom_ComputeMsg118.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplScom_ComputeMsg119.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg120.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg121.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg122.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg123.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg124.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg125.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg126.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg127.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg128.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg129.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg130.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg131.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg132.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg133.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg134.c', '1.1', 'csrc', '2', 'SW_ENM/03', ''], ['AplScom_ComputeMsg135.c', '1.1', 'csrc', '2', 'SW_ENM/03', ''], ['AplScom_ComputeMsg136.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg137.c', '3.0', 'csrc', '1', 'SW_ENM/03', ''], ['AplScom_ComputeMsg138.c', '3.0', 'csrc', '1', 'SW_ENM/03', ''], ['AplScom_Initialize.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ManageActivity.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplScom_Private.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_Private.h', '3.2', 'incl', '2', 'SW_ENM/03', ''], ['AplScom_Public.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_Public.h', '1.0', 'incl', '2', 'SW_ENM/01', ''], ['AplSwpr_AliasBatCurrent.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_AliasBatTruHes1Ch1Current.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_AliasBatTruHes1Ch1RefEss.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_AliasBatTruHes1Ch1RefNess.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_AliasBatTruHes1Ch1ValidityEss.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_AliasBatTruHes1Ch1ValidityNess.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_AliasBatTruHes1Ch2Current.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_AliasBatTruHes1Ch2RefEss.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_AliasBatTruHes1Ch2RefNess.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_AliasBatTruHes1Ch2ValidityEss.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_AliasBatTruHes1Ch2ValidityNess.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_AliasCabcxAutoShedLness.c', '5.1', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_AliasCabcxAutoShedRness.c', '5.1', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_AliasCabcxShedLness.c', '5.1', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_AliasCabcxShedRness.c', '5.1', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_AliasComputeGpuPhaseOrder.c', '5.0', 'csrc', '1', 'SW_ENM/05', ''], ['AplSwpr_AliasCt3Sum.c', '3.0', 'csrc', '1', 'SW_ENM/03', ''], ['AplSwpr_AliasFuncTruFanFailure.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_AliasGpuAuto.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_AliasGpuFault.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_AliasGpuPower.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_AliasGpuPowerReady.c', '1.1', 'csrc', '2', 'SW_ENM/02', ''], ['AplSwpr_AliasHesTruCh2Current.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_AliasTcOvlUv.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_AliasTruCurrent.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_AliasTruHighCurrent.c', '5.1', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_AliasXaltc1HighCurrent.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_Initialize.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_Private.h', '5.0', 'incl', '2', 'SW_ENM/05', ''], ['AplSwpr_ProtectionAtrc.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionAtrcDriverFail.c', '1.1', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_ProtectionAtrcOverload.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_ProtectionAtrcReset.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionBat.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionBatDeepDischarge.c', '1.1', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_ProtectionBatDriverFail.c', '1.1', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_ProtectionBatOverload.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionBatReset.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionBatReverse.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_ProtectionBooc.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionBoocDriverFail.c', '1.1', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_ProtectionBoocOverload.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_ProtectionBoocReset.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionBoocUndervoltage.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_ProtectionCabcDriverFail.c', '1.1', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_ProtectionCabcOverload.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_ProtectionCabcReset.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_ProtectionGalc.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionGalcDriverFail.c', '1.1', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_ProtectionGalcOverload.c', '5.1', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_ProtectionGalcReset.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionGalcShedNess.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionGalcUnbalanced.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionGalcUndervoltage.c', '5.1', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_ProtectionGpu.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionGpuDriverFail.c', '1.1', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_ProtectionGpuFrequency.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_ProtectionGpuOverload.c', '4.0', 'csrc', '2', 'SW_ENM/04', ''], ['AplSwpr_ProtectionGpuOvervoltage.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionGpuPhaseOrder.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_ProtectionGpuReset.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_ProtectionGpuUndervoltage.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_ProtectionShp.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionShpDriverFail.c', '1.1', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_ProtectionShpOverload.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_ProtectionShpReset.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionTc.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionTcDriverFail.c', '1.1', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_ProtectionTcOverload.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_ProtectionTcReset.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionTcUndervoltage.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_ProtectionTru.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionTruDriverFail.c', '1.1', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_ProtectionTruOverRipple.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_ProtectionTruOverload.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_ProtectionTruOvlInProgress.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_ProtectionTruReset.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionTruReverse.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_ProtectionTruUndervoltage.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_ProtectionXaltc1.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionXaltc1DriverFail.c', '1.1', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_ProtectionXaltc1Overload.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_ProtectionXaltc1Reset.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_Public.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_Public.h', '5.0', 'incl', '2', 'SW_ENM/05', ''], ['AplSwpr_SwitchBat.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_SwitchCabin.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_SwitchCabinMaster.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_SwitchGalley.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_SwitchTru.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpArx_GetFrameData.c', '1.1', 'csrc', '2', 'SW_ENM/02', ''], ['CmpArx_InitializeConf.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['CmpArx_Public.h', '1.1', 'incl', '2', 'SW_ENM/02', ''], ['CmpArx_SendReadCommand.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpArx_WaitTransfert.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpAsi_Initialize.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CmpAsi_Public.h', '1.0', 'incl', '3', 'SW_ENM/01', ''], ['CmpAsi_Refresh.c', '5.1', 'csrc', '3', 'SW_ENM/05', ''], ['CmpCaim_ForceStartupRead.c', '1.1', 'csrc', '2', 'SW_ENM/02', ''], ['CmpCaim_ForceStartupWrite.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpCaim_Initialize.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpCaim_Private.h', '1.0', 'incl', '2', 'SW_ENM/01', ''], ['CmpCaim_Public.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpCaim_Public.h', '1.0', 'incl', '2', 'SW_ENM/01', ''], ['CmpCaim_ReadDataArinc.c', '1.1', 'csrc', '2', 'SW_ENM/02', ''], ['CmpCaim_ReadDataIOEx.c', '1.1', 'csrc', '2', 'SW_ENM/02', ''], ['CmpCaim_Refresh.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpCtc_GetHoPuLevel.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpCtc_Initialize.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpCtc_ManageActivity.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpCtc_Private.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpCtc_Private.h', '1.0', 'incl', '2', 'SW_ENM/01', ''], ['CmpCtc_Public.h', '1.0', 'incl', '2', 'SW_ENM/01', ''], ['CmpCtc_RequestComand.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpDsi_GetBoardDsi.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpDsi_GetGalcDistoDsi.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpDsi_GetUcDsi.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpDsi_Initialize.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['CmpDsi_Private.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['CmpDsi_Private.h', '1.0', 'incl', '5', 'SW_ENM/01', ''], ['CmpDsi_Public.c', '1.0', 'csrc', '6', 'SW_ENM/01', ''], ['CmpDsi_Public.h', '1.0', 'incl', '5', 'SW_ENM/01', ''], ['CmpIoex_ForceReadCmd.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpIoex_ForceReadData.c', '1.1', 'csrc', '2', 'SW_ENM/02', ''], ['CmpIoex_ForceWriteCmd.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpIoex_GetValueToRead.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpIoex_InitConf.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpIoex_Initialize.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CmpIoex_Private.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CmpIoex_Private.h', '1.0', 'incl', '3', 'SW_ENM/01', ''], ['CmpIoex_Public.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpIoex_Public.h', '3.0', 'incl', '3', 'SW_ENM/03', ''], ['CmpIoex_ReadData.c', '1.1', 'csrc', '2', 'SW_ENM/02', ''], ['CmpIoex_ReconfIoex.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpIoex_SendCmdRead.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpIoex_SendCmdWrite.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpIoex_TransformToFunctional.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['CmpIoex_TransformToLogical.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpIoex_WaitTransfert.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpLed_Control.c', '5.0', 'csrc', '3', 'SW_ENM/05', ''], ['CmpLed_Initialize.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CmpLed_ManageActivity.c', '1.1', 'csrc', '2', 'SW_ENM/02', ''], ['CmpLed_Private.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CmpLed_Private.h', '1.0', 'incl', '3', 'SW_ENM/01', ''], ['CmpLed_Public.h', '1.0', 'incl', '3', 'SW_ENM/01', ''], ['CmpMemory_Public.c', '3.0', 'csrc', '1', 'SW_ENM/03', ''], ['CmpMemory_Public.h', '3.1', 'incl', '2', 'SW_ENM/03', ''], ['CmpMemory_TestRam.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpMemory_TestRom.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['CmpMux_Initialize.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CmpMux_Private.h', '1.0', 'incl', '3', 'SW_ENM/01', ''], ['CmpMux_Public.h', '1.0', 'incl', '4', 'SW_ENM/01', ''], ['CmpMux_ReleaseAll.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpMux_SelectItem.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpPts_Initialize.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['CmpPts_ManageActivity.c', '5.1', 'csrc', '3', 'SW_ENM/05', ''], ['CmpPts_Private.h', '1.0', 'incl', '4', 'SW_ENM/01', ''], ['CmpPts_Public.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['CmpPts_Public.h', '1.0', 'incl', '4', 'SW_ENM/01', ''], ['CmpWdog_Initialize.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CmpWdog_ManageActivity.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CmpWdog_ManageCheckpoint.c', '5.0', 'csrc', '3', 'SW_ENM/05', ''], ['CmpWdog_ManualRefresh.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CmpWdog_PerformSelftest.c', '5.0', 'csrc', '3', 'SW_ENM/05', ''], ['CmpWdog_Private.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['CmpWdog_Private.h', '1.0', 'incl', '4', 'SW_ENM/01', ''], ['CmpWdog_Public.h', '1.0', 'incl', '4', 'SW_ENM/01', ''], ['CmpWdog_SetMode.c', '5.0', 'csrc', '3', 'SW_ENM/05', ''], ['CmpWdog_WritePattern.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CtrlScheduler_EntryPoint.c', '5.0', 'csrc', '4', 'SW_ENM/05', ''], ['CtrlScheduler_IdleTask.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CtrlScheduler_Initialize.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CtrlScheduler_IsrAddressError.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CtrlScheduler_IsrCriticalException.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CtrlScheduler_IsrDmaError.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CtrlScheduler_IsrMathError.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CtrlScheduler_IsrOscillatorFail.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CtrlScheduler_IsrStackError.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CtrlScheduler_IsrTimer8.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CtrlScheduler_IsrTimer9.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CtrlScheduler_Main.c', '5.1', 'csrc', '7', 'SW_ENM/05', ''], ['CtrlScheduler_Private.c', '1.0', 'csrc', '7', 'SW_ENM/01', ''], ['CtrlScheduler_Private.h', '1.0', 'incl', '7', 'SW_ENM/01', ''], ['CtrlScheduler_Shutdown.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CtrlScheduler_Start.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CtrlScheduler_TaskManager.c', '5.0', 'csrc', '3', 'SW_ENM/05', ''], ['DplAcq_ComputeAlias28vBatTruMinEss.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAlias28vBatTruMinNess.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAlias28vPresenceMainNess.c', '3.0', 'csrc', '1', 'SW_ENM/03', ''], ['DplAcq_ComputeAliasAcWow.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasAlt115vacNominalEss.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasArincRxFail.c', '5.0', 'csrc', '1', 'SW_ENM/05', ''], ['DplAcq_ComputeAliasBatTruTemp.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasBatTruTempAValidity.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasBatTruTempBValidity.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasBatTruValidity.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasBatType.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasCabcShpHes2Ch1Current.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasCabcShpHes2Ch1Ref.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasCabcShpHes2Ch1ValidityLness.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasCabcShpHes2Ch1ValidityRess.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasCabcShpHes2Ch1ValidityRness.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['DplAcq_ComputeAliasCtAtrcMax.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasCtGalcMax.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasCtGpuMax.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasCtXaltc1Max.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasDcAreaTempValidity.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasEng1Off.c', '5.0', 'csrc', '1', 'SW_ENM/05', ''], ['DplAcq_ComputeAliasEng2Off.c', '5.0', 'csrc', '1', 'SW_ENM/05', ''], ['DplAcq_ComputeAliasFlight.c', '5.0', 'csrc', '1', 'SW_ENM/05', ''], ['DplAcq_ComputeAliasGpuAlt115vacPresence.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasGpuMax.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasGpuMin.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasGpuPresence.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasMain115Min.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasMain115vacNominal.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasMain115vacPresence.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasOppCabinMasterSwRness.c', '3.0', 'csrc', '1', 'SW_ENM/03', ''], ['DplAcq_ComputeAliasPcbOverTemp.c', '3.0', 'csrc', '1', 'SW_ENM/03', ''], ['DplAcq_ComputeAliasPcbTemp.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasPcbTempAValidity.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasPcbTempBValidity.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasStbyTruFanFail.c', '5.0', 'csrc', '1', 'SW_ENM/05', ''], ['DplAcq_ComputeAliasStbyTruTemp.c', '5.0', 'csrc', '1', 'SW_ENM/05', ''], ['DplAcq_ComputeAliasTakeOff.c', '5.0', 'csrc', '1', 'SW_ENM/05', ''], ['DplAcq_ComputeUcAndBoardType.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ForceStartupRead.c', '1.1', 'csrc', '2', 'SW_ENM/02', ''], ['DplAcq_ForceStartupWrite.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_GetBoardType.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_GetPcbTempSensorsValue.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_GetUcAndBoardDsi.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_Initialize.c', '5.1', 'csrc', '2', 'SW_ENM/05', ''], ['DplAcq_InitializeDsi.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ManageActivity.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['DplAcq_ManageAlias.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['DplAcq_ManageArinc.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['DplAcq_ManageAsi.c', '1.2', 'csrc', '2', 'SW_ENM/02', ''], ['DplAcq_ManageDsi.c', '1.1', 'csrc', '2', 'SW_ENM/02', ''], ['DplAcq_ManageIoex.c', '1.1', 'csrc', '2', 'SW_ENM/02', ''], ['DplAcq_Private.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['DplAcq_Private.h', '5.0', 'incl', '2', 'SW_ENM/05', ''], ['DplAcq_Public.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['DplAcq_Public.h', '5.0', 'incl', '2', 'SW_ENM/05', ''], ['DplCmd_Initialize.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['DplCmd_PhysicalDataConversion.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplCmd_Private.h', '1.0', 'incl', '4', 'SW_ENM/01', ''], ['DplCmd_Public.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['DplCmd_Public.h', '1.0', 'incl', '4', 'SW_ENM/01', ''], ['DplCmd_RefreshActivity.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplCmd_RefreshDutyCycle.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplIc_AliasAltStatusFailure.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['DplIc_AliasGen.c', '3.1', 'csrc', '2', 'SW_ENM/03', ''], ['DplIc_AliasGenOvlFailure.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['DplIc_AliasNessMain115vacFault.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplIc_AliasNessMain115vacOvl.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplIc_AliasStbyTruTieAlt.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['DplIc_AliasTru.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['DplIc_AliasTruOvlFailure.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['DplIc_AliasTsbc.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['DplIc_AliasTsbcOvlFailure.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['DplIc_ComputePeriode.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplIc_Initialize.c', '5.1', 'csrc', '2', 'SW_ENM/05', ''], ['DplIc_ManageInternalAlias.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['DplIc_ManagePhaseInit.c', '5.0', 'csrc', '1', 'SW_ENM/05', ''], ['DplIc_Private.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplIc_Private.h', '5.0', 'incl', '2', 'SW_ENM/05', ''], ['DplIc_Public.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['DplIc_Public.h', '5.1', 'incl', '2', 'SW_ENM/05', ''], ['DplIc_RefreshAllFreq.c', '3.1', 'csrc', '2', 'SW_ENM/03', ''], ['DplIc_RefreshAllTon.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplIc_RefreshFreq.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['DplIc_RefreshPhase.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['DplIc_RefreshTonConsecutive.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['DplPnsn_IsHwSwCompatible.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['DplPnsn_Public.c', '5.0', 'csrc', '1', 'SW_ENM/05', ''], ['DplPnsn_Public.h', '1.0', 'incl', '1', 'SW_ENM/01', ''], ['DplScom_Encode.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['DplScom_Initialize.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplScom_Private.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplScom_Private.h', '3.1', 'incl', '2', 'SW_ENM/03', ''], ['DplScom_Public.c', '3.1', 'csrc', '2', 'SW_ENM/03', ''], ['DplScom_Public.h', '5.0', 'incl', '2', 'SW_ENM/05', ''], ['DplScom_SendData.c', '1.1', 'csrc', '2', 'SW_ENM/02', ''], ['DrvAdc_Initialize.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['DrvAdc_Public.h', '1.0', 'incl', '5', 'SW_ENM/01', ''], ['DrvDma_ClearFlag.c', '5.0', 'csrc', '8', 'SW_ENM/05', ''], ['DrvDma_DisableChannel.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['DrvDma_EnableChannel.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['DrvDma_EnableChannelWithForce.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['DrvDma_GetCsSpi2State.c', '1.0', 'csrc', '1', 'SW_ENM/02', ''], ['DrvDma_GetFlag.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['DrvDma_Initialize.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['DrvDma_InitializeById.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['DrvDma_Private.c', '1.0', 'csrc', '9', 'SW_ENM/01', ''], ['DrvDma_Private.h', '1.1', 'incl', '9', 'SW_ENM/02', ''], ['DrvDma_Public.c', '1.0', 'csrc', '9', 'SW_ENM/01', ''], ['DrvDma_Public.h', '1.2', 'incl', '9', 'SW_ENM/02', ''], ['DrvDma_SetCounter.c', '1.0', 'csrc', '8', 'SW_ENM/01', ''], ['DrvDma_Spi1GetData.c', '3.0', 'csrc', '3', 'SW_ENM/03', ''], ['DrvDma_Spi1GetDataWithForce.c', '1.1', 'csrc', '3', 'SW_ENM/02', ''], ['DrvDma_Spi1SendCmd.c', '1.1', 'csrc', '3', 'SW_ENM/02', ''], ['DrvDma_Spi1SendCmdAndWait.c', '1.1', 'csrc', '3', 'SW_ENM/02', ''], ['DrvDma_Spi2StartRequest.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['DrvGpio_Initialize.c', '5.0', 'csrc', '5', 'SW_ENM/05', ''], ['DrvGpio_InitializeById.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DrvGpio_Private.c', '5.0', 'csrc', '6', 'SW_ENM/05', ''], ['DrvGpio_Private.h', '1.0', 'incl', '8', 'SW_ENM/01', ''], ['DrvGpio_Public.h', '5.0', 'incl', '9', 'SW_ENM/05', ''], ['DrvGpio_ReadInput.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DrvGpio_WriteOutput.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DrvI2c_GetBusStatus.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['DrvI2c_GetRequestStatus.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['DrvI2c_Initialize.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['DrvI2c_MasterWrite.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['DrvI2c_Private.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['DrvI2c_Private.h', '1.0', 'incl', '4', 'SW_ENM/01', ''], ['DrvI2c_Public.h', '1.0', 'incl', '4', 'SW_ENM/01', ''], ['DrvI2c_RefreshActivity.c', '5.0', 'csrc', '3', 'SW_ENM/05', ''], ['DrvI2c_SendRequest.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['DrvIc_AcquireById.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['DrvIc_ClearFlagById.c', '5.0', 'csrc', '3', 'SW_ENM/05', ''], ['DrvIc_DisableModuleById.c', '3.0', 'csrc', '1', 'SW_ENM/03', ''], ['DrvIc_GetBufferEmptyFlagById.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['DrvIc_GetBufferValueById.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DrvIc_GetFlagById.c', '5.0', 'csrc', '3', 'SW_ENM/05', ''], ['DrvIc_GetTimerPeriod.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['DrvIc_Initialize.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['DrvIc_InitializeById.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['DrvIc_Private.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['DrvIc_Private.h', '1.0', 'incl', '4', 'SW_ENM/01', ''], ['DrvIc_Public.h', '3.0', 'incl', '4', 'SW_ENM/03', ''], ['DrvIc_ReconfAndStartById.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['DrvOc_Initialize.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DrvOc_Private.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DrvOc_Private.h', '1.0', 'incl', '2', 'SW_ENM/01', ''], ['DrvOc_Public.h', '5.0', 'incl', '2', 'SW_ENM/05', ''], ['DrvOc_SetDutyCycle.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['DrvOscillator_Initialize.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['DrvOscillator_Public.h', '1.0', 'incl', '3', 'SW_ENM/01', ''], ['DrvSpi_ClearFlag.c', '5.0', 'csrc', '7', 'SW_ENM/05', ''], ['DrvSpi_DisableChannel.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DrvSpi_EnableChannel.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DrvSpi_GetCsSpi2State.c', '1.0', 'csrc', '1', 'SW_ENM/02', ''], ['DrvSpi_Initialize.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['DrvSpi_Private.c', '1.0', 'csrc', '8', 'SW_ENM/01', ''], ['DrvSpi_Private.h', '1.0', 'incl', '8', 'SW_ENM/01', ''], ['DrvSpi_Public.h', '1.1', 'incl', '8', 'SW_ENM/02', ''], ['DrvTimer_GetCurrentValue.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['DrvTimer_GetPeriod.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['DrvTimer_Initialize.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['DrvTimer_InitializeById.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['DrvTimer_Private.c', '1.0', 'csrc', '5', 'SW_ENM/01', ''], ['DrvTimer_Private.h', '1.0', 'incl', '9', 'SW_ENM/01', ''], ['DrvTimer_Public.h', '1.0', 'incl', '9', 'SW_ENM/01', ''], ['DrvTimer_Start.c', '1.0', 'csrc', '5', 'SW_ENM/01', ''], ['McuAdc_Public.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['McuAdc_Public.h', '1.0', 'incl', '4', 'SW_ENM/01', ''], ['McuCpu_Public.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['McuCpu_Public.h', '1.0', 'incl', '9', 'SW_ENM/01', ''], ['McuDma_Public.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['McuDma_Public.h', '1.0', 'incl', '9', 'SW_ENM/01', ''], ['McuGpio_Public.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['McuGpio_Public.h', '1.0', 'incl', '9', 'SW_ENM/01', ''], ['McuI2c_Public.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['McuI2c_Public.h', '1.0', 'incl', '3', 'SW_ENM/01', ''], ['McuIc_Public.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['McuIc_Public.h', '1.0', 'incl', '3', 'SW_ENM/01', ''], ['McuInt_Public.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['McuInt_Public.h', '1.0', 'incl', '2', 'SW_ENM/01', ''], ['McuMemory_Public.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['McuMemory_Public.h', '1.0', 'incl', '9', 'SW_ENM/01', ''], ['McuOc_Public.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['McuOc_Public.h', '1.0', 'incl', '2', 'SW_ENM/01', ''], ['McuSpi_Public.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['McuSpi_Public.h', '1.0', 'incl', '9', 'SW_ENM/01', ''], ['McuTmr_Public.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['McuTmr_Public.h', '1.0', 'incl', '2', 'SW_ENM/01', ''], ['Mcu_Registers.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['SrvCpuld_GetCpuLoad.c', '3.0', 'csrc', '4', 'SW_ENM/03', ''], ['SrvCpuld_Initialize.c', '3.0', 'csrc', '4', 'SW_ENM/03', ''], ['SrvCpuld_Measure.c', '3.0', 'csrc', '4', 'SW_ENM/03', ''], ['SrvCpuld_Private.c', '3.0', 'csrc', '4', 'SW_ENM/03', ''], ['SrvCpuld_Private.h', '3.0', 'incl', '4', 'SW_ENM/03', ''], ['SrvCpuld_Public.h', '3.0', 'incl', '4', 'SW_ENM/03', ''], ['SrvCpuld_TopSync.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['SrvError_ExceptionRaise.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['SrvError_Initialize.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['SrvError_IsExceptionOccurs.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['SrvError_Private.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['SrvError_Private.h', '1.0', 'incl', '4', 'SW_ENM/01', ''], ['SrvError_Public.h', '1.0', 'incl', '4', 'SW_ENM/01', ''], ['SrvError_SetOperationalMode.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['SrvMath_DivideSlBySw.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['SrvMath_DivideUlByUw.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['SrvMath_DivideUlByUwRetUl.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['SrvMath_MaxOfUword.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['SrvMath_MaxOfWord.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['SrvMath_MinOfUword.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['SrvMath_Public.h', '1.0', 'incl', '4', 'SW_ENM/01', ''], ['SrvMutex_Public.h', '1.0', 'incl', '4', 'SW_ENM/01', ''], ['SrvMutex_Unlock.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['SrvSeu_CheckSingleWordVariable.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['SrvSeu_CheckXWordVariable.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['SrvSeu_Initialize.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['SrvSeu_Private.h', '1.0', 'incl', '2', 'SW_ENM/01', ''], ['SrvSeu_Public.h', '1.0', 'incl', '2', 'SW_ENM/01', ''], ['SrvSeu_UpdateSingleWordVariable.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['SrvSeu_UpdateXWordVariable.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['Standard.h', '3.0', 'incl', '10', 'SW_ENM/03', '']]
        cid.tableau_prog = [['Builder.sh', '3.1', 'shsrc', '8', 'SW_ENM/03', ''], ['Makefile', '1.0', 'makefile', '9', 'SW_ENM/01', ''], ['build.bat', '1.0', 'shsrc', '12', 'SW_ENM/01', ''], ['checksum.exe', '1.0', 'executable', '8', 'SW_ENM/01', ''], ['checksum.txt', '6.1', 'ascii', '12', 'SW_ENM/06', ''], ['compilation.log', '6.1', 'ascii', '9', 'SW_ENM/06', ''], ['csu_list.txt', '6.1', 'ascii', '12', 'SW_ENM/06', ''], ['p33FJ256GP710A.gld', '1.0', 'ascii', '8', 'SW_ENM/01', '']]
        cid.tbl_inspection_sheets = []
        tbl_plans = [header]
        tbl_life_cycle_data = [header]
        tbl_build = [header_soft_sources]
        tbl_src = [header_soft_sources]
        cid.tbl_plans = [['Software Configuration Management Plan', 'ET3134', 'SCMP_SW_PLAN_ET3134.docx', '2.0', 'doc', '1', 'SW_PLAN/02', '543'], ['Software Verification Plan', 'ET3133', 'SVP_SW_PLAN_ET3133.docx', '2.0', 'doc', '1', 'SW_PLAN/02', '544'], ['Software Quality Assurance Plan', 'PQ 0.1.0.155', 'SQAP_SW_PLAN_PQ 0.1.0.155.docx', '2.0', 'doc', '1', 'SW_PLAN/02', '351,365'], ['Software Configuration Management Plan', 'ET3134', 'SCMP_SW_PLAN_ET3134.pdf', '2.0', 'pdf', '1', 'SW_PLAN/02', ''], ['Software Quality Assurance Plan', 'PQ 0.1.0.155', 'SQAP_SW_PLAN_PQ 0.1.0.155.pdf', '2.0', 'pdf', '1', 'SW_PLAN/02', ''], ['Software Verification Plan', 'ET3133', 'SVP_SW_PLAN_ET3133.pdf', '2.0', 'pdf', '1', 'SW_PLAN/02', ''], ['Software Quality Assurance Plan', 'PQ 0.1.0.155', 'SQAP_SW_PLAN_PQ 0.1.0.155.pdf', '2.0.1', 'pdf', '1', 'SW_PLAN/02', '']]
        cid.sortData(table_input_data=table_input_data,
                     table_exclude=table_exclude,
                     tableau_sources_finduse=tableau_sources_finduse,
                     tbl_build_finduse=tbl_build_finduse,
                     tbl_input_data=tbl_input_data,
                     tbl_life_cycle_data=tbl_life_cycle_data,
                     tbl_plans=tbl_plans,
                     tbl_src=tbl_src,
                     tbl_build=tbl_build)
        for x in tbl_plans:
            print "tbl_plans:",x
        for x in tbl_input_data:
            print "tbl_input_data:",x
        for x in tbl_life_cycle_data:
            print "tbl_life_cycle_data:",x
        for x in tbl_src:
            print "tbl_src:",x
        for x in tbl_build:
            print "tbl_build:",x
    def test_getSpecificBuild(self):
        return
        tbl_input_data = [
                           [' SMS ESSNESS Supplier Specific Component Specification (SSCS)', 'ET2788-S', 'SSCS_ESSNESS_ET2788_S.pdf', '6', 'pdf', '4', 'BOARD_ESSNESS/01'],
                           [' SMS EPDS SPI ICD (ICD Protocol)', 'ET3252-S', 'SMS_EPDS_SPI_ICD_ET3532_S.pdf', '3', 'pdf', '4', 'SMS_EPDS/01'],
                           [' SMS ESSNESS Supplier Specific Component Specification (SSCS)', 'ET2788-S', 'SSCS_ESSNESS_ET2788_S.doc', '8', 'doc', '2', 'BOARD_ESSNESS/01'],
                           [' SMS EPDS SPI ICD (ICD Protocol)', 'ET3252-S', 'SMS_EPDS_SPI_ICD_ET3532_S.doc', '4', 'doc', '4', 'SMS_EPDS/01']
                         ]
        list_input_data_sorted = sorted(tbl_input_data,key=lambda x: x[2])
        for data in list_input_data_sorted:
            synergy_name = re.sub(r"(.*)\.(.*)$", r"\1", data[2])
            print synergy_name
        #return
        type_object = ("doc","xls","pdf")
        query_cvtype = Tool._createImpl("cvtype",type_object)
        print "tets list",query_cvtype
        type_object = "doc,xls,pdf"
        query_cvtype = Tool._createImpl("cvtype",type_object)
        print "tets list",query_cvtype
        status = False
        type_object = ("doc","xls","pdf")
        for type in type_object:
            result,status = Tool.createItemType(type,status)
            query_cvtype += result
        query_cvtype += ')'
        print "tets list",query_cvtype
        #return
        release = "SW_ENM/06"
        baseline = "SW_ENM_06_06"
        project = "CODE_SW_ENM-6.1"
        ihm = StubIHM()
        self.logSynergy(ihm)
        cid = BuildDoc(ihm,
                       session_started=True)
        cid.display_attr = ' -f "%release;%name;%version;%task;%change_request;%type;%project;%instance"'
        cid.object_released = 0
        cid.object_integrate = 0
        cid.tbl_sw_outputs = []
        cid.tableau_src = [['AplActuation_ContactorAtrc1.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_ContactorAtrc2.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_ContactorBc1.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplActuation_ContactorBc2.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_ContactorBooc.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplActuation_ContactorCabc1.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplActuation_ContactorCabc2.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplActuation_ContactorGalc1.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplActuation_ContactorGalc2.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplActuation_ContactorGpulc.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_ContactorLaltc1.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplActuation_ContactorRaltc1.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplActuation_ContactorShp.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_ContactorTc1.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplActuation_ContactorTc2.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplActuation_ContactorTrc1.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplActuation_ContactorTrc2.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplActuation_DsoAftWaterHeaterAuthorised.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplActuation_DsoApuEcuHppRelayCmd.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_DsoBatHeaterRelay2.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_DsoBatHeaterTruFanPower.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_DsoBatTruLt.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_DsoCabGalLt.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_DsoCabcShed.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_DsoCabinAcMasterGalleyMaster.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_DsoCabinGalleyMaster.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_DsoCabinMasterOn.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_DsoEppLt.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_DsoEssTruStatus.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_DsoFanPowerPpdb.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_DsoFwdWaterHeaterAuthorised.c', '3.1', 'csrc', '2', 'SW_ENM/03', ''], ['AplActuation_DsoGalleyMasterOn.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_DsoGpuConnectionStatus.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_DsoMasterShedOffLt.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplActuation_DsoShedEngFail.c', '5.1', 'csrc', '2', 'SW_ENM/05', ''], ['AplActuation_DsoShedGeneratorFail.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_DsoShedStart.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_DsoTcReset.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplActuation_DsoTrcCmd.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_DsoXaltc1HesTruCurrent.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_Initialize.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_Less.c', '5.1', 'csrc', '2', 'SW_ENM/05', ''], ['AplActuation_Lness.c', '5.1', 'csrc', '2', 'SW_ENM/05', ''], ['AplActuation_Manage.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplActuation_Private.h', '1.0', 'incl', '3', 'SW_ENM/01', ''], ['AplActuation_Public.h', '1.0', 'incl', '3', 'SW_ENM/01', ''], ['AplActuation_RefreshDsoSpare.c', '5.1', 'csrc', '2', 'SW_ENM/05', ''], ['AplActuation_Ress.c', '5.1', 'csrc', '2', 'SW_ENM/05', ''], ['AplActuation_Rness.c', '5.1', 'csrc', '2', 'SW_ENM/05', ''], ['AplScom_ComputeMsg0.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg1.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg2.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg3.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg4.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplScom_ComputeMsg5.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg6.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplScom_ComputeMsg7.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg8.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg9.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg10.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg11.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg12.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg13.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg14.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg15.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg16.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplScom_ComputeMsg17.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg18.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg19.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplScom_ComputeMsg20.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg21.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg22.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg23.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg24.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg25.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg26.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg27.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg28.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg29.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg30.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg31.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg32.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg33.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg34.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg35.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg36.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg37.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg38.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg39.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg40.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg41.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg42.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg43.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg44.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplScom_ComputeMsg45.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg46.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg47.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplScom_ComputeMsg48.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg49.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg50.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg51.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg52.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg53.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg54.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg55.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg56.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg57.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg58.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg59.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg60.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg61.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg62.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg63.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg64.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg65.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg66.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg67.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg68.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg69.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg70.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg71.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg72.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg73.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg74.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg75.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg76.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg77.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg78.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg79.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg80.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg81.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg82.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg83.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg84.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg85.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg86.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg87.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg88.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg89.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg90.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg91.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg92.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg93.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg94.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg95.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg96.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg97.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg98.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg99.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg100.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg101.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg102.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg103.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg104.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg105.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg106.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg107.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplScom_ComputeMsg108.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplScom_ComputeMsg109.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplScom_ComputeMsg110.c', '5.1', 'csrc', '2', 'SW_ENM/05', ''], ['AplScom_ComputeMsg111.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg112.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg113.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg114.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg115.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg116.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg117.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplScom_ComputeMsg118.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplScom_ComputeMsg119.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg120.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg121.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg122.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg123.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg124.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg125.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg126.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg127.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg128.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg129.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg130.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg131.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg132.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg133.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg134.c', '1.1', 'csrc', '2', 'SW_ENM/03', ''], ['AplScom_ComputeMsg135.c', '1.1', 'csrc', '2', 'SW_ENM/03', ''], ['AplScom_ComputeMsg136.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ComputeMsg137.c', '3.0', 'csrc', '1', 'SW_ENM/03', ''], ['AplScom_ComputeMsg138.c', '3.0', 'csrc', '1', 'SW_ENM/03', ''], ['AplScom_Initialize.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_ManageActivity.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplScom_Private.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_Private.h', '3.2', 'incl', '2', 'SW_ENM/03', ''], ['AplScom_Public.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplScom_Public.h', '1.0', 'incl', '2', 'SW_ENM/01', ''], ['AplSwpr_AliasBatCurrent.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_AliasBatTruHes1Ch1Current.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_AliasBatTruHes1Ch1RefEss.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_AliasBatTruHes1Ch1RefNess.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_AliasBatTruHes1Ch1ValidityEss.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_AliasBatTruHes1Ch1ValidityNess.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_AliasBatTruHes1Ch2Current.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_AliasBatTruHes1Ch2RefEss.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_AliasBatTruHes1Ch2RefNess.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_AliasBatTruHes1Ch2ValidityEss.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_AliasBatTruHes1Ch2ValidityNess.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_AliasCabcxAutoShedLness.c', '5.1', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_AliasCabcxAutoShedRness.c', '5.1', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_AliasCabcxShedLness.c', '5.1', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_AliasCabcxShedRness.c', '5.1', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_AliasComputeGpuPhaseOrder.c', '5.0', 'csrc', '1', 'SW_ENM/05', ''], ['AplSwpr_AliasCt3Sum.c', '3.0', 'csrc', '1', 'SW_ENM/03', ''], ['AplSwpr_AliasFuncTruFanFailure.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_AliasGpuAuto.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_AliasGpuFault.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_AliasGpuPower.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_AliasGpuPowerReady.c', '1.1', 'csrc', '2', 'SW_ENM/02', ''], ['AplSwpr_AliasHesTruCh2Current.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_AliasTcOvlUv.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_AliasTruCurrent.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_AliasTruHighCurrent.c', '5.1', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_AliasXaltc1HighCurrent.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_Initialize.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_Private.h', '5.0', 'incl', '2', 'SW_ENM/05', ''], ['AplSwpr_ProtectionAtrc.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionAtrcDriverFail.c', '1.1', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_ProtectionAtrcOverload.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_ProtectionAtrcReset.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionBat.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionBatDeepDischarge.c', '1.1', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_ProtectionBatDriverFail.c', '1.1', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_ProtectionBatOverload.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionBatReset.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionBatReverse.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_ProtectionBooc.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionBoocDriverFail.c', '1.1', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_ProtectionBoocOverload.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_ProtectionBoocReset.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionBoocUndervoltage.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_ProtectionCabcDriverFail.c', '1.1', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_ProtectionCabcOverload.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_ProtectionCabcReset.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_ProtectionGalc.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionGalcDriverFail.c', '1.1', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_ProtectionGalcOverload.c', '5.1', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_ProtectionGalcReset.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionGalcShedNess.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionGalcUnbalanced.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionGalcUndervoltage.c', '5.1', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_ProtectionGpu.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionGpuDriverFail.c', '1.1', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_ProtectionGpuFrequency.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_ProtectionGpuOverload.c', '4.0', 'csrc', '2', 'SW_ENM/04', ''], ['AplSwpr_ProtectionGpuOvervoltage.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionGpuPhaseOrder.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_ProtectionGpuReset.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_ProtectionGpuUndervoltage.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_ProtectionShp.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionShpDriverFail.c', '1.1', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_ProtectionShpOverload.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_ProtectionShpReset.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionTc.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionTcDriverFail.c', '1.1', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_ProtectionTcOverload.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_ProtectionTcReset.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionTcUndervoltage.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_ProtectionTru.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionTruDriverFail.c', '1.1', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_ProtectionTruOverRipple.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_ProtectionTruOverload.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_ProtectionTruOvlInProgress.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_ProtectionTruReset.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionTruReverse.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_ProtectionTruUndervoltage.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['AplSwpr_ProtectionXaltc1.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_ProtectionXaltc1DriverFail.c', '1.1', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_ProtectionXaltc1Overload.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_ProtectionXaltc1Reset.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_Public.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_Public.h', '5.0', 'incl', '2', 'SW_ENM/05', ''], ['AplSwpr_SwitchBat.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_SwitchCabin.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['AplSwpr_SwitchCabinMaster.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_SwitchGalley.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['AplSwpr_SwitchTru.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpArx_GetFrameData.c', '1.1', 'csrc', '2', 'SW_ENM/02', ''], ['CmpArx_InitializeConf.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['CmpArx_Public.h', '1.1', 'incl', '2', 'SW_ENM/02', ''], ['CmpArx_SendReadCommand.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpArx_WaitTransfert.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpAsi_Initialize.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CmpAsi_Public.h', '1.0', 'incl', '3', 'SW_ENM/01', ''], ['CmpAsi_Refresh.c', '5.1', 'csrc', '3', 'SW_ENM/05', ''], ['CmpCaim_ForceStartupRead.c', '1.1', 'csrc', '2', 'SW_ENM/02', ''], ['CmpCaim_ForceStartupWrite.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpCaim_Initialize.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpCaim_Private.h', '1.0', 'incl', '2', 'SW_ENM/01', ''], ['CmpCaim_Public.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpCaim_Public.h', '1.0', 'incl', '2', 'SW_ENM/01', ''], ['CmpCaim_ReadDataArinc.c', '1.1', 'csrc', '2', 'SW_ENM/02', ''], ['CmpCaim_ReadDataIOEx.c', '1.1', 'csrc', '2', 'SW_ENM/02', ''], ['CmpCaim_Refresh.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpCtc_GetHoPuLevel.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpCtc_Initialize.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpCtc_ManageActivity.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpCtc_Private.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpCtc_Private.h', '1.0', 'incl', '2', 'SW_ENM/01', ''], ['CmpCtc_Public.h', '1.0', 'incl', '2', 'SW_ENM/01', ''], ['CmpCtc_RequestComand.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpDsi_GetBoardDsi.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpDsi_GetGalcDistoDsi.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpDsi_GetUcDsi.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpDsi_Initialize.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['CmpDsi_Private.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['CmpDsi_Private.h', '1.0', 'incl', '5', 'SW_ENM/01', ''], ['CmpDsi_Public.c', '1.0', 'csrc', '6', 'SW_ENM/01', ''], ['CmpDsi_Public.h', '1.0', 'incl', '5', 'SW_ENM/01', ''], ['CmpIoex_ForceReadCmd.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpIoex_ForceReadData.c', '1.1', 'csrc', '2', 'SW_ENM/02', ''], ['CmpIoex_ForceWriteCmd.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpIoex_GetValueToRead.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpIoex_InitConf.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpIoex_Initialize.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CmpIoex_Private.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CmpIoex_Private.h', '1.0', 'incl', '3', 'SW_ENM/01', ''], ['CmpIoex_Public.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpIoex_Public.h', '3.0', 'incl', '3', 'SW_ENM/03', ''], ['CmpIoex_ReadData.c', '1.1', 'csrc', '2', 'SW_ENM/02', ''], ['CmpIoex_ReconfIoex.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpIoex_SendCmdRead.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpIoex_SendCmdWrite.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpIoex_TransformToFunctional.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['CmpIoex_TransformToLogical.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpIoex_WaitTransfert.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpLed_Control.c', '5.0', 'csrc', '3', 'SW_ENM/05', ''], ['CmpLed_Initialize.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CmpLed_ManageActivity.c', '1.1', 'csrc', '2', 'SW_ENM/02', ''], ['CmpLed_Private.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CmpLed_Private.h', '1.0', 'incl', '3', 'SW_ENM/01', ''], ['CmpLed_Public.h', '1.0', 'incl', '3', 'SW_ENM/01', ''], ['CmpMemory_Public.c', '3.0', 'csrc', '1', 'SW_ENM/03', ''], ['CmpMemory_Public.h', '3.1', 'incl', '2', 'SW_ENM/03', ''], ['CmpMemory_TestRam.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpMemory_TestRom.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['CmpMux_Initialize.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CmpMux_Private.h', '1.0', 'incl', '3', 'SW_ENM/01', ''], ['CmpMux_Public.h', '1.0', 'incl', '4', 'SW_ENM/01', ''], ['CmpMux_ReleaseAll.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpMux_SelectItem.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['CmpPts_Initialize.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['CmpPts_ManageActivity.c', '5.1', 'csrc', '3', 'SW_ENM/05', ''], ['CmpPts_Private.h', '1.0', 'incl', '4', 'SW_ENM/01', ''], ['CmpPts_Public.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['CmpPts_Public.h', '1.0', 'incl', '4', 'SW_ENM/01', ''], ['CmpWdog_Initialize.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CmpWdog_ManageActivity.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CmpWdog_ManageCheckpoint.c', '5.0', 'csrc', '3', 'SW_ENM/05', ''], ['CmpWdog_ManualRefresh.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CmpWdog_PerformSelftest.c', '5.0', 'csrc', '3', 'SW_ENM/05', ''], ['CmpWdog_Private.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['CmpWdog_Private.h', '1.0', 'incl', '4', 'SW_ENM/01', ''], ['CmpWdog_Public.h', '1.0', 'incl', '4', 'SW_ENM/01', ''], ['CmpWdog_SetMode.c', '5.0', 'csrc', '3', 'SW_ENM/05', ''], ['CmpWdog_WritePattern.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CtrlScheduler_EntryPoint.c', '5.0', 'csrc', '4', 'SW_ENM/05', ''], ['CtrlScheduler_IdleTask.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CtrlScheduler_Initialize.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CtrlScheduler_IsrAddressError.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CtrlScheduler_IsrCriticalException.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CtrlScheduler_IsrDmaError.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CtrlScheduler_IsrMathError.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CtrlScheduler_IsrOscillatorFail.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CtrlScheduler_IsrStackError.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CtrlScheduler_IsrTimer8.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CtrlScheduler_IsrTimer9.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CtrlScheduler_Main.c', '5.1', 'csrc', '7', 'SW_ENM/05', ''], ['CtrlScheduler_Private.c', '1.0', 'csrc', '7', 'SW_ENM/01', ''], ['CtrlScheduler_Private.h', '1.0', 'incl', '7', 'SW_ENM/01', ''], ['CtrlScheduler_Shutdown.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CtrlScheduler_Start.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['CtrlScheduler_TaskManager.c', '5.0', 'csrc', '3', 'SW_ENM/05', ''], ['DplAcq_ComputeAlias28vBatTruMinEss.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAlias28vBatTruMinNess.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAlias28vPresenceMainNess.c', '3.0', 'csrc', '1', 'SW_ENM/03', ''], ['DplAcq_ComputeAliasAcWow.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasAlt115vacNominalEss.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasArincRxFail.c', '5.0', 'csrc', '1', 'SW_ENM/05', ''], ['DplAcq_ComputeAliasBatTruTemp.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasBatTruTempAValidity.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasBatTruTempBValidity.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasBatTruValidity.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasBatType.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasCabcShpHes2Ch1Current.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasCabcShpHes2Ch1Ref.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasCabcShpHes2Ch1ValidityLness.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasCabcShpHes2Ch1ValidityRess.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasCabcShpHes2Ch1ValidityRness.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['DplAcq_ComputeAliasCtAtrcMax.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasCtGalcMax.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasCtGpuMax.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasCtXaltc1Max.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasDcAreaTempValidity.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasEng1Off.c', '5.0', 'csrc', '1', 'SW_ENM/05', ''], ['DplAcq_ComputeAliasEng2Off.c', '5.0', 'csrc', '1', 'SW_ENM/05', ''], ['DplAcq_ComputeAliasFlight.c', '5.0', 'csrc', '1', 'SW_ENM/05', ''], ['DplAcq_ComputeAliasGpuAlt115vacPresence.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasGpuMax.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasGpuMin.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasGpuPresence.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasMain115Min.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasMain115vacNominal.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasMain115vacPresence.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasOppCabinMasterSwRness.c', '3.0', 'csrc', '1', 'SW_ENM/03', ''], ['DplAcq_ComputeAliasPcbOverTemp.c', '3.0', 'csrc', '1', 'SW_ENM/03', ''], ['DplAcq_ComputeAliasPcbTemp.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasPcbTempAValidity.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasPcbTempBValidity.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ComputeAliasStbyTruFanFail.c', '5.0', 'csrc', '1', 'SW_ENM/05', ''], ['DplAcq_ComputeAliasStbyTruTemp.c', '5.0', 'csrc', '1', 'SW_ENM/05', ''], ['DplAcq_ComputeAliasTakeOff.c', '5.0', 'csrc', '1', 'SW_ENM/05', ''], ['DplAcq_ComputeUcAndBoardType.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ForceStartupRead.c', '1.1', 'csrc', '2', 'SW_ENM/02', ''], ['DplAcq_ForceStartupWrite.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_GetBoardType.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_GetPcbTempSensorsValue.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_GetUcAndBoardDsi.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_Initialize.c', '5.1', 'csrc', '2', 'SW_ENM/05', ''], ['DplAcq_InitializeDsi.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplAcq_ManageActivity.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['DplAcq_ManageAlias.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['DplAcq_ManageArinc.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['DplAcq_ManageAsi.c', '1.2', 'csrc', '2', 'SW_ENM/02', ''], ['DplAcq_ManageDsi.c', '1.1', 'csrc', '2', 'SW_ENM/02', ''], ['DplAcq_ManageIoex.c', '1.1', 'csrc', '2', 'SW_ENM/02', ''], ['DplAcq_Private.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['DplAcq_Private.h', '5.0', 'incl', '2', 'SW_ENM/05', ''], ['DplAcq_Public.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['DplAcq_Public.h', '5.0', 'incl', '2', 'SW_ENM/05', ''], ['DplCmd_Initialize.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['DplCmd_PhysicalDataConversion.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplCmd_Private.h', '1.0', 'incl', '4', 'SW_ENM/01', ''], ['DplCmd_Public.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['DplCmd_Public.h', '1.0', 'incl', '4', 'SW_ENM/01', ''], ['DplCmd_RefreshActivity.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplCmd_RefreshDutyCycle.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplIc_AliasAltStatusFailure.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['DplIc_AliasGen.c', '3.1', 'csrc', '2', 'SW_ENM/03', ''], ['DplIc_AliasGenOvlFailure.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['DplIc_AliasNessMain115vacFault.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplIc_AliasNessMain115vacOvl.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplIc_AliasStbyTruTieAlt.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['DplIc_AliasTru.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['DplIc_AliasTruOvlFailure.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['DplIc_AliasTsbc.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['DplIc_AliasTsbcOvlFailure.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['DplIc_ComputePeriode.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplIc_Initialize.c', '5.1', 'csrc', '2', 'SW_ENM/05', ''], ['DplIc_ManageInternalAlias.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['DplIc_ManagePhaseInit.c', '5.0', 'csrc', '1', 'SW_ENM/05', ''], ['DplIc_Private.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplIc_Private.h', '5.0', 'incl', '2', 'SW_ENM/05', ''], ['DplIc_Public.c', '3.0', 'csrc', '2', 'SW_ENM/03', ''], ['DplIc_Public.h', '5.1', 'incl', '2', 'SW_ENM/05', ''], ['DplIc_RefreshAllFreq.c', '3.1', 'csrc', '2', 'SW_ENM/03', ''], ['DplIc_RefreshAllTon.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplIc_RefreshFreq.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['DplIc_RefreshPhase.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['DplIc_RefreshTonConsecutive.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['DplPnsn_IsHwSwCompatible.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['DplPnsn_Public.c', '5.0', 'csrc', '1', 'SW_ENM/05', ''], ['DplPnsn_Public.h', '1.0', 'incl', '1', 'SW_ENM/01', ''], ['DplScom_Encode.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['DplScom_Initialize.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplScom_Private.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DplScom_Private.h', '3.1', 'incl', '2', 'SW_ENM/03', ''], ['DplScom_Public.c', '3.1', 'csrc', '2', 'SW_ENM/03', ''], ['DplScom_Public.h', '5.0', 'incl', '2', 'SW_ENM/05', ''], ['DplScom_SendData.c', '1.1', 'csrc', '2', 'SW_ENM/02', ''], ['DrvAdc_Initialize.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['DrvAdc_Public.h', '1.0', 'incl', '5', 'SW_ENM/01', ''], ['DrvDma_ClearFlag.c', '5.0', 'csrc', '8', 'SW_ENM/05', ''], ['DrvDma_DisableChannel.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['DrvDma_EnableChannel.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['DrvDma_EnableChannelWithForce.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['DrvDma_GetCsSpi2State.c', '1.0', 'csrc', '1', 'SW_ENM/02', ''], ['DrvDma_GetFlag.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['DrvDma_Initialize.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['DrvDma_InitializeById.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['DrvDma_Private.c', '1.0', 'csrc', '9', 'SW_ENM/01', ''], ['DrvDma_Private.h', '1.1', 'incl', '9', 'SW_ENM/02', ''], ['DrvDma_Public.c', '1.0', 'csrc', '9', 'SW_ENM/01', ''], ['DrvDma_Public.h', '1.2', 'incl', '9', 'SW_ENM/02', ''], ['DrvDma_SetCounter.c', '1.0', 'csrc', '8', 'SW_ENM/01', ''], ['DrvDma_Spi1GetData.c', '3.0', 'csrc', '3', 'SW_ENM/03', ''], ['DrvDma_Spi1GetDataWithForce.c', '1.1', 'csrc', '3', 'SW_ENM/02', ''], ['DrvDma_Spi1SendCmd.c', '1.1', 'csrc', '3', 'SW_ENM/02', ''], ['DrvDma_Spi1SendCmdAndWait.c', '1.1', 'csrc', '3', 'SW_ENM/02', ''], ['DrvDma_Spi2StartRequest.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['DrvGpio_Initialize.c', '5.0', 'csrc', '5', 'SW_ENM/05', ''], ['DrvGpio_InitializeById.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DrvGpio_Private.c', '5.0', 'csrc', '6', 'SW_ENM/05', ''], ['DrvGpio_Private.h', '1.0', 'incl', '8', 'SW_ENM/01', ''], ['DrvGpio_Public.h', '5.0', 'incl', '9', 'SW_ENM/05', ''], ['DrvGpio_ReadInput.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DrvGpio_WriteOutput.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DrvI2c_GetBusStatus.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['DrvI2c_GetRequestStatus.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['DrvI2c_Initialize.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['DrvI2c_MasterWrite.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['DrvI2c_Private.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['DrvI2c_Private.h', '1.0', 'incl', '4', 'SW_ENM/01', ''], ['DrvI2c_Public.h', '1.0', 'incl', '4', 'SW_ENM/01', ''], ['DrvI2c_RefreshActivity.c', '5.0', 'csrc', '3', 'SW_ENM/05', ''], ['DrvI2c_SendRequest.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['DrvIc_AcquireById.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['DrvIc_ClearFlagById.c', '5.0', 'csrc', '3', 'SW_ENM/05', ''], ['DrvIc_DisableModuleById.c', '3.0', 'csrc', '1', 'SW_ENM/03', ''], ['DrvIc_GetBufferEmptyFlagById.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['DrvIc_GetBufferValueById.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DrvIc_GetFlagById.c', '5.0', 'csrc', '3', 'SW_ENM/05', ''], ['DrvIc_GetTimerPeriod.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['DrvIc_Initialize.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['DrvIc_InitializeById.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['DrvIc_Private.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['DrvIc_Private.h', '1.0', 'incl', '4', 'SW_ENM/01', ''], ['DrvIc_Public.h', '3.0', 'incl', '4', 'SW_ENM/03', ''], ['DrvIc_ReconfAndStartById.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['DrvOc_Initialize.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DrvOc_Private.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DrvOc_Private.h', '1.0', 'incl', '2', 'SW_ENM/01', ''], ['DrvOc_Public.h', '5.0', 'incl', '2', 'SW_ENM/05', ''], ['DrvOc_SetDutyCycle.c', '5.0', 'csrc', '2', 'SW_ENM/05', ''], ['DrvOscillator_Initialize.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['DrvOscillator_Public.h', '1.0', 'incl', '3', 'SW_ENM/01', ''], ['DrvSpi_ClearFlag.c', '5.0', 'csrc', '7', 'SW_ENM/05', ''], ['DrvSpi_DisableChannel.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DrvSpi_EnableChannel.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['DrvSpi_GetCsSpi2State.c', '1.0', 'csrc', '1', 'SW_ENM/02', ''], ['DrvSpi_Initialize.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['DrvSpi_Private.c', '1.0', 'csrc', '8', 'SW_ENM/01', ''], ['DrvSpi_Private.h', '1.0', 'incl', '8', 'SW_ENM/01', ''], ['DrvSpi_Public.h', '1.1', 'incl', '8', 'SW_ENM/02', ''], ['DrvTimer_GetCurrentValue.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['DrvTimer_GetPeriod.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['DrvTimer_Initialize.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['DrvTimer_InitializeById.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['DrvTimer_Private.c', '1.0', 'csrc', '5', 'SW_ENM/01', ''], ['DrvTimer_Private.h', '1.0', 'incl', '9', 'SW_ENM/01', ''], ['DrvTimer_Public.h', '1.0', 'incl', '9', 'SW_ENM/01', ''], ['DrvTimer_Start.c', '1.0', 'csrc', '5', 'SW_ENM/01', ''], ['McuAdc_Public.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['McuAdc_Public.h', '1.0', 'incl', '4', 'SW_ENM/01', ''], ['McuCpu_Public.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['McuCpu_Public.h', '1.0', 'incl', '9', 'SW_ENM/01', ''], ['McuDma_Public.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['McuDma_Public.h', '1.0', 'incl', '9', 'SW_ENM/01', ''], ['McuGpio_Public.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['McuGpio_Public.h', '1.0', 'incl', '9', 'SW_ENM/01', ''], ['McuI2c_Public.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['McuI2c_Public.h', '1.0', 'incl', '3', 'SW_ENM/01', ''], ['McuIc_Public.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['McuIc_Public.h', '1.0', 'incl', '3', 'SW_ENM/01', ''], ['McuInt_Public.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['McuInt_Public.h', '1.0', 'incl', '2', 'SW_ENM/01', ''], ['McuMemory_Public.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['McuMemory_Public.h', '1.0', 'incl', '9', 'SW_ENM/01', ''], ['McuOc_Public.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['McuOc_Public.h', '1.0', 'incl', '2', 'SW_ENM/01', ''], ['McuSpi_Public.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['McuSpi_Public.h', '1.0', 'incl', '9', 'SW_ENM/01', ''], ['McuTmr_Public.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['McuTmr_Public.h', '1.0', 'incl', '2', 'SW_ENM/01', ''], ['Mcu_Registers.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['SrvCpuld_GetCpuLoad.c', '3.0', 'csrc', '4', 'SW_ENM/03', ''], ['SrvCpuld_Initialize.c', '3.0', 'csrc', '4', 'SW_ENM/03', ''], ['SrvCpuld_Measure.c', '3.0', 'csrc', '4', 'SW_ENM/03', ''], ['SrvCpuld_Private.c', '3.0', 'csrc', '4', 'SW_ENM/03', ''], ['SrvCpuld_Private.h', '3.0', 'incl', '4', 'SW_ENM/03', ''], ['SrvCpuld_Public.h', '3.0', 'incl', '4', 'SW_ENM/03', ''], ['SrvCpuld_TopSync.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['SrvError_ExceptionRaise.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['SrvError_Initialize.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['SrvError_IsExceptionOccurs.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['SrvError_Private.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['SrvError_Private.h', '1.0', 'incl', '4', 'SW_ENM/01', ''], ['SrvError_Public.h', '1.0', 'incl', '4', 'SW_ENM/01', ''], ['SrvError_SetOperationalMode.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['SrvMath_DivideSlBySw.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['SrvMath_DivideUlByUw.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['SrvMath_DivideUlByUwRetUl.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['SrvMath_MaxOfUword.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['SrvMath_MaxOfWord.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['SrvMath_MinOfUword.c', '1.0', 'csrc', '3', 'SW_ENM/01', ''], ['SrvMath_Public.h', '1.0', 'incl', '4', 'SW_ENM/01', ''], ['SrvMutex_Public.h', '1.0', 'incl', '4', 'SW_ENM/01', ''], ['SrvMutex_Unlock.c', '1.0', 'csrc', '4', 'SW_ENM/01', ''], ['SrvSeu_CheckSingleWordVariable.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['SrvSeu_CheckXWordVariable.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['SrvSeu_Initialize.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['SrvSeu_Private.h', '1.0', 'incl', '2', 'SW_ENM/01', ''], ['SrvSeu_Public.h', '1.0', 'incl', '2', 'SW_ENM/01', ''], ['SrvSeu_UpdateSingleWordVariable.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['SrvSeu_UpdateXWordVariable.c', '1.0', 'csrc', '2', 'SW_ENM/01', ''], ['Standard.h', '3.0', 'incl', '10', 'SW_ENM/03', '']]
        #cid.tableau_items = []
        cid.tableau_items = [[' SMS ESSNESS Supplier Specific Component Specification (SSCS)', 'ET2788-S', 'SSCS_ESSNESS_ET2788_S.pdf', '6', 'pdf', '4', 'BOARD_ESSNESS/01', ''],
               [' SMS ESSNESS FUNC HSID (HSID)', 'ET2717-E', 'SMS_ESNESS_FUNC_HSID_ET2717_E.docx', '1D10', 'doc', '1', 'BOARD_ESSNESS/01', '916,926'],
               [' SMS EPDS ESSNESS SPI Annex (ICD Data)', 'ET3547-S', 'SMS_EPDS_ESSNESS_SPI_Annex_ET3547_S.xls', '4D3', 'xls', '1', 'BOARD_ESSNESS/01', ''],
               [' SMS ESSNESS Supplier Specific Component Specification (SSCS)', 'ET2788-S', 'SSCS_ESSNESS_ET2788_S.doc', '8', 'doc', '2', 'BOARD_ESSNESS/01', ''],
               [' SMS EPDS SPI ICD (ICD Protocol)', 'ET3252-S', 'SMS_EPDS_SPI_ICD_ET3532_S.docx', '3', 'doc', '4', 'SMS_EPDS/01', ''],
               [' SMS EPDS SPI ICD (ICD Protocol)', 'ET3252-S', 'SMS_EPDS_SPI_ICD_ET3532_S.pdf', '3', 'pdf', '4', 'SMS_EPDS/01', ''],
               [' Voltage Detector', 'SLVS392A', 'VoltageDetector_tps3803.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
               ['Digital temperature sensor and thermal watchdog', 'LM75B5', 'TempSensor_LM75B.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
               ['16-Bit I/O Expander with Serial Interface', 'DS21952B', 'IOexpander_MCP23S17.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
               ['3-Line to 8-Line Decoders/Demultiplexers', 'SCLS171E', 'Decoder_sn54hct138.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
               ['High-Speed CMOS Logic Decade Counter/Divider with 10 Decoded Outputs', 'SCHS200D', 'Counter_cd74hc4017.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
               ['16-bit Digital Signal Controllers (up to 256 KB Flash and 30 KB SRAM) with Advanced Analog', '70593D', '70593D_General.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
               ['Section 20. Data Converter Interface', '70288C', '70288C_DCI.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
               ['Section 13. Output Compare', '70209A', '70209A_OutputCompare.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
               ['Section 18. Serial Peripheral Interface', '70206D', '70206D_SPI.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
               ['Section 11. Timers', '70205D', '70205D_Timers.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
               ['Section 2. CPU', '70204C', '70204C_CPU.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
               ['Section 4. Program Memory', '70203D', '70203D_ProgramMemory.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
               ['Section 3. Data Memory ', '70202C', '70202C_DataMemory.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
               ['Section 12. Input Capture', '70198D', '70198D_InputCapture.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
               ['Section 19. Inter-Integrated Circuit', '70195E', '70195E_I2C.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
               ['Section 25. Device Configuration', '70194F', '70194F_DeviceConfiguration.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
               ['Section 10. I/O Ports', '70193D', '70193D_IOport.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
               ['Section 8. Reset', '70192C', '70192C_Reset.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
               ['Section 5. Flash Programming', '70191E', '70191E_FlashProg.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
               ['Section 17. UART', '70188E', '70188E_UART.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
               ['Section 7. Oscillator', '70186E', '70186E_Oscillator.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
               ['Section 21. ECAN', '70185C', '70185C_ECAN.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
               ['Section 6. Interrupts', '70184C', '70184C_Interrupt.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
               ['Section 16. Analog-to-Digital Converter (ADC)', '70183D', '70183D_ADC.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
               ['Section 22. Direct Memory Access (DMA)', '70182C', '70182C_DMA.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
               ['dsPIC33FJ256GPX06A/X08A/X10A Family Silicon Errata and Data Sheet Clarification', '80483G', '80483G_Errata.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
               [' MPLAB\xae C COMPILER FOR PIC24 MCUs AND dsPIC\xae DSCs USER\x92S GUIDE', '51284H', '51284H_MPLAB_Compiler.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
               [' MPLAB\xae ASSEMBLER LINKER AND UTILITIES FOR PIC24 MCUs AND dsPIC\xae DSCs USER.S GUIDE', '51317G', '51317G_Link_Asm.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
               ["16-bit MCU and DSC Programmer's Reference Manual ", '70157F', '70157F_Programmer_ref_guide.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
               ['ARINC 429 Receiver with SPI Interface', 'DS3588G', 'A429_RX_hi3588.pdf', '1.0', 'pdf', '1', 'SW_ENM/01', ''],
               ['CCB minutes', '', 'CCB_Minutes_SW_ENM_001.docx', '1.0', 'doc', '1', 'SW_ENM/02', ''],
               ['CCB minutes', '', 'CCB_Minutes_SW_ENM_002.docx', '1.0', 'doc', '1', 'SW_ENM/02', ''],
               ['CCB minutes', '', 'CCB_Minutes_SW_ENM_003.docx', '1.0', 'doc', '1', 'SW_ENM/02', ''],
               ['CCB minutes', '', 'CCB_Minutes_SW_ENM_004.docx', '1.0', 'doc', '1', 'SW_ENM/02', ''],
               ['CCB minutes', '', 'CCB_Minutes_SW_ENM_005.docx', '1.0', 'doc', '1', 'SW_ENM/02', ''],
               ['CCB minutes', '', 'CCB_Minutes_SW_ENM_006.docx', '3.0', 'doc', '1', 'SW_ENM/03', ''],
               ['CCB minutes', '', 'CCB_Minutes_SW_ENM_007.docx', '3.0', 'doc', '1', 'SW_ENM/03', ''],
               ['', '', 'Gen_ini_File_BProc.xlsm', '3.1', 'xls', '1', 'SW_ENM/03', ''],
               ['CCB minutes', '', 'CCB_Minutes_SW_ENM_008.docx', '3.0', 'doc', '1', 'SW_ENM/03', ''],
               ['CCB minutes', '', 'CCB_Minutes_SW_ENM_009.docx', '3.0', 'doc', '1', 'SW_ENM/03', ''],
               ['Comparator', '74HC_HCT85', 'Comparator_74HC_HCT85.pdf', '3.0', 'pdf', '1', 'SW_ENM/03', ''],
               ['Shift Register', '74HC_HCT4094', 'Shift_Register_74HC_HCT4094.pdf', '3.0', 'pdf', '1', 'SW_ENM/03', ''],
               ['CCB minutes', '', 'CCB_Minutes_SW_ENM_010.docx', '4.0', 'doc', '1', 'SW_ENM/04', ''],
               ['CCB minutes', '', 'CCB_Minutes_SW_ENM_011.docx', '5.0', 'doc', '1', 'SW_ENM/05', ''],
               ['', '', 'GenerationXml.xls', '5.1', 'xls', '1', 'SW_ENM/05', ''],
               ['', '', 'Asi_tables.xls', '5.0', 'xls', '1', 'SW_ENM/05', ''],
               ['', '', 'calcul_coefs.xls', '5.0', 'xls', '1', 'SW_ENM/05', ''],
               ['', '', 'PCB sensor.xlsx', '5.0', 'xls', '1', 'SW_ENM/05', ''],
               ['CCB minutes', '', 'CCB_Minutes_SW_ENM_012.docx', '5.0', 'doc', '1', 'SW_ENM/05', ''],
               ['Software Requirements Document', '', 'Tests_ECE3FA3380401_vs_SwRD_5_1.xls', '5.0', 'xls', '1', 'SW_ENM/05', ''],
               ['', '', 'Timings Verifications.xls', '5.0', 'xls', '1', 'SW_ENM/05', ''],
               ['Software Design Document', 'ET3136-S', 'SwDD_ENM_ET3136_S.docx', '5.0', 'doc', '1', 'SW_ENM/05', ''],
               ['Software High-Level Derived Requirement document', 'ET3196-S', 'SHLDR_ENM_ET3196_S.xls', '5.1', 'xls', '1', 'SW_ENM/05', ''],
               ['CCB minutes', '', 'CCB_Minutes_SW_ENM_013.docx', '5.0', 'doc', '1', 'SW_ENM/05', ''],
               [' Software Requirements Document', 'ET3135-S', 'SWRD_ENM_ET3135_S.pdf', '5.1', 'pdf', '1', 'SW_ENM/05', ''],
               [' Software Requirements Document', 'ET3135-S', 'SWRD_ENM_ET3135_S.doc', '6.2', 'doc', '1', 'SW_ENM/06', ''],
               ['EASA Certification Review Item', '', 'CRI_F_01_Appendix.pdf', '1', 'pdf', '1', 'SW_PLAN/01', ''],
               ['EASA Certification Review Item', '', 'CRI_F_04_Data_Buses.pdf', '1', 'pdf', '1', 'SW_PLAN/01', ''],
               ['EASA Certification Review Item', '', 'CRI_F_05_Aeronautical_data_bases.pdf', '1', 'pdf', '1', 'SW_PLAN/01', ''],
               [' DAL assignment document', 'GS3134', 'SMS_EPDS_DAL_GS3134.pdf', '3', 'pdf', '1', 'SW_PLAN/01', '182'],
               ['CCB minutes', '', 'CCB_Minutes_SW_PLAN_001.docx', '1.0', 'doc', '1', 'SW_PLAN/01', ''],
               ['', '', 'IP SW_3.pdf', '1', 'pdf', '1', 'SW_PLAN/01', ''],
               ['FAA Issue Paper', '', 'IP_SW_1.pdf', '1', 'pdf', '1', 'SW_PLAN/01', ''],
               ['FAA Issue Paper', '', 'IP_SW_2.pdf', '1', 'pdf', '1', 'SW_PLAN/01', ''],
               ['EASA Certification Review Item', '', 'CRI_F_01_Software_Aspects_of_Certification.pdf', '2', 'pdf', '1', 'SW_PLAN/01', ''],
               ['EASA Certification Review Item', '', 'CRI_F_03_Non_operational_embedded_Software.pdf', '2', 'pdf', '1', 'SW_PLAN/01', ''],
               ['CCB minutes', '', 'CCB_Minutes_SW_PLAN_002.docx', '1.0', 'doc', '1', 'SW_PLAN/01', ''],
               ['CCB minutes', '', 'CCB_Minutes_SW_PLAN_003.docx', '2.0', 'doc', '1', 'SW_PLAN/02', ''],
               ['CCB minutes', '', 'CCB_Minutes_SW_PLAN_PDS_SDS_001.docx', '1.0', 'doc', '1', 'SW_PLAN_PDS_SDS/01', ''],
               ['CCB minutes', '', 'CCB_Minutes_SW_PLAN_PDS_SDS_002.docx', '1.0', 'doc', '1', 'SW_PLAN_PDS_SDS/01', ''],
               ['CCB minutes', '', 'CCB_Minutes_SW_PLAN_PDS_SDS_003.docx', '2.0', 'doc', '1', 'SW_PLAN_PDS_SDS/02', '']]
        cid.list_type_src = ("csrc","asmsrc","incl","macro_c","library")
        cid.list_type_doc = ("doc","xls","pdf")
        project = "SW_ENM-6.4"
        # For CCB
        cid.target_release = "SW_ENM/06"
        cid._initTables()
        cid._getAllDocuments(release,
                             baseline,
                             project)
        print "tableau_items",cid.tableau_items
        #return
        synergy = Synergy(session_started=True,ihm=ihm)
        result = synergy.getFolderName("BIN",release=release,baseline=baseline,project=project)
        print "synergy.getFolderName",result
        project = "SW_ENM-6.4"
        cid._getAllSources(release,baseline,project)
        print "table_source",cid.tableau_src
        cid.tableau_prog = []
        cid.tbl_sw_eoc = []
        cid.list_type_prog = ("shsrc","makefile","executable","ascii")
        table_prog = cid._getAllProg(release,baseline,project)
        print "table_prog",table_prog
        table_data = cid.getSpecificData(release,
                                     baseline,
                                     project)
        print "table_data",table_data
        project = "CODE_SW_ENM-6.1"
        table_build = cid.getSpecificBuild(release,
                                     baseline,
                                     project)
        print "table_build",table_build
    def testGetPR(self):
        return
        print "TEST testGetPR"
        ihm = StubIHM()
        self.logSynergy(ihm)
        dico_parameters ={"system":"Dassault F5X",
                          "item":"ESSNESS",
                          "component":"ENM",
                          "detect":"",
                          "implemented":"SW_ENM/05",
                          "project":"SW_ENM-5.2",
                          "release":"SW_ENM/05",
                          "baseline":"SW_ENM_05_01",
                          "reference":"CCB_SW_ENM_001",
                          "issue":"1.0",
                          "author":"Olivier Appere",
                          "login":"appereo1",
                          "cr_type":"SACR"}
        ihm.setParameters(dico_parameters)
        ccb = CCB(ihm)
        dico_tableau_pr = {"all":[],
                           "open":[],
                           "closed":[]}
        # log Synergy
        thread = ThreadQuery(master=ihm)
        ccb.getPR(dico_tableau_pr,
                   dico_parameters["detect"],
                   dico_parameters["implemented"],
                   dico_parameters["cr_type"],
                   True)
        print "ALL"
        for cr in dico_tableau_pr["all"]:
            print cr
        print "OPEN"
        for cr in dico_tableau_pr["open"]:
            print cr
        print "CLOSED"
        for cr in dico_tableau_pr["closed"]:
            print cr
    def test_getArticles(self):
        return
        ihm = StubIHM()
        self.logSynergy(ihm)
        #ihm.project_set_list=(("SW_ENM/06","",""),("SW_PLAN/02","",""))
        cid = BuildDoc(ihm,session_started=True)
        dico_parameters ={"system":"Dassault F5X",
                          "item":"ESSNESS",
                          "component":"ENM",
                          "detect":"",
                          "implemented":"SW_ENM/05",
                          "project":"",
                          "release":"SW_ENM/06",
                          "previous_bas":"SW_ENM_05_03",
                          "baseline":"",
                          "reference":"CCB_SW_ENM_001",
                          "issue":"1.0",
                          "author":"Olivier Appere",
                          "login":"appereo1",
                          "cr_type":"SW_ENM"}
        output = cid.getArticles((),
                                   dico_parameters["release"],
                                   dico_parameters["baseline"],
                                   dico_parameters["project"],
                                   source=False)
        print "OUTPUT",output
    def test_create_HCMR_Board(self):
        return
        ihm = StubIHM()
        ihm.project_set_list= [(u'BOARD_ESSNESS/01', u'BOARD_ESSNESS_01_08', u'BOARD_ESSNESS-1.7'),
                               (u'SW_ENM_DELIV/04', u'SW_ENM_DELIV_04_01', u'SW_ENM_DELIV-4.1'),
                               (u'HW_ESSNESS/01', u'HW_ESSNESS_01_01', u'HW_ESSNESS-1.1'),
                               (u'HW_PLAN_PDS_SDS/02', u'HW_PLAN_PDS_SDS_02_00', u'HW_PLAN_PDS_SDS-2.0')]
        ihm.cid_type = "CID"
        ihm.ccb_type = "SACR"
        dico_parameters ={"system":"Dassault F5X",
                          "item":"ESSNESS",
                          "component":"",
                          "detect":"",
                          "implemented":"",
                          "project":"",
                          "release":"",
                          "previous_bas":"",
                          "baseline":"",
                          "reference":"CCB_SW_ENM_001",
                          "issue":"1.0",
                          "author":"Olivier Appere",
                          "login":"appereo1",
                          "cr_type":"ESSNESS"}
        thread = self.logSynergy(ihm,
                                 system=dico_parameters["system"],
                                 item=dico_parameters["item"])
        thread._generateCID(release=dico_parameters["release"],
                     baseline=dico_parameters["baseline"],
                     project=dico_parameters["project"],
                     implemented=dico_parameters["implemented"],
                     item=dico_parameters["item"],
                     previous_baseline=dico_parameters["previous_bas"],
                     detect=dico_parameters["detect"],
                     cr_type=dico_parameters["cr_type"],
                     component=dico_parameters["component"])
    def test_CreateCID(self):
        return
        result = BuildDoc._getSwProg("Makefile")
        #print "Result:",result
        #return
        ihm = StubIHM()
        #ihm.project_set_list=(("SW_ENM/06","",""),("SW_PLAN/02","",""))
        #thread = ThreadQuery(master=ihm,
        #                     system="Dassault F5X")
        dico_parameters ={"system":"Dassault F5X",
                          "item":"ESSNESS",
                          "component":"ENM",
                          "detect":"",
                          "implemented":"SW_ENM/06",
                          "project":"SW_ENM-6.6",
                          "release":"SW_ENM/06",
                          "previous_bas":"SW_ENM_05_03",
                          "baseline":"",
                          "reference":"CCB_SW_ENM_001",
                          "issue":"1.0",
                          "author":"Olivier Appere",
                          "login":"appereo1",
                          "cr_type":"SW_ENM"}
        thread = self.logSynergy(ihm,
                                 system=dico_parameters["system"],
                                 item=dico_parameters["item"])
        thread._generateCID(release=dico_parameters["release"],
                     baseline=dico_parameters["baseline"],
                     project=dico_parameters["project"],
                     implemented=dico_parameters["implemented"],
                     item=dico_parameters["item"],
                     previous_baseline=dico_parameters["previous_bas"],
                     detect=dico_parameters["detect"],
                     cr_type=dico_parameters["cr_type"],
                     component=dico_parameters["component"])
    def testCreateCCB(self):
        spec_issue = "1.6 "
        spec_issue_regex = re.sub(r'([0-9]*)\.([0-9]*)',r'\1.\2',spec_issue)
        print "TEST",spec_issue_regex
        from tool import Tool
        text = Tool._createImpl("CR_implemented_for","SW_ENM/01,SW_PLAN/02")
        print "TEXT",text
        text = Tool._createImpl("CR_implemented_for","SW_ENM/01")
        print "TEXT",text
        return
        tool = Tool()
        name,mail,tel,service = tool.get_user_infos("appereo1")
        print "Name/Mail/Tel",name,mail,tel
        ihm = StubIHM()
        queue = Queue.Queue()
        thread = ThreadQuery(master=ihm,queue=queue)
        self.logSynergy(ihm)
        dico_parameters ={"system":"Dassault F5X",
                          "item":"ESSNESS",
                          "component":"ENM",
                          "detect":"",
                          "implemented":"SW_ENM/05",
                          "project":"SW_ENM-5.2",
                          "release":"SW_ENM/05",
                          "baseline":"SW_ENM_05_01",
                          "reference":"CCB_SW_ENM_001",
                          "issue":"1.0",
                          "author":"Olivier Appere",
                          "login":"appereo1",
                          "cr_type":"SW_ENM"}
        cr_with_parent = False
        cr_workflow = False
        ccb_type = "SCR"
        log_on = False
        list_cr_for_ccb = []
        status_list = False
        thread._generateCCB(dico_parameters,cr_with_parent,cr_workflow,ccb_type,log_on,list_cr_for_ccb,status_list)
    def testCreateCCB_PLD(self):
        return
        tool = Tool()
        ihm = StubIHM()
        queue = Queue.Queue()
        thread = ThreadQuery(master=ihm,queue=queue)
        self.logSynergy(ihm)
        dico_parameters ={"system":"Dassault F5X",
                          "item":"ESSNESS",
                          "component":"TIE",
                          "detect":"",
                          "implemented":"PLD_TIE/05",
                          "project":"",
                          "release":"",
                          "baseline":"",
                          "reference":"CCB_SW_ENM_001",
                          "issue":"1.0",
                          "author":"Olivier Appere",
                          "login":"appereo1",
                          "cr_type":"PLD_TIE"}
        cr_with_parent = False
        cr_workflow = False
        ccb_type = "PLDCR"
        log_on = False
        list_cr_for_ccb = []
        status_list = False
        thread._generateCCB(dico_parameters,
                            cr_with_parent,
                            cr_workflow,
                            ccb_type,
                            log_on,
                            list_cr_for_ccb,
                            status_list)
    def test_help(self):
        return
        fenetre = Tk()
        queue = Queue.Queue()
        # notebook
        #Pmw.initialise(fenetre)
        #fenetre.resizable(False, False)
        #notebook = Pmw.NoteBook(fenetre)
        #notebook.pack(fill='both', expand=1, padx=10, pady=10)
        docid.interface = docid.Gui(fenetre,queue)
        fenetre.destroy()
        docid.interface.help()
        #docid.interface.mainloop()
    def test_hyperlink(self):
        return
        fenetre = Tk()
        queue = Queue.Queue()
        # notebook
        Pmw.initialise(fenetre)
        #fenetre.resizable(False, False)
        notebook = Pmw.NoteBook(fenetre)
        notebook.pack(fill='both', expand=1, padx=10, pady=10)
        docid.interface = Gui(notebook,queue)
        notebook.tab('Output').focus_set()
        # Important pour que le notebook ai la taille du frame
        notebook.setnaturalsize()
        docid.interface.displayHyperlink("hlink1","TODO.txt")
        docid.interface.displayHyperlink("hlink2","TODO2.txt")
        docid.interface.mainloop()
    def test_getCR(self):
        return
        ihm = StubIHM()
        system = "Dassault F5X PDS"
        item = ""
        login = "appereo1"
        password = "jeudi2009"
        queue = Queue.Queue()
        thread = ThreadQuery("doc",master=ihm,queue=queue)
        line = "_TRANSITION_ Submitted to SCR_In_Analysis by Antoine Bottollier (bottola1) on 2014/11/06 16:25:50"
        transition,date = ThreadQuery.getTransition(line)
        print "getTransition",transition,date
        #exit(0)
        thread._startSession(system=system,
                             item=item,
                             database="db_sms_pds",
                             login=login,password=password)
        #Note: baseline is used only fo A/C standard
        thread._getCR(cr_type="SCR")
    def test_generateCCB(self):
        return
        tool = Tool()
        name,mail,tel,service = tool.get_user_infos("")
        ihm = StubIHM()
        system = "Dassault F5X PDS"
        item = ""
        login = "appereo1"
        password = "jeudi2009"
        queue = Queue.Queue()
        thread = ThreadQuery("doc",master=ihm,queue=queue)
        thread._startSession(system=system,
                             item=item,
                             database="db_sms_pds",
                             login=login,password=password)
        dico_parameters={"author":"",
                          "login":"",
                          "reference":"",
                          "issue":"",
                          "release":"",
                          "baseline":"",
                          "system":"",
                          "item":"",
                          "component":"SW_ENM",
                          "project":"",
                          "detect":"",
                          "implemented":"SW_ENM/06"}
        thread._generateCCB(dico_parameters)
    def test_ckeck_swrd_1(self):
        return
        # ENM
        req = CheckLLR(self.dirname_req,hlr_selected=True)
        req.openLog("SWRD_1")
        req.extract(self.dirname_req,type=["SWRD"])
        req.closeLog()
    def test_ckeck_swrd_2(self):
        return
        current_dir = os.getcwd()
        self.dirname_req = join(current_dir,"qualification/SET_F5X_WHCC/SWRD")
        req = CheckLLR(self.dirname_req,hlr_selected=True)
        req.openLog("SWRD_2")
        req.extract(self.dirname_req,type=["SWRD"])
        req.closeLog()
    def test_check_pld(self):
        return
        dirname_req = "C:/Documents and Settings/appereo1/Bureau/sqa/TIE/PLD/PLDRD"
        upper = CheckLLR(dirname_req,hlr_selected=True)
        upper.openLog("PLDRD")
        upper.extract(dirname_req,type=["PLDRD"])
        print "List attributes per requirement",upper.tbl_list_llr
        upper.closeLog()
    def test_check_swdd(self):
        return
        # Windows
        dirname_req = "C:/Documents and Settings/appereo1/Bureau/sqa/ENM/LLR"
        # MAC
        dirname_req = "/Users/olivier/github/local/all_llr"
        hsid_dirname = "/Users/olivier/github/local/HSID"
        ihm = StubIHM()
        thread = ThreadQuery(master=ihm)
        thread._checkLLRCmd(dirname_req,False,("SWDD",),hsid_dirname)
        return
        dirname_req = "/Users/olivier/github/local/all_llr"
        dirname_req = "C:/Documents and Settings/appereo1/Bureau/sqa/Template + Description + LLR + internal"
        #dirname_req = "C:/Documents and Settings/appereo1/Bureau/sqa/ENM/SSCS"
        upper = CheckLLR(dirname_req,hlr_selected=False)
        upper.openLog("SWDD")
        upper.extract(dirname_req,type=("SWDD"))
        print "List attributes per requirement",upper.tbl_list_llr
        upper.closeLog()
    def test_ckeck_upper(self):
        return
        ihm = StubIHM()
        thread = ThreadQuery(master=ihm)
        thread._checkUpperCmd(self.dirname_upper)
    def test_check_is(self):
        return
        """
        Test IS check
        :return:
        """
        ihm = StubIHM()
        thread = ThreadQuery(master=ihm)
        self.setF5X("SW_WHCC")
        thread._checkISCmd(self.dirname_upper,
                           self.dirname_req,
                           self.filename_is,
                           hlr_selected=True,
                           component="SW_ENM")
    def stub(self,type="SSCS",txt=""):
        modification_tag  = self.dico_specifications[type]["modifications"]
        toc_tag  = self.dico_specifications[type]["toc"]
        requirement_tag = self.dico_specifications[type]["requirement"]
        self.toc_tag = toc_tag
        self.modification_tag = modification_tag
        self.requirement_tag = requirement_tag
        # Begin loop text line by line
        for line in txt:
            self.debug("LINE: {:s}".format(Tool.removeNonAscii(line)))
            if not self.purpose_of_modif_parag:
                self.purpose_of_modif_parag = self.matchBeginParagraph(modification_tag,line)
            else:
                if not self.toc_parag:
                    # We are into the list of modifications
                    self.parseListOfModif(line)
                    self.toc_parag = self.matchBeginParagraph(toc_tag,line)
                    if self.toc_parag:
                        # Compile list of modifications
                        modifs_str = "\n".join(self.tbl_modifs)
                        self.dico_modifs["modif"] = modifs_str
                        self.tbl_dico_modifs.append(self.dico_modifs)
    def testAttributesParsing(self):
        return
        # test attributes parsing
        txt = ("Refers to: 	[SES-DCEPC-744] ",
               "Status: 	MATURE",
               "Issue: 	1",
               "Safety: 	 ",
               "Conformity: 	YES",
               "Allocation: 	HW",
               "Stop Req: 	 ",
               "Verification Mean: 	 ",
               "Derived: 	 ",
               "Rationale: 	 ",
               "Additional Information: 	 ",
               "[End Requirement]")
        list_attr_to_be_found = []
        conf = Conf()
        for key,attr in conf.dico_attributes.items():
            list_attr_to_be_found.append(key)
        tbl_llr = {}
        begin_attr = False
        parse = CheckLLR()
        parse.openLog("TEST")
        for line in txt:
            #print "LINE:",line
            begin_attr = parse.parseAttr(line,list_attr_to_be_found,tbl_llr,begin_attr,"","REQ")
        #for attr,value in tbl_llr.iteritems():
        #    print "TBL_LLR:",attr,value
        assert(tbl_llr["status"]=="MATURE")
        assert(tbl_llr["terminal"]=="EMPTY")
        assert(tbl_llr["end"]=="EMPTY")
        assert(tbl_llr["additional"]=="EMPTY")
        assert(tbl_llr["conformity"]=="YES")
        assert(tbl_llr["derived"]=="EMPTY")
        assert(tbl_llr["allocation"]=="HW")
        assert(tbl_llr["safety"]=="EMPTY")
        assert(tbl_llr["verification"]=="EMPTY")
        assert(tbl_llr["rationale"]=="EMPTY")
        assert(tbl_llr["issue"]=="1")
        assert(tbl_llr["refer"]=="[SES-DCEPC-744]")
    def testDerivedParsing(self):
        return
        parse = CheckLLR()
        parse.openLog("TEST")
        tbl_llr={}
        tbl_llr["derived"]="True"
        tbl_llr["refer"]="EMPTY"
        result = parse.getDerived("SSCS",
                                 tbl_llr["refer"],
                                 tbl_llr["derived"],
                                 "",
                                 "")
        assert(result)
        tbl_llr["derived"]="YES"
        tbl_llr["refer"]="EMPTY"
        result = parse.getDerived("SSCS",
                                 tbl_llr["refer"],
                                 tbl_llr["derived"],
                                 "",
                                 "")
        assert(result)
        assert(parse.dico_errors == {})
        tbl_llr["derived"]="YES"
        tbl_llr["refer"]="[SDTS_PDS_0034]"
        result = parse.getDerived("SSCS",
                                 tbl_llr["refer"],
                                 tbl_llr["derived"],
                                 "",
                                 "")
        assert(result)
        assert(parse.dico_errors == {('derived', 'S_2', '', '', ''): ['Derived requirement with traceability.']})
    def testAllocationParsing(self):
        return
        allocation_txt = "Allocation: 	AC Log SSCSDC Log SSCSEDMU SSCSEmer Log SSCS"
        component = ""
        list_allocation_name = Tool.getAllocationComponent("ACLOG_SW")
        print "TEST alloc sqlite",list_allocation_name
        list_allocation_name = Tool.getAllocationComponent()
        dico_alloc_name = []
        for tbl_allocation_name in list_allocation_name:
            for alloc_name in tbl_allocation_name:
                if alloc_name is not None:
                    allocations = alloc_name.split(",")
                    for allocation in allocations:
                        dico_alloc_name.append(allocation)
        tbl_alloc = []
        for x in dico_alloc_name:
            #print "TEST Alloc:",x
            if x in allocation_txt:
                tbl_alloc.append(x)
                print "{:s} found in string".format(x)
        print tbl_alloc
    def test_TOC_parsing(self):
        return
        # Test TOC parsing
        conf = Conf()
        type = "SSCS"
        toc_tag  = conf.dico_specifications[type]["toc"]
        parse = CheckLLR()
        parse.openLog("TEST")
        line = "CONTENTS"
        parse.toc_parag = parse.matchBeginParagraph(toc_tag,line)
    def testListDir(self):
        return
        component = "ACLOG_SW" #"BITE" # "ACLOG_SW"
        self.setG7000(component=component)
        upper = CheckLLR(self.dirname_upper,
                         hlr_selected=True)
        upper.openLog("TEST")
        upper.listDir(tbl_type=("IRD",))
        for req,value in upper.tbl_list_llr.iteritems():
            print req,value
    def testCheckUpper(self):
        return
        is_list_reqs = [[u'CAN-IRD-107', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-108', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-109', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-110', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-180', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-181', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-182', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-185', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-186', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-194', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-195', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-198', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-201', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-205', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-207', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-211', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-215', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-216', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-219', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-312', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-313', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-314', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-315', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-316', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-317', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-324', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-331', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-332', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-333', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-334', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-335', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-336', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-338', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-344', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-345', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-346', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-347', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-350', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-351', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-352', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-364', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-365', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-366', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-367', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-392', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-394', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-422', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-423', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-426', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-427', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-464', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-466', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-499', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-501', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-505', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-506', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-525', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-526', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-534', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-633', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-636', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-641', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-642', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-643', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-644', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-671', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-688', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-689', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-727', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-731', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-767', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-772', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-784', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-792', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-845', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-848', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-853', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-857', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'CAN-IRD-858', u'1.4', u'OK', u'A.NDOUMBE', u'1.4', None], [u'SSCS_ACLog_437', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_438', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_439', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_440', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_441', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_443', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_444', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_445', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_446', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_447', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_449', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_459', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_463', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_464', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_466', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_479', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_480', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_481', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_482', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_483', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_484', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_485', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_486', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_491', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_501', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_504', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_506', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_507', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_526', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_527', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_534', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_536', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_537', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_548', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_550', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_552', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_554', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_557', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_558', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_559', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_560', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_561', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_563', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_565', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_566', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_571', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_574', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_575', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_576', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_578', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_583', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_585', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_589', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_591', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_595', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_596', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_597', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_598', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_599', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_609', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_610', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_614', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_615', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_616', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_624', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_626', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_627', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_628', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_629', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_630', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_632', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_634', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_636', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_637', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_638', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_639', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_657', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_661', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_663', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_664', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_667', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_668', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_669', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_672', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_676', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_677', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_682', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_683', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_686', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_692', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_693', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_694', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_695', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_701', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_706', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_713', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_714', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_717', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_718', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_719', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_721', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_722', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_725', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_728', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_729', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_730', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_731', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_735', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_736', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_737', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_738', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_739', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_743', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_744', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_745', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_753', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_754', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_755', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_826', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_827', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_828', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_829', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_830', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_831', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_832', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_833', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_837', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_839', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_840', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_845', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_846', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_850', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_862', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_864', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_865', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_866', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_867', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_868', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_869', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_874', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_875', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_879', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_880', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_883', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_886', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_888', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_892', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_896', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_897', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_898', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_899', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_900', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_901', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_902', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_903', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_904', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_905', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_909', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_912', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_913', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_919', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_920', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_921', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_922', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_924', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_925', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_926', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_927', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_928', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_929', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_932', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_933', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_935', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_936', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_937', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_939', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_940', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_941', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_942', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_943', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_944', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_953', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_955', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_957', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1038', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1040', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1041', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1044', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1055', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1056', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1058', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1062', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1063', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1064', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1068', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1069', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1070', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1071', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1072', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1073', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1074', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1077', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1078', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1079', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1080', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1083', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1084', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1085', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1087', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1089', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1096', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1097', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1098', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1107', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1111', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1112', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1114', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1115', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1116', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1117', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1118', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1119', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1121', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1122', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1123', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1126', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1127', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1128', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1137', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1138', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1140', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1141', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1142', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1149', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1174', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1176', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1178', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1181', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1183', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1187', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1188', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1191', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1192', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1193', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1194', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1195', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1196', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1206', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1208', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1214', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1216', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1217', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1219', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1220', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1221', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1222', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1224', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1225', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1226', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1227', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1228', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1229', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1230', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1247', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1256', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1257', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1259', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1260', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1261', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1262', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1263', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1275', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1276', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1277', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1278', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1279', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1280', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1281', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1282', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1283', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1284', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1285', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1288', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1300', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1301', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1302', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1308', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1315', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1320', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1321', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1325', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1326', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1327', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1328', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1329', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1330', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1331', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1332', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1333', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1334', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1335', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1336', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1337', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1338', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1339', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1340', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1341', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1342', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1343', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1344', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1345', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1350', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1351', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1352', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1353', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1359', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1360', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1362', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1363', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1364', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1366', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1367', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1368', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1369', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1370', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1371', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1372', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1373', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1374', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1375', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1376', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1377', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1378', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1379', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1380', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1381', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1382', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1383', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1384', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1385', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1386', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1387', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1388', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1389', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1390', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1391', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1393', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1394', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1395', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1396', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1397', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1400', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1404', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1405', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1407', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1410', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1412', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1415', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1419', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1443', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1449', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1450', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1451', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1452', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1453', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1455', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1457', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1460', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1462', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1463', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1466', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1469', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1470', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1471', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1474', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1475', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1477', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1478', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1479', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1481', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1482', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1483', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1485', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1486', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1487', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1491', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1494', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1496', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1499', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1503', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1504', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1506', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1507', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1515', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1516', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1517', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1518', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1519', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1528', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1530', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1531', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1533', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1535', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1541', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1542', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1545', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1546', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None], [u'SSCS_ACLog_1550', u'3.0', u'OK', u'A.NDOUMBE', u'3.0', None]]
        list_upper_req = [u'CAN-IRD-107', u'CAN-IRD-108', u'CAN-IRD-109', u'CAN-IRD-110', u'CAN-IRD-180', u'CAN-IRD-181', u'CAN-IRD-182', u'CAN-IRD-185', u'CAN-IRD-186', u'CAN-IRD-194', u'CAN-IRD-195', u'CAN-IRD-198', u'CAN-IRD-201', u'CAN-IRD-205', u'CAN-IRD-207', u'CAN-IRD-211', u'CAN-IRD-215', u'CAN-IRD-216', u'CAN-IRD-219', u'CAN-IRD-312', u'CAN-IRD-313', u'CAN-IRD-314', u'CAN-IRD-315', u'CAN-IRD-316', u'CAN-IRD-317', u'CAN-IRD-324', u'CAN-IRD-331', u'CAN-IRD-332', u'CAN-IRD-333', u'CAN-IRD-334', u'CAN-IRD-335', u'CAN-IRD-336', u'CAN-IRD-338', u'CAN-IRD-344', u'CAN-IRD-345', u'CAN-IRD-346', u'CAN-IRD-347', u'CAN-IRD-350', u'CAN-IRD-351', u'CAN-IRD-352', u'CAN-IRD-364', u'CAN-IRD-365', u'CAN-IRD-366', u'CAN-IRD-367', u'CAN-IRD-392', u'CAN-IRD-394', u'CAN-IRD-422', u'CAN-IRD-423', u'CAN-IRD-426', u'CAN-IRD-427', u'CAN-IRD-464', u'CAN-IRD-466', u'CAN-IRD-499', u'CAN-IRD-501', u'CAN-IRD-505', u'CAN-IRD-506', u'CAN-IRD-525', u'CAN-IRD-526', u'CAN-IRD-534', u'CAN-IRD-633', u'CAN-IRD-636', u'CAN-IRD-641', u'CAN-IRD-642', u'CAN-IRD-643', u'CAN-IRD-644', u'CAN-IRD-671', u'CAN-IRD-688', u'CAN-IRD-689', u'CAN-IRD-727', u'CAN-IRD-731', u'CAN-IRD-767', u'CAN-IRD-772', u'CAN-IRD-784', u'CAN-IRD-792', u'CAN-IRD-845', u'CAN-IRD-848', u'CAN-IRD-853', u'CAN-IRD-857', u'CAN-IRD-858', u'SSCS_ACLog_1038', u'SSCS_ACLog_1040', u'SSCS_ACLog_1041', u'SSCS_ACLog_1044', u'SSCS_ACLog_1055', u'SSCS_ACLog_1056', u'SSCS_ACLog_1058', u'SSCS_ACLog_1062', u'SSCS_ACLog_1063', u'SSCS_ACLog_1064', u'SSCS_ACLog_1068', u'SSCS_ACLog_1069', u'SSCS_ACLog_1070', u'SSCS_ACLog_1071', u'SSCS_ACLog_1072', u'SSCS_ACLog_1073', u'SSCS_ACLog_1074', u'SSCS_ACLog_1077', u'SSCS_ACLog_1078', u'SSCS_ACLog_1079', u'SSCS_ACLog_1080', u'SSCS_ACLog_1083', u'SSCS_ACLog_1084', u'SSCS_ACLog_1085', u'SSCS_ACLog_1087', u'SSCS_ACLog_1089', u'SSCS_ACLog_1096', u'SSCS_ACLog_1097', u'SSCS_ACLog_1098', u'SSCS_ACLog_1107', u'SSCS_ACLog_1111', u'SSCS_ACLog_1112', u'SSCS_ACLog_1114', u'SSCS_ACLog_1115', u'SSCS_ACLog_1116', u'SSCS_ACLog_1117', u'SSCS_ACLog_1118', u'SSCS_ACLog_1119', u'SSCS_ACLog_1121', u'SSCS_ACLog_1122', u'SSCS_ACLog_1123', u'SSCS_ACLog_1126', u'SSCS_ACLog_1127', u'SSCS_ACLog_1128', u'SSCS_ACLog_1137', u'SSCS_ACLog_1138', u'SSCS_ACLog_1140', u'SSCS_ACLog_1141', u'SSCS_ACLog_1142', u'SSCS_ACLog_1149', u'SSCS_ACLog_1174', u'SSCS_ACLog_1176', u'SSCS_ACLog_1178', u'SSCS_ACLog_1181', u'SSCS_ACLog_1183', u'SSCS_ACLog_1187', u'SSCS_ACLog_1188', u'SSCS_ACLog_1191', u'SSCS_ACLog_1192', u'SSCS_ACLog_1193', u'SSCS_ACLog_1194', u'SSCS_ACLog_1195', u'SSCS_ACLog_1196', u'SSCS_ACLog_1206', u'SSCS_ACLog_1208', u'SSCS_ACLog_1214', u'SSCS_ACLog_1216', u'SSCS_ACLog_1217', u'SSCS_ACLog_1219', u'SSCS_ACLog_1220', u'SSCS_ACLog_1221', u'SSCS_ACLog_1222', u'SSCS_ACLog_1224', u'SSCS_ACLog_1225', u'SSCS_ACLog_1226', u'SSCS_ACLog_1227', u'SSCS_ACLog_1228', u'SSCS_ACLog_1229', u'SSCS_ACLog_1230', u'SSCS_ACLog_1247', u'SSCS_ACLog_1256', u'SSCS_ACLog_1257', u'SSCS_ACLog_1259', u'SSCS_ACLog_1260', u'SSCS_ACLog_1261', u'SSCS_ACLog_1262', u'SSCS_ACLog_1275', u'SSCS_ACLog_1276', u'SSCS_ACLog_1277', u'SSCS_ACLog_1278', u'SSCS_ACLog_1279', u'SSCS_ACLog_1280', u'SSCS_ACLog_1281', u'SSCS_ACLog_1282', u'SSCS_ACLog_1283', u'SSCS_ACLog_1284', u'SSCS_ACLog_1285', u'SSCS_ACLog_1288', u'SSCS_ACLog_1300', u'SSCS_ACLog_1301', u'SSCS_ACLog_1302', u'SSCS_ACLog_1308', u'SSCS_ACLog_1315', u'SSCS_ACLog_1320', u'SSCS_ACLog_1321', u'SSCS_ACLog_1325', u'SSCS_ACLog_1326', u'SSCS_ACLog_1327', u'SSCS_ACLog_1328', u'SSCS_ACLog_1329', u'SSCS_ACLog_1330', u'SSCS_ACLog_1331', u'SSCS_ACLog_1332', u'SSCS_ACLog_1333', u'SSCS_ACLog_1334', u'SSCS_ACLog_1335', u'SSCS_ACLog_1336', u'SSCS_ACLog_1337', u'SSCS_ACLog_1338', u'SSCS_ACLog_1339', u'SSCS_ACLog_1340', u'SSCS_ACLog_1341', u'SSCS_ACLog_1342', u'SSCS_ACLog_1343', u'SSCS_ACLog_1344', u'SSCS_ACLog_1345', u'SSCS_ACLog_1350', u'SSCS_ACLog_1351', u'SSCS_ACLog_1352', u'SSCS_ACLog_1353', u'SSCS_ACLog_1359', u'SSCS_ACLog_1360', u'SSCS_ACLog_1362', u'SSCS_ACLog_1363', u'SSCS_ACLog_1364', u'SSCS_ACLog_1366', u'SSCS_ACLog_1367', u'SSCS_ACLog_1368', u'SSCS_ACLog_1369', u'SSCS_ACLog_1370', u'SSCS_ACLog_1371', u'SSCS_ACLog_1372', u'SSCS_ACLog_1373', u'SSCS_ACLog_1374', u'SSCS_ACLog_1375', u'SSCS_ACLog_1376', u'SSCS_ACLog_1377', u'SSCS_ACLog_1378', u'SSCS_ACLog_1379', u'SSCS_ACLog_1380', u'SSCS_ACLog_1381', u'SSCS_ACLog_1382', u'SSCS_ACLog_1383', u'SSCS_ACLog_1384', u'SSCS_ACLog_1385', u'SSCS_ACLog_1386', u'SSCS_ACLog_1387', u'SSCS_ACLog_1388', u'SSCS_ACLog_1389', u'SSCS_ACLog_1390', u'SSCS_ACLog_1391', u'SSCS_ACLog_1393', u'SSCS_ACLog_1394', u'SSCS_ACLog_1395', u'SSCS_ACLog_1396', u'SSCS_ACLog_1397', u'SSCS_ACLog_1400', u'SSCS_ACLog_1404', u'SSCS_ACLog_1405', u'SSCS_ACLog_1407', u'SSCS_ACLog_1410', u'SSCS_ACLog_1412', u'SSCS_ACLog_1415', u'SSCS_ACLog_1419', u'SSCS_ACLog_1443', u'SSCS_ACLog_1449', u'SSCS_ACLog_1450', u'SSCS_ACLog_1451', u'SSCS_ACLog_1452', u'SSCS_ACLog_1453', u'SSCS_ACLog_1455', u'SSCS_ACLog_1457', u'SSCS_ACLog_1458', u'SSCS_ACLog_1460', u'SSCS_ACLog_1462', u'SSCS_ACLog_1463', u'SSCS_ACLog_1466', u'SSCS_ACLog_1469', u'SSCS_ACLog_1470', u'SSCS_ACLog_1471', u'SSCS_ACLog_1474', u'SSCS_ACLog_1475', u'SSCS_ACLog_1477', u'SSCS_ACLog_1478', u'SSCS_ACLog_1479', u'SSCS_ACLog_1481', u'SSCS_ACLog_1482', u'SSCS_ACLog_1483', u'SSCS_ACLog_1485', u'SSCS_ACLog_1486', u'SSCS_ACLog_1487', u'SSCS_ACLog_1491', u'SSCS_ACLog_1494', u'SSCS_ACLog_1499', u'SSCS_ACLog_1503', u'SSCS_ACLog_1504', u'SSCS_ACLog_1506', u'SSCS_ACLog_1507', u'SSCS_ACLog_1515', u'SSCS_ACLog_1516', u'SSCS_ACLog_1517', u'SSCS_ACLog_1518', u'SSCS_ACLog_1519', u'SSCS_ACLog_1528', u'SSCS_ACLog_1530', u'SSCS_ACLog_1531', u'SSCS_ACLog_1533', u'SSCS_ACLog_1535', u'SSCS_ACLog_1541', u'SSCS_ACLog_1542', u'SSCS_ACLog_1545', u'SSCS_ACLog_1546', u'SSCS_ACLog_1550', u'SSCS_ACLog_437', u'SSCS_ACLog_438', u'SSCS_ACLog_439', u'SSCS_ACLog_440', u'SSCS_ACLog_441', u'SSCS_ACLog_443', u'SSCS_ACLog_444', u'SSCS_ACLog_445', u'SSCS_ACLog_446', u'SSCS_ACLog_447', u'SSCS_ACLog_449', u'SSCS_ACLog_459', u'SSCS_ACLog_463', u'SSCS_ACLog_464', u'SSCS_ACLog_466', u'SSCS_ACLog_479', u'SSCS_ACLog_480', u'SSCS_ACLog_481', u'SSCS_ACLog_482', u'SSCS_ACLog_483', u'SSCS_ACLog_484', u'SSCS_ACLog_485', u'SSCS_ACLog_486', u'SSCS_ACLog_491', u'SSCS_ACLog_501', u'SSCS_ACLog_504', u'SSCS_ACLog_506', u'SSCS_ACLog_507', u'SSCS_ACLog_526', u'SSCS_ACLog_527', u'SSCS_ACLog_534', u'SSCS_ACLog_536', u'SSCS_ACLog_537', u'SSCS_ACLog_548', u'SSCS_ACLog_550', u'SSCS_ACLog_552', u'SSCS_ACLog_554', u'SSCS_ACLog_557', u'SSCS_ACLog_558', u'SSCS_ACLog_559', u'SSCS_ACLog_560', u'SSCS_ACLog_561', u'SSCS_ACLog_563', u'SSCS_ACLog_565', u'SSCS_ACLog_566', u'SSCS_ACLog_571', u'SSCS_ACLog_574', u'SSCS_ACLog_575', u'SSCS_ACLog_576', u'SSCS_ACLog_578', u'SSCS_ACLog_583', u'SSCS_ACLog_585', u'SSCS_ACLog_589', u'SSCS_ACLog_591', u'SSCS_ACLog_595', u'SSCS_ACLog_596', u'SSCS_ACLog_597', u'SSCS_ACLog_598', u'SSCS_ACLog_599', u'SSCS_ACLog_609', u'SSCS_ACLog_610', u'SSCS_ACLog_614', u'SSCS_ACLog_615', u'SSCS_ACLog_616', u'SSCS_ACLog_624', u'SSCS_ACLog_626', u'SSCS_ACLog_627', u'SSCS_ACLog_628', u'SSCS_ACLog_629', u'SSCS_ACLog_630', u'SSCS_ACLog_632', u'SSCS_ACLog_634', u'SSCS_ACLog_636', u'SSCS_ACLog_637', u'SSCS_ACLog_638', u'SSCS_ACLog_639', u'SSCS_ACLog_657', u'SSCS_ACLog_661', u'SSCS_ACLog_663', u'SSCS_ACLog_664', u'SSCS_ACLog_667', u'SSCS_ACLog_668', u'SSCS_ACLog_669', u'SSCS_ACLog_672', u'SSCS_ACLog_676', u'SSCS_ACLog_677', u'SSCS_ACLog_682', u'SSCS_ACLog_683', u'SSCS_ACLog_686', u'SSCS_ACLog_692', u'SSCS_ACLog_693', u'SSCS_ACLog_694', u'SSCS_ACLog_695', u'SSCS_ACLog_701', u'SSCS_ACLog_706', u'SSCS_ACLog_713', u'SSCS_ACLog_714', u'SSCS_ACLog_717', u'SSCS_ACLog_718', u'SSCS_ACLog_719', u'SSCS_ACLog_721', u'SSCS_ACLog_722', u'SSCS_ACLog_725', u'SSCS_ACLog_728', u'SSCS_ACLog_729', u'SSCS_ACLog_730', u'SSCS_ACLog_731', u'SSCS_ACLog_735', u'SSCS_ACLog_736', u'SSCS_ACLog_737', u'SSCS_ACLog_738', u'SSCS_ACLog_739', u'SSCS_ACLog_743', u'SSCS_ACLog_744', u'SSCS_ACLog_745', u'SSCS_ACLog_753', u'SSCS_ACLog_754', u'SSCS_ACLog_755', u'SSCS_ACLog_826', u'SSCS_ACLog_827', u'SSCS_ACLog_828', u'SSCS_ACLog_829', u'SSCS_ACLog_830', u'SSCS_ACLog_831', u'SSCS_ACLog_832', u'SSCS_ACLog_833', u'SSCS_ACLog_837', u'SSCS_ACLog_839', u'SSCS_ACLog_840', u'SSCS_ACLog_845', u'SSCS_ACLog_846', u'SSCS_ACLog_850', u'SSCS_ACLog_862', u'SSCS_ACLog_864', u'SSCS_ACLog_865', u'SSCS_ACLog_866', u'SSCS_ACLog_867', u'SSCS_ACLog_868', u'SSCS_ACLog_869', u'SSCS_ACLog_874', u'SSCS_ACLog_875', u'SSCS_ACLog_879', u'SSCS_ACLog_880', u'SSCS_ACLog_883', u'SSCS_ACLog_886', u'SSCS_ACLog_888', u'SSCS_ACLog_892', u'SSCS_ACLog_896', u'SSCS_ACLog_897', u'SSCS_ACLog_898', u'SSCS_ACLog_899', u'SSCS_ACLog_900', u'SSCS_ACLog_901', u'SSCS_ACLog_902', u'SSCS_ACLog_903', u'SSCS_ACLog_904', u'SSCS_ACLog_905', u'SSCS_ACLog_909', u'SSCS_ACLog_912', u'SSCS_ACLog_913', u'SSCS_ACLog_919', u'SSCS_ACLog_920', u'SSCS_ACLog_921', u'SSCS_ACLog_922', u'SSCS_ACLog_924', u'SSCS_ACLog_925', u'SSCS_ACLog_926', u'SSCS_ACLog_927', u'SSCS_ACLog_928', u'SSCS_ACLog_929', u'SSCS_ACLog_932', u'SSCS_ACLog_933', u'SSCS_ACLog_935', u'SSCS_ACLog_936', u'SSCS_ACLog_937', u'SSCS_ACLog_939', u'SSCS_ACLog_940', u'SSCS_ACLog_941', u'SSCS_ACLog_942', u'SSCS_ACLog_943', u'SSCS_ACLog_944', u'SSCS_ACLog_953', u'SSCS_ACLog_955', u'SSCS_ACLog_957']
        doc_upper = {u'SSCS_ACLog_790': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall meet the Power Input requirements defined in section 16 of RTCA/DO-160G Category A(NF) with the exceptions described in Power Quality document RAE-BA700-103 rev C.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-292]'}, u'SSCS_ACLog_791': {'status': u'TBC', 'terminal': 'EMPTY', 'additional': u'waiting for system update', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall meet Lightning Indirect Effects (Mutli-Burst) requirements with the following levels (as per RAE-D700-211 Section 7.4) : TBC\nPower feeders (worst case):\n- WF3: 3000V/150A\nCables between AC EPC and TRU (worst case):\n- WF3: 300V/12A\nOther cables:\n- WF3: 300V/12A', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-182]'}, u'SSCS_ACLog_1389': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Flight Phase shall be filled by the Flight phase provided by the Avionics at the moment the fault occurs.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1369]'}, u'SSCS_ACLog_793': {'status': u'TBC', 'terminal': 'EMPTY', 'additional': u'waiting for system update', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall meet Lightning  Indirect Effects (Pin Injection) requirements with the following levels (as per RAE-D700-211 Section 7.4): TBC\nPower feeders (unshielded):\nLevels expected by BA at AC buses: \n- WF 3: 600V/24A\n- WF 4: 300V/60A\nOthers (unshielded):\n- WF 3: 600V/24A (power cables and cables routed within)\n- WF 4: 300V/60A (cables routed within and power cables)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-178]'}, u'SSCS_ACLog_765': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall meet the Altitude requirements defined in section 4 of RTCA/DO-160G Category A2.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-138]'}, u'SSCS_ACLog_795': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall meet the Audio Frequency Susceptibility requirements defined in section 18 of RTCA/DO-160G Category R(WF).', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-173]'}, u'SSCS_ACLog_796': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall meet the Electrostatic Discharge Susceptibility requirements defined in section 25 of RTCA/DO-160G Category A.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-170]'}, u'SSCS_ACLog_798': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall meet the combined Temperature, Altitude as per the graph below, considering the maximum altitude at 14,000 feet:\n \n \nFigure 36:  combined Temperature, Altitude', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-174]'}, u'SSCS_ACLog_840': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog shall monitor its own antiparalleling protection activation during CBIT', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2572],[SPE-BITE-622]'}, u'SSCS_ACLog_792': {'status': u'TBC', 'terminal': 'EMPTY', 'additional': u'waiting for system update', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall meet Lightning  Indirect Effects (Mutli-Stroke) requirements with the following levels (as per RAE-D700-211 Section 7.4) : TBC\n- WF 3: 3000V/120A\n- WF 5A: 2000V/4500A\nCables between AC EPC and TRU (shielded) (worst case):\n- WF2: 300V/600A\n- WF3: 750V/150A\n- WF4: 300V/600A\nOthers:\n- WF 2: 300V/600A\n- WF 3: 600V/120A\n- WF 4: 300V/600A', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-180]'}, u'SSCS_ACLog_1542': {'status': u'TBD', 'terminal': 'EMPTY', 'additional': u'To inform the other ACLog that this ACLog has a problem', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'The ACLog shall receive one DSI Ground/Open (ground active) "DSI_ACLOG_OPP_VALID", grounded when the opposite ACLog is VALID, OPEN otherwise.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To inform the other ACLog that this ACLog has a problem', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_794': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall meet the Radio Frequency Susceptibility requirements defined in RAE-D700-211 revA, section 7.2 (HIRF), tables 2 and 7.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-171]'}, u'SSCS_ACLog_1363': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall not enter in functional mode when at least one of this failure is declared during PBIT (internal failure):\n- hardware / Software are incompatible\n- on DSI\n- on ASI\n- on hardware AC external power overvoltage protection function\n- current transformer function\n- NVM check\n- watchdog test', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1551],[SPE-BITE-1577]'}, u'SSCS_ACLog_1362': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'The ACLog2 shall compute the EXT_AC_LOAD signal and send if through the CAN busses:\nEXT_AC_LOAD = EXT_AC_PHA_POWER + EXT_AC_PHB_POWER + EXT_AC_PHC_POWER', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To define AC Ext load', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_764': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall meet the Decompression requirements defined in section 4 of RTCA/DO-160G Category A2.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-140]'}, u'SSCS_ACLog_1360': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'The ACLog2 shall compute the EXT_AC_PHx_POWER signals and send if through the CAN busses:\n EXT_AC_PHA_POWER = ASI_ACEP_VOLTAGE_PHA * ASI_ACEP_CURRENT_PHA\n EXT_AC_PHB_POWER = ASI_ACEP_VOLTAGE_PHB * ASI_ACEP_CURRENT_PHB\n EXT_AC_PHC_POWER = ASI_ACEP_VOLTAGE_PHC * ASI_ACEP_CURRENT_PHC', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To define phases power', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1367': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Confirmation time for GCU Overload indication discrepancy failure shall be 3 seconds +/- 0,5 s', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1373]'}, u'SSCS_ACLog_1366': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Confirmation time for GCU Power Ready indication discrepancy failure shall be 3 seconds +/- 0,5 s.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1372]'}, u'SSCS_ACLog_1364': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog functionning shall not be degraded during BITE NVM download and reset', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'2', 'refer': u'[SIRD-EPGDS-749]'}, u'SSCS_ACLog_1244': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1369': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Confirmation time for AC EP Overload signals indication discrepancy failure shall be 3 seconds +/- 0,5 s.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1375]'}, u'SSCS_ACLog_1247': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The Phase order AC external protection shall be activated when the hardaware phase order function (PHASE_ORDER_RESULT signal) is activated during 100ms+/-10ms', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-457]'}, u'SSCS_ACLog_1240': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'electronic command (include microcontroller) cannot be conform to this req', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The loss or erroneous command of RCCB ACMPx  shall be less than 1e-6 per flight hour', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-923],[SES-ACEPC-924],[SES-ACEPC-925],[SES-ACEPC-926]'}, u'SSCS_ACLog_1243': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'The watchdog shall be inhibited when debugging (Nexus) or programming (J1) connectors are plugged', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'Design impact, to not increase the wtachdog counter during debugging', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_484': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The GFI protection status shall be communicated through the CAN busses.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-397],[SPE-BITE-876]'}, u'SSCS_ACLog_485': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'When the GFI protection is activated, the default shall be latched and sent into NVM.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-400]'}, u'SSCS_ACLog_1534': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'ACLog shall provide a low power DSO GND/OPEN "DSO_ELC_OPEN_REQ"', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'waiting for SES ACEPC DSO_ELC_OPEN_REQ declaration', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1535': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'compatibility check is performed in order to ensure that all interfaces and functionalities performed by the micro-processing are compatible with the rest of the system, due to the fact that parts of the EPGDS can be replaced by a maintenance team and not under Zodiac Aero Electric responsibilities.', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'During PBIT, ACLog shall check hardware / Software compatibility.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-114]'}, u'SSCS_ACLog_1532': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'ACLog shall provide a DSI GND/OPEN 1mA "DSI_ELC_OPEN_REQ"', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'waiting for SES ACEPC DSI_ELC_OPEN_REQ declaration', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1533': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW, SW', 'body': u'ACLOG2 shall provide a DSO 28V medium power "DSO_ACEP_PB_SUPPLY" to supply AC external push button (always active).', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'waiting for SES ACEPC update', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_482': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'When a GFI protection is activated for ACMP 1B RCCB, the ACLog2 shall proceed to the ACMP 1B RCCB opening.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-393],[SIRD-EPGDS-2460]'}, u'SSCS_ACLog_483': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'When a GFI protection is activated for ACMP 3A RCCB, the ACLog2 shall proceed to the ACMP 3A RCCB opening.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-393],[SIRD-EPGDS-2460]'}, u'SSCS_ACLog_1437': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'AC External is NOT available = OPEN circuitAC External is NOT Power Ready = OPEN circuit', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall provide 2 DSO Ground/Open medium power Interfaces :\n- "DSO_ACEP_AVAIL"\n- "DSO_ACEP_ON"', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-530]'}, u'SSCS_ACLog_1436': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall provide 2 DSO Ground/Open low power Interfaces ("AC EP power ready" information from ACLog2 to ACLog 1) :\n- "DSO_PR_AC_EP"\n- "DSO_NPR_AC_EP"', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-658]'}, u'SSCS_ACLog_1435': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'The ACLog microcontroller shall be a Freescale MPC5566MVR132', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'As required in the EMP document', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_582': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall provide 6 DSI Ground/Open 5mA to read the contactors GLC1, GLC2 and ALC auxiliaries contacts:\n- DSI_GLC1_NO for Normally Opened aux contact: DSI Open = CTC Open\n- DSI_GLC2_NO for Normally Opened aux contact : DSI Open = CTC Open\n- DSI_AGLC_NO for Normally Opened aux contact : DSI Open = CTC Open\n- DSI_GLC1_NC for Normally Closed aux contact : DSI Grounded = CTC Open\n- DSI_GLC2_NC for Normally Closed aux contact : DSI Grounded= CTC Open\n- DSI_AGLC_NC for Normally Closed aux contact : DSI Grounded= CTC Open', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-402],[SES-ACEPC-407],[SES-ACEPC-413]'}, u'SSCS_ACLog_523': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_522': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_521': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-748': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the EDMU_GCU_LG_COM_message every 100 ms', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_668': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog shall perform PBIT only\n\tafter a Cold start\nAND\n\ton ground.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-112],[SPE-BITE-113],[SPE-BITE-193]'}, u'SSCS_ACLog_669': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog shall perform its Preliminary Tests and PBIT in less than 1 seconds (including 60ms of HW power up time) before to be fully operational (cold start mode on ground).', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-992]'}, u'SSCS_ACLog_664': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'On ground condition added', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall perform cold start power-up following a power interrupt greater than 5s +/-1s (Loss 5s function) on Ground otherwise a warm start\n \n \nTable 34: ACLOG PBIT conditions', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-690],[SIRD-EPGDS-6762]'}, u'SSCS_ACLog_1282': {'status': u'TBC', 'terminal': 'EMPTY', 'additional': u'tolerance added', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The maximum time between the reception of a reset/set of "trip" or "Open-Locked" command from the EDMU and the ability to send back this new state memorized in the AClog NVM shall be less than 190ms +/-10 ms.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2199]'}, u'SSCS_ACLog_667': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall perform Preliminary Tests after a warm or cold start before PBIT and/or CBIT :\n- Pin-programming consistency\n- RAM integrity\n- ROM integrity', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-108],[SPE-BITE-109],[SPE-BITE-119],[SPE-BITE-875],[SPE-BITE-928],[SPE-BITE-933]'}, u'SSCS_ACLog_660': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The CAN interface shall not be damage after being exposed to the following levels:\n- Pin injection: WF3(1Mhz) 600V/24A; WF4 300V/60A,\n- Multi stroke: WF2 300V600A; WF1:600A, WF3:600V/120A; WF4:300V/600A,\n- Multi burst: WF3 (1Mhz, 10Mhz) 300V/12A.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2107]'}, u'SSCS_ACLog_661': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The loss of communication bus shall not affect the network management.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2266]'}, u'SSCS_ACLog_662': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_663': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'At power up, the ACLog shall start with contactors (included ACMP) in open state', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2303]'}, u'CAN-IRD-671': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS', 'body': u'The messages between EDMU and XLOG shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_706': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall not initiate overload frame due to its incapacity to treat all incoming frames.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2256]'}, u'SSCS_ACLog_705': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall be labeled with marking Designation, Part Number, Serial Number, MFR (manufacturer) and DMF (date of manufacturing).', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-667]'}, u'CAN-IRD-672': {'allocation': u'EDMU SSCS', 'body': u'The messages between EDMU and GCU shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_442': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The Phase order function shall be activated when phases order is different than ABC:\n- BAC detected\n- ACB detected\n- CBA detected\n- CAB not detected\n- BCA not detected', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-457]'}, u'CAN-IRD-679': {'allocation': u'EDMU SSCS', 'body': u'CAN IDs of LGCU to EDMU frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-173': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to SSPCM through EDMU_SSPCM_FLIGHTINFO message:\n\uf0a7\tDate : Digital values of Year, Month and Day\n\uf0a7\tValidity of Date : Date is valid or not\n\uf0a7\tTime : Digital values of Hour and Minute\n\uf0a7\tGND/Flight status : A/C is on Ground or in Flight\n\uf0a7\tValidity of the GND/Flight status signal: the signal is valid or not.\n\uf0a7\tFlight phases\n\uf0a7\tValidity of Flight phase : Flight phase is valid or not\n\uf0a7\tAircraft tail\n\uf0a7\tValidity of Aircraft tail : Aircraft tail is valid or not\n\uf0a7\tFlight leg\n\uf0a7\tValidity of Flight leg : Flight leg is valid or not', 'derived': u'True', 'rationale': u'Provision'}, u'CAN-IRD-170': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data through to EDMU_SSPCM_IBITE message:\n\uf0a7\tPUT request: Power-Up test is requested or not.', 'refer': u'[SPE-BITE-202]'}, u'CAN-IRD-171': {'allocation': u'SSPCM SSCS', 'body': u'SSPCM shall inform of the following conditions through to SSPCM_EDMU_IBITE message:\n\uf0a7\tPUT acceptance: LRU is in condition for Power-Up test or not.', 'refer': u'[SPE-BITE-202]'}, u'SSCS_ACLog_715': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_463': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'When I\xb2t  RCCB protection is detected for ACMP 3B RCCB, the ACLog1 shall proceed to the ACMP 3B RCCB opening.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1759],[SIRD-EPGDS-2460]'}, u'CAN-IRD-174': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send EDMU_SSPCM_FLIGHTINFO every 1 second to SSPCM.', 'derived': u'True', 'rationale': u'Provision', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1027': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'ASI 115V AC and ASI Current measure shall have a precision of +/-5% on full scale (without taking account AC EPC resistors tolerances)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'ASI 115V specification', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_520': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_868': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'When the AC Bus 1 overvoltage protection is activated, ACLog1 shall open the ACMP3B RCCB', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2460]'}, u'SSCS_ACLog_1438': {'status': u'TBD', 'terminal': 'EMPTY', 'additional': u'should be added in AC EPC document', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'The ACLog shall take into account the limitation current resistance of 49.9kOhms (1%) between the point of measurement and the electronic boards for every 28V DC voltage monitoring.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'should be added in AC EPC document', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_812': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall meet the Conducted Emissions requirements defined in MIL-STD-461F, Section CE101 (DO160F LISN + capacitor). ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-172]'}, u'SSCS_ACLog_769': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall meet the "Short Time Low Operating Temperature" requirements defined in section 4 of RTCA/DO-160G Category A2.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-135],[SES-ACEPC-291]'}, u'SSCS_ACLog_1331': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog1 shall compute the "ATC3_FAILED_OPEN_CAS" CAS message according the following logic : \nTRUE\nATC3 is declared failed Open\nFALSE otherwise', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1204]'}, u'CAN-IRD-824': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to DCLOG through EDMU_XLOG_DISC_1 :\n- XFR_LEFT DSI status from EMERLOG : DSI is set or not\n- Validity of XFR_LEFT : DSI is valid or not\n- XFR_NORM DSI status from EMERLOG : DSI is set or not\n- Validity of XFR_NORM : DSI is valid or not\n- XFR_RIGHT DSI status from EMERLOG : DSI is set or not\n- Validity of XFR_RIGHT : DSI is valid or not\n- XFR_ESS DSI status from EMERLOG : DSI is set or not\n- Validity of XFR_ESS : DSI is valid or not\n- TRU[1;2] Overheat DSI status from DCLOG[1;2] : DSI is set or not\n- Validity of TRU[1;2] Overheat : DSI is valid or not.s\t', 'refer': u'[SIRD-EPGDS-3073],[SIRD-EPGDS-6769]'}, u'CAN-IRD-825': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send EDMU_XLOG_DISC_1 every 250 ms to DCLOG.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_846': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'The reference voltage will be ASI_RCCB1_CURRENT_RET', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog1 shall read, through current transformers, the three RCCB phases currents of ACMP3B thanks to the following ASI:\n- ACMP3B phase A: ASI_RCCB1_CURRENT_PHA\n- ACMP3B phase B: ASI_RCCB1_CURRENT_PHB\n- ACMP3B phase C: ASI_RCCB1_CURRENT_PHC', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2453],[SES-ACEPC-347],[SES-ACEPC-487]'}, u'SSCS_ACLog_888': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'The reference voltage will be ASI_ACEP_CURRENT_RET', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog2 shall read, through current tranformers, the AC external power phases currents thanks to the following ASI:\n- Phase A: ASI_ACEP_CURRENT_PHA\n- Phase B: ASI_ACEP_CURRENT_PHB\n- Phase C: ASI_ACEP_CURRENT_PHC', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SES-ACEPC-844]'}, u'CAN-IRD-820': {'allocation': u'HS', 'body': u'LGCU shall send the following data through RGCU_EDMU_ANALOG_x messages :\n- LGCU_PHA_VOLTAGE\n- Validity attached to LGCU_PHA_VOLTAGE\n- LGCU_PHB_VOLTAGE\n- Validity attached to LGCU_PHB_VOLTAGE\n- LGCU_PHC_VOLTAGE\n- Validity attached to LGCU_PHC_VOLTAGE\n- RGCU_PHA_CURRENT\n- Validity attached to LGCU_PHA_CURRENT\n- LGCU_PHB_CURRENT\n- Validity attached to LGCU_PHB_CURRENT\n- LGCU_PHC_CURRENT\n- Validity attached to LGCU_PHC_CURRENT', 'refer': u'[SIRD-EPGDS-2975]'}, u'CAN-IRD-821': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request LGCU_EDMU_ANALOG_x every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_842': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_843': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_967': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'tolerance added', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog weight shall be less than 0.755kg/1.66 lbs +/- 20g', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-705]'}, u'SSCS_ACLog_965': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'J1 : connector reference:Positronic ODD26S5R00X/AA-', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall implement the following connectors:\n- Two DIN 41612 rear connectors, 5 rows per 32 pin (P1 and P2)\n- One female SUBD 26 high density front connector (J1) for on board data loading', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-714]'}, u'SSCS_ACLog_964': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall be compliant to the mechanical specification F0214-CE0003100Yxx\n  ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-704]'}, u'CAN-IRD-828': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to ACLOG through EDMU_XLOG_DISC_1 :\n- XFR_LEFT DSI status from EMERLOG : DSI is set or not\n- Validity of XFR_LEFT : DSI is valid or not\n- XFR_NORM DSI status from EMERLOG : DSI is set or not\n- Validity of XFR_NORM : DSI is valid or not\n- XFR_RIGHT DSI status from EMERLOG : DSI is set or not\n- Validity of XFR_RIGHT : DSI is valid or not\n- XFR_ESS DSI status from EMERLOG : DSI is set or not\n- Validity of XFR_ESS : DSI is valid or not', 'refer': u'[SIRD-EPGDS-3073]'}, u'CAN-IRD-829': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send EDMU_XLOG_DISC_1 every 250 ms to ACLOG.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_961': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall be capable of being installed, removed, or replaced without alterations, misalignment, rigging, or damage to the items being installed, or damage or alteration to adjoining items or structure.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-200]'}, u'SSCS_ACLog_1183': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'voltage presence treshold is 15V +/-1V', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall monitor power supplies inputs ("28V_DC_BUS1", "28V_DC_ESS_BUS2", "28V_AC_EP_TR") presence during CBIT:\n\t- The voltage is present = active statewithout confirmation time\n\t- The voltage is not present = not active state during 5s +/-0.5s', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1011],[SPE-BITE-1012],[SPE-BITE-1013],[SPE-BITE-1014]'}, u'SSCS_ACLog_1098': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'ACLog1 and ACLog2 are not synchronizedtolerance has to be confirmed', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACMP sequencing command of the ACMP shall be made by the two ACLogs by following the table here below:\n   \nWith +/-20ms of time tolerance', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2552]'}, u'SSCS_ACLog_1182': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'an hysteresis is added to avoid flickering.', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall provide internal DSI for power supplies inputs ("28V_DC_BUS1", "28V_DC_ESS_BUS2", "28V_AC_EP_TR") to detect:\n\t- Upper 17V +/-1V the voltage is present (active state)\n\t- Under 15V +/-1V the voltage is not present (not active state)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1012],[SPE-BITE-1013],[SPE-BITE-1014]'}, u'SSCS_ACLog_1095': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_866': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'The references voltages will be ASI_AC_BUSBAR_VOLT_RET for AC Bus 2 and ASI_AC_OPP_BUSBAR_VOLT_RET for AC Bus 1', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog2 shall read the three AC Bus 2 voltages phases and the AC Bus 1 phase A voltage thanks to the following ASI:\n- AC Bus 1 phase A: ASI_AC_OPP_BUSBAR_VOLT_PHA\n- AC Bus 2 phase A: ASI_AC_BUSBAR_VOLT_PHA\n- AC Bus 2 phase B: ASI_AC_BUSBAR_VOLT_PHB\n- AC Bus 2 phase C: ASI_AC_BUSBAR_VOLT_PHC', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SES-ACEPC-641],[SES-ACEPC-775]'}, u'SSCS_ACLog_1097': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'I\xb2t protection functions shall include a thermal memory to avoid wire damage in case of cyclic overload conditions.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SES-ACEPC-931]'}, u'SSCS_ACLog_1096': {'status': u'TBC', 'terminal': 'EMPTY', 'additional': u'the relation between the current (I) and the ASI input voltage (V) is given by the following formula: V=(Rct)xI/1000Rct: Current transformer burden resistor (two 16 Ohms resistors in parrallel)1000: Current tranformer nominal current ratio (1/1000)This curve is different from the SES definition : TBC', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Phase overcurrent due to a short-circuit between 2 phases or 1 phase and neutral shall be detected by ACLog2 when difference between any of the three phase currents of the External Power (i.e. (Current phase 1 - Current phase 2) or (Current phase 1 - Current phase 3) or (Current phase 2 - Current phase 3)) is too high according to the following current-time delays :\n   \n   \nFigure 21: unbalance protection definition', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-854]'}, u'SSCS_ACLog_1158': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'CAN shield connection to the ground shall be made at EPC Level, not at the ACLog level.\n   \nFigure 32: CAN Shield connection', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-701]'}, u'SSCS_ACLog_1092': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'The zero detectors outputs and phase order result shall be wired to the microcontroller', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To compute the input frequency', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-186': {'allocation': u'AC Log SSCS', 'body': u'AC contactors shall include the following contactors for ACLOG1 and ACLOG2\n\uf0a7\tATC1\n\uf0a7\tATC2\n\uf0a7\tATC3\n\uf0a7\tELC\n\uf0a7\tAEC', 'refer': u'[SIRD-EPGDS-180],[SIRD-EPGDS-1050],[SIRD-EPGDS-1668]'}, u'CAN-IRD-185': {'allocation': u'AC Log SSCS', 'body': u'ACLOG[1/2] shall send the following data to EDMU through ACLOG[1/2]_EDMU_CNTOR_STATUS message:\n\uf0a7\tState of AC contactors: contactor is open or closed.\n\uf0a7\tValidity of the state of AC contactor: the state signal is valid or not.', 'refer': u'[SIRD-EPGDS-180],[SIRD-EPGDS-1050],[SIRD-EPGDS-1668]'}, u'SSCS_ACLog_1180': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog network management and protections shall not be affected by a failure or loss of CBIT functionalities', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-952]'}, u'CAN-IRD-183': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request ACLOG[1/2]_EDMU_NETWORK_STATUS_x every 50 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-182': {'allocation': u'AC Log SSCS', 'body': u'Supplying sources shall include the following sources or disconnected or invalid:\n\uf0a7\tR_GEN;\n\uf0a7\tL_GEN;\n\uf0a7\tAPU_GEN;\n\uf0a7\tEXT_AC;\n\uf0a7\tMAIN_BATT;\n\uf0a7\tAPU_BATT;\n\uf0a7\tRAT_GEN;\n\uf0a7\tTRU1;\n\uf0a7\tTRU2;\n\uf0a7\tESS_TRU;', 'refer': u'[SIRD-EPGDS-180],[SIRD-EPGDS-1050],[SIRD-EPGDS-1896],[SIRD-EPGDS-6774]'}, u'CAN-IRD-181': {'allocation': u'AC Log SSCS', 'body': u'AC busbars shall include the following busbars for ACLOG1 and ACLOG2:\n\uf0a7\tAC1_BUSBAR\n\uf0a7\tAC2_BUSBAR', 'refer': u'[SIRD-EPGDS-180],[SIRD-EPGDS-1050],[SIRD-EPGDS-1896],[SIRD-EPGDS-6774]'}, u'CAN-IRD-180': {'allocation': u'AC Log SSCS', 'body': u'ACLOG[1/2] shall send the following data to EDMU through ACLOG[1/2]_EDMU_NETWORK_STATUS_1 message:\n\uf0a7\tAvailability of the AC busbars: Busbar is powered or not.\n\uf0a7\tValidity of the availability of the AC busbars: the availability signal is valid or not.\n\uf0a7\tSupplying source of the AC busbars: the source which supplies the busbar or Invalid\n\uf0a7\tSupplying source of the AC Essencial Contactor: the source which supplies the busbar or Invalid\n\uf0a7\tReconfiguration in Progress signal : network is in reconfiguration or network is stable\n\uf0a7\tAC EXT POWER connected signal : EP is connected or not\n\uf0a7\tAC EXT POWER Available signal : EP is available or not\n\uf0a7\tAC EXT POWER Online signal : EP is online or not\n\uf0a7\tAC EXT POWER Power Ready signal : EP is Power ready or not\n\uf0a7\tAC EXT POWER Overload signal : EP is Overloaded or not\n\uf0a7\tValidity of those signal : signals are valid or not', 'refer': u'[SIRD-EPGDS-180],[SIRD-EPGDS-1050],[SIRD-EPGDS-1896],[SIRD-EPGDS-3381],[SPE-BITE-1343],[SPE-BITE-1344]'}, u'SSCS_ACLog_1187': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of 28V Board supply not present failure, the ACLOG shall declare the corresponding failure to the EDMU using CAN busses', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1016]'}, u'SSCS_ACLog_865': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'The references voltages will be ASI_AC_BUSBAR_VOLT_RET for AC Bus 1 and ASI_AC_OPP_BUSBAR_VOLT_RET for AC Bus 2', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog1 shall read the three AC Bus 1 voltages phases and the AC Bus 2 phase A voltage thanks to the following ASI:\n- AC Bus 1 phase A: ASI_AC_BUSBAR_VOLT_PHA\n- AC Bus 1 phase B: ASI_AC_BUSBAR_VOLT_PHB\n- AC Bus 1 phase C: ASI_AC_BUSBAR_VOLT_PHC\n- AC Bus 2 phase A: ASI_AC_OPP_BUSBAR_VOLT_PHA', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SES-ACEPC-479],[SES-ACEPC-774]'}, u'CAN-IRD-188': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request ACLOG[1/2]_EDMU_CNTOR_STATUS every 50 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1286': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1298': {'status': u'TBC', 'terminal': 'EMPTY', 'additional': u'waiting for system definition', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The procedures proposed by RTCA DO-160F (section 22) and RAE-D700-211 (section 4) shall be used as a basic reference.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-959]'}, u'SSCS_ACLog_944': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall monitor I\xb2t protection activation on each controlled RCCB during CBIT', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-877],[SPE-BITE-999]'}, u'SSCS_ACLog_1293': {'status': u'TBC', 'terminal': 'EMPTY', 'additional': u'waiting for system update', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The loss of AC load shedding capability when normal power is available shall be less than 1E-7 /FH (TBC) ', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-955]'}, u'SSCS_ACLog_1292': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'Total loss of data communication within Electrical System and to Member Systems shall be less than 1E-6 per flight hour.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SES-ACEPC-927]'}, u'SSCS_ACLog_1291': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'Inadvertent closure of a locked open ACMP shall be less than 1E-7 per flight hour.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SES-ACEPC-922]'}, u'SSCS_ACLog_1290': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The loss of AClog GFI protection shall be less than 7,0E-7 per flight hour.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SES-ACEPC-919]'}, u'SSCS_ACLog_1295': {'status': u'TBC', 'terminal': 'EMPTY', 'additional': u'waiting for system update', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The loss of load shedding capability when needed, during Electrical Emergency operation shall be less than 1E-9 /FH (TBC)', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-961]'}, u'SSCS_ACLog_1294': {'status': u'TBC', 'terminal': 'EMPTY', 'additional': u'waiting for system update', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The loss of Essential load shedding capability when normal power is available shall be less than 1E-7 /FH (TBC) ', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-958]'}, u'CAN-IRD-384': {'body': u'The following table is the bus load analysis based on a maximum fully loaded bus: \n1 bus with RGCU', 'refer': u'[SIRD-EPGDS-114],End: \tTrue'}, u'CAN-IRD-387': {'body': u'The following table is the bus load analysis based on a maximum fully loaded bus: \n1 bus with LGCU and AGCU', 'refer': u'[SIRD-EPGDS-114],End: \tTrue'}, u'CAN-IRD-381': {'body': u'The following table is the bus load analysis based on a maximum fully loaded bus: \n1 bus with ACLOG1 and DCLOG1', 'refer': u'[SIRD-EPGDS-114],End: \tTrue'}, u'SSCS_ACLog_1493': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-229': {'allocation': u'DC Log SSCS', 'body': u'DCLOG[1/2] shall send the following data to EDMU through DCLOG[1/2]_EDMU_NETWORK_STATUS_1 message:\n\uf0a7\tAvailability of the DC busbars : Busbar is powered or not.\n\uf0a7\tValidity of the availability of the DC busbars: the availability signal is valid or not.\n\uf0a7\tSupplying source of the DC busbars: the source which supplies the busbar or Invalid.\n\uf0a7\tReconfiguration in Progress signal : network is in reconfiguration or network is stable\n\uf0a7\tValidity of those signal : signals are valid or not', 'refer': u'[SIRD-EPGDS-1020],[SIRD-EPGDS-1055],[SIRD-EPGDS-1896]'}, u'SSCS_ACLog_1486': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'For the Ground Servicing, the ACLog shall compute the supply sources as bellow:\nAC Bus 1 bus bar: EXT_AC\nAC Bus 2 bus bar: EXT_AC\nAEC: Disconnected', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1752]'}, u'SSCS_ACLog_1487': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If a fault condition disappears before the timeout is reached, ACLog2 shall memorize during 5sec +/- 0,2sec the unexpired time of the timeout in order to retrieve it if the fault condition comes back (thermal memory, also called cooling down time).', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-3315]'}, u'SSCS_ACLog_1485': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'SIRD should be updated', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'When Ground Servicing Mode is NOT ACTIVE, ACLog2 shall set:\n- "DSO_GS_MODE" to NOT Active\n- "DSO_GS_ON" to NOT Active', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-6845]'}, u'CAN-IRD-222': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to ACLOG[1/2] through EDMU_XLOG_FLIGHTINFO_x messages:\n\uf0a7\tDate : Digital values of Year, Month and Day\n\uf0a7\tValidity of Date and time : Date and time is valid or not\n\uf0a7\tTime : Digital values of Hour and Minute\n\uf0a7\tFlight phases\n\uf0a7\tValidity of Flight phase : Flight phase is valid or not\n\uf0a7\tAircraft tail\n\uf0a7\tValidity of Aircraft tail : Aircraft tail is valid or not\n\uf0a7\tFlight leg\n\uf0a7\tValidity of Flight leg : Flight leg is valid or not', 'refer': u'[SIRD-EPGDS-1898],[SPE-BITE-996]'}, u'CAN-IRD-223': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send EDMU_XLOG_FLIGHTINFO_x every 1 second to ACLOG.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-220': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request ACLOG[1/2]_EDMU_ENG_DATA_x every 1 second.', 'derived': u'True', 'rationale': u'Provision', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1481': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Label (13)waiting for SIRD update (ACLOG2 --> ACLOG)', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall switch from ELC Ground Servicing OPEN Request to ELC Ground Servicing CLOSE Request when:\n- ELC ACEP OPEN Request\nAND\n- AC External Power is POWER READY\nAND\n- 28V_AC_EP_TR is present\nAND\n- "DSI_GS_PB" falling edge is detected\nAND\n- No GCU or APU is Power Ready', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1469]'}, u'CAN-IRD-592': {'allocation': u'HS', 'body': u'AGCU shall send the following EICAS data to EDMU through AGCU_EDMU_EICAS_1 message :\n- APU Generator good / Fail  Status\n- APU Generator Oil Over temperature status\n- APU Generator ON/OFF status\n- APU GCU Communication fault status\n- Validity attached to these data', 'refer': u'[SIRD-EPGDS-1052],[SIRD-EPGDS-1641],[SPE-BITE-1333]'}, u'CAN-IRD-593': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request AGCU_EDMU_EICAS_x every 500 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-595': {'allocation': u'HS', 'body': u'AGCU shall send the following Synoptic data to EDMU through AGCU_EDMU_SYNOPTIC_1 message: \n- Average digital value of the Generator Point Of Regulation voltage \n- Generator Line Contactor , auxilliary contactor status \n- Excitation status of APU  generator\n- APU ready to load signal\n- Validity attached to these data (data mentioned above)\n- APU Generator Point Of Regulation Frequency\n- Validity attached to this piece of data (Point Of Regulation Frequency)', 'refer': u'[SIRD-EPGDS-1052]'}, u'CAN-IRD-596': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request AGCU_EDMU_SYNOPTIC_x every 100 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-598': {'allocation': u'HS', 'body': u'AGCU shall send the following OMS data to EDMU through AGCU_EDMU_OMS_x messages :\n- Digtal value of the  APU generator oil temperature\n- Status of ATC Lockout request wire failure\n- Validity attached to this piece of data', 'refer': u'[SIRD-EPGDS-2975]'}, u'CAN-IRD-599': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request AGCU_EDMU_OMS_x every 500 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_443': {'status': u'TBC', 'terminal': 'EMPTY', 'additional': u'the tolerence on the frequency of +/-5Hz should be not compliant', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The underfrequency AC external protection shall be activated when one phase frequency is lower than 370Hz +/-20Hz during 4s +/-0.5s', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-456]'}, u'CAN-IRD-752': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the EDMU_GCU_REEC_COM message every 100 ms', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1078': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall be able to reset the BITE NVM content on EDMU request by Can bus.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-653]'}, u'CAN-IRD-751': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data through EDMU_GCU_REEC_COM message:\n- Engine_Running  : Right Engine running status\n- Engine_Running_NDO_Valid : Input NDO containing Engine_Running is not received or SSM invalid\n- N2_Selected :  N2 selected in %\n- N2_Selected_NDO_Valid : Input NDO containing N2_Selected is not received or SSM invalid\n- R_Eng_Run_Sw_OFF_Pole_1 : Right Engine Fuel Cut Off switch OFF position\n- R_Eng_Run_Sw_OFF_Pole_1_NDO_Valid : Input NDO containing R_Eng_Run_Sw_OFF_Pole_1 is not received or SSM invalid', 'refer': u'[SIRD-EPGDS-6305]'}, u'SSCS_ACLog_996': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'A diode shall be installed in series with each DSO output. ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-741]'}, u'SSCS_ACLog_997': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'Output drivers of DSO shall be capable of driving a capacitance of at least 1 microF in parallel to the nominal resistive load. ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-742]'}, u'CAN-IRD-754': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data through EDMU_GCU_LG_COM message:\n- NG_WOFFW\n- RG_WOFFW\n- LG_WOFFW\n- NG_WOW\n- RG_WOW\n- LG_WOW\n- LRG_WOW\n- WOFFW\n- MG_WOW\n- WOW\n- WOW_Fail\n- WOW_STATUS_Valid : Input NDO containing WOW signals is not received or SSM invalid', 'refer': u'[SIRD-EPGDS-1563],[SIRD-EPGDS-2564],[SIRD-EPGDS-2565],[SIRD-EPGDS-2579],[SIRD-EPGDS-2762]'}, u'CAN-IRD-755': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the EDMU_GCU_LG_COM message every 100 ms', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-758': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data through EDMU_GCU_APU_COM message:\n- APU_Running \n- APU_Running_Valid : Input NDO containing APU_Running  is not received or SSM invalid\n- APU_Cooldown\n- APU_Cooldown_Valid : Input NDO containing APU_Cooldown  is not received or SSM invalid\n- APU_Ready_To_Load\n- APU_Ready_To_Load_Valid : Input NDO containing APU_Ready_To_Load is not received or SSM invalid', 'refer': u'[SIRD-EPGDS-6307]'}, u'CAN-IRD-759': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the EDMU_GCU_APU_COM message every 100 ms', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_935': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'If an AC external overload protection is activated, ACLog2 shall set:\n- DSO Ground/Open low power "DSO_OL_AC_EP" to ground\n- DSO Ground/Open low power "DSO_NOL_AC_EP" to Open', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SES-ACEPC-789]'}, u'SSCS_ACLog_1111': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall consider a "PIN E voltage presence" when "ASI_DC_ACEP_PINE" is higher than 18V +/-10%', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-6822]'}, u'SSCS_ACLog_514': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1368': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Confirmation time for AC EP Power Ready indication discrepancy failure shall be 3 seconds +/- 0,5 s.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1374]'}, u'SSCS_ACLog_1028': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_518': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_519': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_912': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'The result of the failure when a CLOSURE command is sent and an OPEN feedback is received a command CLOSURE is interpreted, not an OPEN state', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall monitor discrepancy between DSO software command and DSO status thanks to the DSO feedback.\n \n \nTable 35: Discret Output feedback status inconsistency logic', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2738],[SPE-BITE-167],[SPE-BITE-564],[SPE-BITE-567]'}, u'SSCS_ACLog_1353': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall transmitt the following informations to the EDMUs using CAN busses : \nExt_AC_Frequency_Yellow\nExt_AC_Power_Yellow\nExt_AC_Voltage_Yellow', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1184]'}, u'SSCS_ACLog_1112': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u"ACLOG doesn't drives any relay", 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Each contactor command failure shall be latched and sent into NVM', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2308]'}, u'CAN-IRD-312': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS,SSPCM SSCS', 'body': u'CAN equipment shall be fully compliant with ISO 11898-2, ISO 11898-1 and BOSCH rev2.0B.', 'derived': u'True', 'rationale': u'To ensure interoperability', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-313': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS,SSPCM SSCS', 'body': u'Extended Identifier (29bits) shall be used.', 'derived': u'True', 'rationale': u'To ensure interoperability', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-259': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request DCLOG[1/2]_EDMU_MODULE_STATUS and DCLOG[1/2]_EDMU_BITE_x  every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-258': {'allocation': u'DC Log SSCS', 'body': u'DCLOG[1/2] shall send its BITE Monitoring data to EDMU through DCLOG[1/2]_EDMU_BITE_x messages.', 'refer': u'[SIRD-EPGDS-390],[SIRD-EPGDS-482],[SIRD-EPGDS-627],[SIRD-EPGDS-1057],[SIRD-EPGDS-1835],[SIRD-EPGDS-1837],[SIRD-EPGDS-1846],[SIRD-EPGDS-1849],[SIRD-EPGDS-1852],[SIRD-EPGDS-1854],[SIRD-EPGDS-1868],[SIRD-EPGDS-1869],[SIRD-EPGDS-1871],[SIRD-EPGDS-2030],[SIRD-EPGDS-2230],[SIRD-EPGDS-2301],[SIRD-EPGDS-2305],[SIRD-EPGDS-2311],[SIRD-EPGDS-2312],[SIRD-EPGDS-3001],[SIRD-EPGDS-6777],[SPE-BITE-120],[SPE-BITE-126],[SPE-BITE-656],[SPE-BITE-658],[SPE-BITE-662],[SPE-BITE-704],[SPE-BITE-761],[SPE-BITE-763],[SPE-BITE-764],[SPE-BITE-769],[SPE-BITE-771],[SPE-BITE-774],[SPE-BITE-775],[SPE-BITE-778],[SPE-BITE-780],[SPE-BITE-786],[SPE-BITE-804],[SPE-BITE-969],[SPE-BITE-983],[SPE-BITE-1009],[SPE-BITE-1022],[SPE-BITE-1043],[SPE-BITE-1077],[SPE-BITE-1078],[SPE-BITE-1084],[SPE-BITE-1102],[SPE-BITE-1476]'}, u'CAN-IRD-316': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS,SSPCM SSCS', 'body': u'Big Endian representation shall be used exclusively.', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-317': {'body': u'The structure of a CAN payload and the associated bit numbering convention is detailed below:', 'additional': u'Byte 0 is sent first. Bit 7 is sent first.', 'derived': u'True', 'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS,SSPCM SSCS', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-314': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS,SSPCM SSCS', 'body': u'Data rate shall be 500 kbit/s.', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-1059],[SIRD-EPGDS-2106]'}, u'CAN-IRD-315': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS,SSPCM SSCS', 'body': u'Data field of CAN frame shall be 8 bytes long.', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-253': {'allocation': u'DC Log SSCS', 'body': u'DCLOG[1/2] shall send the following data to EDMU through DCLOG[1/2]_EDMU_IDENT_x messages:\n\uf0a7\tSoftware Interface Version: DCLOG to EDMU Software Interface Version associated to this version of specification shall be 0x01.\n\uf0a7\tthe CRC32 of its software (A665 CRC32 calculation shall be used)\n\uf0a7\tits Module type : Module type is DCLOG1 or DCLOG2\n\uf0a7\tits LRU Part Number\n\uf0a7\tits SW Part Number\n\uf0a7\tit Serial Number', 'refer': u'[SIRD-EPGDS-1057],[SPE-BITE-1414]'}, u'CAN-IRD-252': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to DCLOG[1/2] through EDMU_XLOG_IDENT message:\n\uf0a7\tEDMU DCLOG Software Interface Version: EDMU to DCLOG Software Interface Version associated to this version of specification shall be 0x01.', 'refer': u'[SPE-BITE-1414]'}, u'CAN-IRD-251': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request DCLOG[1/2]_EDMU_CNTOR_STATUS every 50 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-257': {'allocation': u'DC Log SSCS', 'body': u'DCLOG[1/2] shall send the following data to EDMU through DCLOG[1/2]_EDMU_MODULE_STATUS message:\n\uf0a7\tIBIT acceptance: LRU is in condition for IBIT test or not.\n\uf0a7\tits Module mode\n\uf0a7\tits Flight/Ground status : LRU is in Flight or on Ground\n\uf0a7\tThe validity of the Flight/Ground status\n\uf0a7\tPower supply voltage presence : voltage is present or not\n\uf0a7\tNVM download acceptance state', 'refer': u'[SIRD-EPGDS-387],[SIRD-EPGDS-481],[SIRD-EPGDS-623],[SIRD-EPGDS-1057],[SIRD-EPGDS-2229],[SPE-BITE-179],[SPE-BITE-202]'}, u'CAN-IRD-256': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to DCLOG[1/2] through EDMU_XLOG_BITE message:\n\uf0a7\tIBIT test request: IBIT test is requested or not.\n\uf0a7\tABF1 and MBF1 fuses failure status from EMERLOG_EDMU_BITE_1 message', 'refer': u'[SIRD-EPGDS-387],[SIRD-EPGDS-481],[SIRD-EPGDS-623],[SIRD-EPGDS-2229],[SPE-BITE-179],[SPE-BITE-202],[SPE-BITE-1547]'}, u'CAN-IRD-254': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request DCLOG[1/2]_EDMU_IDENT_x every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_563': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'At the end of the closure sequence, if contactors that should be closed are still open after 2s +/-0.5s (except for contactors known as failed open), the ACLog shall restart the complete sequence from the beginning by considering the power inputs and the requirements defined in the network management failure mode chapter ', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2840]'}, u'SSCS_ACLog_561': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'At the end of opening sequence, when contactors that should be open are open (except for contactors known as failed closed), the ACLog shall start the closure sequence', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To avoid paralleling', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_560': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Between each step of the closure sequence, the ACLog shall wait a transition time of 30ms +/-5ms', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1801],[SES-ACEPC-245]'}, u'CAN-IRD-529': {'allocation': u'EDMU SSCS', 'body': u'The data of messages sent between EDMU and AGCU & LGCU shall be compliant to the following document:', 'refer': u'[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_566': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ATCx contactors states imposed by the XFR function shall have the highest priority over the states required by the Network Management chapter and ATCs Lockout chapter', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2550]'}, u'SSCS_ACLog_565': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'During a configuration sequence (from opening sequence to closure sequence), if a power inputs event occurs, the ACLog shall stop the current configuration sequence and restart the complete sequence from the beginning by considering the new power inputs', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To converge quickly to a stable state', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1474': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Label (9)', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'The ACLog shall switch from ELC ACEP OPEN Request to ELC ACEP CLOSE Request when:\n- AC External power is POWER READY\nAND\n- A "DSI_ACEP_PB" falling edge is detected', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'should be allocated from SES AC EPC', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-525': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS', 'body': u'The messages between EDMU and XLOG shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'CAN-IRD-524': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'The messages between EDMU and SSPCM shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN Protocol', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_1479': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog2 shall command the Ground/Open "DSO_ACEP_AVAIL" following this table:\n \n \nTable 19: DSO_ACEP_AVAIL commands', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-6838],[SES-ACEPC-530]'}, u'CAN-IRD-526': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS', 'body': u'The messages between EDMU and XLOG shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'CAN-IRD-521': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'CAN IDs of SPDA7 to EDMU frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-520': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'CAN IDs of EDMU to SPDA8 frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-522': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'CAN IDs of SPDA8 to EDMU frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_1161': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_748': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1439': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall provide two GND/Open low power DSO for Bus bar availability:\n"DSO_AC_BUS_AVAIL" (ground active) and \n"DSO_AC_BUS_OPP_AVAIL" (ground active)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-937],[SES-ACEPC-938],[SES-ACEPC-939],[SES-ACEPC-940]'}, u'SSCS_ACLog_1014': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'When high DSO 28V/Open circuit type is set to 28V state, the output voltage shall be >17 V at 4.5A over the whole 28 V variation range', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-756]'}, u'SSCS_ACLog_743': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog1 shall command ACMP3B thanks to DSO_CDE_RCCB1:\n- 28V to closed ACMP3B RCCB\n- Open to open ACMP3B RCCB', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SES-ACEPC-450],[SES-ACEPC-452]'}, u'SSCS_ACLog_742': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall provide 2 DSO 28V/Open high power to command ACMPs RCCBs:\n- DSO_CDE_RCCB1\n- DSO_CDE_RCCB2', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-450],[SES-ACEPC-453],[SES-ACEPC-456]'}, u'SSCS_ACLog_741': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_740': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_747': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_745': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog2 shall command ACMP3A thanks to DSO_CDE_RCCB1:\n- 28V to closed ACMP3A RCCB\n- Open to open ACMP3A RCCB', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SES-ACEPC-453],[SES-ACEPC-455]'}, u'SSCS_ACLog_744': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog2 shall command ACMP1B thanks to DSO_CDE_RCCB2:\n- 28V to closed ACMP1B RCCB\n- Open to open ACMP1B RCCB', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SES-ACEPC-456],[SES-ACEPC-458]'}, u'CAN-IRD-136': {'allocation': u'SSPCM SSCS', 'body': u'SSPCM shall send the following data to EDMU through SSPCM_EDMU_SWITCH_x messages:\n\uf0a7\tOpen/Closed state of each SSPC : SSPC state is open or closed\n\uf0a7\tValidity of the state: the state signal is valid or not.\n\uf0a7\tBusbar voltage availability : Busbar voltage is available or not\n\uf0a7\tState of each SSPCM DSI: DSI is open or closed\n\uf0a7\tValidity of the DSI status : the status signal is valid or not', 'refer': u'[SIRD-EPGDS-253],[SIRD-EPGDS-1079],[SIRD-EPGDS-1711],[SIRD-EPGDS-2995]'}, u'CAN-IRD-137': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send EDMU_SSPCM_SWITCH_x every 50 ms.', 'refer': u'[SIRD-EPGDS-246],[SIRD-EPGDS-1059],[SIRD-EPGDS-3146]'}, u'CAN-IRD-135': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the SSPCM following parameters through EDMU_SSPCM_SWITCH_x messages:\n\uf0a7\tOpen/Closed command of each SSPC : SSPC command is open or closed\n\uf0a7\tValidity of the command: the command signal is valid or not.', 'refer': u'[SIRD-EPGDS-253],[SIRD-EPGDS-607]'}, u'SSCS_ACLog_589': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If GLC1 contactor status is closed and GLC1 failure is "command" (contactor failed closed), then ACLog shall:\n- open ATC1 ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1813]'}, u'CAN-IRD-130': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'One CAN bus named EDMU-2-CAN-SPDA-8 shall connect the following LRUs:\n\uf0a7\tEDMU2\n\uf0a7\t8 x SSPCM of SPDA-8 on control Bus A', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-312],[SIRD-EPGDS-882]'}, u'SSCS_ACLog_526': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Label (3)waiting for SES Deletion of req', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall set the 28V/Open "DSO_AC_EP_PINF" to ACTIVE (28V) in less than 150ms +/-20ms when AC EP 115V is PRESENT', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2120],[SES-ACEPC-690]'}, u'SSCS_ACLog_585': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'At the end of opening sequence, if contactors that should be open are not open after 2s +/-0.5s (contactor failure time confirmation), the ACLog shall stop the current configuration sequence and restart the complete sequence from the beginning by considering the power inputs and the requirements defined in the network management failure mode chapter', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2839],[SPE-BITE-810],[SPE-BITE-811]'}, u'SSCS_ACLog_584': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_647': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The 28V ACLog power supplies shall be protected by dedicated fuse', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-1890]'}, u'SSCS_ACLog_429': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog Power consumption shall be less than 15W at 28Vdc +/-1Vdc', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-536]'}, u'SSCS_ACLog_583': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'DSI NO / NC aux contact :Open = DSI input is OpenClosed = DSI input is grounded', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog1 shall compute the GLC1 and ALC contactors status, status validity and failure according to the following table:\n \nNB: for GLC1 and ALC contactors commands\nOPEN = Not Acknowledged\nCLOSE = Acknowledged\nTable 4: GLC1 and ALC contactors status, status validity and failure', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1765],[SPE-BITE-943]'}, u'CAN-IRD-139': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the SSPCM following parameters through EDMU_SSPCM_TRIPCMD_x messages:\n\uf0a7\tTrip set command of each SSPC: trip command is set or reset or no change.\n\uf0a7\tOpen Locked set command of each SSPC: Open Locked command is set or reset or no change.\n\uf0a7\tEnable command of each SSPC: Enable command is Enable or Not or no change.\n\uf0a7\tTrip Cause of each SSPC : Trip cause command is No trip cause, AFD, GFI or I2t\n\uf0a7\tValidity of the trip command, trip cause command, Enable command, open locked command signals: the signals are valid or not.', 'refer': u'[SIRD-EPGDS-293],[SIRD-EPGDS-296],[SIRD-EPGDS-297],[SIRD-EPGDS-298],[SIRD-EPGDS-300],[SIRD-EPGDS-301],[SIRD-EPGDS-302],[SIRD-EPGDS-306],[SIRD-EPGDS-307],[SIRD-EPGDS-515],[SIRD-EPGDS-519]'}, u'SSCS_ACLog_1118': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACMP overvoltage protection status shall be communicated through CAN busses.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2465]'}, u'SSCS_ACLog_1434': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'The ACLOG microcontroller I/Os shall be expanded using multiplexers testable during CBIT', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'HW requirement needed for design', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1338': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall compute the "ACLOG2_DP_ACT" CAS message according the following Logic : \nTRUE\nDifferential protection is active \nFALSE otherwise', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1209]'}, u'SSCS_ACLog_1339': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall compute the "ATC2_FAILED_CLOSED_CAS" CAS message according the following logic : \nTRUE\nATC2 is declared failed Closed\nFALSE otherwise', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1210]'}, u'SSCS_ACLog_636': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall compute the ATCx Lockout status and status validity thanks to the following table:\n   \nTable 16:  ATCx Lockout status and status validity', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2592]'}, u'SSCS_ACLog_1334': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog1 shall compute the "EXT_AC_PWR_AVAIL" message according the following logic : \nTRUE\nThe ACLog2 indicates that External power AC is available\nFALSE otherwise ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1342]'}, u'SSCS_ACLog_1335': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog1 shall compute the "EXT_AC_Online" message according the following logic : \nTRUE\nThe ACLog2 indicates that External power is available\nAND\nELC contactor is CLOSED\nFALSE otherwise ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1341]'}, u'SSCS_ACLog_1336': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog1 shall send the following CAS messages to the EDMU using CAN busses : \nACLOG1_FAIL\nAC_BUS1_FAIL\nACLOG1_DP_ACT\nATC1_FAILED_CLOSED_CAS\nATC1_FAILED_OPEN_CAS\nATC3_FAILED_CLOSED_CAS\nATC3_FAILED_OPEN_CAS\nAEC_FAILED_CLOSED_CAS\nAEC_FAILED_OPEN_CAS', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1265]'}, u'SSCS_ACLog_1337': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall compute the ACLOG2_FAIL CAS message according the following Logic : \nTRUE\nAt least One of the ACLOG PBIT test is failed \nOR \nAt least one ACLOG Discrete output is failed\nOR \nThe ACLOG anti paralleling function is failed\nOR \nThe ACLOG internal power supply is failed\nFALSE otherwise', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1207]'}, u'SSCS_ACLog_1330': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog1 shall compute the "ATC3_FAILED_CLOSED_CAS" CAS message according the following logic : \nTRUE\nATC3 is declared failed Closed\nFALSE otherwise', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1203]'}, u'SSCS_ACLog_1383': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Occurrence Counter shall be incremented if a fault with the same fault code disapears then reappers during the same flight leg', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1364]'}, u'SSCS_ACLog_1332': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog1 shall compute the "AEC_FAILED_CLOSED_CAS" CAS message according the following logic : \nTRUE\nAEC is declared failed Closed\nFALSE otherwise', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1205]'}, u'SSCS_ACLog_1333': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog1 shall compute the "AEC_FAILED_OPEN_CAS" CAS message according the following logic : \nTRUE\nAEC is declared failed Open\nFALSE otherwise', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1206]'}, u'SSCS_ACLog_1082': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_634': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog2 shall read the ATC2 Lockout sent by respective GCU through the DSIs Ground/Open 1mA  DSI_ATC_LCKOUT1 (Ground: closed, Open: Open) and DSI_ATC_NLCKOUT1 (Ground: Open, Open: closed)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-652]'}, u'SSCS_ACLog_444': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'SIRD deals with 400Hz +/-20Hz but 400Hz is nominal value ', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The overfrequency AC external protection shall be activated when one phase frequency is upper than 420Hz +/-20Hz during 2s +/-0,5s', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-455]'}, u'SSCS_ACLog_1431': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'All 28 Vdc powered components shall be able to withstand without damage a voltage of 500 Vdc between individually isolated terminals and between all terminals and case for 1 minute, without any leakage current in excess of 1.0 mA or evidence of damage due to arcing, flashover or insulation breakdown.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-971]'}, u'SSCS_ACLog_1083': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'28V DC1 fuse,DC ESS2 fuse,AC EP TR fuse.', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall monitor internal fuse failure by comparison between upstream and downstream voltage during CBIT', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2815],[SPE-BITE-790]'}, u'SSCS_ACLog_1507': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If ACLog WOW DSI are in "OPEN" state and if ACLog loose power for more than 5 s (information from Loss 5 function for init information), ACLog shall consider themselves "on GROUND".', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-6762]'}, u'SSCS_ACLog_633': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1504': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'NBPT shall be inhibited in Ground Service mode and ELC Ground Servicing CLOSE Request', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'wiating for SIRD update', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2551]'}, u'SSCS_ACLog_1503': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The anti-paralleling function shall be reset after a cold start if the aircraft is on ground, or through an Initiated test command ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-6757]'}, u'SSCS_ACLog_1502': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall function as designed and not introduce hazards to safety when exposed to a cold soak of at least 10 hours at an average of -40\xba C.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-999]'}, u'SSCS_ACLog_632': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog1 shall read the ATCx Lockout sent by respective GCU through the following DSI Ground/Open 1mA:\n- ATC1 Lockout: DSI_ATC_LCKOUT1 (Ground: closed, Open: Open) and DSI_ATC_NLCKOUT1 (Ground: Open, Open: closed)\n- ATC3 Lockout: DSI_ATC_LCKOUT2 (Ground: closed, Open: Open) and DSI_ATC_NLCKOUT2 (Ground: Open, Open: closed)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-651]'}, u'SSCS_ACLog_1081': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'Ground/Open DSI shall be able to withstand -30Vdc.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1678]'}, u'SSCS_ACLog_925': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog1 shall monitor Power Ready indication discrepancy failure of the external power provided by ACLog2 during CBIT', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-595]'}, u'SSCS_ACLog_1561': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'For all Flight phases, the probability of Loss of Thermal CB Status Indication, classified as a potentially Minor failure condition, shall be equal to or less than 1E-04 per flight hour.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-989]'}, u'SSCS_ACLog_1017': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog ASI 115V AC shall be able to acquire presence of 115V AC voltage signals according to the following schematic:\n   \nFigure 34: AC voltage resistor divider', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-706]'}, u'SSCS_ACLog_630': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If ATC3 contactor status is open and ATC3 failure is "command" (contactor failed open), ACLog shall:\n- open ATC3', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1828]'}, u'SSCS_ACLog_927': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'GCUs are : LGCU, RGCU, APU GCU', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'the ACLog shall monitor GCU Overload indication discrepancy failure during CBIT', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-580]'}, u'SSCS_ACLog_637': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If ATC1 Lockout status is Open, ACLog1 shall open ATC1 contactor', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2592]'}, u'SSCS_ACLog_1119': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Functional information = non BITE information', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'After a cold start, aircraft on ground, ACLog shall reset functional information stored in NVM when the pinprog changed from a valid state to another valid state.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1058]'}, u'SSCS_ACLog_635': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-629': {'allocation': u'EDMU SSCS', 'body': u'Time slot duration on EDMU-GCU interfaces shall be 25 ms.', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-1059]'}, u'CAN-IRD-785': {'allocation': u'DC Log SSCS', 'body': u'DCLOG1 (resp. DCLOG2) shall send the following data to EDMU through DCLOG1_EDMU_NETWORK_STATUS_2 (resp. DCLOG2_EDMU_NETWORK_STATUS_2) message:\n\uf0a7\tTRU1 (resp. TRU2) Overload signal \n\uf0a7\tTRU1 (resp. TRU2) Not Overload signal \n\uf0a7\tTRU1 (resp. TRU2) Fail signal \n\uf0a7\tTRU1 (resp. TRU2) Not Fail signal \n\uf0a7\tSupplying source of the EMER busbars: the source which supplies the busbar or Invalid.\n\uf0a7\tSupplying source of the Batt busbars: the source which supplies the busbar or Invalid.', 'refer': u'[SIRD-EPGDS-1014],[SIRD-EPGDS-1016],[SIRD-EPGDS-1020],[SIRD-EPGDS-1896],[SIRD-EPGDS-2307],[SIRD-EPGDS-2677],[SIRD-EPGDS-6777]'}, u'CAN-IRD-784': {'allocation': u'AC Log SSCS', 'body': u'ACLOG2 shall send the following data to EDMU through ACLOG2_EDMU_NETWORK_STATUS_2 message:\n\uf0a7\tGROUND_SERVICING_ACT : Ground servicing mode is activated or not.', 'refer': u'[SIRD-EPGDS-561],[SIRD-EPGDS-1011],[SIRD-EPGDS-1050],[SIRD-EPGDS-1753],[SIRD-EPGDS-1896]'}, u'SSCS_ACLog_738': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog2 shall command ELC through DSO_CDE_AC_CTC1:\n- 28V to closed ELC contactor\n- Open to open ELC contactor', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-440]'}, u'SSCS_ACLog_739': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Normally closed contactor', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog1 shall command AEC through DSO_CDE_AC_CTC3:\n- 28V to open AEC contactor\n- Open to closed AEC contactor', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-465],[SES-ACEPC-467]'}, u'CAN-IRD-622': {'allocation': u'EDMU SSCS', 'body': u'The messages between EDMU and GCU shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_737': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog1 shall command ATC3 through DSO_CDE_AC_CTC2:\n- 28V to closed ATC3 contactor\n- Open to open ATC3 contactor', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-447],[SES-ACEPC-449]'}, u'CAN-IRD-620': {'allocation': u'EDMU SSCS', 'body': u'The messages between EDMU and GCU shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'CAN-IRD-621': {'allocation': u'EDMU SSCS', 'body': u'The messages between EDMU and GCU shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_1114': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACMP unbalanced phase-phase protections shall be activated when the current difference between two phases (AB, BC, AC) is higher than 12.5A +/-5A during 1000ms +/-50ms', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2454]'}, u'SSCS_ACLog_734': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'- 28Vdc to close contactor- Open to open contactor', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall provide 3 DSO 28V/Open high power to command ATC1, ATC2, ATC3, ELC and AEC contactors:\n- DSO_CDE_AC_CTC1\n- DSO_CDE_AC_CTC2\n- DSO_CDE_AC_CTC3', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-440],[SES-ACEPC-444],[SES-ACEPC-447],[SES-ACEPC-459],[SES-ACEPC-465]'}, u'SSCS_ACLog_639': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If ATC3 Lockout status is Open, ACLog1 shall open ATC3 contactor', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2592]'}, u'SSCS_ACLog_638': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If ATC2 Lockout status is Open, ACLog2 shall open ATC2 contactor', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2592]'}, u'CAN-IRD-143': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request SSPCM_EDMU_PROTEC_x every 250 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-142': {'allocation': u'SSPCM SSCS', 'body': u'SSPCM shall send the following data to EDMU through SSPCM_EDMU_PROTEC_x messages:\n\uf0a7\tTrip state of each SSPC: SSPC is tripped or not\n\uf0a7\tValidity of the trip state: the state signal is valid or not.\n\uf0a7\tOpen Locked state of each SSPC: SSPC is Open Locked or not\n\uf0a7\tValidity of the Open locked state: the state signal is valid or not.\n\uf0a7\tEnable state of each SSPC: SSPC is Enable or not.\n\uf0a7\tValidity of the Enable state: the state signal is valid or not.\n\uf0a7\tCurrent of each SSPC : Digital value of the SSPC current (% of the rating)\n\uf0a7\tValidity of the current: the current signal is valid or not.', 'refer': u'[SIRD-EPGDS-253],[SIRD-EPGDS-497],[SIRD-EPGDS-515],[SIRD-EPGDS-1084],[SIRD-EPGDS-1709],[SIRD-EPGDS-1711]'}, u'CAN-IRD-140': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send EDMU_SSPCM_TRIPCMD_x command every 250 ms.', 'refer': u'[SIRD-EPGDS-299],[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1055': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The AClog 2 shall close the AEC except when Ground Servicing Mode is ACTIVE', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2813],[SIRD-EPGDS-2814]'}, u'CAN-IRD-146': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request SSPCM_EDMU_TEMP every 500 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-145': {'allocation': u'SSPCM SSCS', 'body': u'SSPCM shall send the following data to EDMU through SSPCM_EDMU_TEMP message:\n\uf0a7\tSSPCM measured temperature : digital value of the temperature\n\uf0a7\tValidity of the temperature: temperature signal is valid or not', 'refer': u'[SIRD-EPGDS-1079]'}, u'SSCS_ACLog_1407': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'DSI NO / NC aux contact :Open = DSI input is OpenClosed = DSI input is grounded', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The AClog shall compute contactors status and failure (ATCx) which are in the opposite AC EPC according to the following table:\n   ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-944]'}, u'SSCS_ACLog_1058': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of an EDMU change ACMP (RCCB) command, the ACLog shall simultaneously, open the RCCB(s) which have to be open, and apply the sequencing command table from the step defined by the following table:\n   \n Red (R): Only ACMP1B, ACMP3A commands by ACLog2\n Purple (P): All ACMP command by the two ACLog (Blue and red)\n Grey (G): No sequencing, ACMP closure and opening are simultaneous\n "1" means ACMP closed\n "0" means ACMP open\nFigure 18: ACMP computed commands', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2561]'}, u'CAN-IRD-149': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the configuration parameters of each SSPCx of 1 SSPCM through EDMU_SSPCM_CONFCHECK_x message for configuration check.', 'additional': u'EDMU_SSPCM_CONFCHECK are used to check SSPCM configuration', 'refer': u'[SIRD-EPGDS-678]'}, u'CAN-IRD-148': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the configuration parameters of each SSPCx of 1 SSPCM through EDMU_SSPCM_CONFSET_x message.', 'additional': u'EDMU_SSPCM_CONFSET are used to set SSPCM configuration', 'refer': u'[SIRD-EPGDS-678]'}, u'SSCS_ACLog_576': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The Overload failure of each source (L GCU, R GCU and APU GCU) shall be send through the CAN busses', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-582]'}, u'SSCS_ACLog_1115': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACMP Unbalance protection shall be latched into the NVM.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2464]'}, u'SSCS_ACLog_962': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall be designed to not present an injury hazard to the flight crew or maintenance personnel.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-307]'}, u'SSCS_ACLog_577': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1117': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACMP overvoltage protection shall be latched into the NVM.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2464]'}, u'SSCS_ACLog_730': {'status': u'TBC', 'terminal': 'EMPTY', 'additional': u'The tolerance has been added : TBC', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If RCCB "CLOSED" commands become invalid for 150ms +/- 10ms, the ACLog shall act with the RCCB valid command from the other CAN bus. ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2171]'}, u'SSCS_ACLog_570': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall provide 6 DSI Ground/Open 1mA to receive the Overload (OL) and the Not Overload (NOL) signals from the GCUs:\n- DSI_OL_RGEN (Ground: Overload, Open: Not overload)\n- DSI_NOL_RGEN (Ground: Not overload, Open: Overload)\n- DSI_OL_LGEN (Ground: Overload, Open: Not overload)\n- DSI_NOL_LGEN (Ground: Not overload, Open: Overload)\n- DSI_OL_APU (Ground: Overload, Open: Not overload)\n- DSI_NOL_APU (Ground: Not overload, Open: Overload)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-502],[SES-ACEPC-503]'}, u'SSCS_ACLog_731': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'A RCCB shall be controlled from only one of the CAN busses.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2165]'}, u'SSCS_ACLog_1403': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1051': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1400': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'The ACLog shall be compliant with FDD document provided in Appendix', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'For failures numbers', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1050': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_573': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1167': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1052': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The AC Log shall provide a DSO 28V/Open "DSO_AC_EP_PINF" with max nominal current of 300mA max and a current limitation of 0.5A +/-100mA to limit the Pin F output current', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2590],[SES-ACEPC-661]'}, u'CAN-IRD-858': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,SSPCM SSCS', 'body': u'If value of the Software Identification Version (SIV) received by a LRU1 is not corresponding to the value expected from LRU2, LRU1 shall continue to send its messages to LRU2.', 'derived': u'True', 'additional': u'LRU1 & LRU2 could be EMDU, XLOG, GCU or SSPCM.The SIV changes when there is a CAN Frame definition evolution implying a compatibility break with previous version (for example: a signal has moved to another address in the frame or other frame)', 'rationale': u'In order to prevent problems with incompatible versions of LRUs softwares'}, u'SSCS_ACLog_816': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall meet the Radiated Emissions requirements defined in section 21 of RTCA/DO-160G Category M.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-539]'}, u'CAN-IRD-857': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,SSPCM SSCS', 'body': u'If value of the Software Identification Version (SIV) received by a LRU1 is not corresponding to the value expected from LRU2, LRU1 shall ignore content of all messages from LRU2.', 'derived': u'True', 'additional': u'LRU1 & LRU2 could be EMDU, XLOG, GCU or SSPCM.The SIV changes when there is a CAN Frame definition evolution implying a compatibility break with previous version (for example: a signal has moved to another address in the frame or other frame)', 'rationale': u'In order to prevent problems with incompatible versions of LRUs softwares'}, u'CAN-IRD-850': {'allocation': u'Emer Log SSCS', 'body': u'AC busbars shall include the following bubars:\n\uf0a7\tAC1_BUSBAR\n\uf0a7\tAC2_BUSBAR', 'refer': u'[SIRD-EPGDS-1896],[SIRD-EPGDS-1905]'}, u'CAN-IRD-853': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS,SSPCM SSCS', 'body': u'The special frame number 127 shall not be used for functionnal communication purpose by the CAN IRD.', 'derived': u'True', 'rationale': u'Reserved for internal SSPC Module use (maintenability)'}, u'CAN-IRD-852': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall transfer data from CAN to CAN according to the following gateway rules : ', 'refer': u'[SPE-BITE-1547]'}, u'CAN-IRD-495': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'CAN IDs of SPDA5 to EDMU frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-494': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'CAN IDs of SPDA4 to EDMU frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-496': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'CAN IDs of SPDA6 to EDMU frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-491': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'CAN IDs of SPDA1 to EDMU frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_953': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall monitor the Ground/flight DSI status inconsistency failure during CBIT', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-634]'}, u'CAN-IRD-493': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'CAN IDs of SPDA3 to EDMU frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-492': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'CAN IDs of SPDA2 to EDMU frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-716': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall be able to request RGCU_EDMU_NVM_PACKET_[1;34] every 500 ms.', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-1059]'}, u'CAN-IRD-717': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall be able to request AGCU_EDMU_NVM_PACKET_[1;42] every 500 ms.', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-1059]'}, u'CAN-IRD-714': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall be able to request EMERLOG_EDMU_NVM_PACKET_[1;14] every 500 ms.', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-1059]'}, u'CAN-IRD-715': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall be able to request LGCU_EDMU_NVM_PACKET_[1;34] every 500 ms.', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-1059]'}, u'CAN-IRD-712': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall be able to request ACLOG[1/2]_EDMU_NVM_PACKET_[1;42] every 500 ms.', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-1059]'}, u'CAN-IRD-713': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall be able to request DCLOG[1/2]_EDMU_NVM_PACKET_[1;42] every 500 ms.', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-1059]'}, u'CAN-IRD-710': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send EDMU_GCU_DISC_x every 100 ms to RGCU.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1166': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1455': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog shall declare an internal power supply failure after a confirmation time of 5s +/-0.5s to EDMU by CAN busses when:\n a power supply converter failure occur\nOR\n an internal fuse power supply failure occur', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1030],[SPE-BITE-1038],[SPE-BITE-1488]'}, u'SSCS_ACLog_704': {'status': u'MATURE', 'terminal': u'YES', 'additional': u'The Hardware and Software Part Number is stored in NVM during ATP', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall save into the NVM the Hardware, and Software Part number.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1671]'}, u'SSCS_ACLog_1089': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'The ACLog software shall use the phase order zero detectors to compute frequencies.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To define how the frequency has to be computed', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_777': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall meet the overpressure requirements defined in section 4 of RTCA/DO-160G Category A2.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-142]'}, u'SSCS_ACLog_1457': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'ACLOG2 cannot monitor AC BUS1, waiting for Bite psec Update', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLOG1 CBIT shall monitor AC BUS1 Overvoltage Protection activation', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1491]'}, u'SSCS_ACLog_445': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'ASI and contactor response time are included', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The Open Phase AC external protection shall be activated if any of the three phase currents of the External Power is lower than 30A +/-5A and the 2 others are higher than 50A +/-5A for the time delay 2,7s +/- 300ms.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-458]'}, u'SSCS_ACLog_701': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog shall have the following LEDs indicators:\n- Power supply indicator: this indicator is switch green when, one off the 28V external power supply is available (hardware controlled).\n- Good health indicator: green when no internal failure during PBIT and CBIT, red when at least one failure is detected during PBIT or CBIT\n- Communication indicator: blink Green (4Hz / duty cycle of 50%) when CAN communication is alive, off when there is no CAN communication.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-721]'}, u'SSCS_ACLog_1122': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'When an unbalanced protection is detected, the ACLog shall open the dedicated ACMP', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2460]'}, u'CAN-IRD-378': {'body': u'The following table is the bus load analysis based on a maximum fully loaded bus: \n1 bus with ACLOG2, DCLOG2 and EMERLOG', 'refer': u'[SIRD-EPGDS-114],End: \tTrue'}, u'SSCS_ACLog_1450': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall monitor contactors Lockout Discrepancy failures : \nATC1 for ACLog 1\nATC3 for ACLog 1\nATC2 for ACLog 2', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1478],[SPE-BITE-1479]'}, u'SSCS_ACLog_466': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'When I\xb2t  RCCB protection is detected for ACMP 3A RCCB, the ACLog2 shall proceed to the ACMP 3A RCCB opening.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1759],[SIRD-EPGDS-2460]'}, u'SSCS_ACLog_1453': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of Contactor Lockout Discrepancy Failure, the ACLOG shall report the concerned failure to EDMU using CAN busses.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1482]'}, u'CAN-IRD-358': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'The messages between EDMU and SSPCM shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN Protocol', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'CAN-IRD-359': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'The messages between EDMU and SSPCM shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN Protocol', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'CAN-IRD-356': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'The messages between EDMU and SSPCM shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN Protocol', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'CAN-IRD-357': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'The messages between EDMU and SSPCM shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN Protocol', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'CAN-IRD-355': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'The messages between EDMU and SSPCM shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN Protocol', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'CAN-IRD-352': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS,SSPCM SSCS', 'body': u'System ID shall be as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-119],[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_464': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'When I\xb2t  RCCB protection is detected for ACMP 1B RCCB, the ACLog2 shall proceed to the ACMP 1B RCCB opening.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1759],[SIRD-EPGDS-2460]'}, u'CAN-IRD-350': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS,SSPCM SSCS', 'body': u'Control Bus ID shall be as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-119],[SIRD-EPGDS-2102]'}, u'CAN-IRD-351': {'body': u'Side ID shall be the side of the subscriber (slave) LRU and shall be defined as follows:', 'additional': u'Side ID does not correspond to the side of the master (EDMU)', 'derived': u'True', 'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS,SSPCM SSCS', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-119],[SIRD-EPGDS-2102]'}, u'CAN-IRD-569': {'allocation': u'HS', 'body': u'RGCU shall send the following OMS data to EDMU through RGCU_EDMU_OMS_1 messages :\n- Digtal value of the  Right  generator oil temperature.\n- Status of the oil pressure\n- Status of oil filter\n- Status of the oil level\n- Validity attached to these data.', 'refer': u'[SIRD-EPGDS-2975],[SPE-BITE-1332]'}, u'CAN-IRD-216': {'allocation': u'AC Log SSCS', 'body': u'ACLOG[1/2] shall send its BITE Monitoring data to EDMU through ACLOG[1/2]_EDMU_BITE_x messages.', 'refer': u'[SIRD-EPGDS-390],[SIRD-EPGDS-462],[SIRD-EPGDS-482],[SIRD-EPGDS-1051],[SIRD-EPGDS-1869],[SIRD-EPGDS-1871],[SIRD-EPGDS-2030],[SIRD-EPGDS-2465],[SIRD-EPGDS-2773],[SPE-BITE-120],[SPE-BITE-126],[SPE-BITE-556],[SPE-BITE-575],[SPE-BITE-579],[SPE-BITE-582],[SPE-BITE-585],[SPE-BITE-616],[SPE-BITE-618],[SPE-BITE-619],[SPE-BITE-621],[SPE-BITE-623],[SPE-BITE-635],[SPE-BITE-751],[SPE-BITE-752],[SPE-BITE-772],[SPE-BITE-876],[SPE-BITE-879],[SPE-BITE-972],[SPE-BITE-973],[SPE-BITE-1000],[SPE-BITE-1016],[SPE-BITE-1086],[SPE-BITE-1485],[SPE-BITE-1488]'}, u'CAN-IRD-215': {'allocation': u'AC Log SSCS', 'body': u'ACLOG[1/2] shall send the following data to EDMU through ACLOG[1/2]_EDMU_MODULE_STATUS message:\n\uf0a7\tIBIT acceptance: LRU is in condition for IBIT test or not.\n\uf0a7\tits Module mode\n\uf0a7\tits Flight/Ground status : LRU is in Flight or on Ground\n\uf0a7\tThe validity of the Flight/Ground status\n\uf0a7\tPower supply voltage presence : voltage is present or not\n\uf0a7\tNVM download acceptance state', 'refer': u'[SIRD-EPGDS-387],[SIRD-EPGDS-461],[SIRD-EPGDS-1051],[SIRD-EPGDS-2466],[SIRD-EPGDS-6757],[SPE-BITE-176],[SPE-BITE-202]'}, u'CAN-IRD-214': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to ACLOG[1/2] through EDMU_XLOG_BITE message:\n\uf0a7\tIBIT test request: IBIT test is requested or not.', 'refer': u'[SIRD-EPGDS-387],[SIRD-EPGDS-461],[SIRD-EPGDS-2466],[SIRD-EPGDS-6757],[SPE-BITE-176],[SPE-BITE-202]'}, u'CAN-IRD-212': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request ACLOG[1/2]_EDMU_IDENT_x every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-211': {'allocation': u'AC Log SSCS', 'body': u'ACLOG[1/2] shall send the following data to EDMU through ACLOG[1/2]_EDMU_IDENT_x messages:\n\uf0a7\tSoftware Interface Version: ACLOG to EDMU Software Interface Version associated to this version of specification shall be 0x01.\n\uf0a7\tthe CRC32 of its software (A665 CRC32 calculation shall be used)\n\uf0a7\tits Module type : Module type is ACLOG1 or ACLOG2\n\uf0a7\tits LRU Part Number\n\uf0a7\tits SW Part Number\n\uf0a7\tit Serial Number', 'additional': u"For P/N and S/N :1 - Not used char to be filled with NULL char.2 - Char 1 is MSB of the string. Exple : P/N : ECE778785Char 1 = 'E'Char 2 = 'C'...Char 9 = '5'Char 10 = Null char...Char 16 = Null char", 'refer': u'[SIRD-EPGDS-1051],[SPE-BITE-1414]'}, u'CAN-IRD-210': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to ACLOG[1/2] through EDMU_XLOG_IDENT message:\n\uf0a7\tEDMU ACLOG Software Interface Version: EDMU to ACLOG Software Interface Version associated to this version of specification shall be 0x01.', 'refer': u'[SPE-BITE-1414]'}, u'SSCS_ACLog_1024': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'ASI 115V AC and ASI Current  input shall be filtered by a 1st order low pass filter with a cut off frequency of 10KHz +/-30%', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'ASI 115V specification', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-563': {'allocation': u'HS', 'body': u'RGCU shall send the following EICAS data to EDMU through RGCU_EDMU_EICAS_x messages :\n- Right Generator good / Fail  Status\n- Right Generator Oil Over temperature status\n- Right Generator ON/OFF status\n- Right GCU Communication fault status\n- Validity attached to these data.', 'refer': u'[SIRD-EPGDS-1052],[SIRD-EPGDS-1641],[SPE-BITE-1332]'}, u'CAN-IRD-564': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request RGCU_EDMU_EICAS_x every 500 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-219': {'allocation': u'AC Log SSCS', 'body': u'ACLOG[1/2] shall send its Engineering Data to EDMU through ACLOG[1/2]_EDMU_ENG_DATA_x messages.', 'derived': u'True', 'rationale': u'Provision'}, u'CAN-IRD-566': {'allocation': u'HS', 'body': u'RGCU shall send the following Synoptic data to EDMU through RGCU_EDMU_SYNOPTIC_1 messages: \n- Average digital value of the Generator Point Of Regulation voltage \n- Generator Line Contactor 2 , auxilliary contactor status \n- Excitation status of Right generator\n- Right engine Running\n- Validity attached to these data (data mentioned above)\n- Right Generator Point Of Regulation Frequency\n- Validity attached to this piece of data (Point Of Regulation Frequency).', 'refer': u'[SIRD-EPGDS-1052]'}, u'SSCS_ACLog_1478': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Label (12)', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall switch from AC External Power Mode ACTIVE to AC External Power Mode NOT ACTIVE when:\n- ELC ACEP OPEN Request is met\nAND\n- ELC Status is OPEN', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-6836]'}, u'SSCS_ACLog_1280': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'to avoid unexpected trip reset', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog shall prevent a continuous resetting of the RCCB trip by taking into account the reset trip command only if the CAN signal switch from inactive to active', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2196]'}, u'SSCS_ACLog_725': {'status': u'TBD', 'terminal': 'EMPTY', 'additional': u'tolerance added', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If the RCCB "CLOSED" command becomes valid on the CAN Bus 1 (Left) within the timeout (1s +/-100ms), the ACLog shall act according to the command received on CAN Bus 1 and ignore RCCB command from the CAN Bus 2 (right).', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2170]'}, u'SSCS_ACLog_1026': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'ASI 115V AC and ASI Current output ripple voltage shall be less than 80mV', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'ASI 115V specification', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1021': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'ASI 115V AC and ASI Current measurements shall be root mean square measures', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-375]'}, u'SSCS_ACLog_886': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall determinate its position (ACLog1 or ACLog2) at start up according to the following table:\n   \nOthers combinations are invalid\nTable 1: Pin programming table', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-657]'}, u'CAN-IRD-762': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the EDMU_GCU_LG_COM message every 100 ms', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-761': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data through EDMU_GCU_LG_COM message:\n- NG_WOFFW\n- RG_WOFFW\n- LG_WOFFW\n- NG_WOW\n- RG_WOW\n- LG_WOW\n- LRG_WOW\n- WOFFW\n- MG_WOW\n- WOW\n- WOW_Fail\n- WOW_STATUS_Valid : Input NDO containing WOW signals is not received or SSM invalid', 'refer': u'[SIRD-EPGDS-1563],[SIRD-EPGDS-2564],[SIRD-EPGDS-2565],[SIRD-EPGDS-2579],[SIRD-EPGDS-2762]'}, u'SSCS_ACLog_708': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-767': {'allocation': u'AC Log SSCS', 'body': u'RCCBs shall include the following RCCBs for ACLOG1:\n\uf0a7\tACMP3B', 'refer': u'[SIRD-EPGDS-1050],[SIRD-EPGDS-1081]'}, u'CAN-IRD-766': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall schedule the request sending according to the following table on EDMU-RGCU interface:', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-113],[SIRD-EPGDS-1059]'}, u'CAN-IRD-765': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the EDMU_GCU_ADS_COM message every 100 ms', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-764': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data through EDMU_GCU_ADS_COM message: \n- Pressure_Altitude\n- Pressure_Altitude_Valid : Input NDO containing Pressure_Altitude is not received or SSM invalid', 'refer': u'[SIRD-EPGDS-6306]'}, u'SSCS_ACLog_698': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'If capacitor technology is not dissimilar between ACLog and EMERLog, capacitors used shall at least be different in terms of values or voltage rating.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-904]'}, u'SSCS_ACLog_1022': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'In accordance with RAE-BA700-103 rev B', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'ASI 115V AC and ASI Current  shall be able to measure AC voltages with frequency from 340Hz to 650Hz', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'ASI 115V specification', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_887': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1009': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'When medium DSO 28V/Open circuit type is set to 28V state, the output voltage shall be >17V at 200 mA over the whole 28V variation range', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-752]'}, u'SSCS_ACLog_1279': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If RCCB "TRIPPED" command from EDMU is "Trip reset", the ACLog shall unlatch all associated ACMP protections.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2195]'}, u'SSCS_ACLog_1278': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The AClog shall report the status "trip" or "Open-Locked" only if the RCCB is open.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2177]'}, u'CAN-IRD-329': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall be the CAN scheduler on each CAN interface.', 'refer': u'[SIRD-EPGDS-111],[SIRD-EPGDS-112]'}, u'SSCS_ACLog_883': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'DSI NO / NC aux contact :Open = DSI input is OpenClosed = DSI input is grounded', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The AClog1 shall determine the AEC contactor status, status validity and failure of contactor according to the following table:\n \n \nTable 9: AEC contactor status, status validity and failure', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-943]'}, u'SSCS_ACLog_1374': {'status': u'MATURE', 'terminal': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The BITE NVM header shall be organized according to the following table : \n  \nTable 26: BITE NVM header', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1353]'}, u'SSCS_ACLog_1375': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The Index Last Fault shall contain the index of the last Fault Record filled.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1352]'}, u'SSCS_ACLog_1376': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If the Index of the last fault is equal to 191, the next fault index shall be 1.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1354]'}, u'SSCS_ACLog_1377': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The Last Flight Leg with fault shall be filled, when a fault is memorized, with the Flight Leg information received from Avionics.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1355]'}, u'SSCS_ACLog_1378': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The Last Flight Leg shall be filled as soon as the Flight Leg information received by the Avionics is different of this field.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1356]'}, u'SSCS_ACLog_1379': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Each fault Record shall be organized according the following table : \n  \nTable 27:  fault Record', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1357]'}, u'CAN-IRD-203': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request ACLOG[1/2]_EDMU_CB_STATUS_x status every 250 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1275': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The AClog shall memorize in non volatile memory the "trip" and the "Open-Locked" states of each RCCB.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2173]'}, u'SSCS_ACLog_1277': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'to have consistent display with AClog', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The AClog shall report to the EDMU the status "trip", "Open-Locked" and "trip cause" after memorization in AClog NVM.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2176]'}, u'CAN-IRD-324': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS,SSPCM SSCS', 'body': u'Equipment shall not initiate overload frame due to its incapacity to treat all incoming frames.', 'derived': u'True', 'rationale': u'To ensure equipment performances.', 'refer': u'[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_1543': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall provide DSO status feedback for every DSO implemented and send it to SW', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2738]'}, u'SSCS_ACLog_492': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The development and management of complex hardware shall be according to RTCA DO-254 and the guidelines provided by FAA ORDER 8110.105.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1589]'}, u'SSCS_ACLog_1541': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'DSI NO / NC aux contact :Open = DSI input is OpenClosed = DSI input is grounded', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The AClog2 shall compute contactors status and failure AEC which is in the opposite AC EPC according to the following table:\n   ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-944]'}, u'SSCS_ACLog_559': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'The opening sequence starts just after the DSO_NBPT grounded, not after the end of the DSO_NBPT 100ms ', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'To switch from a network configuration n to a network configuration n+1, the ACLog shall open simultaneously contactors which have to be open in the configuration n+1 (Opening sequence), and wait 20ms +/-1ms for opening contactor confirmation, then start the "AC Log Closure Sequence" requirement.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2554],[SES-ACEPC-245]'}, u'SSCS_ACLog_1428': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'ACLog shall provide upstream and downstream Power supplies conversion voltage presence monitoring to detect failure.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-792]'}, u'CAN-IRD-426': {'allocation': u'AC Log SSCS', 'body': u'ACLOG[1/2] shall send the following data to EDMU through ACLOG[1/2]_EDMU_ALARM_STATUS message:\n\uf0a7\tState of AC Alarm: Alarm is activated or not.', 'refer': u'[SIRD-EPGDS-1050]'}, u'SSCS_ACLog_1545': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall send failures detected during CBIT to both EDMUs using their CAN busses.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-126]'}, u'SSCS_ACLog_1544': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_552': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'To communicate a Power transfer to the Emerlog and DCLog Pcbs, the ACLog shall implement a DSO Ground/Open low power "DSO_NBPT"', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-680]'}, u'SSCS_ACLog_1425': {'status': u'TBD', 'terminal': u'YES', 'additional': u'waiting for system definition', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall meet the following combined temperature, altitude and humidity requirements : TBD.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-1000]'}, u'SSCS_ACLog_550': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall send IS_IN_FLIGHT and FLIGHT_STATE_VALID through the CAN busses.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2030],[SPE-BITE-635]'}, u'CAN-IRD-427': {'allocation': u'AC Log SSCS', 'body': u'AC alarms shall include the following alarms for ACLOG1:\nACLOG1_DP_ACT\nAC_BUS1_FAIL\nACLOG1_FAIL\nATC1_FAILED_CLOSED_CAS\nATC1_FAILED_OPEN_CAS\nATC3_FAILED_CLOSED_CAS\nATC3_FAILED_OPEN_CAS\nAEC_FAILED_CLOSED_CAS\nAEC_FAILED_OPEN_CAS', 'refer': u'[SIRD-EPGDS-1050],[SPE-BITE-1265]'}, u'SSCS_ACLog_557': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'cf \xa7 2.7', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'According to the power inputs availability, the ACLog shall configure the ATC1, ATC3, ATC2, ELC, GLC1, ALC and GLC2 contactors by following the truth table described below:\n   \nLegend:\nAC EP: \t0: AC external power not power ready\n\t1: AC external power power ready\nLGCU:\t0: Left GEN is not power ready\n\t1: Left GEN is power ready\nRGCU:\t0: Right is not power ready\n\t1: Right GEN is power ready\nAPU:\t0: APU GEN is not power ready\n\t1: APU GEN is power ready\nATCx, ELC:\t0: To open contactor\n\t\t1: To closed contactor\nGLCx, ALC:\t0: GLC is not acknowledged\n\t\t1: To acknowledge GCU\nTable 10: Network Management configuration table', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1318],[SIRD-EPGDS-1319],[SIRD-EPGDS-1336],[SIRD-EPGDS-1340],[SIRD-EPGDS-1341],[SIRD-EPGDS-1342],[SIRD-EPGDS-1343],[SIRD-EPGDS-1344],[SIRD-EPGDS-1346],[SIRD-EPGDS-1349],[SIRD-EPGDS-1350],[SIRD-EPGDS-1351],[SIRD-EPGDS-1353],[SIRD-EPGDS-1686],[SIRD-EPGDS-2040]'}, u'SSCS_ACLog_554': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'On a power input event, the ACLog "DSO_NBPT" shall be grounded during 100ms +/-20ms', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2059],[SIRD-EPGDS-2060]'}, u'SSCS_ACLog_1423': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u' The ACLog oscillator chose shall meet these constraints :\n- tolerence : less or equal than 100ppm \n- CAN bus speed of 500kbit/s', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2106]'}, u'SSCS_ACLog_679': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall provide 5 DSI Ground/Open 5mA to monitor TCB status (thanks to their auxiliaries contacts):\n- DSI_AC_CB_L1\n- DSI_AC_CB_L2\n- DSI_AC_CB_L3\n- DSI_AC_CB_L4\n- DSI_AC_CB_L5', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SES-ACEPC-333],[SES-ACEPC-496]'}, u'SSCS_ACLog_598': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog1 shall read the ELC auxiliaries contacts thanks to the DSI Ground/Open 5mA \n "DSI_AC_CTC1_OPP_NO" for Normally Opened aux contact: DSI Open = CTC Open and\n "DSI_AC_CTC1_OPP_NC" for Normally Closed aux contact : DSI Grounded = CTC Open', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-417]'}, u'SSCS_ACLog_673': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-572': {'allocation': u'HS', 'body': u'RGCU shall send the following data to EDMU through RGCU_EDMU_BITE_1 messages :\n- RIGHT_GCU CANA Bus or Receiver or Transmitter Failure (BUS/WIRE (CBITE) data)\n- RIGHT_GCU CANB Bus or Receiver or Transmitter Failure (BUS/WIRE (CBITE) data)\n- Validity attached to these data (BUS/WIRE (CBITE))\n- RIGHT_GCU RVFG ACBUS2 Overcurrent (BUS/WIRE (PRIT))\n- RIGHT_GCU RVFG Ex Fld Wire Failed (BUS/WIRE (PRIT))\n- RIGHT_GCU RVFG Ex Fld Wire/Winding/Rotor Failed (BUS/WIRE (PRIT))\n- RIGHT_GCU RVFG Gen PHA Wire Open (BUS/WIRE (PRIT))\n- RIGHT_GCU RVFG Gen PHB Wire Open (BUS/WIRE (PRIT))\n- RIGHT_GCU RVFG Gen PHC Wire Open (BUS/WIRE (PRIT))\n- RIGHT_GCU RVFG PMG Wire failed (BUS/WIRE (PRIT))\n- RIGHT_GCU RVFG AC Tie Bus Overcurrent Fail (BUS/WIRE (PRIT))\n- Validity attached to these data (BUS/WIRE (PRIT))', 'refer': u'[SIRD-EPGDS-2975],[SPE-BITE-120],[SPE-BITE-126]'}, u'SSCS_ACLog_599': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall send the ELC "Aux" failure through the CAN busses', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-973]'}, u'SSCS_ACLog_677': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall send RCCB protection cause through the CAN busses', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-497]'}, u'SSCS_ACLog_676': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACMP I\xb2t trip protection shall be latched and sent into NVM', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-499]'}, u'CAN-IRD-666': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data through EDMU_GCU_NVM_DL message:\n\uf0a7\tNVM Download request: NVM downloading operation is requested or not.\n\uf0a7\tNVM reset request: NVM reset operation is requested or not.\n\uf0a7\tNVM Block First byte: First byte of NVM block requested by EDMU.\n\uf0a7\tNVM Block size : Number of bytes of NVM requested by EDMU', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-653],[SPE-BITE-1054],[SPE-BITE-1057]'}, u'CAN-IRD-667': {'allocation': u'HS', 'body': u'AGCU shall send the following data through AGCU_EDMU_NVM_DL_STATUS message :\n\uf0a7\tNVM Download answer: LRU accepts or not the NVM download request from EDMU.\n\uf0a7\tThe size of the NVM : Size of the NVM of the LRU.\n\uf0a7\tThe number of NVM block packets : Number of packet needed to achieve NVM block download if request is accepted else 0.\n\uf0a7\tCRC NVM of block : CRC of NVM block if request is accepted else 0.', 'refer': u'[SIRD-EPGDS-652],[SPE-BITE-1054]'}, u'CAN-IRD-664': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request RGCU_EDMU_NVM_DL_STATUS every 500 ms.', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_558': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'ACLog1 and ACLog2 are not synchronized', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'To switch from a network configuration to another, after the opening sequence, the ACLog shall follow the AC closure sequence described here below:\n   \nTable 12: ACLOG1 /AC LOG2 closure sequence', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1801],[SIRD-EPGDS-2554]'}, u'CAN-IRD-662': {'allocation': u'HS', 'body': u'RGCU shall send the following data through RGCU_EDMU_NVM_DL_STATUS message :\n\uf0a7\tNVM Download answer: LRU accepts or not the NVM download request from EDMU.\n\uf0a7\tThe size of the NVM : Size of the NVM of the LRU.\n\uf0a7\tThe number of NVM block packets : Number of packet needed to achieve NVM block download if request is accepted else 0.\n\uf0a7\tCRC NVM of block : CRC of NVM block if request is accepted else 0.', 'refer': u'[SIRD-EPGDS-652],[SPE-BITE-1054]'}, u'CAN-IRD-663': {'allocation': u'HS', 'body': u'RGCU shall send NVM data to EDMU through RGCU_EDMU_NVM_PACKET_[1;42] messages :\n\uf0a7\tPacket number : The number of the NVM packet transmitted.\n\uf0a7\tNVM packet : 6 bytes of NVM.', 'refer': u'[SIRD-EPGDS-652],[SPE-BITE-1054]'}, u'CAN-IRD-109': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS', 'body': u'One CAN bus named EDMU-1-CAN-XLOG-2 shall connect the following LRUs:\n\uf0a7\tEDMU1\n\uf0a7\tACLOG2 on control Bus B\n\uf0a7\tDCLOG2 on control Bus B\n\uf0a7\tEMERLOG on control Bus B', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-110],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-312]'}, u'CAN-IRD-108': {'allocation': u'AC Log SSCS,DC Log SSCS,EDMU SSCS', 'body': u'One CAN bus named EDMU-2-CAN-XLOG-1 shall connect the following LRUs:\n\uf0a7\tEDMU2\n\uf0a7\tACLOG1 on control Bus B\n\uf0a7\tDCLOG1 on control Bus B', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-110],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-311]'}, u'CAN-IRD-107': {'allocation': u'AC Log SSCS,DC Log SSCS,EDMU SSCS', 'body': u'One CAN bus named EDMU-1-CAN-XLOG-1 shall connect the following LRUs:\n\uf0a7\tEDMU1\n\uf0a7\tACLOG1 on control Bus A\n\uf0a7\tDCLOG1 on control Bus A', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-110],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-311]'}, u'CAN-IRD-106': {'body': u'EPGDS CAN network shall be as follows:', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-110],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-164],[SIRD-EPGDS-311],[SIRD-EPGDS-312],End: \tTrue'}, u'SSCS_ACLog_1019': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'ASI 115V AC and ASI Current  input impedance shall be at least 99KOhms whether the ACLog is supplied or not', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'ASI 115V specification', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_980': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'Ground/Open DSI shall use a +12V (+/-5%)  polarization voltage', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-728]'}, u'CAN-IRD-668': {'allocation': u'HS', 'body': u'AGCU shall send NVM data to EDMU through AGCU_EDMU_NVM_PACKET_[1;42] messages :\n\uf0a7\tPacket number : The number of the NVM packet transmitted.\n\uf0a7\tNVM packet : 6 bytes of NVM.', 'refer': u'[SIRD-EPGDS-652],[SPE-BITE-1054]'}, u'CAN-IRD-669': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request AGCU_EDMU_NVM_DL_STATUS every 500 ms.', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-1059]'}, u'CAN-IRD-779': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request EMERLOG_EDMU_FUSE_STATUS_x every 250 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_774': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall meet the Vibration requirements defined in section 8 of RTCA/DO-160G:\n- Category S Curve C for Standard Vibrations \n- Category H Curve R for High-Level Short Duration', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-149]'}, u'SSCS_ACLog_784': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall meet the Humidity requirements defined in section 10 of RTCA/DO-160G Category W (Drip proof Test).', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-153]'}, u'SSCS_ACLog_783': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall meet the Fluid Susceptibility requirements defined in section 11 of RTCA/DO-160G Category F, Spray Test (Tests on samples).', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-155]'}, u'SSCS_ACLog_782': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall meet the Fungus Resistance requirements defined in section 13 of RTCA/DO-160G Category F.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-158]'}, u'SSCS_ACLog_781': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall meet the Magnetic Effect requirements defined in section 15 of RTCA/DO-160G Category Z.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-160]'}, u'CAN-IRD-818': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request RGCU_EDMU_ANALOG_x every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_827': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'When the differential protection is activated, ACLog1 shall open the ATC3 contactor', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-389]'}, u'SSCS_ACLog_1080': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall receive, at least, the following informations by CAN from the EDMU:\n- Flight leg\n- Flight phase\n- Aircraft tail\n- Time\n- Date ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-996]'}, u'SSCS_ACLog_1419': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog shall check all Current transformer function during PBIT', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-189]'}, u'CAN-IRD-815': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request AGCU_EDMU_ANALOG_x every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-814': {'allocation': u'HS', 'body': u'AGCU shall send the following data through AGCU_EDMU_ANALOG_x messages :\n- AGCU_PHA_VOLTAGE\n- Validity attached to AGCU_PHA_VOLTAGE\n- AGCU_PHB_VOLTAGE\n- Validity attached to AGCU_PHB_VOLTAGE\n- AGCU_PHC_VOLTAGE\n- Validity attached to AGCU_PHC_VOLTAGE\n- AGCU_PHA_CURRENT\n- Validity attached to AGCU_PHA_CURRENT\n- AGCU_PHB_CURRENT\n- Validity attached to AGCU_PHB_CURRENT\n- AGCU_PHC_CURRENT\n- Validity attached to AGCU_PHC_CURRENT', 'refer': u'[SIRD-EPGDS-2975]'}, u'CAN-IRD-817': {'allocation': u'HS', 'body': u'RGCU shall send the following data through RGCU_EDMU_ANALOG_x messages :\n- RGCU_PHA_VOLTAGE\n- Validity attached to RGCU_PHA_VOLTAGE\n- RGCU_PHB_VOLTAGE\n- Validity attached to RGCU_PHB_VOLTAGE\n- RGCU_PHC_VOLTAGE\n- Validity attached to RGCU_PHC_VOLTAGE\n- RGCU_PHA_CURRENT\n- Validity attached to RGCU_PHA_CURRENT\n- RGCU_PHB_CURRENT\n- Validity attached to RGCU_PHB_CURRENT\n- RGCU_PHC_CURRENT\n- Validity attached to RGCU_PHC_CURRENT', 'refer': u'[SIRD-EPGDS-2975]'}, u'SSCS_ACLog_766': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall meet the "Temperature Variation" requirements defined in section 5 of RTCA/DO-160G Category B.\nTemperature Elevation of 10 \xb0C is  applied to the ambiant temperature.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-143],[SES-ACEPC-291]'}, u'SSCS_ACLog_850': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'The reference voltage will be ASI_RCCB1_CURRENT_RET for ASI_RCCB1_CURRENT_PHx and ASI_RCCB2_CURRENT_RET for ASI_RCCB2_CURRENT_PHx', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog2 shall read, through current transformers, the three RCCB phases currents of ACMP3A and ACMP1B thanks to the following ASI:\n- ACMP3A phase A: ASI_RCCB1_CURRENT_PHA\n- ACMP3A phase B: ASI_RCCB1_CURRENT_PHB\n- ACMP3A phase C: ASI_RCCB1_CURRENT_PHC\n- ACMP1B phase A: ASI_RCCB2_CURRENT_PHA\n- ACMP1B phase B: ASI_RCCB2_CURRENT_PHB\n- ACMP1B phase C: ASI_RCCB2_CURRENT_PHC', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2453],[SES-ACEPC-348],[SES-ACEPC-488],[SES-ACEPC-489]'}, u'SSCS_ACLog_608': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_609': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog1 shall read the ATCx auxiliaries contacts thanks to the following DSI Ground/Open 5mA:\n- ATC1: \n DSI_AC_CTC1_NO for Normally Opened aux contact: DSI Open = CTC Open and \n DSI_AC_CTC1_NC for Normally Closed aux contact : DSI Grounded = CTC Open\n- ATC2: \n DSI_AC_CTC2_OPP_NO for Normally Opened aux contact: DSI Open = CTC Open and \n DSI_AC_CTC2_OPP_NC for Normally Closed aux contact : DSI Grounded = CTC Open\n- ATC3: \n DSI_AC_CTC2_NO for Normally Opened aux contact: DSI Open = CTC Open and\n DSI_AC_CTC2_NC for Normally Closed aux contact : DSI Grounded = CTC Open', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-430],[SES-ACEPC-431],[SES-ACEPC-432]'}, u'SSCS_ACLog_606': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_540': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_605': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_823': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-613': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to AGCU through EDMU_GCU_IDENT message:\n\uf0a7\tEDMU AGCU Software Interface Version: EDMU to AGCU Software Interface Version associated to this version of specification shall be 0x01.', 'refer': u'[SPE-BITE-1414]'}, u'SSCS_ACLog_1160': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-611': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send EDMU_GCU_FLIGHTINFO_x every 1 second to AGCU.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-610': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to AGCU through EDMU_GCU_FLIGHTINFO_x messages:\n\uf0a7\tDate : Digital values of Year, Month and Day\n\uf0a7\tValidity of Date and time : Date and time is valid or not\n\uf0a7\tTime : Digital values of Hour and Minute\n\uf0a7\tFlight phases\n\uf0a7\tValidity of Flight phase : Flight phase is valid or not\n\uf0a7\tAircraft tail\n\uf0a7\tValidity of Aircraft tail : Aircraft tail is valid or not\n\uf0a7\tFlight leg\n\uf0a7\tValidity of Flight leg : Flight leg is valid or not', 'refer': u'[SIRD-EPGDS-1898],[SPE-BITE-996]'}, u'SSCS_ACLog_1165': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1164': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-615': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request AGCU_EDMU_IDENT_x every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-614': {'allocation': u'HS', 'body': u'AGCU shall send the following data to EDMU through AGCU_EDMU_IDENT_x messages:\n\uf0a7\tSoftware Interface Version: AGCU to EDMU Software Interface Version associated to this version of specification shall be 0x01.\n\uf0a7\tthe CRC32 of its software (A665 CRC32 calculation shall be used)\n\uf0a7\tits Module type : Module type is AGCU\n\uf0a7\tits LRU Part Number\n\uf0a7\tits SW Part Number\n\uf0a7\tit Serial Number', 'refer': u'[SIRD-EPGDS-2975],[SPE-BITE-1414]'}, u'SSCS_ACLog_1169': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1168': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-619': {'allocation': u'EDMU SSCS', 'body': u'The messages between EDMU and GCU shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'CAN-IRD-618': {'allocation': u'EDMU SSCS', 'body': u'The messages between EDMU and GCU shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_1087': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall have at least 30% RAM/ROM spare capacity', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-888]'}, u'SSCS_ACLog_1084': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'Components in spare shall have no functional or safety impact in case of failure, at LRU or system level ', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-918]'}, u'SSCS_ACLog_1085': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW, SW', 'body': u'ACLog shall be designed in conformity with The Development Assurance Level (DAL) B', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': u'req allocation should be done through the ACEPC SES', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-194': {'allocation': u'AC Log SSCS', 'body': u'ACLOG[1/2] shall send the following data to EDMU through ACLOG[1/2]_EDMU_RCCB_STATUS_x message:\n\uf0a7\tState of RCCB: RCCB is open or closed.\n\uf0a7\tValidity of the status of RCCB: the status signal is valid or not.\n\uf0a7\tState of RCCB trip: RCCB is tripped or not.\n\uf0a7\tValidity of the trip of RCCB: the trip signal is valid or not.\n\uf0a7\tShed state of the RCCB: RCCB is shed or not.\n\uf0a7\tValidity of the shed state of RCCB: the signal is valid or not.\n\uf0a7\tOpen locked state of the RCCB: RCCB is open locked or not.\n\uf0a7\tValidity of the open locked state of RCCB: the signal is valid or not.\n\uf0a7\tDetection of AFD per phase: No AFD detected, Paralellel AFD detected or Series AFD detected.\n\uf0a7\tTrip cause of the RCCB phases: None, AFD,I2t trip, GFI trip, Overvoltage or Unbalanced.', 'refer': u'[SIRD-EPGDS-253],[SIRD-EPGDS-397],[SIRD-EPGDS-401],[SIRD-EPGDS-497],[SIRD-EPGDS-1050],[SIRD-EPGDS-1081],[SIRD-EPGDS-3143]'}, u'CAN-IRD-195': {'allocation': u'AC Log SSCS', 'body': u'RCCBs shall include the following RCCBs for ACLOG2:\n\uf0a7\tACMP1B\n\uf0a7\tACMP3A', 'refer': u'[SIRD-EPGDS-1050],[SIRD-EPGDS-1081]'}, u'CAN-IRD-196': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send EDMU_ACLOG_RCCB_CMD_x every 50 ms', 'refer': u'[SIRD-EPGDS-1059],[SIRD-EPGDS-2199],[SIRD-EPGDS-3146]'}, u'SSCS_ACLog_1110': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'To know if the other ACLog has a problem', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'The ACLog shall implement a DSO Ground/Open low power "DSO_ACLOG_VALID"', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To know if the other ACLog has a problem', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1326': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog1 shall compute the "ACLOG1_FAIL" CAS message according the following Logic : \nTRUE \nAt least One of the ACLog PBIT test is failed \nOR \nAt least one ACLog Discrete output is failed\nOR \nThe ACLog anti paralleling function is failed \nOR \nThe ACLog internal power supply is failed\nFALSE otherwise', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1195]'}, u'SSCS_ACLog_728': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If the time out expires without the RCCB "CLOSED" command being valid from the CAN Bus 1, the ACLog shall act with the first valid command received on one CAN bus and ignore RCCB command from the other CAN bus.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2163]'}, u'CAN-IRD-198': {'allocation': u'AC Log SSCS', 'body': u'ACLOG[1/2] shall send the following data to EDMU through ACLOG[1/2]_EDMU_PROTEC_STATUS message:\n\uf0a7\tState of AC protections: protection is activated or not.', 'derived': u'True', 'rationale': u'Provision'}, u'CAN-IRD-199': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request ACLOG[1/2]_EDMU_PROTEC_STATUS every 50 ms.', 'rationale': u'Provision', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1288': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall consider that protection(s) are not activated if NVM is corrupted at start-up.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-3026]'}, u'SSCS_ACLog_926': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of GCU Power Ready indication discrepancy failure, the ACLog shall declare the failure of the concerned GCU to the EDMU using CAN busses.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-579]'}, u'CAN-IRD-392': {'allocation': u'AC Log SSCS,DC Log SSCS,EDMU SSCS', 'body': u'The data of messages sent between EDMU and XLOG1 shall be compliant to the following document:', 'refer': u'[SIRD-EPGDS-164]'}, u'SSCS_ACLog_1281': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'To keep the Trip state if the AClog is replaced', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If the TRIPPED signal from EDMU is equal to "Trip set", the AClog shall set the RCCB "trip cause" in accordance with the trip cause sent by the EDMU', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2198]'}, u'CAN-IRD-390': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'The data of messages sent between EDMU and SSPCM shall be compliant to the following document:', 'refer': u'[SIRD-EPGDS-164],[SIRD-EPGDS-165]'}, u'SSCS_ACLog_1283': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'to have a trip cause consistent with the trip state', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If RCCB "TRIPPED" command from EDMU is "Trip reset", the AClog shall set the RCCB "Trip cause" to "None".', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2197]'}, u'SSCS_ACLog_1284': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'SIRD define reset after cold start, aircraft on ground (On Ground/ In Flight signals)', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACMP overvoltage protection shall be reset aircraft on ground (On Ground/ In Flight signals) through CAN busses.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2466]'}, u'SSCS_ACLog_1285': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'SIRD define reset after cold start, aircraft on ground (On Ground/ In Flight signals)', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACMP Unbalance protection shall be reset, aircraft on ground (On Ground/ In Flight signals) through CAN busses.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2466]'}, u'CAN-IRD-394': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS', 'body': u'The data of messages sent between EDMU and XLOG2 shall be compliant to the following document:', 'refer': u'[SIRD-EPGDS-164]'}, u'SSCS_ACLog_1287': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_542': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1132': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'ACLog shall Open all discret ouputs (DSO) when electronic pcb is not supplied or if DCLOG is NOT in functional mode.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2854]'}, u'SSCS_ACLog_775': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall meet the "Operational Shocks and Crash Safety" requirements defined in section 7 of RTCA/DO-160G Category B with a nominal pulse duration at 11ms.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-146]'}, u'SSCS_ACLog_1449': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Confirmation time for the ground/Flight DSI Status Inconsistency failure shall be 15 seconds +/- 0,5s.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1477]'}, u'SSCS_ACLog_826': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u"the relation between the differential current (I-I') and the ASI input voltage (V) is given by the following formula:\tV=(I-I')*Rb/1000.1000: Current tranformer nominal current ratio (1/1000)Rb: Current transformer burden (300Ohms)ASI and contactor response time are included", 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'When the ACLog detect a differential current higher than 40A +/-15A during a minimum of 50ms +/-20%, the differential protection shall be activated.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SES-ACEPC-344],[SES-ACEPC-345],[SES-ACEPC-360],[SES-ACEPC-648],[SES-ACEPC-697]'}, u'CAN-IRD-688': {'allocation': u'AC Log SSCS', 'body': u'RCCBs shall include the following RCCBs for ACLOG1:\n\uf0a7\tACMP3B', 'refer': u'[SIRD-EPGDS-1050],[SIRD-EPGDS-1081],[SIRD-EPGDS-1083]'}, u'SSCS_ACLog_825': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'The reference voltage will be ASI_DP_RET', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall provide 3 ASI to read, through current transformers, the Tie bus differential currents (bus between ATC2 and ATC3):\n- ASI_DP_PHA\n- ASI_DP_PHB\n- ASI_DP_PHC', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-388]'}, u'SSCS_ACLog_822': {'status': u'TBC', 'terminal': 'EMPTY', 'additional': u'waiting for system update', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLOG board MTBF shall be greater than 65 000 Flight hours. (TBC)', 'safety': u'YES, Design Objective', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2622]'}, u'SSCS_ACLog_1056': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of AC network reconfiguration, the ACLog shall apply, from step 0, the column of the sequencing command table corresponding to the color defined by the following table:\n   \n With legend: \n Grey (G): No action\n Blue (B): Only ACMP3B sequence by AC log1 Pcb,\n Red (R): Only ACMP1B, ACMP3A sequence by AC log2 Pcb,\n Purple (P): All ACMP sequence by the two AC log Pcbs.\nFigure 17: ACMP configuration commands', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2553]'}, u'CAN-IRD-689': {'allocation': u'AC Log SSCS', 'body': u'RCCBs shall include the following RCCBs for ACLOG2:\n\uf0a7\tACMP1B\n\uf0a7\tACMP3A', 'refer': u'[SIRD-EPGDS-1050],[SIRD-EPGDS-1081],[SIRD-EPGDS-1083]'}, u'SSCS_ACLog_1266': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_828': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'When the differential protection is activated, ACLog2 shall open the ATC2 contactor', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-389]'}, u'SSCS_ACLog_829': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'When the differential protection is activated, an AC_TIE_DP_TRIP failure shall be send through the CAN busses', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-390],[SPE-BITE-751]'}, u'CAN-IRD-727': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS', 'body': u'BNR data shall be encoded as two\u2019s complement fractional binary.', 'derived': u'True', 'rationale': u'To be compatible with AFDX data encoding', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-726': {'allocation': u'DC Log SSCS', 'body': u'DC busbars shall include the following bubars for DCLOG2:\n\uf0a7\tDC1_BUSBAR\n\uf0a7\tDC2_BUSBAR\n\uf0a7\tDC2_ESS_BUSBAR\n\uf0a7\tEMER2_BUSBAR\n\uf0a7\tAPU_BATT_BUSBAR\t', 'refer': u'[SIRD-EPGDS-1020],[SIRD-EPGDS-1055],[SIRD-EPGDS-1896],[SIRD-EPGDS-6773]'}, u'SSCS_ACLog_983': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'For Ground/Open DSI, the difference between "Voltage at input when in open circuit" and the switching threshold "Vth-up" shall be greater than 2 V.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-730]'}, u'SSCS_ACLog_545': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'The ACLog shall provide 2 DSI Ground/Open 1mA  the ("AC EP power ready" information from ACLog2):\n- DSI_PR_AC_EP\n- DSI_NPR_AC_EP ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To be able to know if the ACEP is PR or not', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_985': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'- contactors status (DSI_GLC_x, DSI_AGLC_x, DSI_AC_CTCx_x)- RCCB status (DSI_RCCBx_Nx, DSI_RCCBx_OPP_Nx)- TCB status (DSI_AC_CB_x)', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'In short circuit, discrete input current shall be 1mA \xb1 15% except for contactors, relays auxiliaries and CB status which need 5.9mA +/-15%', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-3075],[SES-ACEPC-731]'}, u'SSCS_ACLog_811': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall comply with conducted emissions requirements specified in MIL-STD-461C Section CE07.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-684]'}, u'SSCS_ACLog_986': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-680': {'allocation': u'EDMU SSCS', 'body': u'CAN IDs of AGCU to EDMU frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_897': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog shall test the watchdog during PBIT', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-110]'}, u'CAN-IRD-683': {'allocation': u'EDMU SSCS', 'body': u'CAN IDs of RGCU to EDMU frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-685': {'allocation': u'EDMU SSCS', 'body': u'CAN IDs of EDMU to RGCU frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-729': {'allocation': u'HS', 'body': u'RGCU shall send the following Synoptic data to EDMU through RGCU_EDMU_SYNOPTIC_2 messages: \n- Right Generator load\n- Validity attached to this piece of data.', 'refer': u'[SIRD-EPGDS-2125]'}, u'CAN-IRD-687': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to ACLOG[1/2] through EDMU_ACLOG_RCCB_CMD_x message:\n\uf0a7\tCommand of the RCCB: RCCB is open or closed.\n\uf0a7\tValidity of the command of RCCB: the status signal is valid or not.\n\uf0a7\tRCCB trip command: RCCB trip is set, reset or no change.\n\uf0a7\tValidity of the trip command of the RCCB: the trip signal is valid or not.\n\uf0a7\tOpen locked command of the RCCB: RCCB is set to open locked, not open locked or no change.\n\uf0a7\tValidity of the open locked command of RCCB: the signal is valid or not.\n\uf0a7\tTrip cause of the RCCB phases: None, AFD,I2t trip, GFI trip, Overvoltage or Unbalanced.', 'refer': u'[SIRD-EPGDS-220],[SIRD-EPGDS-401],[SIRD-EPGDS-497],[SIRD-EPGDS-498],[SIRD-EPGDS-2195],[SIRD-EPGDS-2198],[SIRD-EPGDS-2200],[SIRD-EPGDS-2206],[SIRD-EPGDS-2209],[SIRD-EPGDS-2210]'}, u'SSCS_ACLog_505': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_504': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'SIRD should be updated', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'When Ground Servicing Mode is ACTIVE, ACLog2 shall set:\n- "DSO_GS_MODE" to Active\n- "DSO_GS_ON" to Active', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-6844]'}, u'SSCS_ACLog_507': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'GS Push Button is a momentary switch', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u' \n \nThe ACLog shall take into account "DSI_ACEP_PB" falling edge for Ground Servicing changes:\n- DSI_GS_PB falling edge AND AC External Power is POWER READY AND ELC ACEP is OPEN Request AND 28V_AC_EP_TR is Present AND No GCU or APU is Power Ready\n- DSI_GS_PB falling edge OR AC External Power is NOT POWER READY AND ELC ACEP is CLOSE Request OR 28V_AC_EP_TR is NOT Present OR at least one GCU or APU is Power Ready OR ELC is Failed Open\n \nFigure 13: Ground Servicing push button activation', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-6839],[SES-ACEPC-529]'}, u'SSCS_ACLog_506': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall send the ground servicing mode informations through the CAN busses', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-561],[SIRD-EPGDS-1011],[SIRD-EPGDS-1753]'}, u'SSCS_ACLog_501': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Label (15)waiting for SIRD update (ACLOG2 --> ACLOG)', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall switch from Ground Servicing Mode NOT ACTIVE to Ground Servicing Mode ACTIVE when:\n- ELC Ground Servicing CLOSE Request\nAND\n- ELC Status is CLOSED ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-6842]'}, u'SSCS_ACLog_957': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Once ACLog Initiated BITE (IBIT) is performed, the ACLOG shall send to the EDMU the result of the sequence using CAN busses. ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-178]'}, u'SSCS_ACLog_1204': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'The J1 pinout shall be defined as follow:\n   \nNB: With an ACLog point of view:\n- +28V: ACLog input Power supply (secondary side)\n-  +5V, +3V3: Output power supplies for external device\n-  +3V3_B: Output buffered power supply for JTAG external device-\nTable 30: J1 connector', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To define connectors pins allocation', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_515': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1494': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The AC Log shall download NVM in 5 minutes maximum.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-3353]'}, u'SSCS_ACLog_508': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_909': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog shall monitor upstream and downstream Power supplies conversion voltage presence monitoring to detect failure.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-792]'}, u'SSCS_ACLog_1315': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'When the anti-paralleling hardware protection is activated, as described in the SSCS_ACLog_837, the ACLog shall apply an OPEN command to the corresponding contactor (ATCx or ELC).', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2573],[SIRD-EPGDS-2575],[SIRD-EPGDS-2576],[SIRD-EPGDS-2577]'}, u'SSCS_ACLog_1239': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'electronic protection cannot be conform to this req', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The loss of electrical protection for RCCB ACMPx  shall be less than 1e-9 per flight hour', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-921]'}, u'SSCS_ACLog_1238': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1234': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'After five (5) watchdog resets in flight, the ACLog shall be stated in reset mode.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-3141]'}, u'SSCS_ACLog_1237': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The loss of ATCx command shall be less than 1E-5 per flight hour', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SES-ACEPC-540]'}, u'SSCS_ACLog_1231': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'Conformal coating shall be applied to AC Log', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-3414]'}, u'SSCS_ACLog_1230': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'During IBIT and for a given network configuration, ACLog IBIT shall not lead to a change in contactor commands during more than 100ms [+0; -20%]', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1115]'}, u'SSCS_ACLog_1233': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-248': {'allocation': u'DC Log SSCS', 'body': u'DCLOG[1/2] shall send the following data to EDMU through DCLOG[1/2]_EDMU_CNTOR_STATUS message:\n\uf0a7\tState of DC contactors: contactor is open or closed.\n\uf0a7\tValidity of the state of DC contactor: the state signal is valid or not.', 'refer': u'[SIRD-EPGDS-1020],[SIRD-EPGDS-1055],[SIRD-EPGDS-1668]'}, u'CAN-IRD-249': {'allocation': u'DC Log SSCS', 'body': u'DC contactors shall include the following contactors for DCLOG1 and DCLOG2:\n\uf0a7\tTLC1\n\uf0a7\tTLC2\n\uf0a7\tDTC1\n\uf0a7\tDTC2\n\uf0a7\tDEC1\n\uf0a7\tDEC2\n\uf0a7\tSC\n\uf0a7\tMAIN_BLC\n\uf0a7\tAPU_BLC', 'refer': u'[SIRD-EPGDS-1020],[SIRD-EPGDS-1055],[SIRD-EPGDS-1668]'}, u'CAN-IRD-365': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS', 'body': u'The messages between EDMU and XLOG shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'CAN-IRD-364': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS', 'body': u'Time slot duration on EDMU-XLOG interfaces shall be 25 ms.', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-1059]'}, u'CAN-IRD-362': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall schedule the request messages sending according to the following table:', 'derived': u'True', 'rationale': u'EPGDS CAN Protocol', 'refer': u'[SIRD-EPGDS-113],[SIRD-EPGDS-299],[SIRD-EPGDS-1059]'}, u'CAN-IRD-361': {'allocation': u'EDMU SSCS', 'body': u'Major sequence frame duration on EDMU-SSPCM interfaces shall be 1000 ms.', 'derived': u'True', 'rationale': u'EPGDS CAN Protocol', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-1059]'}, u'CAN-IRD-360': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'Time slot duration on EDMU-SSPCM interfaces shall be 25 ms.', 'derived': u'True', 'rationale': u'EPGDS CAN Protocol', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-1059]'}, u'CAN-IRD-240': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request DCLOG[1/2]_EDMU_CB_STATUS_x every 250 ms', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-242': {'allocation': u'DC Log SSCS', 'body': u'DCLOG[1/2] shall send the following data to EDMU through DCLOG[1/2]_EDMU_ANALOG_x messages:\n\uf0a7\tAnalog measurement of DC: digital value of the measured current or voltage.\n\uf0a7\tValidity of the analog measurement of DC: the signal is valid or not.', 'refer': u'[SIRD-EPGDS-1055]'}, u'CAN-IRD-243': {'allocation': u'DC Log SSCS', 'body': u'DC analog measurements shall include the following value for DCLOG1:\n\uf0a7\tTRU1_OUT_VOLTAGE\n\uf0a7\tTRU1_OUT_CURRENT\n\uf0a7\tMAIN_BATT_VOLTAGE\n\uf0a7\tMAIN_BATT_CURRENT\n\uf0a7\tMAIN_BATT_TEMP', 'refer': u'[SIRD-EPGDS-1425],[SIRD-EPGDS-2334],[SIRD-EPGDS-2335]'}, u'CAN-IRD-244': {'allocation': u'DC Log SSCS', 'body': u'DC analog measurements shall include the following value for DCLOG2:\n\uf0a7\tTRU2_OUT_VOLTAGE\n\uf0a7\tTRU2_OUT_CURRENT\n\uf0a7\tAPU_BATT_VOLTAGE\n\uf0a7\tAPU_BATT_CURRENT\n\uf0a7\tAPU_BATT_TEMP', 'refer': u'[SIRD-EPGDS-1425],[SIRD-EPGDS-2334],[SIRD-EPGDS-2335]'}, u'CAN-IRD-245': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request DCLOG[1/2]_EDMU_ANALOG_x every 250 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-369': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall schedule the request sending according to the following table:', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-113],[SIRD-EPGDS-1059]'}, u'CAN-IRD-368': {'allocation': u'EDMU SSCS', 'body': u'Major sequence frame duration on EDMU-XLOG interfaces shall be 1000 ms.', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1460': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In addition to BIT/BITE information, ACLog shall send to the ENMU, using CAN busses, its discrete inputs and outputs statuses', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1540]'}, u'SSCS_ACLog_1461': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-439': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request EMERLOG_EDMU_ALARM_STATUS every 50 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1463': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ground servicing mode shall be the lowest priority of electrical network configuration.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2546]'}, u'CAN-IRD-536': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request LGCU_EDMU_EICAS_x every 500 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-534': {'allocation': u'AC Log SSCS', 'body': u'AC alarms shall include the following alarms for ACLOG2:\nACLOG2_DP_ACT\nAC_BUS2_FAIL\nACLOG2_FAIL\nATC2_FAILED_CLOSED_CAS\nATC2_FAILED_OPEN_CAS\nELC_FAILED_CLOSED_CAS\nELC_FAILED_OPEN_CAS', 'refer': u'[SIRD-EPGDS-1050],[SPE-BITE-1266]'}, u'CAN-IRD-535': {'allocation': u'HS', 'body': u'LGCU shall send the following EICAS data to EDMU through LGCU_EDMU_EICAS_1 message :\n- Left Generator good / Fail  Status\n- Left Generator Oil Over temperature status\n- Left Generator ON/OFF status\n- Left GCU Communication fault status\n- Validity attached to these data', 'refer': u'[SIRD-EPGDS-1052],[SIRD-EPGDS-1641],[SPE-BITE-1331]'}, u'CAN-IRD-433': {'allocation': u'DC Log SSCS', 'body': u'DC alarms shall include the following alarms for DCLOG2:\nAPU_BATT_OFF\nDC_ESS_BUS2_FAIL\nAPU_BATT_FAIL\nTRU2_FAIL\nDC_EMER_BUS2_FAIL\nAPU_BATT_BUS_FAIL\nDC_BUS2_FAIL\nDCLOG2_FAIL\nDCLOG2_DP_ACT\nDEC2_FAILED_CLOSED_CAS\nTLC2_FAILED_OPEN_CAS\nTLC2_FAILED_CLOSED_CAS\nDTC1_FAILED_OPEN_DC2_CAS\nDTC1_FAILED_CLOSED_DC2_CAS\nSC_FAILED_OPEN_CAS\nSC_FAILED_CLOSED_CAS\nAPU_BLC_FAILED_OPEN_CAS\nAPU_BLC_FAILED_CLOSED_CAS\nDTC2_FAILED_OPEN_DC2_CAS\nDTC2_FAILED_CLOSED_DC2_CAS\nDEC2_FAILED_OPEN_CAS\nAPU_BATT_DISCHARGING', 'refer': u'[SIRD-EPGDS-1055],[SIRD-EPGDS-3362],[SPE-BITE-1268]'}, u'CAN-IRD-432': {'allocation': u'DC Log SSCS', 'body': u'DC alarms shall include the following alarms for DCLOG1:\nMAIN_BATT_OFF\nMAIN_BATT_FAIL\nTRU1_FAIL\nDC_EMER_BUS1_FAIL\nMAIN_BATT_BUS_FAIL\nDC_BUS1_FAIL\nDCLOG1_FAIL\nDCLOG1_DP_ACT\nDEC1_FAILED_CLOSED_CAS\nTLC1_FAILED_OPEN_CAS\nTLC1_FAILED_CLOSED_CAS\nDTC1_FAILED_OPEN_DC1_CAS\nDTC1_FAILED_CLOSED_DC1_CAS\nMAIN_BLC_FAILED_OPEN_CAS\nMAIN_BLC_FAILED_CLOSED_CAS\nDTC2_FAILED_OPEN_DC1_CAS\nDTC2_FAILED_CLOSED_DC1_CAS\nDEC1_FAILED_OPEN_CAS\nMAIN_BATT_DISCHARGING', 'refer': u'[SIRD-EPGDS-1055],[SIRD-EPGDS-3362],[SPE-BITE-1267]'}, u'CAN-IRD-538': {'allocation': u'HS', 'body': u'LGCU shall send the following Synoptic data to EDMU through LGCU_EDMU_SYNOPTIC_1 messages: \n- Average digital value of the Generator Point Of Regulation voltage\n- Generator Line Contactor 1 , auxilliary contactor status \n- Excitation status of Left generator\n- Left engine Running\n- Validity attached to these data (data mentioned above)\n- Left Generator Point Of Regulation Frequency\n- Validity attached to this piece of data (Point Of Regulation Frequency)', 'refer': u'[SIRD-EPGDS-1641]'}, u'CAN-IRD-539': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request LGCU_EDMU_SYNOPTIC_x every 100 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-437': {'allocation': u'Emer Log SSCS', 'body': u'EMER alarms shall include the following alarms for EMERLOG:\nEMERLOG_DP_ACT\nXFER_ESS_EMERLOG\nXFER_R_EMERLOG\nXFER_L_EMERLOG\nESS_TRU_FAIL\nDC_ESS_BUS1_FAIL\nAC_ESS_BUS_FAIL\nEMERLOG_FAIL\nETC1_FAILED_CLOSED_CAS\nTLC3_FAILED_OPEN_CAS\nTLC3_FAILED_CLOSED_CAS\nETC2_FAILED_OPEN_CAS\nETC2_FAILED_CLOSED_CAS\nETC1_FAILED_OPEN_CAS\nRAT_GEN_INOP', 'refer': u'[SPE-BITE-1269]'}, u'CAN-IRD-436': {'allocation': u'Emer Log SSCS', 'body': u'EMERLOG shall send the following data to EDMU through EMERLOG_EDMU_ALARM_STATUS message:\n\uf0a7\tState of EMER Alarm: Alarm is activated or not.', 'refer': u'[SIRD-EPGDS-1905]'}, u'CAN-IRD-434': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request DCLOG[1/2]_EDMU_ALARM_STATUS every 50 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_998': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'In open state or not supplied, DSO output shall be compatible with the aircraft 28 VDC network voltage.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-743]'}, u'CAN-IRD-499': {'allocation': u'AC Log SSCS,DC Log SSCS,EDMU SSCS', 'body': u'CAN IDs of EDMU to XLOG1 frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_1136': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_431': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall be fully functional with DC input voltage between 17Vdc and 31.5Vdc', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-541]'}, u'SSCS_ACLog_430': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall have two ground connections:\n- GND Power for 28Vdc power supply\n- GND Signal for analog, discrete and digital signals.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-540]'}, u'SSCS_ACLog_437': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The AClog2 shall implement the following protections for AC External Power:\n- Undervoltage AC EP 115V ("ASI_ACEP_VOLTAGE_PHA", "ASI_ACEP_VOLTAGE_PHB" and "ASI_ACEP_VOLTAGE_PHC")\n- Overvoltage AC EP 115V\n- Overvoltage (ASI_DC_ACEP_PINE)\n- Overload (I2t) ("ASI_ACEP_CURRENT_PHA", "ASI_ACEP_CURRENT_PHB", "ASI_ACEP_CURRENT_PHC")\n- Unbalance protection\n- Phase Order\n- Underfrequency\n- Overfrequency\n- Open phase', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-450],[SIRD-EPGDS-1762],[SES-ACEPC-689]'}, u'SSCS_ACLog_439': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Limits for 400Hz and variable frequency AC overvoltage provided by the MIL-STD-704F', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The software Overvoltage AC external power protection shall be activated when one phase voltage (+/-5%) reaches the threshold during the time delay corresponding:\n  \n \n \n \nFigure 20: Software Overvoltage AC external power protection', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-454],[SIRD-EPGDS-2765]'}, u'SSCS_ACLog_438': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The undervoltage AC external power protection shall be activated when at least one phase voltage level is lower than 100V +/-10V during 5s +/-200ms\t', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-453]'}, u'SSCS_ACLog_959': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1176': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall test data stored in NVM during PBIT thanks to checksum or CRC calculation', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1048]'}, u'SSCS_ACLog_1010': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'High power DSO shall be able to drive 0.24A -/+20% permanent and 5A +/-10% during 100ms.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-718],[SES-ACEPC-858]'}, u'SSCS_ACLog_1308': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'When ACLog is not entered in functional mode, it shall only refresh watchdog is an infinite loop.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-3033]'}, u'SSCS_ACLog_1301': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u' After exposure to SEU/MBU, the equipement shall automatically recover its full performance.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-953]'}, u'SSCS_ACLog_963': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1302': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The component failure modes that could be triggered by impact of SEU/MBU on the system shall be identified and their consequences on the equipment behaviour analyzed.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-954]'}, u'SSCS_ACLog_1305': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1307': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The spurious activation of GFI protection on AClog shall be less than 7E-7 /FH', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2668]'}, u'SSCS_ACLog_1340': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall compute the "ATC2_FAILED_OPEN_CAS" CAS message according the following logic : \nTRUE\nATC2 is declared failed Open\nFALSE otherwise', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1211]'}, u'SSCS_ACLog_1518': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'DSI NO / NC aux contact :Open = DSI input is OpenClosed = DSI input is grounded', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog 2 shall compute the GLC2 contactor status, status validity and failure according to the following table:\n \nNB: for GLC2 contactors commands\nOPEN = Not Acknowledged\nCLOSE = Acknowledged\nTable 5: GLC2 contactor status, status validity and failure', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1765],[SPE-BITE-943]'}, u'SSCS_ACLog_1519': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'DSI NO / NC aux contact :Open = DSI input is OpenClosed = DSI input is grounded', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall determine the ATC2 contactors status, status validity and failure of contactors which are in its AC EPC according to the following table:\n \n \nTable 8: ATC2 contactors status, status validity and failure', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1833],[SPE-BITE-943],[SPE-BITE-944]'}, u'SSCS_ACLog_1515': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'ACLog2 shall apply open command for ELC when DSI_ELC_OPEN_REQ is grounded and aircraft is "On ground"', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'waiting for SES ACEPC DSI_ELC_OPEN_REQ declaration', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1516': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW, SW', 'body': u'ACLOG 2 shall send to ACLOG1 a low power GND/Open (ground active) discret output indicating the command state of ELC : "DSO_ELC_CMD"', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'waiting for SES ACEPC update', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1517': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW, SW', 'body': u'ACLOG 1 shall receive from ACLOG2 a discret intput GND/Open 1mA indicating the command state of ELC : "DSI_ELC_CMD"', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'waiting for SES ACEPC update', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1462': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'AClog shall interrupt a given configuration sequence and recalculate a new one (from opening sequence) for: \n Generator(s) availability,\n Tie AC lockout status,\n smoke isolation SW change,\n Ground Servicing.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2842]'}, u'SSCS_ACLog_1064': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall include I\xb2T protection for AC external power.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-459]'}, u'SSCS_ACLog_1267': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog1 and ACLog2 shall have its own EMH component for CAN interfaces.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2099]'}, u'CAN-IRD-796': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request DCLOG[1/2]_EDMU_SNPTC_COLOR_x every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1127': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If ASI_AC_BUSBAR_VOLT_PHA or ASI_AC_BUSBAR_VOLT_PHB or ASI_AC_BUSBAR_VOLT_PHC is higher than 90Vrms +/-5Vrms during at least 500ms +/-50ms, the ACLog shall\n- grounded the DSO low power "DSO_AC_BUS_AVAIL" \nAND\n- set to "Power is available" the corresponding "ACx_BUSBAR_AVAIL" through the CAN.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2987],[SES-ACEPC-937],[SES-ACEPC-940]'}, u'CAN-IRD-795': {'allocation': u'DC Log SSCS', 'body': u'DCLOG[1/2] shall send the state of synoptic element colors through DCLOG[1/2]_EDMU_SNPTC_COLOR_x messages', 'refer': u'[SIRD-EPGDS-1055],[SPE-BITE-1185],[SPE-BITE-1186]'}, u'CAN-IRD-792': {'allocation': u'AC Log SSCS', 'body': u'ACLOG[1/2] shall send the state of synoptic element colors through ACLOG[1/2]_EDMU_SNPTC_COLOR_x messages', 'refer': u'[SIRD-EPGDS-1050],[SPE-BITE-1184]'}, u'CAN-IRD-793': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request ACLOG[1/2]_EDMU_SNPTC_COLOR_x every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-659': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request LGCU_EDMU_NVM_DL_STATUS every 500 ms.', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-1059]'}, u'CAN-IRD-658': {'allocation': u'HS', 'body': u'LGCU shall send NVM data to EDMU through LGCU_EDMU_NVM_PACKET_[1;42] messages :\n\uf0a7\tPacket number : The number of the NVM packet transmitted.\n\uf0a7\tNVM packet : 6 bytes of NVM.', 'refer': u'[SIRD-EPGDS-652],[SPE-BITE-1054]'}, u'CAN-IRD-657': {'allocation': u'HS', 'body': u'LGCU shall send the following data through LGCU_EDMU_NVM_DL_STATUS message :\n\uf0a7\tNVM Download answer: LRU accepts or not the NVM download request from EDMU.\n\uf0a7\tThe size of the NVM : Size of the NVM of the LRU.\n\uf0a7\tThe number of NVM block packets : Number of packet needed to achieve NVM block download if request is accepted else 0.\n\uf0a7\tCRC NVM of block : CRC of NVM block if request is accepted else 0.', 'refer': u'[SIRD-EPGDS-652],[SPE-BITE-1054]'}, u'CAN-IRD-656': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data through EDMU_GCU_NVM_DL message:\n\uf0a7\tNVM Download request: NVM downloading operation is requested or not.\n\uf0a7\tNVM reset request: NVM reset operation is requested or not.\n\uf0a7\tNVM Block First byte: First byte of NVM block requested by EDMU.\n\uf0a7\tNVM Block size : Number of bytes of NVM requested by EDMU', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-653],[SPE-BITE-1054],[SPE-BITE-1057]'}, u'SSCS_ACLog_1044': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The CAN bus communication shall be compliant with the ARINC-825 standard.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-780]'}, u'CAN-IRD-654': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request EMERLOG_EDMU_NVM_DL_STATUS every 500 ms.', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-1059]'}, u'CAN-IRD-653': {'allocation': u'Emer Log SSCS', 'body': u'EMERLOG shall send NVM data to EDMU through EMERLOG_EDMU_NVM_PACKET_[1;42] messages :\n\uf0a7\tPacket number : The number of the NVM packet transmitted.\n\uf0a7\tNVM packet : 6 bytes of NVM.', 'refer': u'[SIRD-EPGDS-652],[SPE-BITE-1054]'}, u'CAN-IRD-652': {'allocation': u'Emer Log SSCS', 'body': u'EMERLOG shall send the following data through EMERLOG_EDMU_NVM_DL_STATUS message :\n\uf0a7\tNVM Download answer: LRU accepts or not the NVM download request from EDMU.\n\uf0a7\tThe size of the NVM : Size of the NVM of the LRU.\n\uf0a7\tThe number of NVM block packets : Number of packet needed to achieve NVM block download if request is accepted else 0.\n\uf0a7\tCRC NVM of block : CRC of NVM block if request is accepted else 0.', 'refer': u'[SIRD-EPGDS-652],[SPE-BITE-1054]'}, u'CAN-IRD-798': {'allocation': u'Emer Log SSCS', 'body': u'EMERLOG shall send the state of synoptic element colors through EMERLOG_EDMU_SNPTC_COLOR_x messages', 'refer': u'[SIRD-EPGDS-1905],[SPE-BITE-1187]'}, u'CAN-IRD-799': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request EMERLOG_EDMU_SNPTC_COLOR_x every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-150': {'allocation': u'SSPCM SSCS', 'body': u'SSPCM shall send the following information through SSPCM_EDMU_CONFCHECK_x messages for configuration check :\n\uf0a7\tthe configuration parameters of SSPCx of 1 SSPCM\n\uf0a7\tthe compatibility status of the configuration with opposite EDMU of SSPCx of 1 SSPCM', 'refer': u'[SIRD-EPGDS-169]'}, u'CAN-IRD-151': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'Configuration parameters of the SSPC shall be the following:\n\uf0a7\tSSPCs ratings: Digital value of the rating.\n\uf0a7\tSSPCs Backup default state: Set the default state of the SSPC: Open, closed or Last known state.\n\uf0a7\tPhase grouping configuration : SSPC is single phase or multiphase\n\uf0a7\tArcFault programming : ArcFault detection is not activated, detect and report or detect and trip\n\uf0a7\tType of SSPC : SSPC is AC or DC', 'additional': u'The SSPC OverHeat protection is disabled by configuration.', 'refer': u'[SIRD-EPGDS-508],[SIRD-EPGDS-678]'}, u'CAN-IRD-152': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to SSPCM through EDMU_SSPCM_CONFSET_25 message:\n\uf0a7\tEDMU SSPCM Software Interface Version: EDMU to SSPCM Software Interface Version associated to this version of specification shall be 0x03.', 'refer': u'[SPE-BITE-1414]'}, u'CAN-IRD-153': {'allocation': u'SSPCM SSCS', 'body': u'SSPCM shall send the following data to EDMU through EDMU_SSPCM_CONFCHECK_25 message:\n\uf0a7\tSSPCM EDMU Software Interface Version: SSPCM to EDMU Software Interface Version associated to this version of specification shall be 0x03.', 'refer': u'[SIRD-EPGDS-169],[SPE-BITE-1414]'}, u'CAN-IRD-154': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall be able to configure one SSPCM every 500 ms with EDMU_SSPCM_CONFSET_x.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-155': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send EDMU_SSPCM_CONFCHECK_x to one SSPCM every 500 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-157': {'allocation': u'SSPCM SSCS', 'body': u'SSCPM shall send the following data to EDMU through SSPCM_EDMU_SSPCINFO_x messages:\n\uf0a7\tTrip Cause of each SSPC : Trip cause is No trip cause, AFD, GFI or I2t\n\uf0a7\tType of detected ArcFault: No Arc Fault Detected, Parallel Arc Fault Detected or Series Arc Fault Detected', 'refer': u'[SIRD-EPGDS-253],[SIRD-EPGDS-1079]'}, u'CAN-IRD-158': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request SSPCM_EDMU_SSPCINFO_x data every 500 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_936': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Thanks to the DSI Ground/Open 1mA "DSI_OL_AC_EP" and "DSI_NOL_AC_EP", ACLog1 CBIT shall monitor AC EP Overload signals indication discrepancy failure from ACLOG2 according to the following table:\n \n \n \nTable 37: ACEP overload informations (status & failure)', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2620],[SPE-BITE-598]'}, u'SSCS_ACLog_651': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'1000V minimum could be a good choice', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'The ACLog CAN busses transceivers shall be isolated from the CAN controller (\xb5c) thanks to a galvanic isolation circuit with an insulation voltage compliant with lightening requirements', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'For lightning protection', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_491': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The development and management of DC Log software shall be according to RTCA/EUROCAE DO-178B/ED-12B and the guidelines provided by FAA ORDER 8110.49.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1588]'}, u'SSCS_ACLog_1062': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Each anti-paralleling detection states shall be communicated through the CAN busses', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2773]'}, u'SSCS_ACLog_768': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall meet the "Ground Survival Low Temperature" requirements defined in section 4 of RTCA/DO-160G Category A2.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-136]'}, u'CAN-IRD-299': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request EMERLOG_EDMU_ENG_DATA_x every 1 second.', 'derived': u'True', 'rationale': u'Provision', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-298': {'allocation': u'Emer Log SSCS', 'body': u'EMERLOG shall send its Engineering Data to EDMU through EMERLOG_EDMU_ENG_DATA_x messages.', 'derived': u'True', 'rationale': u'Provision'}, u'CAN-IRD-296': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request EMERLOG_EDMU_MODULE_STATUS and EMERLOG_EDMU_BITE_x  every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-295': {'allocation': u'Emer Log SSCS', 'body': u'EMERLOG shall send its BITE Monitoring data to EDMU through EMERLOG_EDMU_BITE_x messages.', 'refer': u'[SIRD-EPGDS-390],[SIRD-EPGDS-482],[SIRD-EPGDS-648],[SIRD-EPGDS-1058],[SIRD-EPGDS-1835],[SIRD-EPGDS-1837],[SIRD-EPGDS-1840],[SIRD-EPGDS-1857],[SIRD-EPGDS-1859],[SIRD-EPGDS-1869],[SIRD-EPGDS-1871],[SIRD-EPGDS-2030],[SIRD-EPGDS-2247],[SIRD-EPGDS-2248],[SIRD-EPGDS-2265],[SIRD-EPGDS-2835],[SIRD-EPGDS-6778],[SPE-BITE-120],[SPE-BITE-126],[SPE-BITE-708],[SPE-BITE-717],[SPE-BITE-719],[SPE-BITE-727],[SPE-BITE-729],[SPE-BITE-730],[SPE-BITE-807],[SPE-BITE-812],[SPE-BITE-814],[SPE-BITE-826],[SPE-BITE-828],[SPE-BITE-835],[SPE-BITE-844],[SPE-BITE-922],[SPE-BITE-926],[SPE-BITE-955],[SPE-BITE-974],[SPE-BITE-1028],[SPE-BITE-1047],[SPE-BITE-1082],[SPE-BITE-1113],[SPE-BITE-1504],[SPE-BITE-1509],[SPE-BITE-1513]'}, u'CAN-IRD-294': {'allocation': u'Emer Log SSCS', 'body': u'EMERLOG shall send the following data to EDMU through EMERLOG_EDMU_MODULE_STATUS message:\n\uf0a7\tIBIT acceptance: LRU is in condition for IBIT test or not.\n\uf0a7\tits Module mode\n\uf0a7\tits Flight/Ground status : LRU is in Flight or on Ground\n\uf0a7\tThe validity of the Flight/Ground status\n\uf0a7\tPower supply voltage presence : voltage is present or not\n\uf0a7\tNVM download acceptance state', 'refer': u'[SIRD-EPGDS-387],[SIRD-EPGDS-647],[SIRD-EPGDS-1058],[SPE-BITE-182],[SPE-BITE-202]'}, u'CAN-IRD-293': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to EMERLOG through EDMU_XLOG_BITE message:\n\uf0a7\tIBIT test request: IBIT test is requested or not.', 'refer': u'[SIRD-EPGDS-387],[SIRD-EPGDS-647],[SPE-BITE-182],[SPE-BITE-202]'}, u'CAN-IRD-291': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request EMERLOG_EDMU_IDENT_x every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-290': {'allocation': u'Emer Log SSCS', 'body': u'EMERLOG shall send the following data to EDMU through EMERLOG_EDMU_IDENT_x messages:\n\uf0a7\tSoftware Interface Version: EMERLOG to EDMU Software Interface Version associated to this version of specification shall be 0x01.\n\uf0a7\tthe CRC32 of its software (A665 CRC32 calculation shall be used)\n\uf0a7\tits Module type : Module type is EMERLOG\n\uf0a7\tits LRU Part Number\n\uf0a7\tits SW Part Number\n\uf0a7\tit Serial Number', 'refer': u'[SIRD-EPGDS-1058],[SPE-BITE-1414]'}, u'CAN-IRD-488': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'CAN IDs of EDMU to SPDA6 frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_869': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'When the AC Bus 2 overvoltage protection is activated, ACLog2 shall open ACMP1B and ACMP3A RCCBs', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2460]'}, u'CAN-IRD-846': {'body': u'The following CAN messages sent by DCLOG1 and DCLOG2 shall be redundant :\n- DCLOG1_EDMU_NETWORK_STATUS_1 and DCLOG2_EDMU_NETWORK_STATUS_1 are redundant\n- DCLOG1_EDMU_CNTOR_STATUS and DCLOG2_EDMU_CNTOR_STATUS are redundant', 'additional': u'EDMU performs a source selection between the two producers', 'derived': u'True', 'allocation': u'DC Log SSCS,EDMU SSCS', 'rationale': u'Availability of the input signals used for by EDMU for shedding', 'refer': u'[SIRD-EPGDS-1020]'}, u'SSCS_ACLog_1412': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog shall suspend its communications on CAN busses when Preliminary Tests are failed.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-927]'}, u'CAN-IRD-844': {'allocation': u'Emer Log SSCS', 'body': u'EMERLOG shall send the following data to EDMU through EMERLOG_EDMU_NETWORK_STATUS_2 message:\n\uf0a7\tEMER_SHED_1: shed status of the left WTC', 'refer': u'[SIRD-EPGDS-1896],[SIRD-EPGDS-2833]'}, u'CAN-IRD-845': {'body': u'The following CAN messages sent by ACLOG1 and ACLOG2 shall be redundant :\n- ACLOG1_EDMU_NETWORK_STATUS_1 and ACLOG2_EDMU_NETWORK_STATUS_1 are redundant\n- ACLOG1_EDMU_CNTOR_STATUS and ACLOG2_EDMU_CNTOR_STATUS are redundant', 'additional': u'EDMU performs a source selection between the two producers', 'derived': u'True', 'allocation': u'AC Log SSCS,EDMU SSCS', 'rationale': u'Availability of the input signals used for by EDMU for shedding  ', 'refer': u'[SIRD-EPGDS-180]'}, u'SSCS_ACLog_862': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'The reference voltage will be ASI_RCCB1_CURRENT_RET', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog1 shall read, through current transformers, the neutral current of ACMP3B thanks to the ASI "ASI_RCCB1_CURRENT_GFI"', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2453],[SES-ACEPC-845]'}, u'CAN-IRD-483': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'CAN IDs of EDMU to SPDA1 frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-848': {'body': u'NVM download shall be done in 5 minutes maximum.', 'additional': u'First byte of first packet = First byte of the NVM, 2nd byte of first packet = 2nd byte of the NVM....', 'derived': u'True', 'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS', 'rationale': u'To avoid transfering the NVM in erratic order.', 'refer': u'[SIRD-EPGDS-3353]'}, u'CAN-IRD-486': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'CAN IDs of EDMU to SPDA4 frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-487': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'CAN IDs of EDMU to SPDA5 frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-484': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'CAN IDs of EDMU to SPDA2 frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-485': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'CAN IDs of EDMU to SPDA3 frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_1550': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'The ACLog shall check than HW Part Number (HW_PN) stored in NVM is compatible with SW Part Number (SW_PN), following the table bellow :\n  \n ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'hardware / Software compatibility need to be define at PCB level', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1100': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u"The microcontroller's power supplies voltages shall be monitored by a supervisor", 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To ensure a sufficient power supply voltage when the microcontroller start up', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_941': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'ACLOG 1 : ACMP 3BACLOG 2 : ACMP 1B, ACMP 3A', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of RCCB Auxiliary Status discrepancy failure, the ACLog shall declare the failure to the EDMU using CAN busses.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-618]'}, u'SSCS_ACLog_940': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall monitor RCCB auxiliary status discrepancy failure during CBIT', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-617],[SPE-BITE-1065]'}, u'SSCS_ACLog_943': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACMP I\xb2t protection status shall be communicated through the CAN busses.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SPE-BITE-879],[SPE-BITE-1000]'}, u'SSCS_ACLog_942': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall monitor GFI protections activation on each controlled RCCB during CBIT ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-624]'}, u'SSCS_ACLog_1107': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'To inform the other ACLog that this ACLog has a problem', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'ACLog shall open "DSO_ACLOG_VALID" when a failure is detected \n- during Preliminary tests\nOR\n- during PBIT (internal failure)\nOR\n- during IBIT (internal failure)\nOR\n- if multiplexers, used to compete I/Os of microcontroler, are failed during CBIT\notherwise "DSO_ACLOG_VALID" is grounded.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To inform the other ACLog that this ACLog has a problem', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_982': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog GND/Open DSI switching thresholds shall correspond to : \n\tan input voltage between - 4.0 V and + 4.5 V for a ground state (+ 4.5 V = Vth-down Minimum), \n\tan input voltage between + 10.5 V and + 50.0 V for an open state (+ 10.5 V = Vth-up Maximum).\n \n \nFigure 33: Ground/Open DSI Switching thresholds', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-729]'}, u'SSCS_ACLog_939': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'ACLOG 1 : ACMP 3BACLOG 2 : ACMP 1B, ACMP 3A', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall monitor RCCB command failure (RCCB Failed Open and RCCB Failed Closed) during CBIT', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-755],[SPE-BITE-756]'}, u'SSCS_ACLog_1415': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall confirm any failure detected during Preliminary Test by performing the test sequence (failed) a second time.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1427]'}, u'SSCS_ACLog_1104': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_901': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall declare the failure to the EDMU using CAN busses, if one of the PBIT test is detected as failed and the failure is not internal to the board.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-120]'}, u'CAN-IRD-367': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS', 'body': u'The messages between EDMU and XLOG shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_1041': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of TCB matrix failure, the ACLog shall declare the failure to the EDMU using CAN busses after a confirmation Time of 5 seconds +/- 0,5s.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1086],[SPE-BITE-1515]'}, u'CAN-IRD-366': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS', 'body': u'The messages between EDMU and XLOG shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_1067': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1451': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall monitor Contactor Lockout Discrepancy according to the following table : \n \n \nFigure 38:  Contactor Lockout Discrepancy', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1481]'}, u'SSCS_ACLog_1410': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall send the ATC2 "Aux" failure through the CAN busses', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-563],[SPE-BITE-973]'}, u'SSCS_ACLog_776': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall meet the Humidity requirements defined in section 6 of RTCA/DO-160G Category A.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-144]'}, u'SSCS_ACLog_707': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog CAN controller (\xb5C) shall be fully compliant with ISO-11898-1, CAN 2.0B, 29 bits extended identifier standard.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_900': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog shall check its Analog Signal Inputs during PBIT which permit to verify at least two useful points of measure (min, middle and max value) of the ASI.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-117],[SPE-BITE-187],[SPE-BITE-264],[SPE-BITE-265],[SPE-BITE-266],[SPE-BITE-267]'}, u'SSCS_ACLog_1413': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1061': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The anti-paralleling function shall be hardware based, for detection and for the prohibition of contactor closure.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2578]'}, u'SSCS_ACLog_1139': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-205': {'allocation': u'AC Log SSCS', 'body': u'ACLOG[1/2] shall send the following data to EDMU through ACLOG[1/2]_EDMU_ANALOG_x message:\n\uf0a7\tAnalog measurement of AC: digital value of the measured current or voltage.\n\uf0a7\tValidity of the analog measurement of AC: the signal is valid or not.', 'refer': u'[SIRD-EPGDS-1050]'}, u'CAN-IRD-207': {'allocation': u'AC Log SSCS', 'body': u'AC analog measurements shall include the following value for ACLOG2:\n\uf0a7\tEXT_AC_PHA_VOLTAGE\n\uf0a7\tEXT_AC_PHB_VOLTAGE\n\uf0a7\tEXT_AC_PHC_VOLTAGE\n\uf0a7\tEXT_AC_PHA_POWER\n\uf0a7\tEXT_AC_PHB_POWER\n\uf0a7\tEXT_AC_PHC_POWER\n\uf0a7\tEXT_AC_FREQUENCY\n\uf0a7\tEXT_AC_LOAD', 'refer': u'[SIRD-EPGDS-1050]'}, u'CAN-IRD-201': {'allocation': u'AC Log SSCS', 'body': u'ACLOG[1/2] shall send the following data to EDMU through ACLOG[1/2]_EDMU_CB_STATUS_x messages:\n\uf0a7\tState of AC CB: CB is open or closed.\n\uf0a7\tValidity of the state of AC CB: the state signal is valid or not.', 'additional': u'Indicate the CBx master contact is \u201cclose\u201d or \u201copen\u201d.', 'refer': u'[SIRD-EPGDS-253],[SIRD-EPGDS-502],[SIRD-EPGDS-1008]'}, u'CAN-IRD-578': {'allocation': u'HS', 'body': u'RGCU shall send the following data to EDMU through RGCU_EDMU_MODULE_STATUS message:\n\uf0a7\tIBIT acceptance: LRU is in condition for IBIT test or not.\n\uf0a7\tTrip Reset acceptance: LRU is in condition for Reset of trip or not.\n\uf0a7\tUnlatch failure acceptance: LRU is in condition for unlatching failures or not.\n\uf0a7\tits Flight/Ground status : LRU is in Flight or on Ground\n\uf0a7\tThe validity of the Flight/Ground status\n\uf0a7\tNVM download acceptance state', 'refer': u'[SIRD-EPGDS-2533],[SIRD-EPGDS-2975],[SPE-BITE-202]'}, u'CAN-IRD-579': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request RGCU_EDMU_BITE_x and RGCU_EDMU_MODULE_STATUS every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-576': {'allocation': u'HS', 'body': u'RGCU shall send the following data to EDMU through RGCU_EDMU_BITE_5 messages :\n- RIGHT_GCU RVFG Over Frequency\n- RIGHT_GCU RVFG Under Frequency\n- RIGHT_GCU RVFG Overvoltage\n- RIGHT_GCU RVFG Undervoltage\n- RIGHT_GCU RVFG Oil Temperature High\n- RIGHT_GCU RVFG Phase Sequence Failure\n- RIGHT_GCU RVFG Over Current Under Speed Failure\n- RIGHT_GCU RVFG Deta Current Failure\n- RIGHT_GCU RVFG Rotary Diode Short Circuit\n- RIGHT_GCU RVFG Phase Open\n- Validity attached to these data (RLDP_OMS)\n- BITE_SPARE_2 data', 'refer': u'[SIRD-EPGDS-2975],[SPE-BITE-120],[SPE-BITE-126]'}, u'CAN-IRD-577': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to RGCU through EDMU_GCU_BITE message:\n\uf0a7\tIBIT test request: IBIT test is requested or not.\n\uf0a7\tTrip Reset request: Reset of trip is requested or not.\n\uf0a7\tUnlatch failure request: Unlatch of failures is requested or not.\n\uf0a7\tNVM download request: NVM download is resquested or not', 'refer': u'[SPE-BITE-202]'}, u'CAN-IRD-574': {'allocation': u'HS', 'body': u'RGCU shall send the following data to EDMU through RGCU_EDMU_BITE_3 messages :\n- RIGHT_GCU ROLS Circuit or Wire failed (GEN (CBITE))\n- RIGHT_GCU Bus Ready Acknowledgement From Distribution Circuit or Wire failed (GEN (CBITE))\n- RIGHT_GCU Not Bus Ready Acknowledgement From Distribution Circuit or Wire failed (GEN (CBITE))\n- RIGHT_GCU RVFG LOP sensor or Wire  Failure (GEN (CBITE))\n- RIGHT_GCU RVFG Delta Oil Press Sensor or Wire failure (GEN (CBITE))\n- RIGHT_GCU Right Engine Run Switch Off Failed (GEN (CBITE))\n- RIGHT_GCU OWN BUS PHA Voltage Sense  Circuit or Wire failure High (GEN (CBITE))\n- RIGHT_GCU OWN BUS PHB Voltage Sense  Circuit or Wire failure High (GEN (CBITE))\n- RIGHT_GCU OWN BUS PHC Voltage Sense  Circuit or Wire failure High (GEN (CBITE))\n- RIGHT_GCU OWN BUS PHA Voltage Sense  Circuit or Wire failure Low (GEN (CBITE))\n- RIGHT_GCU OWN BUS PHB Voltage Sense  Circuit or Wire failure Low (GEN (CBITE))\n- RIGHT_GCU OWN BUS PHC Voltage Sense  Circuit or Wire failure Low (GEN (CBITE))\n- Validity attached to these data (GEN (CBITE))\n- RIGHT_GCU RVFG PHA Feeder DP Failure (GEN (PRIT))\n- RIGHT_GCU RVFG PHB Feeder DP  Failure (GEN (PRIT))\n- RIGHT_GCU RVFG PHC Feeder Dp Failure (GEN (PRIT))\n- RIGHT_GCU RVFG Shaft Overspeed (GEN (PRIT))\n- RIGHT GCU RVFG  SUSP Contactor (GEN (PRIT))\n- Validity attached to these data (GEN (PRIT))', 'refer': u'[SIRD-EPGDS-1641],[SIRD-EPGDS-2975],[SPE-BITE-120],[SPE-BITE-126]'}, u'CAN-IRD-575': {'allocation': u'HS', 'body': u'RGCU shall send the following data to EDMU through RGCU_EDMU_BITE_4 messages :\n- RIGHT_GCU or Pin Prog Wire Failure (LRU (CBITE))\n- RGCU or RVFG Temp Bulb Failure (LRU (CBITE))\n- Validity attached to these data (LRU (CBITE))\n- RIGHT_GCU RVFG Failure (LRU (PRIT))\n- RIGHT_GCU Open Neutral Condition Failure (LRU (PRIT))\n- RIGHT_GCU internal Failure (LRU (PRIT))\n- RIGHT_GCU POR Sense Wire Failure (LRU (PRIT))\n- RIGHT_GCU POR PHA Sense Wire Failure (LRU (PRIT))\n- RIGHT_GCU POR PHB Sense Wire Failure (LRU (PRIT))\n- RIGHT_GCU POR PHC Sense Wire Failure (LRU (PRIT))\n- Validity attached to these data (LRU (PRIT))', 'refer': u'[SIRD-EPGDS-2975],[SPE-BITE-120],[SPE-BITE-126]'}, u'CAN-IRD-208': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request ACLOG[1/2]_EDMU_ANALOG_x every 250 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-573': {'allocation': u'HS', 'body': u'RGCU shall send the following data to EDMU through RGCU_EDMU_BITE_2 messages : \n- RIGHT_GCU ATC2 Wire Coail Failure (CONTACTOR (CBITE))\n- RIGHT_GCU_GLC2 Aux or Wire Failure (CONTACTOR (CBITE))\n- Validity attached to these data (CONTACTOR (CBITE))\n- RIGHT_GCU GLC2 or Wire Failure (CONTACTOR (PRIT))\n- RIGHT_GCU GLC2 Failed to Open - GLC2 aux or sense wire (CONTACTOR (PRIT))\n- RIGHT_GCU GLC2 Fail to Close Driver OC (CONTACTOR (PRIT))\n- RIGHT_GCU GLC2 Fail to Close Wire Open (CONTACTOR (PRIT))\n- Validity attached to these data (CONTACTOR (PRIT))', 'refer': u'[SIRD-EPGDS-2975],[SPE-BITE-120],[SPE-BITE-126]'}, u'CAN-IRD-570': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request RGCU_EDMU_OMS_x every 500 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1414': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'transparency capacitors need to be charged trough a resistor to limit inrush--> delay', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'The ACLog transparency time function shall be fully operational 2s max after power up', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'transparency capacitors need to be charged trough a resistor to limit inrush--> delay', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-778': {'allocation': u'Emer Log SSCS', 'body': u'EMERLOG shall send the following data to EDMU through EMERLOG_EDMU_FUSE_STATUS_x messages:\n\uf0a7\tState of EMER Fuse: Fuse is open or closed.\n\uf0a7\tValidity of the state of EMER Fuse: the state signal is valid or not.', 'refer': u'[SIRD-EPGDS-253],[SIRD-EPGDS-3037]'}, u'CAN-IRD-476': {'allocation': u'DC Log SSCS', 'body': u'DC busbars shall include the following bubars for DCLOG1:\n\uf0a7\tDC1_BUSBAR\n\uf0a7\tDC2_BUSBAR\n\uf0a7\tDC2_ESS_BUSBAR\n\uf0a7\tEMER1_BUSBAR\n\uf0a7\tMAIN_BATT_BUSBAR', 'refer': u'[SIRD-EPGDS-1020],[SIRD-EPGDS-1055],[SIRD-EPGDS-1896],[SIRD-EPGDS-6773]'}, u'SSCS_ACLog_1038': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall monitor TCB matrix failure during CBIT, at each TCB status monitoring', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1085]'}, u'SSCS_ACLog_547': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'To know if the aircraft is in flight or in ground, the ACLog shall implement two complementary DSI ground/Open 1mA:\n- DSI_WOW_ON_GROUND (Open: Flight, Ground: Ground)\n- DSI_WOW_IN_FLIGHT (Open: Ground, Ground: Flight)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-493],[SES-ACEPC-494]'}, u'SSCS_ACLog_1496': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The following data from EDMU1 shall be not redundant with the data sent by EDMU2:\n NVM control commands\n IBITE control commands', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-3149]'}, u'CAN-IRD-429': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request ACLOG[1/2]_EDMU_ALARM_STATUS every 50 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-772': {'allocation': u'AC Log SSCS', 'body': u'ACLOG[1/2] shall send the following data to EDMU through ACLOG[1/2]_EDMU_FUSE_STATUS_x messages:\n\uf0a7\tState of AC Fuse: Fuse is open or closed.\n\uf0a7\tValidity of the state of AC Fuse: the state signal is valid or not.', 'refer': u'[SIRD-EPGDS-253],[SIRD-EPGDS-3037]'}, u'CAN-IRD-773': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request ACLOG[1/2]_EDMU_FUSE_STATUS_x every 250 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-775': {'allocation': u'DC Log SSCS', 'body': u'DCLOG[1/2] shall send the following data to EDMU through DCLOG[1/2]_EDMU_FUSE_STATUS_x messages:\n\uf0a7\tState of DC Fuse: Fuse is open or closed.\n\uf0a7\tValidity of the state of DC Fuse: the state signal is valid or not.', 'refer': u'[SIRD-EPGDS-253],[SIRD-EPGDS-3037]'}, u'CAN-IRD-776': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request DCLOG[1/2]_EDMU_FUSE_STATUS_x every 250 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1137': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'AC1_BUSBAR_AVAIL=1 --> present', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog1 shall compute "AC_BUS1_FAIL" CAS message according to the following logic : \nTRUE\nAC1_BUSBAR_AVAIL=0\nAND\n[(DSI_PR_RGEN=Grounded and DSI_NPR_RGEN=Open)\nOR\n(DSI_PR_LGEN=Grounded and DSI_NPR_LGEN=Open) \nOR\n(DSI_PR_AC_EP=Grounded and DSI_NPR_AC_EP=Open) \nOR\n(DSI_PR_APU=Grounded and DSI_NPR_APU=Open)]\nFALSE otherwise', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1199]'}, u'SSCS_ACLog_1068': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Note: Each RCCB command has an associated validity bit. Therefore it is possible for one RCCB on the AClog to have invalid data while the others do not. It is also possible for some of the RCCB on the Aclog to have the Left bus active and some of the RCCB to have the Right bus as the active bus. (This can happen if the one EDMU has missing data so it sets its output commands as invalid. This effectively switches the control of this RCCB to the other EDMU without causing all of the RCCBs to be switched to the other EDMU.)tolerance added', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If both CAN RCCB "CLOSED" commands are invalid for 1s +/-100ms, the RCCB shall be set as described below until one of the busses provides valid RCCB command:\n- CLOSE ACMP3A and 3B and OPEN ACMP1B, if the aircraft is in flight\n- OPEN ACMP3A, 3B and 1B if the aircraft is on ground', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2166],[SIRD-EPGDS-2848],[SIRD-EPGDS-2970]'}, u'SSCS_ACLog_659': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1032': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'ASI input signal shall be acquired in differential mode', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-762]'}, u'SSCS_ACLog_1345': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall send following CAS messages to the EDMU using CAN busses : \nACLOG2_FAIL\nAC_BUS2_FAIL\nACLOG2_DP_ACT\nATC2_FAILED_CLOSED_CAS\nATC2_FAILED_OPEN_CAS\nELC_FAILED_CLOSED_CAS\nELC_FAILED_OPEN_CAS', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1266]'}, u'SSCS_ACLog_1344': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall compute the "EXT_AC_Online" message according the following logic : \nTRUE\nExternal power is available\nAND\nELC contactor is CLOSED\nFALSE otherwise ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1340]'}, u'SSCS_ACLog_1341': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall compute the "ELC_FAILED_CLOSED_CAS" CAS message according the following logic : \nTRUE\nELC is declared failed Closed\nFALSE otherwise', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1212]'}, u'SSCS_ACLog_1138': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall compute "AC_BUS2_FAIL" CAS message according to the following logic : \nTRUE\nAC2_BUSBAR_AVAIL=0\nAND\n[(DSI_PR_RGEN=Grounded and DSI_NPR_RGEN=Open)\nOR\n(DSI_PR_LGEN=Grounded and DSI_NPR_LGEN=Open) \nOR\n(AC External Power is "Power Ready") \nOR\n(DSI_PR_APU=Grounded and DSI_NPR_APU=Open)]\nFALSE otherwise', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1208]'}, u'SSCS_ACLog_1343': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall compute the "EXT_AC_PWR_AVAIL" message according the following logic : \nTRUE\nExternal power AC is available\nFALSE otherwise ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1339]'}, u'SSCS_ACLog_683': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'To determine LxCy (line x, column y) TCB status, the ACLog shall only set DSO_AC_CB_Cy to ground and read the LxCy TCB status on DSI_AC_CB_Lx', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To read CB status', 'issue': u'1', 'refer': 'EMPTY'}, u'CAN-IRD-338': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS', 'body': u'The max time between the last frame of command sent by the EDMU and the first frame of the answer transmitted by the ACLOG (resp. DCLOG, resp. EMERLOG) shall be less than 3 ms.', 'refer': u'[SIRD-EPGDS-114]'}, u'CAN-IRD-339': {'allocation': u'HS', 'body': u'The max time between the last frame of command sent by the EDMU and the first frame of the answer transmitted by the GCU shall be less than 6 ms.', 'refer': u'[SIRD-EPGDS-114]'}, u'SSCS_ACLog_736': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog2 shall command ATC2 through DSO_CDE_AC_CTC2:\n- 28V to closed ATC2 contactor\n- Open to open ATC2 contactor', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-444],[SES-ACEPC-446]'}, u'SSCS_ACLog_713': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog1 shall read the ACMPx RCCB auxiliaries contacts thanks to the following DSI Ground/Open 5mA:\n- ACMP3B: DSI_RCCB1_NO (Ground: closed, Open: Open) and DSI_RCCB1_NC (Ground: Open, Open: closed)\n- ACMP3A: DSI_RCCB1_OPP_NO (Ground: closed, Open: Open) and DSI_RCCB1_OPP_NC (Ground: Open, Open: closed)\n- ACMP1B: DSI_RCCB2_OPP_NO (Ground: closed, Open: Open) and DSI_RCCB2_OPP_NC (Ground: Open, Open: closed)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-423],[SES-ACEPC-424],[SES-ACEPC-425]'}, u'SSCS_ACLog_1262': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall clear protections status, except for ACMP, stored in the NVM after cold start, aircraft on ground, or Initiated Test Command.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1756]'}, u'SSCS_ACLog_1263': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Each monitoring datas by ACLog shall be send to EDMUs through CAN busses', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1896]'}, u'SSCS_ACLog_1260': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'During the Initiated BIT, the ACLog shall inhibit any external NVM access request.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1103]'}, u'SSCS_ACLog_1261': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'the ACLog shall employ circular buffers and any required NVM corruption prevention circuits and routines.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1743]'}, u'CAN-IRD-330': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall initiate each time slot.', 'refer': u'[SIRD-EPGDS-115]'}, u'CAN-IRD-331': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS,SSPCM SSCS', 'body': u'Each time slot shall be initiated by setting \u201cSlot start\u201d bit to 1.', 'refer': u'[SIRD-EPGDS-115]'}, u'CAN-IRD-332': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS', 'body': u'Data requested shall be encoded in the frame identifier sent by EDMU.', 'refer': u'[SIRD-EPGDS-113],[SIRD-EPGDS-115]'}, u'CAN-IRD-333': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS', 'body': u'As soon as a remote LRU receive a request command on one CAN bus it shall answer with the requested data on this CAN Bus.', 'additional': u'The request command received on the bus CAN A are not synchronous with the ones received on bus CAN B.', 'refer': u'[SIRD-EPGDS-116]'}, u'CAN-IRD-334': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS', 'body': u'The subscriber shall stay silent if no communication is requested by EDMU.', 'refer': u'[SIRD-EPGDS-117]'}, u'CAN-IRD-335': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,SSPCM SSCS', 'body': u'The subscriber shall transmit all requested frames during the dedicated time slot.', 'refer': u'[SIRD-EPGDS-118]'}, u'CAN-IRD-336': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,SSPCM SSCS', 'body': u'If one message can\u2019t be sent in the dedicated time slot, it shall be removed from the CAN queue.', 'refer': u'[SIRD-EPGDS-118]'}, u'CAN-IRD-337': {'allocation': u'SSPCM SSCS', 'body': u'The max time between the last frame of command sent by the EDMU and the first frame of the answer transmitted by the SSPCM shall be less than 0.3 ms.', 'refer': u'[SIRD-EPGDS-114]'}, u'SSCS_ACLog_549': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_548': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall compute the aircraft position status (IS_IN_FLIGHT) and its validity (FLIGHT_STATE_VALID) thanks to the following truth table:\n   \nTable 2: Weight on wheel', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'IDEM'}, u'SSCS_ACLog_1432': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'All ACLog components shall be protected from condensation induced by external temperature change from cold to warm.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-1014]'}, u'CAN-IRD-508': {'allocation': u'Emer Log SSCS,EDMU SSCS', 'body': u'CAN IDs of EMERLOG to EDMU frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_955': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Upon EDMU initiated BITE request, the ACLog shall perform a PBIT sequence and monitor the same failure than PBIT during intiated bite, except for DSO contactors behavior.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-176],[SPE-BITE-186],[SPE-BITE-859]'}, u'SSCS_ACLog_716': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_905': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall perform CBIT after the following events : \n- PBIT,\n- warm start,\n- Cold start, on flight.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-122]'}, u'SSCS_ACLog_541': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-502': {'allocation': u'DC Log SSCS,EDMU SSCS', 'body': u'CAN IDs of DCLOG1 to EDMU frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-501': {'allocation': u'AC Log SSCS,EDMU SSCS', 'body': u'CAN IDs of ACLOG1 to EDMU frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_717': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Each ACLog shall determine its own ACMPx RCCB status, status validity and failure by following the here below table:\n   \nTable 13: ACMPx RCCB status, status validity and failure', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1065],[SPE-BITE-1066]'}, u'CAN-IRD-507': {'allocation': u'DC Log SSCS,EDMU SSCS', 'body': u'CAN IDs of DCLOG2 to EDMU frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-506': {'allocation': u'AC Log SSCS,EDMU SSCS', 'body': u'CAN IDs of ACLOG2 to EDMU frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-505': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS', 'body': u'CAN IDs of EDMU to XLOG2 frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_686': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall communicate each TCB status through CAN busses', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-1008]'}, u'CAN-IRD-217': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request ACLOG[1/2]_EDMU_MODULE_STATUS and ACLOG[1/2]_EDMU_BITE_x  every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1031': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'ASI 28V input impedance shall be higher than 99 k\u03a9 whether the ACLog is supplied or not.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-759]'}, u'SSCS_ACLog_682': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'timing of 125ms is added because the refreshing time in CAN IRD is 250ms (cf. req SSCS 695)', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall monitor every 125ms +/-10ms the TCB status by considering the following wiring matrix:\n   \nFigure 28: CB Matrix', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-777]'}, u'SSCS_ACLog_1466': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Label (1)waiting for SIRD update', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall switch from AC external power NOT CONNECTED to AC external power CONNECTED when: PIN E voltage PRESENCE is detected', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-6824]'}, u'SSCS_ACLog_680': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall provide 5 DSO Ground/Open medium power to monitor TCB status (thanks to their auxiliaries contacts):\n- DSO_AC_CB_C1\n- DSO_AC_CB_C2\n- DSO_AC_CB_C3\n- DSO_AC_CB_C4\n- DSO_AC_CB_C5', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SES-ACEPC-333],[SES-ACEPC-776]'}, u'SSCS_ACLog_681': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall provide a DSI Ground/Open 5mA and a DSO Ground/Open medium power to check the matrix wiring:\n- DSI_AC_CB_TEST\n- DSO_AC_CB_TEST', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SES-ACEPC-497]'}, u'SSCS_ACLog_844': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'DSO_CDE_AC_CTC1 and DSO_CDE_AC_CTC2 shall be commanded by the microcontroller through the anti-paralleling function', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To specify the HW function wiring', 'issue': u'1', 'refer': 'EMPTY'}, u'SSCS_ACLog_688': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_689': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog  shall be designed as a line replaceable module (LRM)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-201]'}, u'SSCS_ACLog_1002': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'Low power DSO Output impedance shall be higher than 1 M\u03a9 when output is open or when the equipment is not powered. ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-746],[SES-ACEPC-747],[SES-ACEPC-748]'}, u'SSCS_ACLog_449': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The AC external protection states shall be communicated through the CAN busses.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-462]'}, u'SSCS_ACLog_763': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall meet the "Operating Low Temperature" requirements defined in section 4 of RTCA/DO-160G Category A2.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-132]'}, u'SSCS_ACLog_1001': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'Low power DSO shall be able to drive 20 DSI at 1mA.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-745]'}, u'CAN-IRD-118': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'One CAN bus named EDMU-2-CAN-SPDA-2 shall connect the following LRUs:\n\uf0a7\tEDMU2\n\uf0a7\t8 x SSPCM of SPDA-2 on control Bus A', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-312]'}, u'CAN-IRD-119': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'One CAN bus named EDMU-1-CAN-SPDA-3 shall connect the following LRUs:\n\uf0a7\tEDMU1\n\uf0a7\t8 x SSPCM of SPDA-3 on control Bus A', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-311]'}, u'SSCS_ACLog_767': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall meet the "Ground Survival High Temperature" requirements defined in section 4 of RTCA/DO-160G Category A2.\nTemperature Elevation of 10\xb0C is  applied to the ambient temperature.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-137],[SES-ACEPC-291]'}, u'SSCS_ACLog_1469': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Label (5)', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall switch from AC External power NOT POWER READY to AC External power POWER READY when:\n- AC external power is CONNECTED\nAND\n- There is no AC EP 115V Protection\nAND\n- There is no PINE Over Voltage Protection\nAND\n- The aircraft position is "On Ground"', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1419],[SIRD-EPGDS-6827]'}, u'CAN-IRD-114': {'allocation': u'EDMU SSCS', 'body': u'One CAN bus named EDMU-2-CAN-RGCU shall connect the following LRUs:\n\uf0a7\tEDMU2\n\uf0a7\tRGCU on control Bus A', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-110],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-312]'}, u'CAN-IRD-115': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'One CAN bus named EDMU-1-CAN-SPDA-1 shall connect the following LRUs:\n\uf0a7\tEDMU1\n\uf0a7\t8 x SSPCM of SPDA-1 on control Bus A', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-311]'}, u'CAN-IRD-116': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'One CAN bus named EDMU-2-CAN-SPDA-1 shall connect the following LRUs:\n\uf0a7\tEDMU2\n\uf0a7\t8 x SSPCM of SPDA-1 on control Bus B', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-311]'}, u'CAN-IRD-117': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'One CAN bus named EDMU-1-CAN-SPDA-2 shall connect the following LRUs:\n\uf0a7\tEDMU1\n\uf0a7\t8 x SSPCM of SPDA-2 on control Bus B', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-312]'}, u'CAN-IRD-110': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS', 'body': u'One CAN bus named EDMU-2-CAN-XLOG-2 shall connect the following LRUs:\n\uf0a7\tEDMU2\n\uf0a7\tACLOG2 on control Bus A\n\uf0a7\tDCLOG2 on control Bus A\n\uf0a7\tEMERLOG on control Bus A', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-110],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-312]'}, u'CAN-IRD-111': {'allocation': u'EDMU SSCS', 'body': u'One CAN bus named EDMU-1-CAN-LGCU shall connect the following LRUs:\n\uf0a7\tEDMU1\n\uf0a7\tLGCU on control Bus A\n\uf0a7\tAGCU on control Bus A', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-110],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-311]'}, u'CAN-IRD-112': {'allocation': u'EDMU SSCS', 'body': u'One CAN bus named EDMU-2-CAN-LGCU shall connect the following LRUs:\n\uf0a7\tEDMU2\n\uf0a7\tLGCU on control Bus B\n\uf0a7\tAGCU on control Bus B', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-110],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-311]'}, u'CAN-IRD-113': {'allocation': u'EDMU SSCS', 'body': u'One CAN bus named EDMU-1-CAN-RGCU shall connect the following LRUs:\n\uf0a7\tEDMU1\n\uf0a7\tRGCU on control Bus B', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-110],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-312]'}, u'SSCS_ACLog_1030': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'ASI 28V input shall be filtered by low-pass filters with a cut-off frequency lower than 10kHz +/-30%', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-758]'}, u'SSCS_ACLog_761': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'All 115/200 Vac powered components shall be able to withstand without damage a voltage of 1500 V (60Hz) between individually isolated terminals and between all terminals and case for 1 minute, without any leakage current in excess of 1.0 mA or evidence of damage due to arcing, flashover or insulation breakdown.\nRemark: Any filter component or transient protection device not designed to withstand such a test can be disconnected before carrying out this test.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-109]'}, u'SSCS_ACLog_1003': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'When grounded, low power DSO Ground/Open circuit type shall have an output voltage <1.5V at 20mA', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-747]'}, u'SSCS_ACLog_1040': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'The ACLog shall declare a TCB matrix failure if the following table is not respected\n   \nTable 38: TCB matrix', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'Matrix Bite strategy', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_919': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall monitor Contactor Failed Open failure for all driven contactors during CBIT', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-749]'}, u'SSCS_ACLog_1006': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'Medium power DSO shall be able to drive 200mA +/-10%', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-857]'}, u'SSCS_ACLog_735': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog1 shall command ATC1 through DSO_CDE_AC_CTC1:\n- 28V to closed ATC1 contactor\n- Open to open ATC1 contactor', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-459],[SES-ACEPC-461]'}, u'SSCS_ACLog_1037': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'The ACLog shall implement a non volatile memory type EEPROM (external to the microcontroller)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'Non volatile memory to stock failures', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1007': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'Medium Power DSO Output impedance shall be higher than 1 M\u03a9 when output is open or when the equipment is not powered. ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-750],[SES-ACEPC-751],[SES-ACEPC-752]'}, u'CAN-IRD-808': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request RGCU_EDMU_SNPTC_COLOR_x every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-807': {'allocation': u'HS', 'body': u'AGCU shall send the state of synoptic element colors through AGCU_EDMU_SNPTC_COLOR_x messages', 'refer': u'[SIRD-EPGDS-1052],[SPE-BITE-1188]'}, u'CAN-IRD-804': {'allocation': u'HS', 'body': u'RGCU shall send the state of synoptic element colors through RGCU_EDMU_SNPTC_COLOR_x messages', 'refer': u'[SIRD-EPGDS-1052],[SPE-BITE-1190]'}, u'CAN-IRD-805': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request RGCU_EDMU_SNPTC_COLOR_x every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-802': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request LGCU_EDMU_SNPTC_COLOR_x every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-801': {'allocation': u'HS', 'body': u'LGCU shall send the state of synoptic element colors through LGCU_EDMU_SNPTC_COLOR_x messages', 'refer': u'[SIRD-EPGDS-1052],[SPE-BITE-1189]'}, u'SSCS_ACLog_906': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_440': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The Overvoltage AC external power protection on Pin E shall be activated when voltage is higher than 42V+/-5V during 80ms+/-20ms', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-464]'}, u'CAN-IRD-567': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request RGCU_EDMU_SYNOPTIC_x every 100 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1178': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog shall confirm any failure detected during PBIT by performing the test sequence (failed) a second time.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1067]'}, u'SSCS_ACLog_441': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'- The relation between the current (I) and the ASI input voltage (V) is given by the following formula: V=(Rb)xI/1000Rb: Current transformer burden resistor (six 47Ohms +/-1% resistors in parrallel)1000: Current tranformer nominal current ratio (1/1000)this req is conform to the next version of SES ACEPC definition', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The Overload AC external protection shall be activated when one phase current is higher than the treshold and the timing describe below (with Inom=170A):\n \n  \nTable 23:  Overload AC external protection definition', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-844],[SES-ACEPC-853],[SES-ACEPC-920]'}, u'SSCS_ACLog_615': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall send the ATCx state through the CAN busses', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1668]'}, u'SSCS_ACLog_614': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'DSI NO / NC aux contact :Open = DSI input is OpenClosed = DSI input is grounded', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog1 shall determine the ATCx contactors status, status validity and failure of contactors which are in its AC EPC according to the following table:\n \n \nATCx = AT1 or ATC3\nTable 7: ATC1&3 contactors status, status validity and failure', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1833],[SPE-BITE-943],[SPE-BITE-944]'}, u'SSCS_ACLog_1174': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall inhibite spares or not used functions failure monitoring.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-963]'}, u'SSCS_ACLog_616': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog1 shall send the ATC1 and ATC3 "Aux" failure through the CAN busses', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-563],[SPE-BITE-973]'}, u'SSCS_ACLog_611': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_610': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog2 shall read the ATCx auxiliaries contacts thanks to the following DSI Ground/Open 5mA:\n- ATC1:\n DSI_AC_CTC1_OPP_NO for Normally Opened aux contact: DSI Open = CTC Open and \n DSI_AC_CTC1_OPP_NC for Normally Closed aux contact : DSI Grounded = CTC Open\n- ATC2:\n DSI_AC_CTC2_NO for Normally Opened aux contact: DSI Open = CTC Open and \n DSI_AC_CTC2_NC for Normally Closed aux contact : DSI Grounded = CTC Open\n- ATC3: \n DSI_AC_CTC2_OPP_NO for Normally Opened aux contact: DSI Open = CTC Open and \n DSI_AC_CTC2_OPP_NC for Normally Closed aux contact : DSI Grounded = CTC Open', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-430],[SES-ACEPC-431],[SES-ACEPC-432]'}, u'SSCS_ACLog_613': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_612': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1077': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall be able to retrieve and send the BITE NVM content through the Can busses upon EDMU request.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-652],[SPE-BITE-1054]'}, u'CAN-IRD-601': {'allocation': u'HS', 'body': u'AGCU shall send the following data to EDMU through AGCU_EDMU_BITE_1 messages :\n- APU_GCU ALC Wire or Coil Failed (BUS/WIRE (CBITE))\n- APU_GCU ATC Driver Failed OFF from AGCU to LGCU (BUS/WIRE (CBITE))\n- APU_GCU ATC Driver Failed ON from AGCU to LGCU (BUS/WIRE (CBITE))\n- APU_GCU ATC Lockout request from AGCU to LGCU (BUS/WIRE (CBITE))\n- APU_GCU CANA Bus or Receiver or Transmitter Failure (BUS/WIRE (CBITE))\n- APU_GCU CANB Bus or Receiver or Transmitter Failure (BUS/WIRE (CBITE))\n- Validity attached to these data (BUS/WIRE (CBITE))\n- APU_GCU AC BUS 2 Overcurrent Failure (BUS/WIRE (PRIT))\n- APU_GCU AC BUS 1 Overcurrent Failure (BUS/WIRE (PRIT))\n- APU_GCU APUGEN Ex Fld Wire Failed (BUS/WIRE (PRIT))\n- APU_GCU APUGEN Ex Fld Wire/Winding/Rotor Failed (BUS/WIRE (PRIT))\n- APU_GCU APUGEN Gen PHA Wire Open (BUS/WIRE (PRIT))\n- APU_GCU APUGEN Gen PHB Wire Open (BUS/WIRE (PRIT))\n- APU_GCU APUGEN Gen PHC Wire Open (BUS/WIRE (PRIT))\n- APU_GCU APUGEN PMG Wire failed (BUS/WIRE (PRIT))\n- APU_GCU AC TIE Bus Overcurrent Failure (BUS/WIRE (PRIT))\n- Validity attached to these data (BUS/WIRE (PRIT))', 'refer': u'[SIRD-EPGDS-2975],[SPE-BITE-120],[SPE-BITE-126]'}, u'CAN-IRD-602': {'allocation': u'HS', 'body': u'AGCU shall send the following data to EDMU through AGCU_EDMU_BITE_2 messages :\n- APU_GCU ATC3 Aux or Wire Failure (CONTACTOR (CBITE))\n- APU_GCU ATC1 Aux or Wire Failure (CONTACTOR (CBITE))\n- APU_GCU ATC3 Wire Coail Failure (CONTACTOR (CBITE))\n- Validity attached to these data  (CONTACTOR (CBITE))\n- APU_GCU ALC or Wire Failure (CONTACTOR (PRIT))\n- APU_GCU ALC Failed to Open - ALC aux or sense wire (CONTACTOR (PRIT))\n- APU_GCU ALC Fail to Close Driver OC (CONTACTOR (PRIT))\n- APU_GCU ALC Fail to Close Wire Open (CONTACTOR (PRIT))\n- Validity attached to these data (CONTACTOR (PRIT))', 'refer': u'[SIRD-EPGDS-2975],[SPE-BITE-120],[SPE-BITE-126]'}, u'CAN-IRD-603': {'allocation': u'HS', 'body': u'AGCU shall send the following data to EDMU through AGCU_EDMU_BITE_3 messages :\n- APU_GCU Bus Ready Acknowledgement From Distribution Circuit or Wire failed (GEN (CBITE) )\n- APU_GCU Not Bus Ready Acknowledgement From Distribution Circuit or Wire failed (GEN (CBITE) )\n- APU_GCU APU Ready To load circuit OR Wire failure(GEN (CBITE) )\n- APU_GCU APU Load Shed Circuit or wire fail (GEN (CBITE) )\n- APU_GCU OWN BUS PHA Voltage Sense  Circuit or Wire failure High (GEN (CBITE) )\n- APU_GCU OWN BUS PHB Voltage Sense  Circuit or Wire failure High (GEN (CBITE) )\n- APU_GCU OWN BUS PHC Voltage Sense  Circuit or Wire failure High (GEN (CBITE) )\n- APU_GCU OWN BUS PHA Voltage Sense  Circuit or Wire failure Low (GEN (CBITE) )\n- APU_GCU OWN BUS PHB Voltage Sense  Circuit or Wire failure Low (GEN (CBITE) )\n- APU_GCU OWN BUS PHC Voltage Sense  Circuit or Wire failure Low (GEN (CBITE) )\n- Validity attached to these data (GEN (CBITE) )\n- APU_GCU APUGEN PHA Feeder DP Failure (GEN (PRIT))\n- APU_GCU APUGEN PHB Feeder DP  Failure (GEN (PRIT))\n- APU_GCU APUGEN PHC Feeder Dp Failure (GEN (PRIT))\n- APU_GCU APUGEN Shaft Overspeed (GEN (PRIT))\n- APU GCU APUGEN  SUSP Contactor  (GEN (PRIT))\n- Validity attached to these data (GEN (PRIT))', 'refer': u'[SIRD-EPGDS-1641],[SIRD-EPGDS-2975],[SPE-BITE-120],[SPE-BITE-126]'}, u'CAN-IRD-604': {'allocation': u'HS', 'body': u'AGCU shall send the following data to EDMU through AGCU_EDMU_BITE_4 messages :\n- APU_GCU or Pin Prog Wire Failure (LRU (CBITE))\n- AGCU or APUGEN Temp Bulb Failure (LRU (CBITE))\n- Validity attached to these data (LRU (CBITE))\n- APU_GCU APUGEN Failure (LRU (PRIT))\n- APU_GCU Open Neutral Condition Failure\n- APU_GCU internal Failure (LRU (PRIT))\n- APU_GCU POR Sense Wire Failure (LRU (PRIT))\n- APU_GCU POR PHA Sense Wire Failure (LRU (PRIT))\n- APU_GCU POR PHB Sense Wire Failure (LRU (PRIT))\n- APU_GCU POR PHC Sense Wire Failure (LRU (PRIT))\n- Validity attached to these data (LRU (PRIT))', 'refer': u'[SIRD-EPGDS-2975],[SPE-BITE-120],[SPE-BITE-126]'}, u'CAN-IRD-605': {'allocation': u'HS', 'body': u'AGCU shall send the following data to EDMU through AGCU_EDMU_BITE_5 messages :\n- APU_GEN Over Frequency\n- APU_GEN Under Frequency\n- APU_GEN Overvoltage\n- APU_GEN Undervoltage\n- APU_GEN Oil Temperature High\n- APU_GEN Phase Sequence Failure\n- APU_GEN Over Current Under Speed Failure\n- APU_GEN Deta Current Failure\n- APU_GEN Rotary Diode Short Circuit\n- APU_GEN Phase Open\n- Validity attached to these data (RLDP_OMS)\n- BITE_SPARE_2 data', 'refer': u'[SIRD-EPGDS-2975],[SPE-BITE-120],[SPE-BITE-126]'}, u'CAN-IRD-606': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to AGCU through EDMU_GCU_BITE message:\n\uf0a7\tIBIT test request: IBIT test is requested or not.\n\uf0a7\tTrip Reset request: Reset of trip is requested or not.\n\uf0a7\tUnlatch failure request: Unlatch of failures is requested or not.\n\uf0a7\tNVM download request: NVM download is resquested or not', 'refer': u'[SPE-BITE-202]'}, u'CAN-IRD-607': {'allocation': u'HS', 'body': u'AGCU shall send the following data to EDMU through AGCU_EDMU_MODULE_STATUS message:\n\uf0a7\tIBIT acceptance: LRU is in condition for IBIT test or not.\n\uf0a7\tTrip Reset acceptance: LRU is in condition for Reset of trip or not.\n\uf0a7\tUnlatch failure acceptance: LRU is in condition for unlatching failures or not.\n\uf0a7\tits Flight/Ground status : LRU is in Flight or on Ground\n\uf0a7\tThe validity of the Flight/Ground status\n\uf0a7\tNVM download acceptance state', 'refer': u'[SIRD-EPGDS-2533],[SIRD-EPGDS-2975],[SPE-BITE-202]'}, u'CAN-IRD-608': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request AGCU_EDMU_BITE_x and AGCU_EDMU_MODULE_STATUS every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1482': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Label (14)waiting for SIRD update (ACLOG2 --> ACLOG)', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall switch from ELC Ground Servicing CLOSE Request to ELC Ground Servicing OPEN Request when:\n- ELC ACEP CLOSE Request\nOR\n- AC External Power is NOT POWER READY\nOR\n- "28V_AC_EP_TR" is NOT present\nOR\n- "DSI_GS_PB" falling edge is detected\nOR\n- At least one GCU or APU is Power Ready\nOR\n- ELC is FAILED OPEN', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1831],[SIRD-EPGDS-2562]'}, u'SSCS_ACLog_1079': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Each fault detected by the ACLog shall be stored into the NVM with the following contents:\n- Fault code\n- Snapshot data\n- Flight leg\n- Flight phase\n- Occurrence count\n- Aircraft tail\n- Time\n- Date', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-905]'}, u'SSCS_ACLog_1483': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'ACLog2 shall command ELC:\n- to CLOSE when ELC Ground Servicing CLOSE Request state is ACTIVE\n- to OPEN when ELC Ground Servicing OPEN Request state is ACTIVE', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'needed for ACEP definition', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_446': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Each AC external protections activation shall be latched and sent into NVM', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-460]'}, u'SSCS_ACLog_1035': {'status': u'TBD', 'terminal': 'EMPTY', 'additional': u'ASI 28V specification', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'ASI 28V voltage measure shall have a precision better than 4% on full scale (without taking account AC EPC resistor tolerance)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'ASI 28V specification', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_447': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'SIRD should be updated', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Each AC external protection activation shall be reset when one of these events occurs:\n- Cold Start on Ground\nOR\n- IBIT\nOR\n- AC External Power Mode switches from ACTIVE to NOT ACTIVE\nOR\n- Ground Servicing Mode switches from ACTIVE to NOT ACTIVE', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-461]'}, u'SSCS_ACLog_1342': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall compute the "ELC_FAILED_OPEN_CAS" CAS message according the following logic : \nTRUE\nELC is declared failed Open\nFALSE otherwise', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1213]'}, u'CAN-IRD-530': {'allocation': u'EDMU SSCS', 'body': u'The data of messages sent between EDMU and RGCU shall be compliant to the following document:', 'refer': u'[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_759': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The insulation resistance between individually isolated 115/200 Vac terminals and between all terminals and case shall be greater than 20 M\u03a9 when tested at a voltage of 500 Vdc\xb110%\nRemark: Any filter component or transient protection device not designed to withstand such a test can be disconnected before carrying out this test', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-107]'}, u'SSCS_ACLog_1546': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'ACLOG1 cannot monitor AC BUS2, waiting for Bite psec Update', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u' ACLOG2 CBIT shall monitor AC BUS2 Overvoltage Protection activation', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1493]'}, u'SSCS_ACLog_981': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'Ground/Open DSI shall be designed with an hysteresis of 3V minimum ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-726]'}, u'SSCS_ACLog_1372': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog shall allocate an area of at least 36 kbytes for BITE purpose in NVM.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1350]'}, u'SSCS_ACLog_1034': {'status': u'TBD', 'terminal': 'EMPTY', 'additional': u'ASI 28V specification', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'ASI 28V shall be able to measure DC voltages from 0V to 46V', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'ASI 28V specification', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_845': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall send the anti-paralleling failure status (ANTI_PARALLELING_FUNC) after a confiramation time of 5seconds +/-0.5s through the CAN busses', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1484],[SPE-BITE-1485]'}, u'SSCS_ACLog_837': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog Anti paralleling hardware function shall compute the contactor command according to the following table:\n   \nThe Hardware function will give an "antiparalleling detection status" to the software which needs to be compiled with the DSO contator status\nTable 24: Anti paralleling truth table', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2573],[SIRD-EPGDS-2575],[SIRD-EPGDS-2576],[SIRD-EPGDS-2577]'}, u'SSCS_ACLog_836': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall consider a voltage presence thanks to ASI_AC_CTCx_APx when one phase voltage is higher than 55Vrms +/-5Vrms', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2574]'}, u'SSCS_ACLog_831': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The differential protection shall be reset after a cold start if the aircraft is on ground, or through an Initiated test command ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-387]'}, u'SSCS_ACLog_830': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'When the differential protection is activated, the default shall be latched and sent into NVM.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-386]'}, u'SSCS_ACLog_833': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog2 shall read the upstream and downstream voltages of ATC2 and ELC (phase A) thanks to the following ASI:\n- ATC2: ASI_AC_CTC1_AP1 and ASI_AC_CTC1_AP2\n- ELC: ASI_AC_CTC2_AP1 and ASI_AC_CTC2_AP2', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2571]'}, u'SSCS_ACLog_832': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog1 shall read the upstream and downstream voltages of ATC1 and ATC3 (phase A) thanks to the following ASI:\n- ATC1: ASI_AC_CTC1_AP1 and ASI_AC_CTC1_AP2\n- ATC3: ASI_AC_CTC2_AP1 and ASI_AC_CTC2_AP2', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2571]'}, u'SSCS_ACLog_839': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Label (4)', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall set the 28V/Open "DSO_AC_EP_PINF" to NOT ACTIVE (set to OPEN state) when:\n- AC EP 115V is NOT PRESENT\nOR\n- At least one AC EP 115V protection occurs\nOR\n- PIN E voltage is NOT PRESENT with a confirmation time of 30ms +/-3ms\nOR\n- PIN E Over Voltage Protection occurs\nOR\n- ELC is FAIL CLOSED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1830],[SIRD-EPGDS-2121],[SES-ACEPC-691]'}, u'CAN-IRD-734': {'allocation': u'DC Log SSCS', 'body': u'DCLOG[1/2] shall send its I/O statuses and the validty of these I/O statuses to EDMU through DCLOG[1/2]_EDMU_IO_STATE_x messages.', 'refer': u'[SIRD-EPGDS-3368],[SPE-BITE-1540]'}, u'CAN-IRD-735': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request DCLOG[1/2]_EDMU_IO_STATE_x every 250 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1181': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog shall consider the disappearance of a failure after a "clearance time" which not exceed half the failure appearance confirmation time.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1072]'}, u'CAN-IRD-737': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request ACLOG[1/2]_EDMU_IO_STATE_x every 250 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-730': {'allocation': u'HS', 'body': u'AGCU shall send the following Synoptic data to EDMU through AGCU_EDMU_SYNOPTIC_2 messages: \n- APU Generator load\n- Validity attached to this piece of data', 'refer': u'[SIRD-EPGDS-2125]'}, u'CAN-IRD-731': {'allocation': u'AC Log SSCS', 'body': u'ACLOG[1/2] shall send its I/O statuses and the validity of these I/O statuses to EDMU through ACLOG[1/2]_EDMU_IO_STATE_x messages.', 'refer': u'[SPE-BITE-1540]'}, u'SSCS_ACLog_1185': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1184': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'28V DC1 fuse,DC ESS2 fuse,AC EP TR fuse.', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall provide internal DSI to monitor the upstream and downstream voltage of each fuses of the board', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2815],[SPE-BITE-790]'}, u'SSCS_ACLog_1008': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'When grounded, medium DSO Ground/Open circuit type shall have an output voltage <1.5V at 100mA', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-751]'}, u'SSCS_ACLog_1189': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1188': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog shall inhibit 28V board supply presence memorization in NVM when corresponding voltage is not present.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1017]'}, u'CAN-IRD-738': {'allocation': u'Emer Log SSCS', 'body': u'EMERLOG shall send its I/O statuses and the validty of these I/O statuses to EDMU through EMERLOG_EDMU_IO_STATE_x messages.', 'refer': u'[SIRD-EPGDS-3072],[SIRD-EPGDS-3368],[SPE-BITE-1540]'}, u'CAN-IRD-739': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request EMERLOG_EDMU_IO_STATE_x every 250 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_534': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'AC EP Push Button is a momentary switch', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u' \n The ACLog shall take into account "DSI_ACEP_PB" falling edge for AC External Power Mode changes:\n- DSI_ACEP_PB falling edge AND AC External Power is POWER READY \n- DSI_ACEP_PB falling edge OR AC External Power is NOT POWER READYOR ELC is Failed Open\n \nFigure 5: AC EP Push Button activation', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1444],[SES-ACEPC-662],[SES-ACEPC-692]'}, u'SSCS_ACLog_535': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_536': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u"DSO_ACEP_ON doesn't only concern ACEP, but Ground servicing mode too.", 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog2 shall command the Ground/Open "DSO_ACEP_ON" following this table:\n \n \nTable 18: DSO_ACEP_ON commands', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-6837],[SES-ACEPC-530]'}, u'SSCS_ACLog_537': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'When AC External Power is POWER READY, ACLog2 shall set:\n- Ground/Open "DSO_PR_AC_EP" to active state (GROUND)\n- Ground/Open "DSO_NPR_AC_EP" to not active state (OPEN)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'should be allocated to ACLOG at SIRD level (req 2014)', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_539': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1128': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If ASI_AC_OPP_BUSBAR_VOLT_PHA is higher than 90Vrms +/-5Vrms during at least 500ms +/-50ms, the ACLog shall \n- grounded the DSO low power "DSO_AC_BUS_OPP_AVAIL"\nAND \n- set to "Power is available" the corresponding "ACx_BUSBAR_AVAIL" through the CAN.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2987],[SES-ACEPC-938],[SES-ACEPC-939]'}, u'SSCS_ACLog_973': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall be provided with keying pins, in order to avoid incorrect location.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-671]'}, u'SSCS_ACLog_1381': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'the Flight Leg Fault Counter shall be incremented for each new fault into the same flight leg.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1361]'}, u'SSCS_ACLog_1380': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The Fault Code shall be filled according the fault code of the fault detected by the ACLog', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1360]'}, u'SSCS_ACLog_1228': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall command ATC1, ATC2, ATC3 and AEC according to the following truth table:\n   \nTable 22: Smoke isolation procedure', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-1371]'}, u'SSCS_ACLog_1382': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If there is more than 32 faults for the same flight Leg, additional faults shall not be memorized except for reoccurrence of faults already memorized.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1362]'}, u'SSCS_ACLog_1385': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Time First occurrence shall be filled by the Time received by the avionics at the moment that fault occurs for the first time.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1363]'}, u'SSCS_ACLog_1384': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Date first Occurrence shall be filled by the date received by the avionic at the moment that fault occurs for the first time.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1365]'}, u'SSCS_ACLog_1387': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Time Last Occurrence shall be filled by the Time received by the avionics at the moment of the last reoccurrence of the same fault.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1367]'}, u'SSCS_ACLog_1386': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Date Last Occurrence shall be filled by the date received by the avionics at the moment of the last reoccurrence of the same fault.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1366]'}, u'SSCS_ACLog_1222': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Failure without impact on the Network management', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of AUX failure detected on ATCx, ACLog shall keep the same ATCx command', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1833]'}, u'SSCS_ACLog_1388': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Flight Leg shall be filled by the Flight Leg provided by the avionics at the moment the fault occurs.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1368]'}, u'SSCS_ACLog_1220': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Failure without impact on the Network management', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of Aux failure detected on ALC, the ALC command shall not be modified', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1824]'}, u'SSCS_ACLog_1221': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'SIRD should be updated', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If ALC contactor status is open and ALC failure is "command" (contactor failed open), then ACLog shall:\n- apply ALC acknowledgment as "not acknowledged" ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1819]'}, u'SSCS_ACLog_1226': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Each ACLog shall send by CAN busses the AC electrical network configuration of the both sides for the power management shedding function:\n AC Bus bar presence (AC Bus 1, AC Bus 2, AC Ess Bus)\n Contactors status', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-180],[SIRD-EPGDS-6310],[SIRD-EPGDS-6311],[SIRD-EPGDS-6313]'}, u'SSCS_ACLog_1227': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'The EMERLOG_DSI_XFR datas are sended by the EDMU through the CAN busses', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall compute the smoke isolation position and the associated validity status according to following truth table:\n  \nTable 21: XFR modes and Validity', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-3073]'}, u'SSCS_ACLog_1224': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall memorize failures detected during PBIT or CBIT into the NVM ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-904]'}, u'SSCS_ACLog_1225': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall compute the AC Bus 1 bus bar, AC Bus 2 bus bar and AEC supply sources according to the following truth table:\n   \nTable 11: AC Busbar power source', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-6774]'}, u'CAN-IRD-375': {'body': u'The following table is the bus load analysis based on a maximum fully loaded bus: \n1 bus with 8 SSPCMs with 24 SSPCs by SSPCM', 'refer': u'[SIRD-EPGDS-114],End: \tTrue'}, u'CAN-IRD-279': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request EMERLOG_EDMU_PROTEC_STATUS every 50 ms.', 'rationale': u'Provision', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-278': {'status': u'TBD', 'allocation': u'Emer Log SSCS', 'body': u'EMER protections shall include the following protections:\n\uf0a7\tTBD', 'derived': u'True', 'rationale': u'Provision'}, u'CAN-IRD-275': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request EMERLOG_EDMU_CNTOR_STATUS every 50 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-274': {'allocation': u'Emer Log SSCS', 'body': u'EMER contactors shall include the following contactors:\n\uf0a7\tTLC3\n\uf0a7\tETC1\n\uf0a7\tETC2\n\uf0a7\tRLC', 'refer': u'[SIRD-EPGDS-1021],[SIRD-EPGDS-1668],[SIRD-EPGDS-1905]'}, u'CAN-IRD-277': {'allocation': u'Emer Log SSCS', 'body': u'EMERLOG shall send the following data to EDMU through EMERLOG_EDMU_PROTEC_STATUS message:\n\uf0a7\tState of EMER protections: protection is activated or not.\n\uf0a7\tValidity of the state of EMER protection: the state signal is valid or not.', 'derived': u'True', 'rationale': u'Provision'}, u'CAN-IRD-271': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request EMERLOG_EDMU_NETWORK_STATUS every 50 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-270': {'allocation': u'Emer Log SSCS', 'body': u'Supplying sources shall include the following sources or disconnected or invalid:\n\uf0a7\tR_GEN;\n\uf0a7\tL_GEN;\n\uf0a7\tAPU_GEN;\n\uf0a7\tEXT_AC;\n\uf0a7\tMAIN_BATT;\n\uf0a7\tAPU_BATT;\n\uf0a7\tRAT_GEN;\n\uf0a7\tTRU1;\n\uf0a7\tTRU2;\n\uf0a7\tESS_TRU;', 'refer': u'[SIRD-EPGDS-1021],[SIRD-EPGDS-1896],[SIRD-EPGDS-1905]'}, u'CAN-IRD-273': {'allocation': u'Emer Log SSCS', 'body': u'EMERLOG shall send the following data to EDMU through EMERLOG_EDMU_CNTOR_STATUS message:\n\uf0a7\tState of EMER contactors: contactor is open or closed.\n\uf0a7\tValidity of the state of EMER contactor: the state signal is valid or not.', 'refer': u'[SIRD-EPGDS-1021],[SIRD-EPGDS-1668],[SIRD-EPGDS-1905]'}, u'SSCS_ACLog_1452': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The confirmation time for ACLog Contactor Lockout Discrepancy failure shall be 3 seconds +/- 0,5s.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1480]'}, u'CAN-IRD-547': {'allocation': u'HS', 'body': u'LGCU shall send the following data to EDMU through LGCU_EDMU_BITE_3 messages :\n- LEFT_GCU ROLS Circuit or Wire failed (GEN (CBITE))\n- LEFT_GCU Bus Ready Acknowledgement From Distribution Circuit or Wire failed (GEN (CBITE))\n- LEFT_GCU Not Bus Ready Acknowledgement From Distribution Circuit or Wire failed (GEN (CBITE))\n- LEFT_GCU LVFG LOP sensor or Wire  Failure (GEN (CBITE))\n- LEFT_GCU LVFG Delta Oil Press Sensor or Wire failure (GEN (CBITE))\n- LEFT_GCU Left Engine Run Switch Off Failed (GEN (CBITE))\n- LEFT_GCU OWN BUS PHA Voltage Sense  Circuit or Wire failure High (GEN (CBITE)) \n- LEFT_GCU OWN BUS PHB Voltage Sense  Circuit or Wire failure High (GEN (CBITE))\n- LEFT_GCU OWN BUS PHC Voltage Sense  Circuit or Wire failure High (GEN (CBITE))\n- LEFT_GCU OWN BUS PHA Voltage Sense  Circuit or Wire failure Low (GEN (CBITE)) \n- LEFT_GCU OWN BUS PHB Voltage Sense  Circuit or Wire failure Low (GEN (CBITE))\n- LEFT_GCU OWN BUS PHC Voltage Sense  Circuit or Wire failure Low (GEN (CBITE))\n- Validity attached to these data (GEN (CBITE))\n- LEFT_GCU LVFG PHA Feeder DP Failure (GEN (PRIT))\n- LEFT_GCU LVFG PHB Feeder DP  Failure (GEN (PRIT))\n- LEFT_GCU LVFG PHC Feeder Dp Failure (GEN (PRIT))\n- LEFT_GCU LVFG Shaft Overspeed (GEN (PRIT))\n- LEFT_GCU LVFG  SUSP Contactor (GEN (PRIT))\n- Validity attached to these data', 'refer': u'[SIRD-EPGDS-1641],[SIRD-EPGDS-2975],[SPE-BITE-120],[SPE-BITE-126]'}, u'CAN-IRD-546': {'allocation': u'HS', 'body': u'LGCU shall send the following data to EDMU through LGCU_EDMU_BITE_2 messages :\n- LEFT_GCU ATC1 Aux or Wire Failure (CONTACTOR (CBITE))\n- LEFT_GCU ATC1 Wire Coail Failure (CONTACTOR (CBITE))\n- Validity attached to these data (CONTACTOR (CBITE))\n- LEFT_GCU GLC1 or Wire Failure (CONTACTOR (PRIT))\n- LEFT_GCU GLC1 Fail to Close Driver OC (CONTACTOR (PRIT))\n- LEFT_GCU GLC1 Fail to Close Wire Open (CONTACTOR (PRIT))\n- LEFT_GCU GLC1 Failed to Open - GLC1 aux or sense wire (CONTACTOR (PRIT))\n- Validity attached to these data (CONTACTOR (PRIT))', 'refer': u'[SIRD-EPGDS-2975],[SPE-BITE-120],[SPE-BITE-126]'}, u'CAN-IRD-545': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request LGCU_EDMU_BITE_x and LGCU_EDMU_MODULE_STATUS every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-544': {'allocation': u'HS', 'body': u'LGCU shall send the following data to EDMU through LGCU_EDMU_BITE_1 messages :\n- ATC 1 Lockout Drive status from LEFT_GCU to APU_GCU (BUS/WIRE (CBITE) data)\n- LEFT_GCU CANA Bus or Receiver or Transmitter Failure (BUS/WIRE (CBITE) data)\n- LEFT_GCU CANB Bus or Receiver or Transmitter Failure (BUS/WIRE (CBITE) data)\n- Validity attached to these data (BUS/WIRE (CBITE) data)\n- LEFT_GCU LVFG AC_TIE Overcurrent (BUS/WIRE (PRIT))\n- LEFT_GCU LVFG ACBUS1 Overcurrent (BUS/WIRE (PRIT))\n- LEFT_GCU LVFG Ex Fld Wire Failed (BUS/WIRE (PRIT))\n- LEFT_GCU LVFG Ex Fld Wire/Winding/Rotor Failed (BUS/WIRE (PRIT))\n- LEFT_GCU LVFG Gen PHA Wire Open (BUS/WIRE (PRIT))\n- LEFT_GCU LVFG Gen PHB Wire Open (BUS/WIRE (PRIT))\n- LEFT_GCU LVFG Gen PHC Wire Open (BUS/WIRE (PRIT))\n- LEFT_GCU LVFG PMG Wire failed (BUS/WIRE (PRIT))\n- Validity attached to these data (BUS/WIRE (PRIT))', 'refer': u'[SIRD-EPGDS-2975],[SPE-BITE-120],[SPE-BITE-126]'}, u'CAN-IRD-542': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request LGCU_EDMU_OMS_x every 500 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-541': {'allocation': u'HS', 'body': u'LGCU shall send the following OMS data to EDMU through LGCU_EDMU_OMS_1 message :\n- Digtal value of the Left generator oil temperature.\n- Status of the oil pressure\n- Status of oil filter\n- Status of the oil level\n- Status of ATC Lockout request wire failure\n- Validity attached to these data', 'refer': u'[SIRD-EPGDS-2975],[SPE-BITE-1331]'}, u'SSCS_ACLog_1020': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_880': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall send the AEC "Aux" failure through the CAN busses', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-563],[SPE-BITE-973]'}, u'CAN-IRD-422': {'status': u'TBD', 'allocation': u'AC Log SSCS', 'body': u'AC protections shall include the following protections for ACLOG1:\n\uf0a7\tTBD', 'derived': u'True', 'rationale': u'Provision'}, u'CAN-IRD-423': {'status': u'TBD', 'allocation': u'AC Log SSCS', 'body': u'AC protections shall include the following protections for ACLOG2:\n\uf0a7\tTBD', 'derived': u'True', 'rationale': u'Provision'}, u'CAN-IRD-424': {'status': u'TBD', 'allocation': u'DC Log SSCS', 'body': u'DC protections shall include the following protections for DCLOG2:\n\uf0a7\tTBD', 'derived': u'True', 'rationale': u'Provision'}, u'SSCS_ACLog_885': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'ACLog shall provide 5 DSI Ground/Open 1mA for pin programming to differentiate ACLog1 from ACLog2:\n- DSI_PINPROG1\n- DSI_PINPROG2\n- DSI_PINPROG3\n- DSI_PINPROG4\n- DSI_PINPROG5', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-657]'}, u'CAN-IRD-549': {'allocation': u'HS', 'body': u'LGCU shall send the following data to EDMU through LGCU_EDMU_BITE_5 messages :\n- LEFT_GCU LVFG Over Frequency\n- LEFT_GCU LVFG Under Frequency\n- LEFT_GCU LVFG Overvoltage\n- LEFT_GCU LVFG Undervoltage\n- LEFT_GCU LVFG Oil Temperature High\n- LEFT_GCU LVFG Phase Sequence Failure\n- LEFT_GCU LVFG Over Current Under Speed Failure\n- LEFT_GCU LVFG Deta Current Failure\n- LEFT_GCU LVFG Rotary Diode Short Circuit\n- LEFT_GCU LVFG Phase Open\n- Validity attached to these data (RLDP_OMS)\n- BITE_SPARE_2 data', 'refer': u'[SIRD-EPGDS-2975],[SPE-BITE-120],[SPE-BITE-126]'}, u'CAN-IRD-548': {'allocation': u'HS', 'body': u'LGCU shall send the following data to EDMU through LGCU_EDMU_BITE_4 messages :\n- LEFT_GCU or Pin Prog Wire Failure (LRU (CBITE))\n- LGCU or LVFG Temp Bulb Failure (LRU (CBITE))\n- Validity attached to these data (LRU (CBITE))\n- LEFT_GCU LVFG Failure (LRU (PRIT))\n- LEFT_GCU Open Neutral Condition Failure (LRU (PRIT))\n- LEFT_GCU internal Failure (LRU (PRIT))\n- LEFT_GCU POR Sense Wire Failure (LRU (PRIT))\n- LEFT_GCU POR PHA Sense Wire Failure (LRU (PRIT))\n- LEFT_GCU POR PHB Sense Wire Failure (LRU (PRIT))\n- LEFT_GCU POR PHC Sense Wire Failure (LRU (PRIT))\n- Validity attached to these data (LRU (PRIT))', 'refer': u'[SIRD-EPGDS-2975],[SPE-BITE-120],[SPE-BITE-126]'}, u'SSCS_ACLog_1405': {'status': u'TBC', 'terminal': 'EMPTY', 'additional': u'Should be specified at SIRD Level', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'When a command without validity of one CAN bus is already processing, the ACLog shall ignore the same commmand received through the other CAN bus', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'Shall be specified at SIRD Level', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-691': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'The messages between EDMU and SSPCM shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN Protocol', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_480': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u"The opening contactor time is not includied in this time , it's only the detection time", 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The GFI protection time delay detection shall be less than 4ms +/- 1 ms', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-395]'}, u'CAN-IRD-690': {'body': u'The load of each time slot shall be less than 70%.', 'refer': u'[SIRD-EPGDS-114],End: \tTrue'}, u'SSCS_ACLog_1313': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1259': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall ignore Initiated BITE request if at least one of the following condition is met : \n- Aircraft In Flight\n- Ground status is Invalid\n- Initiated BITE is already running\n- NVM Download in progress\n- NVM Reset in progress.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1106]'}, u'SSCS_ACLog_1258': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1257': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall reset BITE information stored in NVM on EDMU request through CAN bus.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1057]'}, u'SSCS_ACLog_1256': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of any protection activation, the ACLOG shall declare the corresponding failure to the EDMU using CAN buses.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SPE-BITE-556]'}, u'SSCS_ACLog_1255': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The number of life limited components shall be justified and accepted by ZEPS safety department.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-928]'}, u'SSCS_ACLog_1254': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1253': {'status': u'TBD', 'terminal': u'YES', 'additional': u'waiting for system definition', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The list of applicable fungi to be used to qualify ACLog for fungus Resistance tests shall be as following :TBD.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-157]'}, u'SSCS_ACLog_1252': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The list of applicable fluids to be used to qualify ACEPCs for Fluid Susceptibility tests shall be as following :\n- Solvent and Cleaning Fluids\n- Insecticides\n- Sullage\n- Disinfectant (heavy duty phenolics)\n- Fire Extinguishants\n- Beverage spillage\n    \nTable 33: Applicable fluid List', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-154]'}, u'SSCS_ACLog_1528': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'NVM reset shall be inhibited if at least one of the following condition is met : \nAircraft in flight\nInitiated BIT In progress \nNVM Download in progress ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1552]'}, u'SSCS_ACLog_1300': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The impact of SEU/MBU on the system shall assessed taking into account that the aircraft is exposed to an Atmospheric Neutron Flux of 4230 N/cm\xb2.h for an altitude of 51 000 feet.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-952]'}, u'SSCS_ACLog_454': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1121': {'status': u'TBC', 'terminal': 'EMPTY', 'additional': u'computed command added', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of absence of RCCB protections, the ACLog shall compute the RCCB command and states in accordance with the following table (TBC):\n   \nTable 20: RCCB computed commands', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2206]'}, u'SSCS_ACLog_516': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_867': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The AC Bus overvoltage protection shall be activated when an AC Bus phase voltage is higher than 134V +/-15V during 1s +/-100ms', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2463]'}, u'SSCS_ACLog_1141': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'external failure', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW, SW', 'body': u'The ACLog shall verify the presence (wiring) of the current transformers dedicated to the differential protection and currents tranformers dedicated to the AC EP current monitoring (only ACLog2) only during PBIT (Not during IBIT)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To detect CT failure', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_718': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog1 shall compute the ACMP3B_closed_state status by following the truth table here below and send it through the CAN busses:\n   \nTable 14: ACMP3B_closed_state status', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1081],[SPE-BITE-616],[SPE-BITE-755]'}, u'SSCS_ACLog_719': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall compute the ACMP1B_closed_state and ACMP3A_closed_state status by following the truth table here below and send it through the CAN busses:\n   \nTable 15:  ACMP1B_closed_state and ACMP3A_closed_state status', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1081],[SPE-BITE-616],[SPE-BITE-756]'}, u'SSCS_ACLog_653': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'ACLog Pcb common mode internal capacitance C1, and C2 as the following figure, shall not exceed 100pf:\n   \nFigure 30: CAN busses internal capacitance', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2098]'}, u'SSCS_ACLog_1131': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'Net crossing shall be avoided for CAN busses', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'For hardware design and routing', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-648': {'allocation': u'DC Log SSCS', 'body': u'DCLOG[1/2] shall send NVM data to EDMU through DCLOG[1/2]_EDMU_NVM_PACKET_[1;42] messages :\n\uf0a7\tPacket number : The number of the NVM packet transmitted.\n\uf0a7\tNVM packet : 6 bytes of NVM.', 'refer': u'[SIRD-EPGDS-652],[SPE-BITE-1054]'}, u'CAN-IRD-649': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request DCLOG[1/2]_EDMU_NVM_DL_STATUS every 500 ms.', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_657': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The bit timing of CAN frame shall be the followed:\n- Rate : 500kbit/s,\n- Tbit: 2\uf06ds\n- Tq:125ns\n- No of Tq/bit:16\n- Prop_Seg+Phase_seg1:11Tq,\n- Phase seq2 4Tq,\n- Re-Synchronisation Jump Width: 1 Tq,\n- Location of sample point: at least 75%\n- Max Information Processing Time: less or equal to 2Tq,', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2106]'}, u'SSCS_ACLog_656': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The outputs voltage levels of the ACLog CAN bus transceivers shall be compliant with those defined into ISO11898-2, \xa77.2.2.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2105]'}, u'CAN-IRD-644': {'body': u'The bytes of the NVM block shall be transmitted consecutively.', 'additional': u'First byte of first packet = First byte of the NVM, 2nd byte of first packet = 2nd byte of the NVM....', 'derived': u'True', 'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS', 'rationale': u'To avoid transfering the NVM in erratic order.', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-749],[SPE-BITE-1054]'}, u'SSCS_ACLog_658': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'To pull the floating isolated ground to the mechanical ground, the isolated transceiver ground shall be wired to the mechanical ground through a 30KOhms +/-10% resistor', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To provide a reference', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-646': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data through EDMU_XLOG_NVM_DL message:\n\uf0a7\tNVM Download request: NVM downloading operation is requested or not.\n\uf0a7\tNVM reset request: NVM reset operation is requested or not.\n\uf0a7\tNVM Block First byte: First byte of NVM block requested by EDMU.\n\uf0a7\tNVM Block size : Number of bytes of NVM requested by EDMU', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-653],[SPE-BITE-1054],[SPE-BITE-1057]'}, u'CAN-IRD-647': {'allocation': u'DC Log SSCS', 'body': u'DCLOG[1/2] shall send the following data through DCLOG[1/2]_EDMU_NVM_DL_STATUS message :\n\uf0a7\tNVM Download answer: LRU accepts or not the NVM download request from EDMU.\n\uf0a7\tThe size of the NVM : Size of the NVM of the LRU.\n\uf0a7\tThe number of NVM block packets : Number of packet needed to achieve NVM block download if request is accepted else 0.\n\uf0a7\tCRC NVM of block : CRC of NVM block if request is accepted else 0.', 'refer': u'[SIRD-EPGDS-652],[SPE-BITE-1054]'}, u'SSCS_ACLog_714': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog2 shall read the ACMPx RCCB auxiliaries contacts thanks to the following DSI Ground/Open 5mA:\n- ACMP3B: DSI_RCCB1_OPP_NO (Ground: closed, Open: Open) and DSI_RCCB1_OPP_NC (Ground: Open, Open: closed)\n- ACMP3A: DSI_RCCB1_NO (Ground: closed, Open: Open) and DSI_RCCB1_NC (Ground: Open, Open: closed)\n- ACMP1B: DSI_RCCB2_NO (Ground: closed, Open: Open) and DSI_RCCB2_NC (Ground: Open, Open: closed)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-423],[SES-ACEPC-424],[SES-ACEPC-425]'}, u'CAN-IRD-641': {'body': u'When NVM download conditions are met, LRU shall transmit its NVM content if requested by EDMU.', 'additional': u'During a transfer, if the NVM download  operation is not requested anymore the LRU stops the transmission of the NVM content. ', 'derived': u'True', 'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS', 'rationale': u'CAN NVM download protocol', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-749],[SPE-BITE-1054]'}, u'CAN-IRD-642': {'body': u'The LRU NVM download request shall stay active during the whole LRU NVM transfer except if the NVM transfer is aborted by EDMU.', 'additional': u'NVM download is stopped if NVM request bit goes to 0 before end of NVM downloading process.', 'derived': u'True', 'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS', 'rationale': u'CAN NVM download protocol', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-749],[SPE-BITE-1054]'}, u'CAN-IRD-643': {'body': u'The LRU NVM download answer shall stay active during the whole LRU NVM transfer except if the NVM transfer is aborted by the LRU.', 'additional': u'NVM download is stopped if NVM request bit goes to 0 before end of NVM downloading process.', 'derived': u'True', 'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS', 'rationale': u'CAN NVM download protocol', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-749],[SPE-BITE-1054]'}, u'CAN-IRD-165': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request SSPCM_EDMU_IDENT_x every 1 second.', 'additional': u'The request is done by EDMU with EDMU_SSPCM_FLIGHTINFO_x message.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-167': {'allocation': u'SSPCM SSCS', 'body': u'SSPCM shall send its BITE Monitoring data to EDMU through SSPCM_EDMU_FAILUREMON_x messages and following parameters:\n\uf0a7\tThe open failure state of each SSPC\n\uf0a7\tThe close failure state of each SSPC\n\uf0a7\tThe failure state of I2t protection of each SSPC\n\uf0a7\tThe failure state of AFD protection of each SSPC\n\uf0a7\tThe failure state of each DSI of each SSPC\n\uf0a7\tThe phase order\n\uf0a7\tThe availability of each power supply control of SSPCM\n\uf0a7\tThe failure state on the power supply output for other SSPCM\n\uf0a7\tThe loss of each a 28 V Input of SSPCM\n\uf0a7\tThe failure state of 5s Power Cut Detection\n\uf0a7\tThe failure state of Pin-strapping for Module Type (it is in an undefined state).\n\uf0a7\tThe failure state of NVM of SSPCM\n\uf0a7\tThe failure state of internal SPI communication (At least one SSPC does not respond properly)\n\uf0a7\tThe overheat state of at least on SSPC on the SSPCM\n\uf0a7\tThe failure state of each SSPCM temperature sensor.\n\uf0a7\tThe Configuration compatibility state with the hardware of the SSPCM\t', 'refer': u'[SIRD-EPGDS-1711],[SPE-BITE-126]'}, u'CAN-IRD-161': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request SSPCM_EDMU_INTERLOCUTORS_x every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-160': {'allocation': u'SSPCM SSCS', 'body': u'SSCPM shall send the following data to EDMU through SSPCM_EDMU_INTERLOCUTORS_x messages:\n\uf0a7\tSSPC EDMU listened: EDMU which is listened for each SSPC P/CD control command: SSPC listens to CAN A or CAN B or none.\n\uf0a7\tPhase order : indicates if the order of the phase is valid or not\n\uf0a7\tPower supply presence of each power supply of the SSPCM : Power supply is available or not', 'refer': u'[SIRD-EPGDS-1079]'}, u'CAN-IRD-163': {'allocation': u'SSPCM SSCS', 'body': u'SSCPM shall send the following data to EDMU through SSPCM_EDMU_IDENT_x messages:\n\uf0a7\tits Module type : Module type is the type of the SSPCM.\n\uf0a7\tits LRU Part Number\n\uf0a7\tit Serial Number', 'additional': u'Example of module type : AC9, DC12, etc ...', 'refer': u'[SIRD-EPGDS-1079]'}, u'SSCS_ACLog_864': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'The reference voltage will be ASI_RCCB1_CURRENT_RET for ASI_RCCB1_CURRENT_GFI and ASI_RCCB2_CURRENT_RET for ASI_RCCB2_CURRENT_GFI', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog2 shall read, through current transformers, the neutral currents of ACMP3A and ACMP1B thanks to the following ASI:\n- ACMP3A: ASI_RCCB1_CURRENT_GFI\n- ACMP1B: ASI_RCCB2_CURRENT_GFI', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2453],[SES-ACEPC-845]'}, u'CAN-IRD-168': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request SSPCM_EDMU_FAILUREMON_x every 500 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1172': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_568': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall provide 6 DSI Ground/Open 1mA to receive the Power Ready (PR) and the Not Power Ready (NPR) signals from the GCUs:\n- DSI_PR_RGEN for Power Ready: DSI Grounded = Power Ready \n- DSI_NPR_RGEN for Not Power Ready: DSI Grounded = Not Power Ready \n- DSI_PR_LGEN for Power Ready: DSI Grounded = Power Ready \n- DSI_NPR_LGEN for Not Power Ready: DSI Grounded = Not Power Ready \n- DSI_PR_APU for Power Ready: DSI Grounded = Power Ready \n- DSI_NPR_APU for Not Power Ready: DSI Grounded = Not Power Ready\n ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-499],[SES-ACEPC-500]'}, u'SSCS_ACLog_1370': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Confirmation time for RCCB Failed Open and RCCB Failed Closed failure shall be 2s +/- 0,5s.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1379]'}, u'SSCS_ACLog_896': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall lauch and perform independently its own PBIT order.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-258]'}, u'CAN-IRD-289': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to EMERLOG through EDMU_XLOG_IDENT message:\n\uf0a7\tEDMU EMERLOG Software Interface Version: EDMU to EMERLOG Software Interface Version associated to this version of specification shall be 0x01.', 'refer': u'[SPE-BITE-1414]'}, u'SSCS_ACLog_1371': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Confirmation time for RCCB auxiliary status discrepancy failure shall be 2s +/- 0,5s.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1380]'}, u'CAN-IRD-285': {'allocation': u'Emer Log SSCS', 'body': u'EMERLOG shall send the following data to EDMU through EMERLOG_EDMU_ANALOG_x message:\n\uf0a7\tAnalog measurement of EMER: digital value of the measured current or voltage.\n\uf0a7\tValidity of the analog measurement of EMER: the signal is valid or not.', 'refer': u'[SIRD-EPGDS-3023]'}, u'CAN-IRD-286': {'allocation': u'Emer Log SSCS', 'body': u'EMER analog measurements shall include the following value: \n\uf0a7\tAC_ESS_BUSBAR_PHA_VOLTAGE\n\uf0a7\tAC_ESS_BUSBAR_PHB_VOLTAGE\n\uf0a7\tAC_ESS_BUSBAR_PHC_VOLTAGE\n\uf0a7\tESS_TRU_OUT_VOLTAGE\n\uf0a7\tESS_TRU_OUT_CURRENT\n\uf0a7\tESS_TRU_OUT_REVERSE_CURRENT\n\uf0a7\tAC_ESS_BUSBAR_PHA_FREQUENCY\n\uf0a7\tAC_ESS_BUSBAR_PHB_FREQUENCY\n\uf0a7\tAC_ESS_BUSBAR_PHC_FREQUENCY', 'refer': u'[SIRD-EPGDS-2336]'}, u'CAN-IRD-287': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request EMERLOG_EDMU_ANALOG_x every 250 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-281': {'allocation': u'Emer Log SSCS', 'body': u'EMERLOG shall send the following data to EDMU through EMERLOG_EDMU_CB_STATUS_x messages:\n\uf0a7\tState of EMER CB: CB is open or closed.\n\uf0a7\tValidity of the state of EMER CB: the state signal is valid or not.', 'additional': u'Indicate the CBx master contact is \u201cclose\u201d or \u201copen\u201d.', 'refer': u'[SIRD-EPGDS-253],[SIRD-EPGDS-1008],[SIRD-EPGDS-2051],[SIRD-EPGDS-2052]'}, u'CAN-IRD-283': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request EMERLOG_EDMU_CB_STATUS_x every 250 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_879': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall send the AEC State through the CAN busses', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1668]'}, u'SSCS_ACLog_1373': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The BITE NVM area shall be composed of one header and 191 Fault records according the following table : \n  \nTable 25: BITE NVM area', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1351]'}, u'SSCS_ACLog_902': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog shall test the "5s Power cut" function one time at the begining of CBIT, twice if the first test is failed', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-111],[SPE-BITE-1550]'}, u'CAN-IRD-832': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send EDMU_XLOG_DISC_1 every 250 ms to DCLOG.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-831': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to EMERLOG through EDMU_XLOG_DISC_1 :\n- ELC_CNTOR_CLOSED status from ACLOG2 : ELC is closed or open\n- Validity of ELC_CNTOR_CLOSED : Signal is valid or not\n- RAT_HEATER_SSPC_CLOSED status from SSPCM : SSPC is closed or open\n- Validity of RAT_HEATER_SSPC_CLOSED : Signal is valid or not', 'refer': u'[SIRD-EPGDS-2538]'}, u'SSCS_ACLog_871': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall provide a DSI Ground/Open 1mA "DSI_ACEP_PB"', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-662]'}, u'SSCS_ACLog_870': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'The reference voltage will be ASI_DC_ACEP_PINE_RET', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'The ACLog shall provide an ASI DC "ASI_DC_ACEP_PINE"', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'need to be define in SES', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_872': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall provide a DSI Ground/Open 1mA "DSI_GS_PB"', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-529]'}, u'SSCS_ACLog_875': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog2 shall read AEC auxiliaries contacts thanks to the DSI Ground/Open 5mA\n "DSI_AC_CTC3_OPP_NO" for Normally Opened aux contact: DSI Open = CTC Open and \n "DSI_AC_CTC3_OPP_NC" for Normally Closed aux contact : DSI Grounded = CTC Open', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-433]'}, u'SSCS_ACLog_874': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog1 shall read AEC auxiliaries contacts thanks to the DSI Ground/Open 5mA \n "DSI_AC_CTC3_NO" for Normally Opened aux contact: DSI Open = CTC Open and \n "DSI_AC_CTC3_NC" for Normally Closed aux contact : DSI Grounded = CTC Open', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-433]'}, u'SSCS_ACLog_877': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_876': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1147': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_971': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog printed circuit board shall be designed to established standards, meeting design requirements as specified in IPC2221.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-3327]'}, u'SSCS_ACLog_972': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog PCBs housed within card racks (LRUs) shall be individually keyed, clearly marked and color coded if necessary such that the cards cannot be inserted into the incorrect slot.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-391]'}, u'SSCS_ACLog_486': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The GFI protection shall be reset through CAN busses.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-401]'}, u'SSCS_ACLog_974': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall have a conspicuous and efficient locking mechanism that securely holds the card in place, independently of the enclosure box or rack cover.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-392]'}, u'SSCS_ACLog_975': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall include extractors to facilitate card removal, and clamp into the position.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-698]'}, u'SSCS_ACLog_976': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1140': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'The ACLog2 shall send "EXT_AC_CONNECTED" through the CAN busses when AC External Power is CONNECTED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To define associated CAN bit', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_978': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'Ground/Open DSI shall be designed to protect the board against reverse currents (e.g. by a diode) ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-723]'}, u'SSCS_ACLog_979': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'Ground/Open DSI shall be filtered by a 1st order low pass filter,featuring a time constant of 3ms +/-30%.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-725]'}, u'SSCS_ACLog_977': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall be design to be cooled by natural convection', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-122]'}, u'SSCS_ACLog_1149': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall monitor Contactors Auxiliary status discrepancy failure during CBIT', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-563],[SPE-BITE-583],[SPE-BITE-944]'}, u'SSCS_ACLog_1148': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_903': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog shall test the Antiparallelling function during CBIT by computing the anti-paralleling failure according the following truth table:\n \n \nTable 39: Anti-paralleling protection (status & failure)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1483]'}, u'SSCS_ACLog_1170': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_650': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'- ACLog1: CAN bus 1A and CAN bus 2A- ACLog2: CAN bus 1B and CAN bus 2B', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall provide two CAN busses to communicate with EDMUs:\n- CAN1_H & CAN1_L\n- CAN2_H & CAN2_L\t', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-3148],[SPE-BITE-199],[SES-ACEPC-531],[SES-ACEPC-532]'}, u'SSCS_ACLog_1116': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACMP Unbalance protection status shall be communicated through CAN busses.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2465]'}, u'SSCS_ACLog_770': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall meet the "Short Time High Operating Temperature" requirements defined in section 4 of RTCA/DO-160G Category A2.\nTemperature Elevation of 10\xb0C is  applied to the ambient temperature.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-134]'}, u'SSCS_ACLog_1179': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1142': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Upon Initiated BIT request, the ACLOG shall reset latched protections', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1033]'}, u'SSCS_ACLog_922': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Confirmation time for ACLog Contactor Auxiliary Status Discrepancy failure shall be 2s +/-0.5s', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-811]'}, u'CAN-IRD-238': {'allocation': u'DC Log SSCS', 'body': u'DCLOG[1/2] shall send the following data to EDMU through DCLOG[1/2]_EDMU_CB_STATUS_x message:\n\uf0a7\tState of DC CB: CB is open or closed.\n\uf0a7\tValidity of the status of DC CB: the state signal is valid or not.', 'additional': u'Indicate the CBx master contact is \u201cclose\u201d or \u201copen\u201d.', 'refer': u'[SIRD-EPGDS-253],[SIRD-EPGDS-1008],[SIRD-EPGDS-2050],[SIRD-EPGDS-2053],[SIRD-EPGDS-2054]'}, u'SSCS_ACLog_1036': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'The ACLog shall implement a Tyco Electronic connector Ref 2-5767004-2 dedicated to microcontroller debugging and traceing (Nexus)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'Imposed by debugging and traceing tools', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1177': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'PBIT tests results shall be independant of the inputs of the ACLog for the functions tested during PBIT.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-268]'}, u'CAN-IRD-231': {'allocation': u'DC Log SSCS', 'body': u'Supplying sources shall include the following sources or disconnected or invalid:\n\uf0a7\tR_GEN;\n\uf0a7\tL_GEN;\n\uf0a7\tAPU_GEN;\n\uf0a7\tEXT_AC;\n\uf0a7\tMAIN_BATT;\n\uf0a7\tAPU_BATT;\n\uf0a7\tRAT_GEN;\n\uf0a7\tTRU1;\n\uf0a7\tTRU2;\n\uf0a7\tESS_TRU;', 'refer': u'[SIRD-EPGDS-1020],[SIRD-EPGDS-1055],[SIRD-EPGDS-1896],[SIRD-EPGDS-6773]'}, u'CAN-IRD-232': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request DCLOG[1/2]_EDMU_NETWORK_STATUS_x every 50 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-235': {'status': u'TBD', 'allocation': u'DC Log SSCS', 'body': u'DC protections shall include the following protections for DCLOG1:\n\uf0a7\tTBD', 'derived': u'True', 'rationale': u'Provision'}, u'CAN-IRD-234': {'allocation': u'DC Log SSCS', 'body': u'DCLOG[1/2] shall send the following data to EDMU through DCLOG[1/2]_EDMU_PROTEC_STATUS message:\n\uf0a7\tState of DC protections: protection is activated or not.', 'derived': u'True', 'rationale': u'Provision'}, u'CAN-IRD-236': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request DCLOG[1/2]_EDMU_PROTEC_STATUS every 50 ms.', 'rationale': u'Provision', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1491': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW, SW', 'body': u'The AC Log shall allocate an area of at least 2 kbytes for CONTEXT purpose in NVM.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'specified CONTEXT memory size', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-582': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send EDMU_GCU_FLIGHTINFO_x every 1 second to RGCU.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-581': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to RGCU through EDMU_GCU_FLIGHTINFO_x messages:\n\uf0a7\tDate : Digital values of Year, Month and Day\n\uf0a7\tValidity of Date and time : Date and time is valid or not\n\uf0a7\tTime : Digital values of Hour and Minute\n\uf0a7\tFlight phases\n\uf0a7\tValidity of Flight phase : Flight phase is valid or not\n\uf0a7\tAircraft tail\n\uf0a7\tValidity of Aircraft tail : Aircraft tail is valid or not\n\uf0a7\tFlight leg\n\uf0a7\tValidity of Flight leg : Flight leg is valid or not', 'refer': u'[SIRD-EPGDS-1898],[SPE-BITE-996]'}, u'SSCS_ACLog_1492': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'There is no ASI spare quantity defined in SIRD OR SESThere is no DSOspare quantity defined in SIRD OR SES', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The AC Log shall provide the DSI, DSO and ASI spares  numbers below:\n \n \nTable 31: DSI, DSO and ASI used and spares number', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-871],[SIRD-EPGDS-876],[SES-ACEPC-506],[SES-ACEPC-507],[SES-ACEPC-787]'}, u'CAN-IRD-586': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request RGCU_EDMU_IDENT_x every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-585': {'allocation': u'HS', 'body': u'RGCU shall send the following data to EDMU through RGCU_EDMU_IDENT_x messages:\n\uf0a7\tSoftware Interface Version: RGCU to EDMU Software Interface Version associated to this version of specification shall be 0x01.\n\uf0a7\tthe CRC32 of its software (A665 CRC32 calculation shall be used)\n\uf0a7\tits Module type : Module type is RGCU\n\uf0a7\tits LRU Part Number\n\uf0a7\tits SW Part Number\n\uf0a7\tit Serial Number', 'additional': u"For P/N and S/N :1 - Not used char to be filled with NULL char.2 - Char 1 is MSB of the string. Exple : P/N : ECE778785Char 1 = 'E'Char 2 = 'C'...Char 9 = '5'Char 10 = Null char...Char 16 = Null char", 'refer': u'[SIRD-EPGDS-2975],[SPE-BITE-1414]'}, u'CAN-IRD-584': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to RGCU through EDMU_GCU_IDENT message:\n\uf0a7\tEDMU RGCU Software Interface Version: EDMU to RGCU Software Interface Version associated to this version of specification shall be 0x01.', 'refer': u'[SPE-BITE-1414]'}, u'SSCS_ACLog_1499': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The AC Log shall include the 20 milliseconds of opening time of the contactors in all delay times or confirmation times of protection functions.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-245]'}, u'SSCS_ACLog_1498': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'DSO interfaces shall be protected against short circuits to ground and +28VDC.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-3329],[SES-ACEPC-1018]'}, u'CAN-IRD-431': {'allocation': u'DC Log SSCS', 'body': u'DCLOG[1/2] shall send the following data to EDMU through DCLOG[1/2]_EDMU_ALARM_STATUS message:\n\uf0a7\tState of DC Alarm: Alarm is activated or not.', 'refer': u'[SIRD-EPGDS-1055]'}, u'SSCS_ACLog_921': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of Contator failed Open, Failed Closed, or contactor auxiliary status discrepancy failure, the ACLog shall declare the failure to the EDMU using CAN busses', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-575],[SPE-BITE-585],[SPE-BITE-972]'}, u'SSCS_ACLog_1173': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-464': {'allocation': u'AC Log SSCS', 'body': u'ACLOG[1/2] shall send the following data to EDMU through ACLOG[1/2]_EDMU_RCCB_CURRENT_x messages:\n\uf0a7\tCurrent of each RCCB phase: Analog value of the measured current.\n\uf0a7\tValidity of each RCCB phase current: the current signal is valid or not.', 'refer': u'[SIRD-EPGDS-1050],[SIRD-EPGDS-1083]'}, u'CAN-IRD-465': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request ACLOG[1/2]_EDMU_RCCB_CURRENT_x every 250 ms', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-466': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS', 'body': u'The messages between EDMU and XLOG shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'CAN-IRD-461': {'allocation': u'DC Log SSCS', 'body': u'DCLOG[1/2] shall send its Engineering Data to EDMU through DCLOG[1/2]_EDMU_ENG_DATA_x messages.', 'derived': u'True', 'rationale': u'Provision'}, u'CAN-IRD-462': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request DCLOG[1/2]_EDMU_ENG_DATA_x every 1 second.', 'derived': u'True', 'rationale': u'Provision', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-745': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the EDMU_GCU_LEEC_COM_message every 100 ms', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-744': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data through EDMU_GCU_LEEC_COM_1 message:\n- Engine_Running  : Left Engine running status\n- Engine_Running_NDO_Valid : Input NDO containing Engine_Running is not received or SSM invalid\n- N2_Selected :  N2 selected in %\n- N2_Selected_NDO_Valid : Input NDO containing N2_Selected is not received or SSM invalid\n- L_Eng_Run_Sw_OFF_Pole_1 : Left Engine Fuel Cut Off switch OFF position\n- L_Eng_Run_Sw_OFF_Pole_1_NDO_Valid : Input NDO containing L_Eng_Run_Sw_OFF_Pole_1 is not received or SSM invalid', 'refer': u'[SIRD-EPGDS-6304]'}, u'CAN-IRD-747': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data through EDMU_GCU_LG_COM_message:\n- NG_WOFFW\n- RG_WOFFW\n- LG_WOFFW\n- NG_WOW\n- RG_WOW\n- LG_WOW\n- LRG_WOW\n- WOFFW\n- MG_WOW\n- WOW\n- WOW_Fail\n- WOW_STATUS_Valid : Input NDO containing WOW signals is not received or SSM invalid', 'refer': u'[SIRD-EPGDS-1563],[SIRD-EPGDS-2564],[SIRD-EPGDS-2565],[SIRD-EPGDS-2579],[SIRD-EPGDS-2762]'}, u'SSCS_ACLog_1171': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_481': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'When a GFI protection is activated for ACMP 3B RCCB, the ACLog1 shall proceed to the ACMP 3B RCCB opening.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-393],[SIRD-EPGDS-2460]'}, u'SSCS_ACLog_1429': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'ACLog shall provide 2 DSI Ground/Open 1mA "DSI_OL_AC_EP" and "DSI_NOL_AC_EP" to monitor AC EP Overload signals', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2620]'}, u'CAN-IRD-728': {'allocation': u'HS', 'body': u'LGCU shall send the following Synoptic data to EDMU through LGCU_EDMU_SYNOPTIC_2 messages: \n- Left Generator load\n- Validity attached to this piece of data', 'refer': u'[SIRD-EPGDS-2125]'}, u'SSCS_ACLog_646': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall implement an hardware function to detect power interrupt greater than 5s +/- 1s (Loss 5s function).', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-690]'}, u'SSCS_ACLog_1201': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'The P1 pinout shall be defined as follow:\n   \n   \nTable 28: P1 connector Pinout', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To define connectors pins allocation', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_913': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of Contactor DSO failure, the ACLog shall declare the failure to the EDMU using CAN busses', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-619],[SPE-BITE-772]'}, u'SSCS_ACLog_920': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall monitor Contactor Failed Closed failure for all driven contactors during CBIT', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-750]'}, u'SSCS_ACLog_1202': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'The P2 pinout shall be defined as follow:\n   \n   \nTable 29: P2 connector Pinout', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To define connectors pins allocation', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_655': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'ACLog CAN transceivers shall be fully compliant with ISO 11898-2, high speed specification.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2100]'}, u'SSCS_ACLog_1358': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1359': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall \n- authorize all AC External protection when "AC external power CONNECTED"\nAND\n- inhibit them else', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-6846]'}, u'SSCS_ACLog_1049': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog MTBF shall be calculated with the following sources of information:\n- Historical Reliability Validation test results or in-service removals ,\n- Accumulated data from the field or historical test results\n- Generic Data from sources such as NPRD-95, EPRD-97, FMD-97, NSWC-06 Mechanical, MIL-HDBK-217F, other reliability prediction models or databases.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-673]'}, u'SSCS_ACLog_1352': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall compute the "Ext_AC_Voltage_Yellow" synoptic message according the following Logic : \nTRUE\nAt least one AC EP phase voltage sent on CAN bus is greater or equal to 134V.\n OR\nAt least one AC EP phase voltage sent on CAN bus is lower or equal to 97V.\nFALSE otherwise', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1141]'}, u'SSCS_ACLog_1073': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog1 shall transmit the three ACMP3B phases current (analog values) to the EDMU on the CAN busses', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-1083]'}, u'SSCS_ACLog_1350': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'the ACLog2 shall compute the "Ext_AC_Frequency_Yellow" synoptic message according the following Logic : \nTRUE\nExternal AC Power supply frequency sent on CAN bus is lower or equal to 375Hz,\nOR \nExternal AC Power supply frequency sent on CAN bus is greater or equal to 485Hz\nFALSE otherwise.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1136]'}, u'SSCS_ACLog_1351': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall compute the "Ext_AC_Power_Yellow" synoptic message according the following Logic : \nTRUE\nExternal AC Power supply Load sent on CAN bus is lower or equal to 10KVA.\nOR\nExternal AC Power supply Load sent on CAN bus is greater or equal to 60KVA.\nFALSE otherwise', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1140]'}, u'SSCS_ACLog_1422': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall include dedicated connector, accessible from in front of EPCs, to download applicative software when they are installed into the aircraft conforming to Software Field Loading as per RTCA DO-178B.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-686]'}, u'SSCS_ACLog_1205': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_654': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The differential capacitor Cdiff measured on the next figure shall not exceed 50pf:\n   \nFigure 31: CAN busses differential capacitance', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2251]'}, u'SSCS_ACLog_1427': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1217': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'SIRD should be updated', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If GLC2 contactor status is open and GLC2 failure is "command" (contactor failed open), then AClog shall:\n- apply GLC2 acknowledgment as "not acknowledged" ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1816]'}, u'SSCS_ACLog_1216': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'SIRD shhould be updated', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If GLC1 contactor status is open and GLC1 failure is "command" (contactor failed open), then ACLog shall:\n- apply GLC1 acknowledgment as "not acknowledged" ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1815]'}, u'SSCS_ACLog_1214': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Failure without impact on the Network management', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of Aux failure detected on ELC, the ELC command shall not be modified', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1832]'}, u'SSCS_ACLog_1565': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'For ground phases, the probability of Loss of external power protection when required, classified as a potentially Minor failure condition, shall be equal to or less than 1E-04 per flight hour.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-985]'}, u'SSCS_ACLog_1564': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'For ground phases, the probability of Loss of external power, classified as a potentially No Safety Effect failure condition, shall be equal to or less than 1E-04 per flight hour.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-984]'}, u'SSCS_ACLog_1219': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'SIRD should be updated', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If ALC contactor status is closed and ALC failure is "command" (contactor failed closed), then ACLog shall:\n- open ATC1 and ATC3.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1817]'}, u'SSCS_ACLog_1070': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall send ACMPx "Aux" failure through the CAN busses', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-618]'}, u'CAN-IRD-301': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to EMERLOG through EDMU_XLOG_FLIGHTINFO_x messages:\n\uf0a7\tDate : Digital values of Year, Month and Day\n\uf0a7\tValidity of Date and time : Date and time is valid or not\n\uf0a7\tTime : Digital values of Hour and Minute\n\uf0a7\tFlight phases\n\uf0a7\tValidity of Flight phase : Flight phase is valid or not\n\uf0a7\tAircraft tail\n\uf0a7\tValidity of Aircraft tail : Aircraft tail is valid or not\n\uf0a7\tFlight leg\n\uf0a7\tValidity of Flight leg : Flight leg is valid or not', 'refer': u'[SIRD-EPGDS-1898],[SPE-BITE-996]'}, u'SSCS_ACLog_1560': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'shedding capability including microcontroler cannot be conform to this req', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'For all Flight phases, the probability of Loss of load shedding capability when needed, Normal power available, classified as a potentially Hazardous failure condition, shall be equal to or less than 1.00E-07 per flight hour.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-988]'}, u'CAN-IRD-302': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send EDMU_XLOG_FLIGHTINFO_x every 1 second to EMERLOG.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1406': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-519': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'CAN IDs of EDMU to SPDA7 frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_1404': {'status': u'TBC', 'terminal': 'EMPTY', 'additional': u'Should be specified at SIRD Level', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'For command data received which have not an associated validity, the ACLog shall take into account the first command received', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'Shall be specified at SIRD Level', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1126': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Label (2)waiting for SIRD update', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall switch from AC external power CONNECTED to AC external power NOT CONNECTED when: PIN E voltage is NOT PRESENT', 'safety': 'EMPTY', 'verification': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-6824]'}, u'SSCS_ACLog_1046': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog functional connectors P1 and P2 shall have a spare capacity of at least 15% each', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-786]'}, u'SSCS_ACLog_571': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'DSI PR / NPR:Open = DSI input is OpenClosed = DSI input is grounded', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The source availability of the right gen, left gen and APU shall be determined thanks to the following table:\n \n \n \nTable 3: Power sources availability', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2591]'}, u'SSCS_ACLog_572': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1186': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-510': {'allocation': u'EDMU SSCS', 'body': u'CAN IDs of EDMU to ALGCU frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_729': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The AClog shall remain with the current active "CLOSED" command unless its data becomes invalid (CAN bus loss or invalid data field). ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2164]'}, u'CAN-IRD-513': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send EDMU_SSPCM_IBITE every 500 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_578': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Power Ready = Label (7),Not Power Ready = Label (8)', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog1 shall determine the AC EP POWER READY and the AC EP PR failure thanks to the following table:\n  \n \nTable 17:  AC EP POWER READY and the AC EP PR failure', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2619],[SPE-BITE-595]'}, u'SSCS_ACLog_579': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1409': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_695': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The age of a signal send on CAN busses shall be less than a half the refresh time of this signal on CAN busses', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-603]'}, u'SSCS_ACLog_694': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall continue to use the data on one CAN bus until the data become not available (or not valid)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-316]'}, u'SSCS_ACLog_1206': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'If a new Network configuration occurs or if a new EDMU command is required during a sequencing command, the ACLog shall stop the current sequencing and launch a new one by taking into account the news inputs datas (AC Network and  EDMU commands).', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To converge quickly to a stable state', 'issue': u'1', 'refer': 'EMPTY'}, u'SSCS_ACLog_1123': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'If an ACMP protection is activated, the following correponding ACMP states shall be sended through the CAN busses :\n- TRIPPED_STATE: Tripped\n- OPEN_LOCKED_STATE: Not Open Locked', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'to inform EDMU', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_693': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Applicable to redundancy Data only. Except for PCD control command, there is not mix betwenn redundant messages. If all the data are valid on the redundant message, the redundant message is used. If not, no switching occurs.For PCD control command refer to the commutation chapter.', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If a message is not available (or contain not valid data) on one CAN bus, ACLog shall use the message data received  on the redundant CAN bus.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-315],[SIRD-EPGDS-3148]'}, u'SSCS_ACLog_692': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'At power-up, the ACLog shall work by default with the data received on the CAN bus 1', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-314]'}, u'SSCS_ACLog_754': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog2 shall acknowledge RCGU thanks to DSO_BUS_ACKN_GEN and DSO_BUS_NACKN_GEN (to close GLC2):\n- To acknowledge (to close): DSO_BUS_ACKN_GEN set to ground and DSO_BUS_NACKN_GEN set to open\n- To not acknowledge (to open): DSO_BUS_ACKN_GEN set to open and DSO_BUS_NACKN_GEN set to ground', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-6763],[SES-ACEPC-583]'}, u'SSCS_ACLog_755': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog1 shall acknowledge APU CGU thanks to DSO_BUS_ACKN_APU and DSO_BUS_NACKN_APU (to close ALC):\n- To acknowledge (to close): DSO_BUS_ACKN_APU set to ground and DSO_BUS_NACKN_APU set to open\n- To not acknowledge (to open): DSO_BUS_ACKN_APU set to open and DSO_BUS_NCKN_APU set to ground', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-6763],[SES-ACEPC-582]'}, u'SSCS_ACLog_756': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_757': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_699': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'ACLog design shall be dissimilar from EMERLog design in terms of:\n- network management \n- protection function design\n- active and passive component technologies used for network management and protection functions', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-903]'}, u'SSCS_ACLog_751': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall provide 4 DSO Ground/Open low power to acknowledge GCUs (to close GLC1, GLC2 and ALC contactors):\n- DSO_BUS_ACKN_GEN\n- DSO_BUS_NACKN_GEN\n- DSO_BUS_ACKN_APU\n- DSO_BUS_NACKN_APU', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-582],[SES-ACEPC-583]'}, u'SSCS_ACLog_596': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'DSI NO / NC aux contact :Open = DSI input is OpenClosed = DSI input is grounded', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall compute the ELC contactor status, status validity and failure according to the following table:\n \n \nTable 6: ELC contactor status, status validity and failure for ACLog2', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1830],[SIRD-EPGDS-1831],[SIRD-EPGDS-1832],[SPE-BITE-943],[SPE-BITE-944]'}, u'SSCS_ACLog_753': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog1 shall acknowledge LCGU thanks to DSO_BUS_ACKN_GEN and DSO_BUS_NACKN_GEN (to close GLC1):\n- To acknowledge (to close): DSO_BUS_ACKN_GEN set to ground and DSO_BUS_NACKN_GEN set to open\n- To not acknowledge (to open): DSO_BUS_ACKN_GEN set to open and DSO_BUS_NACKN_GEN set to ground', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-6763],[SES-ACEPC-582]'}, u'CAN-IRD-121': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'One CAN bus named EDMU-1-CAN-SPDA-4 shall connect the following LRUs:\n\uf0a7\tEDMU1\n\uf0a7\t8 x SSPCM of SPDA-4 on control Bus B', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-312]'}, u'CAN-IRD-120': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'One CAN bus named EDMU-2-CAN-SPDA-3 shall connect the following LRUs:\n\uf0a7\tEDMU2\n\uf0a7\t8 x SSPCM of SPDA-3 on control Bus B', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-311]'}, u'CAN-IRD-123': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'One CAN bus named EDMU-1-CAN-SPDA-5 shall connect the following LRUs:\n\uf0a7\tEDMU1\n\uf0a7\t8 x SSPCM of SPDA-5 on control Bus A', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-311]'}, u'CAN-IRD-122': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'One CAN bus named EDMU-2-CAN-SPDA-4 shall connect the following LRUs:\n\uf0a7\tEDMU2\n\uf0a7\t8 x SSPCM of SPDA-4 on control Bus A', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-312]'}, u'CAN-IRD-125': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'One CAN bus named EDMU-1-CAN-SPDA-6 shall connect the following LRUs:\n\uf0a7\tEDMU1\n\uf0a7\t8 x SSPCM of SPDA-6 on control Bus B', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-312]'}, u'CAN-IRD-124': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'One CAN bus named EDMU-2-CAN-SPDA-5 shall connect the following LRUs:\n\uf0a7\tEDMU2\n\uf0a7\t8 x SSPCM of SPDA-5 on control Bus B', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-311]'}, u'CAN-IRD-127': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'One CAN bus named EDMU-1-CAN-SPDA-7 shall connect the following LRUs:\n\uf0a7\tEDMU1\n\uf0a7\t8 x SSPCM of SPDA-7 on control Bus A', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-311]'}, u'CAN-IRD-126': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'One CAN bus named EDMU-2-CAN-SPDA-6 shall connect the following LRUs:\n\uf0a7\tEDMU2\n\uf0a7\t8 x SSPCM of SPDA-6 on control Bus A', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-312]'}, u'CAN-IRD-129': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'One CAN bus named EDMU-1-CAN-SPDA-8 shall connect the following LRUs:\n\uf0a7\tEDMU1\n\uf0a7\t8 x SSPCM of SPDA-8 on control Bus B', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-312],[SIRD-EPGDS-882]'}, u'CAN-IRD-128': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'One CAN bus named EDMU-2-CAN-SPDA-7 shall connect the following LRUs:\n\uf0a7\tEDMU2\n\uf0a7\t8 x SSPCM of SPDA-7 on control Bus B', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-311]'}, u'SSCS_ACLog_595': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog2 shall read the ELC auxiliaries contacts thanks to the DSI Ground/Open 5mA \n "DSI_AC_CTC1_NO" for Normally Opened aux contact: DSI Open = CTC Open and \n "DSI_AC_CTC1_NC" for Normally Closed aux contact : DSI Grounded = CTC Open', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-417]'}, u'SSCS_ACLog_648': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog transparency time, from when the last power supply is lower than 20V, shall be at least 6ms', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2313]'}, u'SSCS_ACLog_459': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'- The relation between the current (I) and the ASI input voltage (V) is given by the following formula: V=(Rb)xI/1000Rb: Current transformer burden resistor (four 91Ohms resistors in parrallel)1000: Current tranformer nominal current ratio (1/1000)', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The i2t protection shall be activated when one phase current is higher than the following blue curve (with IN=60A):\n   \n   \nFigure 24: ACMP i2t protection definition', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-442],[SES-ACEPC-366],[SES-ACEPC-920]'}, u'SSCS_ACLog_591': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If GLC2 contactor status is closed and GLC2 failure is "command" (contactor failed closed), then ACLog shall:\n- open ATC2', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1814]'}, u'SSCS_ACLog_1207': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_649': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall be able to be powered by the three +28V power supplies:\n- 28V_AC_EP_TR\n- 28V_DC_BUS1\n- 28V_DC_ESS_BUS2', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-253],[SES-ACEPC-542]'}, u'SSCS_ACLog_1329': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog1 shall compute the "ATC1_FAILED_OPEN_CAS" CAS message according the following logic : \nTRUE\nATC1 is declared failed Open\nFALSE otherwise', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1202]'}, u'SSCS_ACLog_1328': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog1 shall compute the "ATC1_FAILED_CLOSED_CAS" CAS message according the following logic : \nTRUE  \nATC1 is declared failed Closed\nFALSE otherwise', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1201]'}, u'SSCS_ACLog_1327': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog1 shall compute the "ACLOG1_DP_ACT" CAS message according the following Logic : \nTRUE \nDifferential protection is active \nFALSE otherwise', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1200]'}, u'SSCS_ACLog_721': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall manage the ACMPs RCCB in accordance with the EDMU commands sent through the CAN busses', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-220]'}, u'SSCS_ACLog_1325': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall inhibit ATC1, ATC2 and AEC Open failure detection when CAN busses are lost or if the computed XFR validity is invalid.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-3129]'}, u'SSCS_ACLog_1324': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The number of watchdog resets shall be deleted when "On ground" transition is detected through the WOW DSI', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-3142]'}, u'SSCS_ACLog_597': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall send the ELC state through the CAN busses', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1668]'}, u'SSCS_ACLog_1471': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'When AC External Power is NOT Power Ready, ACLog2 shall set:\n- Ground/Open "DSO_PR_AC_EP" to not active state (OPEN)\n- Ground/Open "DSO_NPR_AC_EP" to active state (GROUND)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'should be allocated to ACLOG at SIRD level (req 6829)', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1321': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If ACMP contactor failure is "command" (ACMP failed closed or open) during 2s +/- 0,5 s, an open command shall be applied to the corresponding ACMP', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-3131],[SIRD-EPGDS-3132]'}, u'SSCS_ACLog_1320': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Failure without impact on the ACMP management', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of status failure detected on ACMP, the ACMP command shall not be modified', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-3133]'}, u'SSCS_ACLog_1011': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1470': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Label (6)', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall switch from AC External power POWER READY to AC External power NOT POWER READY when:\n- AC external power is NOT CONNECTED\nOR\n- At least one AC EP 115V Protection is ACTIVE\nOR\n- PINE Over Voltage Protection is ACTIVE\nOR\n- The aircraft position is "In flight"', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1419],[SIRD-EPGDS-6828]'}, u'CAN-IRD-651': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data through EDMU_XLOG_NVM_DL message:\n\uf0a7\tNVM Download request: NVM downloading operation is requested or not.\n\uf0a7\tNVM reset request: NVM reset operation is requested or not.\n\uf0a7\tNVM Block First byte: First byte of NVM block requested by EDMU.\n\uf0a7\tNVM Block size : Number of bytes of NVM requested by EDMU', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-653],[SPE-BITE-1054],[SPE-BITE-1057]'}, u'SSCS_ACLog_672': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'time to perform  its Preliminary Tests', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The Warm Start time shall be less than 200ms +/-20ms (including 60ms of HW power up time)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1561]'}, u'SSCS_ACLog_1477': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Label (11)', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall switch from AC External Power Mode NOT ACTIVE to AC External Power Mode ACTIVE when:\n- ELC ACEP CLOSE Request is met\nAND\n- ELC Status is CLOSED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-6835]'}, u'SSCS_ACLog_722': {'status': u'TBD', 'terminal': 'EMPTY', 'additional': u'tolerance added', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall wait for up to 1s +/-10ms (from the CBIT beginning) to receive valid RCCB "CLOSED" commands from the CAN Bus 1 (Left).', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2162]'}, u'SSCS_ACLog_1208': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'The ACLog2 shall consider "28V_AC_EP_TR" PRESENCE when internal DSI is ACTIVE', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'ACLog need to know the "28V_AC_EP_TR" PRESENCE for ACEP function ', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_924': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall monitor Power Ready indication discrepancy failure from GCUs during CBIT', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-168]'}, u'SSCS_ACLog_1475': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Label (10)should be linked to SIRD 6833 when allocation will be corrected because this function has been reworked', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall switch from ELC ACEP CLOSE Request to ELC ACEP OPEN Request when:\n- AC External power is NOT POWER READY\nOR\n- ELC contactor is Failed Open\nOR\n- A "DSI_ACEP_PB" falling edge is detected', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1831]'}, u'SSCS_ACLog_1566': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'electronic command (include microcontroller) cannot be conform to this req', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'For all Flight phases, the probability of Inadvertent paralleling of Main AC Generators, L-Gen and R-Gen (loss of anti-paralleling protection)., classified as a potentially Hazardous failure condition, shall be equal to or less than 1E-07 per flight hour.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-979]'}, u'SSCS_ACLog_760': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The insulation resistance between individually isolated discrete terminals and between all terminals and case shall be greater than 1 M\u03a9 when tested at a voltage of 100Vdc \xb1 5%.\nRemark: Any filter component or transient protection device not designed to withstand such a test can be disconnected before carrying out this test.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-108]'}, u'SSCS_ACLog_1045': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall continue to communicate in normal mode when a ground-offset is up to +/-2,5Vrms voltage fluctuation or ground voltage fluctuation up to+/-4Vdc.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-783]'}, u'SSCS_ACLog_628': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If ATC2 contactor status is open and ATC2 failure is "command" (contactor failed open), ACLog shall:\n- open ATC2', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1826]'}, u'SSCS_ACLog_629': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'open command of ELC is done with DSO_ELC_OPEN_REQSIRD should be updated', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If ATC3 contactor status is closed and ATC3 failure is "command" (contactor failed closed), ACLog1 shall:\n- apply AGCU Acknowledgement as "not acknowledged"\nAND\n- activate DSO_ELC_OPEN_REQ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1827]'}, u'SSCS_ACLog_1109': {'status': u'TBD', 'terminal': 'EMPTY', 'additional': u'To inform the other ACLog that this ACLog has a problem', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'The ACLog shall implement a DSI Ground/Open 1mA "DSI_ACLOG_OPP_VALID"', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To inform the other ACLog that this ACLog has a problem', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_937': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of AC EP Overload signals indication discrepancy failure, ACLog1 shall declare the failure to the EDMU through the CAN busses. ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-3381],[SPE-BITE-753]'}, u'SSCS_ACLog_930': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The Overvoltage AC external power hardware protection shall be activated and latched when one phase voltage (ASI_ACEP_VOLTAGE_PHA, ASI_ACEP_VOLTAGE_PHB, ASI_ACEP_VOLTAGE_PHC) is higher than 180Vrms (+/-10%) during 300ms (+/-10%)', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2765],[SIRD-EPGDS-2766]'}, u'SSCS_ACLog_932': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'AC EP Overvoltage protection,AC EP Undervoltage protection,AC EP Phase order protection,AC EP Overfrequency protection,AC EP Underfrequency protection,AC EP Overcurrent protection. ', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog2 shall monitor AC EP protections activation during CBIT', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-620]'}, u'SSCS_ACLog_933': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of protection activation, ACLog2 shall declare the failure to the EDMU using CAN busses.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-621]'}, u'SSCS_ACLog_1103': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'The ACLog microcontroller shall be surveyed by an external hardawre watchdog', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To detect microcontroller abnormal behaviors', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1276': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The AClog shall memorize in non volatile memory all the trip causes of each RCCB.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2174]'}, u'SSCS_ACLog_624': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'SIRD should be updated', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If ATC1 contactor status is closed and ATC1 failure is "command" (contactor failed closed), ACLog shall:\n- apply LGCU Acknowledgement as "not acknowledged"\nAND\n- apply AGCU Acknowledgement as "not acknowledged" ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1820]'}, u'SSCS_ACLog_574': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The computed PR failure of each source (RGEN, LGEN and APU) shall be sent through the CAN busses', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-168]'}, u'SSCS_ACLog_626': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If ATC1 contactor status is open and ATC1 failure is "command" (contactor failed open), ACLog shall:\n- open ATC1', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1821]'}, u'SSCS_ACLog_627': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'SIRD should be updated', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If ATC2 contactor status is closed and ATC2 failure is "command" (contactor failed closed), ACLOG shall:\n- apply Open command for ELC  \nAND \n- apply RGCU Acknowledgement as "not acknowledged"', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1825]'}, u'CAN-IRD-635': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data through EDMU_XLOG_NVM_DL message:\n\uf0a7\tNVM Download request: NVM downloading operation is requested or not.\n\uf0a7\tNVM reset request: NVM reset operation is requested or not.\n\uf0a7\tNVM Block First byte: First byte of NVM block requested by EDMU.\n\uf0a7\tNVM Block size : Number of bytes of NVM requested by EDMU', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-653],[SPE-BITE-1054],[SPE-BITE-1057]'}, u'CAN-IRD-634': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request ACLOG[1/2]_EDMU_NVM_DL_STATUS every 500 ms.', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1066': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-636': {'allocation': u'AC Log SSCS', 'body': u'ACLOG[1/2] shall send the following data through ACLOG[1/2]_EDMU_NVM_DL_STATUS message :\n\uf0a7\tNVM Download answer: LRU accepts or not the NVM download request from EDMU.\n\uf0a7\tThe size of the NVM : Size of the NVM of the LRU.\n\uf0a7\tThe number of NVM block packets : Number of packet needed to achieve NVM block download if request is accepted else 0.\n\uf0a7\tCRC NVM of block : CRC of NVM block if request is accepted else 0.', 'refer': u'[SIRD-EPGDS-652],[SPE-BITE-1054]'}, u'CAN-IRD-631': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall schedule the request sending according to the following table on EDMU-LGCU interface:', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-113],[SIRD-EPGDS-1059]'}, u'CAN-IRD-630': {'allocation': u'EDMU SSCS', 'body': u'Major sequence frame duration on EDMU-GCU interfaces shall be 1000 ms.', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-1059]'}, u'CAN-IRD-633': {'allocation': u'AC Log SSCS', 'body': u'ACLOG[1/2] shall send NVM data to EDMU through ACLOG[1/2]_EDMU_NVM_PACKET_[1;42] messages :\n\uf0a7\tPacket number : The number of the NVM packet transmitted.\n\uf0a7\tNVM packet : 6 bytes of NVM.', 'refer': u'[SIRD-EPGDS-652],[SPE-BITE-1054]'}, u'SSCS_ACLog_1063': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Each anti-paralleling detection activation shall be latched and sent into NVM.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2772]'}, u'CAN-IRD-639': {'allocation': u'EDMU SSCS', 'body': u'On a CAN bus, EDMU shall request only one LRU NVM download at once.', 'derived': u'True', 'rationale': u'To avoid important bus load.', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-749],[SPE-BITE-1054]'}, u'SSCS_ACLog_1069': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Response time between the reception of the command from the EDMU Module and the effective opening/closure of the RCCB shall be less than 65ms +/-5ms (RCCB opening/closure time need be taken into account)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2167]'}, u'SSCS_ACLog_771': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall meet the "Operating High Temperature" requirements defined in section 4 of RTCA/DO-160G Category A2.\nTemperature Elevation of 10\xb0C is  applied to the ambient temperature.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-133],[SES-ACEPC-291]'}, u'SSCS_ACLog_479': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'the relation between the current (I) and the ASI input voltage (V) is given by the following formula: V=Rgfi x I/1000Rgfi: Resistor dedicated to the GFI protection (two 3KOhms +/-1% resistors in parrallel)', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The GFI protection shall be activated when GFI current level is higher than 2A +/-0.2A', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-846],[SES-ACEPC-852]'}, u'SSCS_ACLog_575': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The overload information of the right gen, left gen and APU shall be determined thanks to the following table:\n   \nTable 36: power source overload informations (status & failure)', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2618]'}, u'SSCS_ACLog_1440': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog2 shall provide a DSO Ground/Open low power "DSO_GS_MODE" (active ground).', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-527]'}, u'SSCS_ACLog_1506': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW, SW', 'body': u'The hardware Overvoltage protection shall provide the trip information to inject into the software overvoltage function the SW', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'without this requirement, the failure declared will be a DSO failure, not an overvoltage', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_904': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog shall test the hardware AC external power overvoltage protection function during PBIT', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-264]'}, u'SSCS_ACLog_1441': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog2 shall provide a DSO Ground/Open medium power "DSO_GS_ON" (active ground).', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-655]'}, u'SSCS_ACLog_1013': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1074': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall transmit the three ACMP1B and ACMP3A phases current (analog values) to the EDMU on the CAN busses', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-1083]'}, u'CAN-IRD-661': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data through EDMU_GCU_NVM_DL message:\n\uf0a7\tNVM Download request: NVM downloading operation is requested or not.\n\uf0a7\tNVM reset request: NVM reset operation is requested or not.\n\uf0a7\tNVM Block First byte: First byte of NVM block requested by EDMU.\n\uf0a7\tNVM Block size : Number of bytes of NVM requested by EDMU', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-653],[SPE-BITE-1054],[SPE-BITE-1057]'}, u'SSCS_ACLog_1012': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'High Power DSO Output impedance shall be higher than 1 M\u03a9 when output is open or when the equipment is not powered. ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-754],[SES-ACEPC-755],[SES-ACEPC-756]'}, u'SSCS_ACLog_709': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_527': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Label (16)waiting for SIRD update (ACLOG2 --> ACLOG)', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall switch from Ground Servicing Mode ACTIVE to Ground Servicing Mode NOT ACTIVE when:\n- ELC Ground Servicing OPEN Request\nAND\n- ELC Status is OPEN', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-6843]'}, u'SSCS_ACLog_1071': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If the ACMPx status is "closed" and the failure is "command", the ACLog shall send a failure "RCCBx_FAILED_CLOSED" through the CAN busses', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-616]'}, u'SSCS_ACLog_929': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of ACLog2 AC EP Power Ready indication discrepancy failure, ACLog1 shall declare the failure to the EDMU using CAN busses', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-597]'}, u'CAN-IRD-709': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following discrete signals to RGCU through EDMU_GCU_DISC_x messages:\n- AC2 Busbar availibility: Power is available or not\n- GLC2 Aux from ACLOG1\n- GLC2 Aux from ACLOG2\n- ATC2 Aux from ACLOG1\n- ATC2 Aux from ACLOG2', 'refer': u'[SIRD-EPGDS-6313]'}, u'SSCS_ACLog_773': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall meet the acceleration requirements defined in Method 513.5 of  MlL-STD-810F.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-151]'}, u'SSCS_ACLog_807': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall meet the induced signal susceptibility requirements defined in section 19 of RTCA/DO-160G Category ZW.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-183]'}, u'SSCS_ACLog_808': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall meet the Voltage Spike requirements defined in section 17 of RTCA/DO-160G Category A.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-165]'}, u'CAN-IRD-703': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following discrete signals to LGCU through EDMU_GCU_DISC_x messages:\n- AC1 Busbar availibility: Power is available or not\n- GLC1 Aux from ACLOG1\n- GLC1 Aux from ACLOG2\n- ATC1 Aux from ACLOG1\n- ATC1 Aux from ACLOG2', 'refer': u'[SIRD-EPGDS-6310]'}, u'SSCS_ACLog_1459': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog main function shall not be affected by a failure or loss of PBIT functionalities.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1407]'}, u'CAN-IRD-704': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send EDMU_GCU_DISC_x every 100 ms to LGCU.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-707': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send EDMU_GCU_DISC_x every 100 ms to AGCU.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-706': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following discrete signals to AGCU through EDMU_GCU_DISC_x messages :\n- ALC Aux from ACLOG1\n- ALC Aux from ACLOG2\n- ATC2 Aux from ACLOG1\n- ATC2 Aux from ACLOG2\n- ATC3 Aux from ACLOG1\n- ATC3 Aux from ACLOG2\n- ATC2 Lockout from ACLOG2', 'refer': u'[SIRD-EPGDS-6311]'}, u'SSCS_ACLog_1191': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall monitor the AC Bus Differential protection activation during CBIT', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-150]'}, u'SSCS_ACLog_1192': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of antiparalleling protection activation, the ACLog shall declare the failure to the EDMU using CAN busses', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-623]'}, u'SSCS_ACLog_1193': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of Differential Protection activation, the ACLog shall declare the failure to the EDMU using CAN busses', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-752]'}, u'SSCS_ACLog_1194': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall monitor the Phase order protection activation during CBIT', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-159],[SPE-BITE-884]'}, u'SSCS_ACLog_1195': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Confirmation time for DSO failure shall be 2s +/- 0,5s.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-796],[SPE-BITE-954]'}, u'SSCS_ACLog_1196': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Confirmation time for ACLog Contactor Failed Closed failure or Contactor Failed Open failure shall be 2s +/- 0,5 s.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-810]'}, u'SSCS_ACLog_1198': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1199': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_928': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of GCU Overload indication discrepancy failure, the ACLog shall declare the failure of the concerned GCU to the EDMU using CAN busses.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-582]'}, u'SSCS_ACLog_1048': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall meet the flammability and fire resistance requirements defined in section 26 of RTCA/DO-160G Category C.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-856]'}, u'SSCS_ACLog_892': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'As soon as a preliminary test is detected as failed, the ACLog shall refresh watchdog in an infinite loop.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-3033],[SPE-BITE-119]'}, u'SSCS_ACLog_1072': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If the ACMPx status is "open" and the failure is "command", the ACLog shall send a failure "RCCBx_FAILED_OPEN" through the CAN busses', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-616]'}, u'SSCS_ACLog_1398': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'The internals ACLog power supplies shall reach their final values in less than 60ms', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'correspond to the power supply start up and hardware reset max time', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1396': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'The ACLog2 shall consider "AC EP 115V presence" when :\n- three phases (ASI_ACEP_VOLTAGE_PHx) are higher than 90Vrms +/-5Vrms during 5ms +/-1ms', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To define ACEP 115V presence ', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1397': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'The ACLog shall send the ATCx Lockout status validity through the CAN busses', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'Cf FDD', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1394': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'While the ACLog is perfoming a sequencing command step (step 0 to step 4), the ACLog shall send the signal ACMPx_SHED_STATE as "Shed", else "Not Shed"', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-3143]'}, u'SSCS_ACLog_1395': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If there are more than 255 occurences for the same fault (same fault code) in a same flight leg, additional occurences shall not be memorized.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1383]'}, u'SSCS_ACLog_1393': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'The ACLog shall send the EXT_AC_FREQUENCY signal corresponding to the AC EP Phase A frequency to EDMU using CAN busses', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To define EXT_AC_FREQUENCY CAN signal', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1390': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'A/C Tail shall be filled by the A/C Tail provided by the Avionics at the moment the fault occurs. ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1370]'}, u'SSCS_ACLog_1391': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Data shall be filled with the Engineering data (snapshot and more if necessary) of the LRU concerning the fault. ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1371]'}, u'CAN-IRD-349': {'body': u'LRU ID for SSPCM shall be as follows:', 'additional': u'"All" LRU ID are used by EDMU only to address all SSPCMs of SPDAx', 'derived': u'True', 'allocation': u'EDMU SSCS,SSPCM SSCS', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-119],[SIRD-EPGDS-2102]'}, u'CAN-IRD-348': {'body': u'LRU ID for GCU shall be as follows:\nALGCU = AGCU & LGCU', 'additional': u'ALGCU LRU ID are used by EDMU only', 'derived': u'True', 'allocation': u'EDMU SSCS', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-119]'}, u'SSCS_ACLog_1458': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of AC BUS Overvoltage protection activation, the ACLOG shall declare the failure to the EDMU using CAN Busses.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1492],[SPE-BITE-1494]'}, u'SSCS_ACLog_1530': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'ACLog shall maintain its DSO in INACTIVE state when AC Log is FAILED (not enter in functional mode).', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'The DSO states in Failed mode need to be specifiy', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-345': {'body': u'Subscriber CAN frame identifier shall be as follows:', 'additional': u'Subscribers are ACLOG, DCLOG, EMERLOG, SSPCM and GCU', 'derived': u'True', 'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS,SSPCM SSCS', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-119],[SIRD-EPGDS-2102]'}, u'CAN-IRD-344': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS,SSPCM SSCS', 'body': u'EDMU CAN frame identifier shall be as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-119],[SIRD-EPGDS-2102]'}, u'CAN-IRD-347': {'body': u'LRU ID for XLOG shall be as follows:\nXLOG1 = DCLOG1 & ACLOG1\nXLOG2 = DCLOG2 & ACLOG2 & EMERLOG', 'additional': u'XLOG1 and XLOG2 LRU ID are used by EDMU only.', 'derived': u'True', 'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-119],[SIRD-EPGDS-2102]'}, u'CAN-IRD-346': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS,SSPCM SSCS', 'body': u'Type ID shall be as follows:\nXLOG = EMERLOG & DCLOG & ACLOG', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-119],[SIRD-EPGDS-2102]'}, u'CAN-IRD-262': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send EDMU_XLOG_FLIGHTINFO_x every 1 second to DCLOG.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-261': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to DCLOG[1/2] through EDMU_XLOG_FLIGHTINFO_x messages:\n\uf0a7\tDate : Digital values of Year, Month and Day\n\uf0a7\tValidity of Date and time : Date and time is valid or not\n\uf0a7\tTime : Digital values of Hour and Minute\n\uf0a7\tFlight phases\n\uf0a7\tValidity of Flight phase : Flight phase is valid or not\n\uf0a7\tAircraft tail\n\uf0a7\tValidity of Aircraft tail : Aircraft tail is valid or not\n\uf0a7\tFlight leg\n\uf0a7\tValidity of Flight leg : Flight leg is valid or not', 'refer': u'[SIRD-EPGDS-1898],[SPE-BITE-996]'}, u'SSCS_ACLog_1497': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'DSI interfaces shall be protected against short circuits to ground and +28VDC.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-3329]'}, u'SSCS_ACLog_1306': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The loss of continuous monitoring of AClog GFI protection shall be less than 1E-6 /FH', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2667]'}, u'SSCS_ACLog_1443': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'network configuration is not restored but  calculate"after a cold start in flight" added', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'AC Log shall restore protections according to last value saved into NVM after a warm start or after a cold start in flight.\nIn all others start up cases, the protection are initiated with not activated state.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2847],[SIRD-EPGDS-3420]'}, u'CAN-IRD-268': {'allocation': u'Emer Log SSCS', 'body': u'EMERLOG shall send the following data to EDMU through EMERLOG_EDMU_NETWORK_STATUS_1 message:\n\uf0a7\tAvailability of the EMER busbars: Busbar is powered or not.\n\uf0a7\tValidity of the availability of the EMER busbars: the availability signal is valid or not.\n\uf0a7\tAvailability of the AC busbars: Busbar is powered or not.\n\uf0a7\tValidity of the availability of the AC busbars: the availability signal is valid or not.\n\uf0a7\tSupplying source of the EMER busbars: the source which supplies the busbar or Invalid.\n\uf0a7\t"Reconfiguration in Progress" signal : network is in reconfiguration or network is stable\n\uf0a7\t"Batt power only" signal : Only Battery Power available or at least another Aircraft power available other than Batts.\n\uf0a7\t"EMER power only" signal : Only EMER Power available or Not Only EMER Power available\n\uf0a7\t"RAT Gen on" signal : RAT is on or off\n\uf0a7\t"RAT STS" signal : (RAT deployed and RAT operational) or (RAT not deployed and RAT not operational)\n\uf0a7\tESS_TRU Overload signal \n\uf0a7\tESS_TRU Not Overload signal \n\uf0a7\tESS_TRU Fail signal \n\uf0a7\tESS_TRU Not Fail signal ', 'refer': u'[SIRD-EPGDS-1015],[SIRD-EPGDS-1017],[SIRD-EPGDS-1021],[SIRD-EPGDS-1896],[SIRD-EPGDS-1905],[SIRD-EPGDS-2307],[SIRD-EPGDS-2677],[SIRD-EPGDS-6778],[SPE-BITE-1269]'}, u'CAN-IRD-269': {'allocation': u'Emer Log SSCS', 'body': u'EMER busbars shall include the following bubars:\n\uf0a7\tAC_ESS_BUSBAR\n\uf0a7\tDC1_ESS_BUSBAR\n\uf0a7\tDC2_ESS_BUSBAR', 'refer': u'[SIRD-EPGDS-1021],[SIRD-EPGDS-1896],[SIRD-EPGDS-1905]'}, u'SSCS_ACLog_1229': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'During IBIT, the ACLog shall keep DSO contactors commands unchanged except when testing \xb5C watchdog', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1114]'}, u'SSCS_ACLog_1444': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'The ACLog shall provide 3 ASI "ASI_ACEP_VOLTAGE_PHA", "ASI_ACEP_VOLTAGE_PHB" and "ASI_ACEP_VOLTAGE_PHC" to monitor AC External Power phases', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'"ASI_ACEP_VOLTAGE_PHA", "ASI_ACEP_VOLTAGE_PHB" and "ASI_ACEP_VOLTAGE_PHC" not declare in SES', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-554': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to LGCU through EDMU_GCU_IDENT message:\n\uf0a7\tEDMU LGCU Software Interface Version: EDMU to LGCU Software Interface Version associated to this version of specification shall be 0x01.', 'refer': u'[SPE-BITE-1414]'}, u'CAN-IRD-555': {'allocation': u'HS', 'body': u'LGCU shall send the following data to EDMU through LGCU_EDMU_IDENT_x messages:\n\uf0a7\tSoftware Interface Version: LGCU to EDMU Software Interface Version associated to this version of specification shall be 0x01.\n\uf0a7\tthe CRC32 of its software (A665 CRC32 calculation shall be used)\n\uf0a7\tits Module type : Module type is LGCU\n\uf0a7\tits LRU Part Number\n\uf0a7\tits SW Part Number\n\uf0a7\tit Serial Number', 'refer': u'[SIRD-EPGDS-2975],[SPE-BITE-1414]'}, u'CAN-IRD-556': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request LGCU_EDMU_IDENT_x every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_894': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-551': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to LGCU through EDMU_GCU_FLIGHTINFO_x messages:\n\uf0a7\tDate : Digital values of Year, Month and Day\n\uf0a7\tValidity of Date and time : Date and time is valid or not\n\uf0a7\tTime : Digital values of Hour and Minute\n\uf0a7\tFlight phases\n\uf0a7\tValidity of Flight phase : Flight phase is valid or not\n\uf0a7\tAircraft tail\n\uf0a7\tValidity of Aircraft tail : Aircraft tail is valid or not\n\uf0a7\tFlight leg\n\uf0a7\tValidity of Flight leg : Flight leg is valid or not', 'refer': u'[SIRD-EPGDS-1898],[SPE-BITE-996]'}, u'CAN-IRD-552': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send EDMU_GCU_FLIGHTINFO_x every 1 second to LGCU.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1531': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'BITE NVM access for downloading shall be inhibited when at least one of the following conditions are met : \nIBIT In progress \nNVM Reset in progress\nAircraft in flight', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1553]'}, u'CAN-IRD-558': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to LGCU through EDMU_GCU_BITE message:\n\uf0a7\tIBIT test request: IBIT test is requested or not.\n\uf0a7\tTrip Reset request: Reset of trip is requested or not.\n\uf0a7\tUnlatch failure request: Unlatch of failures is requested or not.\n\uf0a7\tNVM download request: NVM download is resquested or not', 'refer': u'[SPE-BITE-202]'}, u'CAN-IRD-559': {'allocation': u'HS', 'body': u'LGCU shall send the following data to EDMU through LGCU_EDMU_MODULE_STATUS message:\n\uf0a7\tIBIT acceptance: LRU is in condition for IBIT test or not.\n\uf0a7\tTrip Reset acceptance: LRU is in condition for Reset of trip or not.\n\uf0a7\tUnlatch failure acceptance: LRU is in condition for unlatching failures or not.\n\uf0a7\tits Flight/Ground status : LRU is in Flight or on Ground\n\uf0a7\tThe validity of the Flight/Ground status\n\uf0a7\tNVM download acceptance state', 'refer': u'[SIRD-EPGDS-2533],[SIRD-EPGDS-2975],[SPE-BITE-202]'}, u'SSCS_ACLog_899': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog shall check its Discrete Signal Inputs during PBIT which permits to verify the switch between the high and the low state of the DSI.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-116]'}, u'SSCS_ACLog_898': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall maintain all the DSO in open state during PBIT', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-121]'}}
        check_is = CheckIS()
        check_is.openLog("TEST")
        check_is.checkUpperReq(is_list_reqs,
                               list_upper_req,
                               doc_upper)
        for error in check_is.dico_errors:
            print error
    def test_createChecklist(self):
        return
        doc = Tool()
        ccb = CCB()
        list_cr_for_ccb =('375','377')
        ccb.setListCR(list_cr_for_ccb,True)
        ccb.tableau_pr = [["","","375","In Review"],["","","377","Fixed"]]
        #doc.tableau_pr.append(["","","375","In_Review"])
        dico_cr_checklist = ccb.createChecklist("PLDCR")
        list_tags = {
            'TABLEPRS': {'text': [['Domain', 'CR Type', 'ID', 'Status', 'Synopsis', 'Severity', 'Dectected on', 'Implemented for'], ['PLDCR', 'PLD_SDSIO', '375', 'Fixed', 'SEU/MEU protection mechanisms for a neutrons flow of 4230 n/cm.h', 'N/A', 'PLD_SDSIO/03', 'PLD_SDSIO/04']], 'fmt': {'colw': [500, 500, 500, 500, 1500, 500, 500, 500], 'twunit': 'pct', 'tblw': 5000, 'cwunit': 'pct', 'borders': {'all': {'color': 'auto', 'sz': 6, 'val': 'single', 'space': 0}}, 'heading': True}, 'type': 'tab'},
            'TABLECHECKLIST': {'text': dico_cr_checklist, 'fmt': {'colw': [3000, 500, 1000], 'twunit': 'pct', 'tblw': 5000, 'cwunit': 'pct', 'borders': {'all': {'color': 'auto', 'sz': 6, 'val': 'single', 'space': 0}}, 'heading': True}, 'type': 'mix'},
            'TABLEANNEX': {'text': [(u'a) Extract PLDCR-375', 'rb'), ('', 'r')], 'fmt': {}, 'type': 'par'},
            'TABLELOGS': {'text': [['id', 'Log'], ['--', '--']], 'fmt': {'colw': [500, 4500], 'twunit': 'pct', 'tblw': 5000, 'cwunit': 'pct', 'borders': {'all': {'color': 'auto', 'sz': 6, 'val': 'single', 'space': 0}}, 'heading': True}, 'type': 'tab'}
        }
        template_name = doc._getTemplate("CCB")
        docx_filename = "test_ccb.docx"
        docx_filename,exception = doc._createDico2Word(list_tags,template_name,docx_filename)
    def test_extractName(self):
        filename_is = "C:/Documents and Settings/appereo1/Mes documents/ENM/SW_ENM_06/IS/Copie de IS_SwRD_ENM_ET3135_S-6.4.xlsx"
        filename_is_short = CheckIS.extractName(filename_is)
        print "te:",filename_is_short
    def test_inside_create_is(self):
        return
        all = [['ID', 'Synopsis', 'Type', 'Status', 'Detected on', 'Implemented in/for'], ['1001', 'Inhibition of TRU over ripple protection', 'Evolution', 'Fixed', 'N/A', 'SW_ENM/06', ''], ['1002', 'Timing modification of TC overload protection in ESS configuration', 'Evolution', 'Fixed', 'N/A', 'SW_ENM/06', ''], ['1008', 'Remove GPU_POWER_READY condition for GPU overload computation', 'Evolution', 'Fixed', 'N/A', 'SW_ENM/06', ''], ['1009', 'Modification of timing of the first level of BAT overload protection', 'Evolution', 'Fixed', 'N/A', 'SW_ENM/06', ''], ['1014', 'Evolution of protection (TRU reverse/BC reverse/TC undervoltage)', 'Evolution', 'Fixed', 'N/A', 'SW_ENM/06', ''], ['1015', 'Add filtering on temperature read (BAT_TRU_TEMP_A, BAT_TRU_TEMP_B, DC_AREA_TEMP)', 'Evolution', 'Fixed', 'N/A', 'SW_ENM/06', ''], ['1016', 'Modification of TRU_FAN_FREQ range to ]120Hz;380Hz[', 'Evolution', 'Fixed', 'N/A', 'SW_ENM/06', ''], ['1017', 'Evolution of GPU frequency protection', 'Evolution', 'Fixed', 'N/A', 'SW_ENM/06', ''], ['1018', 'New protection xALTC1 flickering', 'Evolution', 'Fixed', 'N/A', 'SW_ENM/06', ''], ['1127', 'Update SwRD ENM following inspection sheet IS_SwRD_ENM_ET3135_S.xls issue 6.0.1', 'Defect', 'Fixed', 'SW_ENM/06', 'SW_ENM/06', ''], ['1190', 'Update SwRD ENM following inspection sheet IS_SwRD_ENM_ET3135_S.xls issue 6.0.1', 'Defect', 'In Analysis', 'SW_ENM/06', 'SW_ENM/06', '']]
        open = [['ID', 'Synopsis', 'Type', 'Status', 'Detected on', 'Implemented in/for'], ['1190', 'Update SwRD ENM following inspection sheet IS_SwRD_ENM_ET3135_S.xls issue 6.0.1', 'Defect', 'In Analysis', 'SW_ENM/06', 'SW_ENM/06', '']]
        closed = [['ID', 'Synopsis', 'Type', 'Status', 'Detected on', 'Implemented in/for'], ['1001', 'Inhibition of TRU over ripple protection', 'Evolution', 'Fixed', 'N/A', 'SW_ENM/06', ''], ['1002', 'Timing modification of TC overload protection in ESS configuration', 'Evolution', 'Fixed', 'N/A', 'SW_ENM/06', ''], ['1008', 'Remove GPU_POWER_READY condition for GPU overload computation', 'Evolution', 'Fixed', 'N/A', 'SW_ENM/06', ''], ['1009', 'Modification of timing of the first level of BAT overload protection', 'Evolution', 'Fixed', 'N/A', 'SW_ENM/06', ''], ['1014', 'Evolution of protection (TRU reverse/BC reverse/TC undervoltage)', 'Evolution', 'Fixed', 'N/A', 'SW_ENM/06', ''], ['1015', 'Add filtering on temperature read (BAT_TRU_TEMP_A, BAT_TRU_TEMP_B, DC_AREA_TEMP)', 'Evolution', 'Fixed', 'N/A', 'SW_ENM/06', ''], ['1016', 'Modification of TRU_FAN_FREQ range to ]120Hz;380Hz[', 'Evolution', 'Fixed', 'N/A', 'SW_ENM/06', ''], ['1017', 'Evolution of GPU frequency protection', 'Evolution', 'Fixed', 'N/A', 'SW_ENM/06', ''], ['1018', 'New protection xALTC1 flickering', 'Evolution', 'Fixed', 'N/A', 'SW_ENM/06', ''], ['1127', 'Update SwRD ENM following inspection sheet IS_SwRD_ENM_ET3135_S.xls issue 6.0.1', 'Defect', 'Fixed', 'SW_ENM/06', 'SW_ENM/06', '']]
        dico_parameters ={"system":"Dassault F5X",
                          "item":"ESSNESS",
                          "component":"ENM",
                          "detect":"",
                          "implemented":"SW_ENM/05",
                          "project":"SW_ENM-5.2",
                          "release":"SW_ENM/05",
                          "baseline":"SW_ENM_05_01",
                          "reference":"CCB_SW_ENM_001",
                          "issue":"1.0",
                          "author":"Olivier Appere",
                          "login":"appereo1",
                          "cr_type":"SACR"}
        component = "ACLOG_SW"
        self.setG7000(component=component)
        export_is = CheckIS(dirname_req=self.dirname_req,
                           hlr_selected = True)
        export_is.openLog("TEST")
        export_is.tbl_file_llr_wo_del = {'SwRD_ACENM_ET2986-1.5': [u'SWRD_GLOBAL-ACENM_0001', u'SWRD_GLOBAL-ACENM_0002', u'SWRD_GLOBAL-ACENM_0003', u'SWRD_GLOBAL-ACENM_0004', u'SWRD_GLOBAL-ACENM_0251', u'SWRD_GLOBAL-ACENM_0005', u'SWRD_GLOBAL-ACENM_0250', u'SWRD_GLOBAL-ACENM_0409', u'SWRD_GLOBAL-ACENM_0410', u'SWRD_GLOBAL-ACENM_0411', u'SWRD_GLOBAL-ACENM_0412', u'SWRD_GLOBAL-ACENM_0413', u'SWRD_GLOBAL-ACENM_0414', u'SWRD_GLOBAL-ACENM_0415', u'SWRD_GLOBAL-ACENM_0416', u'SWRD_GLOBAL-ACENM_0417', u'SWRD_GLOBAL-ACENM_0006', u'SWRD_GLOBAL-ACENM_0007', u'SWRD_GLOBAL-ACENM_0536', u'SWRD_GLOBAL-ACENM_0008', u'SWRD_GLOBAL-ACENM_0009', u'SWRD_GLOBAL-ACENM_0010', u'SWRD_GLOBAL-ACENM_0011', u'SWRD_GLOBAL-ACENM_0012', u'SWRD_GLOBAL-ACENM_0013', u'SWRD_GLOBAL-ACENM_0014', u'SWRD_GLOBAL-ACENM_0446', u'SWRD_GLOBAL-ACENM_0447', u'SWRD_GLOBAL-ACENM_0448', u'SWRD_GLOBAL-ACENM_0449', u'SWRD_GLOBAL-ACENM_0450', u'SWRD_GLOBAL-ACENM_0452', u'SWRD_GLOBAL-ACENM_0454', u'SWRD_GLOBAL-ACENM_0455', u'SWRD_GLOBAL-ACENM_0456', u'SWRD_GLOBAL-ACENM_0457', u'SWRD_GLOBAL-ACENM_0418', u'SWRD_GLOBAL-ACENM_0458', u'SWRD_GLOBAL-ACENM_0459', u'SWRD_GLOBAL-ACENM_0460', u'SWRD_GLOBAL-ACENM_0461', u'SWRD_GLOBAL-ACENM_0462', u'SWRD_GLOBAL-ACENM_0463', u'SWRD_GLOBAL-ACENM_0464', u'SWRD_GLOBAL-ACENM_0465', u'SWRD_GLOBAL-ACENM_0466', u'SWRD_GLOBAL-ACENM_0467', u'SWRD_GLOBAL-ACENM_0468', u'SWRD_GLOBAL-ACENM_0469', u'SWRD_GLOBAL-ACENM_0470', u'SWRD_GLOBAL-ACENM_0471', u'SWRD_GLOBAL-ACENM_0472', u'SWRD_GLOBAL-ACENM_0473', u'SWRD_GLOBAL-ACENM_0474', u'SWRD_GLOBAL-ACENM_0475', u'SWRD_GLOBAL-ACENM_0476', u'SWRD_GLOBAL-ACENM_0477', u'SWRD_GLOBAL-ACENM_0478', u'SWRD_GLOBAL-ACENM_0479', u'SWRD_GLOBAL-ACENM_0480', u'SWRD_GLOBAL-ACENM_0481', u'SWRD_GLOBAL-ACENM_0482', u'SWRD_GLOBAL-ACENM_0483', u'SWRD_GLOBAL-ACENM_0484', u'SWRD_GLOBAL-ACENM_0485', u'SWRD_GLOBAL-ACENM_0486', u'SWRD_GLOBAL-ACENM_0487', u'SWRD_GLOBAL-ACENM_0488', u'SWRD_GLOBAL-ACENM_0489', u'SWRD_GLOBAL-ACENM_0490', u'SWRD_GLOBAL-ACENM_0491', u'SWRD_GLOBAL-ACENM_0492', u'SWRD_GLOBAL-ACENM_0493', u'SWRD_GLOBAL-ACENM_0494', u'SWRD_GLOBAL-ACENM_0495', u'SWRD_GLOBAL-ACENM_0496', u'SWRD_GLOBAL-ACENM_0497', u'SWRD_GLOBAL-ACENM_0498', u'SWRD_GLOBAL-ACENM_0499', u'SWRD_GLOBAL-ACENM_0500', u'SWRD_GLOBAL-ACENM_0501', u'SWRD_GLOBAL-ACENM_0502', u'SWRD_GLOBAL-ACENM_0503', u'SWRD_GLOBAL-ACENM_0504', u'SWRD_GLOBAL-ACENM_0505', u'SWRD_GLOBAL-ACENM_0506', u'SWRD_GLOBAL-ACENM_0507', u'SWRD_GLOBAL-ACENM_0508', u'SWRD_GLOBAL-ACENM_0509', u'SWRD_GLOBAL-ACENM_0510', u'SWRD_GLOBAL-ACENM_0016', u'SWRD_GLOBAL-ACENM_0436', u'SWRD_GLOBAL-ACENM_0252', u'SWRD_GLOBAL-ACENM_0018', u'SWRD_GLOBAL-ACENM_0253', u'SWRD_GLOBAL-ACENM_0254', u'SWRD_GLOBAL-ACENM_0025', u'SWRD_GLOBAL-ACENM_0019', u'SWRD_GLOBAL-ACENM_0020', u'SWRD_GLOBAL-ACENM_0022', u'SWRD_GLOBAL-ACENM_0023', u'SWRD_GLOBAL-ACENM_0407', u'SWRD_GLOBAL-ACENM_0024', u'SWRD_GLOBAL-ACENM_0524', u'SWRD_GLOBAL-ACENM_0032', u'SWRD_GLOBAL-ACENM_0050', u'SWRD_GLOBAL-ACENM_0034', u'SWRD_GLOBAL-ACENM_0035', u'SWRD_GLOBAL-ACENM_0038', u'SWRD_GLOBAL-ACENM_0039', u'SWRD_GLOBAL-ACENM_0517', u'SWRD_GLOBAL-ACENM_0520', u'SWRD_GLOBAL-ACENM_0040', u'SWRD_GLOBAL-ACENM_0042', u'SWRD_GLOBAL-ACENM_0044', u'SWRD_GLOBAL-ACENM_0049', u'SWRD_GLOBAL-ACENM_0421', u'SWRD_GLOBAL-ACENM_0132', u'SWRD_GLOBAL-ACENM_0133', u'SWRD_GLOBAL-ACENM_0051', u'SWRD_GLOBAL-ACENM_0052', u'SWRD_GLOBAL-ACENM_0053', u'SWRD_GLOBAL-ACENM_0054', u'SWRD_GLOBAL-ACENM_0055', u'SWRD_GLOBAL-ACENM_0056', u'SWRD_GLOBAL-ACENM_0255', u'SWRD_GLOBAL-ACENM_0256', u'SWRD_GLOBAL-ACENM_0257', u'SWRD_GLOBAL-ACENM_0258', u'SWRD_GLOBAL-ACENM_0057', u'SWRD_GLOBAL-ACENM_0058', u'SWRD_GLOBAL-ACENM_0059', u'SWRD_GLOBAL-ACENM_0060', u'SWRD_GLOBAL-ACENM_0061', u'SWRD_GLOBAL-ACENM_0062', u'SWRD_GLOBAL-ACENM_0063', u'SWRD_GLOBAL-ACENM_0259', u'SWRD_GLOBAL-ACENM_0260', u'SWRD_GLOBAL-ACENM_0064', u'SWRD_GLOBAL-ACENM_0065', u'SWRD_GLOBAL-ACENM_0066', u'SWRD_GLOBAL-ACENM_0067', u'SWRD_GLOBAL-ACENM_0068', u'SWRD_GLOBAL-ACENM_0069', u'SWRD_GLOBAL-ACENM_0070', u'SWRD_GLOBAL-ACENM_0071', u'SWRD_GLOBAL-ACENM_0072', u'SWRD_GLOBAL-ACENM_0073', u'SWRD_GLOBAL-ACENM_0074', u'SWRD_GLOBAL-ACENM_0075', u'SWRD_GLOBAL-ACENM_0076', u'SWRD_GLOBAL-ACENM_0077', u'SWRD_GLOBAL-ACENM_0078', u'SWRD_GLOBAL-ACENM_0079', u'SWRD_GLOBAL-ACENM_0080', u'SWRD_GLOBAL-ACENM_0081', u'SWRD_GLOBAL-ACENM_0082', u'SWRD_GLOBAL-ACENM_0107', u'SWRD_GLOBAL-ACENM_0261', u'SWRD_GLOBAL-ACENM_0262', u'SWRD_GLOBAL-ACENM_0083', u'SWRD_GLOBAL-ACENM_0084', u'SWRD_GLOBAL-ACENM_0085', u'SWRD_GLOBAL-ACENM_0086', u'SWRD_GLOBAL-ACENM_0087', u'SWRD_GLOBAL-ACENM_0088', u'SWRD_GLOBAL-ACENM_0089', u'SWRD_GLOBAL-ACENM_0263', u'SWRD_GLOBAL-ACENM_0264', u'SWRD_GLOBAL-ACENM_0422', u'SWRD_GLOBAL-ACENM_0090', u'SWRD_GLOBAL-ACENM_0091', u'SWRD_GLOBAL-ACENM_0092', u'SWRD_GLOBAL-ACENM_0093', u'SWRD_GLOBAL-ACENM_0094', u'SWRD_GLOBAL-ACENM_0095', u'SWRD_GLOBAL-ACENM_0096', u'SWRD_GLOBAL-ACENM_0097', u'SWRD_GLOBAL-ACENM_0098', u'SWRD_GLOBAL-ACENM_0423', u'SWRD_GLOBAL-ACENM_0099', u'SWRD_GLOBAL-ACENM_0100', u'SWRD_GLOBAL-ACENM_0233', u'SWRD_GLOBAL-ACENM_0424', u'SWRD_GLOBAL-ACENM_0373', u'SWRD_GLOBAL-ACENM_0339', u'SWRD_GLOBAL-ACENM_0232', u'SWRD_GLOBAL-ACENM_0101', u'SWRD_GLOBAL-ACENM_0102', u'SWRD_GLOBAL-ACENM_0103', u'SWRD_GLOBAL-ACENM_0386', u'SWRD_GLOBAL-ACENM_0237', u'SWRD_GLOBAL-ACENM_0110', u'SWRD_GLOBAL-ACENM_0111', u'SWRD_GLOBAL-ACENM_0430', u'SWRD_GLOBAL-ACENM_0112', u'SWRD_GLOBAL-ACENM_0113', u'SWRD_GLOBAL-ACENM_0445', u'SWRD_GLOBAL-ACENM_0451', u'SWRD_GLOBAL-ACENM_0114', u'SWRD_GLOBAL-ACENM_0115', u'SWRD_GLOBAL-ACENM_0531', u'SWRD_GLOBAL-ACENM_0116', u'SWRD_GLOBAL-ACENM_0389', u'SWRD_GLOBAL-ACENM_0117', u'SWRD_GLOBAL-ACENM_0390', u'SWRD_GLOBAL-ACENM_0118', u'SWRD_GLOBAL-ACENM_0119', u'SWRD_GLOBAL-ACENM_0120', u'SWRD_GLOBAL-ACENM_0123', u'SWRD_GLOBAL-ACENM_0124', u'SWRD_GLOBAL-ACENM_0125', u'SWRD_GLOBAL-ACENM_0126', u'SWRD_GLOBAL-ACENM_0431', u'SWRD_GLOBAL-ACENM_0127', u'SWRD_GLOBAL-ACENM_0128', u'SWRD_GLOBAL-ACENM_0129', u'SWRD_GLOBAL-ACENM_0130', u'SWRD_GLOBAL-ACENM_0131', u'SWRD_GLOBAL-ACENM_0136', u'SWRD_GLOBAL-ACENM_0137', u'SWRD_GLOBAL-ACENM_0139', u'SWRD_GLOBAL-ACENM_0432', u'SWRD_GLOBAL-ACENM_0140', u'SWRD_GLOBAL-ACENM_0141', u'SWRD_GLOBAL-ACENM_0433', u'SWRD_GLOBAL-ACENM_0142', u'SWRD_GLOBAL-ACENM_0267', u'SWRD_GLOBAL-ACENM_0268', u'SWRD_GLOBAL-ACENM_0017', u'SWRD_GLOBAL-ACENM_0523', u'SWRD_GLOBAL-ACENM_0269', u'SWRD_GLOBAL-ACENM_0270', u'SWRD_GLOBAL-ACENM_0271', u'SWRD_GLOBAL-ACENM_0021', u'SWRD_GLOBAL-ACENM_0275', u'SWRD_GLOBAL-ACENM_0276', u'SWRD_GLOBAL-ACENM_0277', u'SWRD_GLOBAL-ACENM_0274', u'SWRD_GLOBAL-ACENM_0278', u'SWRD_GLOBAL-ACENM_0279', u'SWRD_GLOBAL-ACENM_0280', u'SWRD_GLOBAL-ACENM_0395', u'SWRD_GLOBAL-ACENM_0282', u'SWRD_GLOBAL-ACENM_0428', u'SWRD_GLOBAL-ACENM_0272', u'SWRD_GLOBAL-ACENM_0331', u'SWRD_GLOBAL-ACENM_0334', u'SWRD_GLOBAL-ACENM_0335', u'SWRD_GLOBAL-ACENM_0320', u'SWRD_GLOBAL-ACENM_0325', u'SWRD_GLOBAL-ACENM_0326', u'SWRD_GLOBAL-ACENM_0327', u'SWRD_GLOBAL-ACENM_0434', u'SWRD_GLOBAL-ACENM_0284', u'SWRD_GLOBAL-ACENM_0285', u'SWRD_GLOBAL-ACENM_0286', u'SWRD_GLOBAL-ACENM_0435', u'SWRD_GLOBAL-ACENM_0288', u'SWRD_GLOBAL-ACENM_0289', u'SWRD_GLOBAL-ACENM_0290', u'SWRD_GLOBAL-ACENM_0291', u'SWRD_GLOBAL-ACENM_0293', u'SWRD_GLOBAL-ACENM_0294', u'SWRD_GLOBAL-ACENM_0296', u'SWRD_GLOBAL-ACENM_0297', u'SWRD_GLOBAL-ACENM_0299', u'SWRD_GLOBAL-ACENM_0300', u'SWRD_GLOBAL-ACENM_0301', u'SWRD_GLOBAL-ACENM_0302', u'SWRD_GLOBAL-ACENM_0303', u'SWRD_GLOBAL-ACENM_0304', u'SWRD_GLOBAL-ACENM_0305', u'SWRD_GLOBAL-ACENM_0306', u'SWRD_GLOBAL-ACENM_0307', u'SWRD_GLOBAL-ACENM_0398', u'SWRD_GLOBAL-ACENM_0399', u'SWRD_GLOBAL-ACENM_0134', u'SWRD_GLOBAL-ACENM_0529', u'SWRD_GLOBAL-ACENM_0308', u'SWRD_GLOBAL-ACENM_0198', u'SWRD_GLOBAL-ACENM_0309', u'SWRD_GLOBAL-ACENM_0310', u'SWRD_GLOBAL-ACENM_0135', u'SWRD_GLOBAL-ACENM_0311', u'SWRD_GLOBAL-ACENM_0156', u'SWRD_GLOBAL-ACENM_0157', u'SWRD_GLOBAL-ACENM_0158', u'SWRD_GLOBAL-ACENM_0345', u'SWRD_GLOBAL-ACENM_0159', u'SWRD_GLOBAL-ACENM_0346', u'SWRD_GLOBAL-ACENM_0046', u'SWRD_GLOBAL-ACENM_0047', u'SWRD_GLOBAL-ACENM_0048', u'SWRD_GLOBAL-ACENM_0344', u'SWRD_GLOBAL-ACENM_0036', u'SWRD_GLOBAL-ACENM_0343', u'SWRD_GLOBAL-ACENM_0147', u'SWRD_GLOBAL-ACENM_0148', u'SWRD_GLOBAL-ACENM_0149', u'SWRD_GLOBAL-ACENM_0150', u'SWRD_GLOBAL-ACENM_0151', u'SWRD_GLOBAL-ACENM_0152', u'SWRD_GLOBAL-ACENM_0153', u'SWRD_GLOBAL-ACENM_0528', u'SWRD_GLOBAL-ACENM_0155', u'SWRD_GLOBAL-ACENM_0405', u'SWRD_GLOBAL-ACENM_0281', u'SWRD_GLOBAL-ACENM_0527', u'SWRD_GLOBAL-ACENM_0533', u'SWRD_GLOBAL-ACENM_0033', u'SWRD_GLOBAL-ACENM_0518', u'SWRD_GLOBAL-ACENM_0519', u'SWRD_GLOBAL-ACENM_0312', u'SWRD_GLOBAL-ACENM_0313', u'SWRD_GLOBAL-ACENM_0314', u'SWRD_GLOBAL-ACENM_0316', u'SWRD_GLOBAL-ACENM_0317', u'SWRD_GLOBAL-ACENM_0318', u'SWRD_GLOBAL-ACENM_0319', u'SWRD_GLOBAL-ACENM_0321', u'SWRD_GLOBAL-ACENM_0322', u'SWRD_GLOBAL-ACENM_0323', u'SWRD_GLOBAL-ACENM_0324', u'SWRD_GLOBAL-ACENM_0328', u'SWRD_GLOBAL-ACENM_0329', u'SWRD_GLOBAL-ACENM_0330', u'SWRD_GLOBAL-ACENM_0332', u'SWRD_GLOBAL-ACENM_0333', u'SWRD_GLOBAL-ACENM_0336', u'SWRD_GLOBAL-ACENM_0388', u'SWRD_GLOBAL-ACENM_0337', u'SWRD_GLOBAL-ACENM_0338', u'SWRD_GLOBAL-ACENM_0439', u'SWRD_GLOBAL-ACENM_0515', u'SWRD_GLOBAL-ACENM_0516', u'SWRD_GLOBAL-ACENM_0341', u'SWRD_GLOBAL-ACENM_0342', u'SWRD_GLOBAL-ACENM_0437', u'SWRD_GLOBAL-ACENM_0440', u'SWRD_GLOBAL-ACENM_0514', u'SWRD_GLOBAL-ACENM_0438', u'SWRD_GLOBAL-ACENM_0340', u'SWRD_GLOBAL-ACENM_0394', u'SWRD_GLOBAL-ACENM_0352', u'SWRD_GLOBAL-ACENM_0353', u'SWRD_GLOBAL-ACENM_0283', u'SWRD_GLOBAL-ACENM_0026', u'SWRD_GLOBAL-ACENM_0028', u'SWRD_GLOBAL-ACENM_0029', u'SWRD_GLOBAL-ACENM_0525', u'SWRD_GLOBAL-ACENM_0535', u'SWRD_GLOBAL-ACENM_0160', u'SWRD_GLOBAL-ACENM_0161', u'SWRD_GLOBAL-ACENM_0162', u'SWRD_GLOBAL-ACENM_0163', u'SWRD_GLOBAL-ACENM_0165', u'SWRD_GLOBAL-ACENM_0166', u'SWRD_GLOBAL-ACENM_0167', u'SWRD_GLOBAL-ACENM_0168', u'SWRD_GLOBAL-ACENM_0169', u'SWRD_GLOBAL-ACENM_0170', u'SWRD_GLOBAL-ACENM_0171', u'SWRD_GLOBAL-ACENM_0358', u'SWRD_GLOBAL-ACENM_0109', u'SWRD_GLOBAL-ACENM_0402', u'SWRD_GLOBAL-ACENM_0403', u'SWRD_GLOBAL-ACENM_0172', u'SWRD_GLOBAL-ACENM_0173', u'SWRD_GLOBAL-ACENM_0356', u'SWRD_GLOBAL-ACENM_0357', u'SWRD_GLOBAL-ACENM_0174', u'SWRD_GLOBAL-ACENM_0175', u'SWRD_GLOBAL-ACENM_0177', u'SWRD_GLOBAL-ACENM_0178', u'SWRD_GLOBAL-ACENM_0179', u'SWRD_GLOBAL-ACENM_0181', u'SWRD_GLOBAL-ACENM_0182', u'SWRD_GLOBAL-ACENM_0183', u'SWRD_GLOBAL-ACENM_0184', u'SWRD_GLOBAL-ACENM_0185', u'SWRD_GLOBAL-ACENM_0387', u'SWRD_GLOBAL-ACENM_0391', u'SWRD_GLOBAL-ACENM_0186', u'SWRD_GLOBAL-ACENM_0187', u'SWRD_GLOBAL-ACENM_0188', u'SWRD_GLOBAL-ACENM_0189', u'SWRD_GLOBAL-ACENM_0190', u'SWRD_GLOBAL-ACENM_0191', u'SWRD_GLOBAL-ACENM_0193', u'SWRD_GLOBAL-ACENM_0194', u'SWRD_GLOBAL-ACENM_0195', u'SWRD_GLOBAL-ACENM_0192', u'SWRD_GLOBAL-ACENM_0196', u'SWRD_GLOBAL-ACENM_0197', u'SWRD_GLOBAL-ACENM_0180', u'SWRD_GLOBAL-ACENM_0441', u'SWRD_GLOBAL-ACENM_0218', u'SWRD_GLOBAL-ACENM_0219', u'SWRD_GLOBAL-ACENM_0429', u'SWRD_GLOBAL-ACENM_0199', u'SWRD_GLOBAL-ACENM_0200', u'SWRD_GLOBAL-ACENM_0201', u'SWRD_GLOBAL-ACENM_0202', u'SWRD_GLOBAL-ACENM_0406', u'SWRD_GLOBAL-ACENM_0203', u'SWRD_GLOBAL-ACENM_0204', u'SWRD_GLOBAL-ACENM_0205', u'SWRD_GLOBAL-ACENM_0206', u'SWRD_GLOBAL-ACENM_0207', u'SWRD_GLOBAL-ACENM_0208', u'SWRD_GLOBAL-ACENM_0209', u'SWRD_GLOBAL-ACENM_0210', u'SWRD_GLOBAL-ACENM_0211', u'SWRD_GLOBAL-ACENM_0212', u'SWRD_GLOBAL-ACENM_0444', u'SWRD_GLOBAL-ACENM_0530', u'SWRD_GLOBAL-ACENM_0213', u'SWRD_GLOBAL-ACENM_0214', u'SWRD_GLOBAL-ACENM_0215', u'SWRD_GLOBAL-ACENM_0216', u'SWRD_GLOBAL-ACENM_0242', u'SWRD_GLOBAL-ACENM_0243', u'SWRD_GLOBAL-ACENM_0244', u'SWRD_GLOBAL-ACENM_0245', u'SWRD_GLOBAL-ACENM_0246', u'SWRD_GLOBAL-ACENM_0247', u'SWRD_GLOBAL-ACENM_0248', u'SWRD_GLOBAL-ACENM_0220', u'SWRD_GLOBAL-ACENM_0384', u'SWRD_GLOBAL-ACENM_0532', u'SWRD_GLOBAL-ACENM_0359', u'SWRD_GLOBAL-ACENM_0360', u'SWRD_GLOBAL-ACENM_0361', u'SWRD_GLOBAL-ACENM_0362', u'SWRD_GLOBAL-ACENM_0363', u'SWRD_GLOBAL-ACENM_0364', u'SWRD_GLOBAL-ACENM_0355', u'SWRD_GLOBAL-ACENM_0365', u'SWRD_GLOBAL-ACENM_0366', u'SWRD_GLOBAL-ACENM_0367', u'SWRD_GLOBAL-ACENM_0368', u'SWRD_GLOBAL-ACENM_0427', u'SWRD_GLOBAL-ACENM_0348', u'SWRD_GLOBAL-ACENM_0349', u'SWRD_GLOBAL-ACENM_0371', u'SWRD_GLOBAL-ACENM_0350', u'SWRD_GLOBAL-ACENM_0351', u'SWRD_GLOBAL-ACENM_0370', u'SWRD_GLOBAL-ACENM_0522', u'SWRD_GLOBAL-ACENM_0354', u'SWRD_GLOBAL-ACENM_0221', u'SWRD_GLOBAL-ACENM_0222', u'SWRD_GLOBAL-ACENM_0224', u'SWRD_GLOBAL-ACENM_0225', u'SWRD_GLOBAL-ACENM_0226', u'SWRD_GLOBAL-ACENM_0227', u'SWRD_GLOBAL-ACENM_0228', u'SWRD_GLOBAL-ACENM_0397', u'SWRD_GLOBAL-ACENM_0229', u'SWRD_GLOBAL-ACENM_0230', u'SWRD_GLOBAL-ACENM_0513', u'SWRD_GLOBAL-ACENM_0534', u'SWRD_GLOBAL-ACENM_0400', u'SWRD_GLOBAL-ACENM_0396', u'SWRD_GLOBAL-ACENM_0231', u'SWRD_GLOBAL-ACENM_0511', u'SWRD_GLOBAL-ACENM_0512', u'SWRD_GLOBAL-ACENM_0392', u'SWRD_GLOBAL-ACENM_0217', u'SWRD_GLOBAL-ACENM_0408', u'SWRD_GLOBAL-ACENM_0521', u'SWRD_GLOBAL-ACENM_0223', u'SWRD_GLOBAL-ACENM_0234', u'SWRD_GLOBAL-ACENM_0235', u'SWRD_GLOBAL-ACENM_0121', u'SWRD_GLOBAL-ACENM_0122', u'SWRD_GLOBAL-ACENM_0138', u'SWRD_GLOBAL-ACENM_0143', u'SWRD_GLOBAL-ACENM_0145', u'SWRD_GLOBAL-ACENM_0146', u'SWRD_GLOBAL-ACENM_0176', u'SWRD_GLOBAL-ACENM_0376', u'SWRD_GLOBAL-ACENM_0027', u'SWRD_GLOBAL-ACENM_0378', u'SWRD_GLOBAL-ACENM_0108', u'SWRD_GLOBAL-ACENM_0375', u'SWRD_GLOBAL-ACENM_0377', u'SWRD_GLOBAL-ACENM_0526', u'SWRD_GLOBAL-ACENM_0383', u'SWRD_GLOBAL-ACENM_0106', u'SWRD_GLOBAL-ACENM_0385', u'SWRD_GLOBAL-ACENM_0401', u'SWRD_GLOBAL-ACENM_0104', u'SWRD_GLOBAL-ACENM_0236', u'SWRD_GLOBAL-ACENM_0426', u'SWRD_GLOBAL-ACENM_0453', u'SWRD_GLOBAL-ACENM_0238', u'SWRD_GLOBAL-ACENM_0239', u'SWRD_GLOBAL-ACENM_0425', u'SWRD_GLOBAL-ACENM_0240', u'SWRD_GLOBAL-ACENM_0241']}
        export_is.tbl_list_llr = {u'SWRD_GLOBAL-ACENM_0008': {'status': u'MATURE', 'body': u'The \u201cLRU type ID\u201d shall be with the following format:\nLRU type\nLRU Type ID\nMSB\nLSB\nEDMU\n0\n0\n1\nACLOG1\n0\n1\n1\nACLOG2\n0\n1\n1', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.2', 'refer': u'[CAN-IRD-346]'}, u'SWRD_GLOBAL-ACENM_0009': {'status': u'MATURE', 'body': u'The \u201cControl bus ID\u201d shall be with the following format:\nControl bus\nControl\nBus ID\n25\nCAN Bus A\n0\nCAN Bus B\n1', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[CAN-IRD-350]'}, u'SWRD_GLOBAL-ACENM_0361': {'status': u'MATURE', 'body': u'If {SW_MODE} is equal to INIT, ACENM CSCI shall set the CAN X Communication Failure {CAN_X_COMMUNICATION_FAILURE} to NOT_FAILED.\nWith X = 1 or 2', 'additional': u'N/A', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Initial value is provided at start-up.', 'issue': u'1.1', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0360': {'status': u'MATURE', 'body': u'When software mode {SW_MODE} is equal to OPERATIONAL, ACENM CSCI shall set the CAN X interface version failure status {CAN_X_INTERFACE_VERSION_FAILURE} to:\nNOT_FAILED if EDMU SIV {EDMU_SIV} is equal to {ACLOG_SIV} and {CAN_X_IDENT_FAILURE} is equal to NOT_FAILED.\nFAILED otherwise\nWith X = 1 or 2', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[CAN-IRD-857]'}, u'SWRD_GLOBAL-ACENM_0523': {'status': u'MATURE', 'body': u'When {SW_MODE} is equal to INIT, ACENM CSCI shall re-execute all the tests included in preliminary tests which have been declared as FAILED during the first execution of these tests.', 'additional': u'The preliminary tests results of the second execution override the preliminary tests results of the first execution.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1415]'}, u'SWRD_GLOBAL-ACENM_0522': {'status': u'MATURE', 'body': u'If {SW_MODE} is equal to OPERATIONAL, ACENM CSCI shall set a CAN failure status for each data without validity received on CAN bus {CAN_DATAX_FAILURE_STS} according to the following conditions:\nConditions\nSet CAN data bus\n{CAN_DATAX_FAILURE_STS} to\nCAN x interface version status {CAN_X_INTERFACE_VERSION_FAILURE}\nCAN x message status (message including  the data X)\n{CAN_X_MSGX_FAILURE}\nX = 1\nX = 2\nX = 1\nX = 2\nFAILED\nFAILED\nX\nX\nFAILED\nX\nX\nFAILED\nFAILED\nFAILED\nX\nFAILED\nFAILED\nX\nFAILED\nFAILED\nX\nX\nFAILED\nFAILED\nOther cases\nNOT_FAILED\n\t\tX: Don\u2019t care\nTable 100 : CAN bus data failure\nWith DATAX = IBIT_REQUEST with MSG_X = BITE and with CAN_X = CAN_1 or CAN_2\nOR\nWith DATAX = NVM_DL_REQUEST with MSG_X = NVM_DL and with CAN_X = CAN_1 or CAN_2', 'additional': u'N/A', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Default values are specified for data which are extracted from CAN bus when data are not available or not valid on CAN bus.', 'issue': u'1.4', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0027': {'status': u'TBC', 'body': u'ACENM CSCI shall set NVM size to download [ACLOGX_NVM_SIZE] and number of packet to achieve NVM download [ACLOGX_NVM_BLOCK_NB_PACKET] according to the following logic:\n[ACLOGX_NVM_SIZE] and [ACLOGX_NVM_BLOCK_NB_PACKET] are set to 0 if {NVM_DATA_LOAD_COMMAND} is equal to INACTIVE\nOtherwise, [ACLOGX_NVM_SIZE] is set to 40Kbytes and [ACLOGX_NVM_BLOCK_NB_PACKET] is  set to 40Kbytes/6\nWith X = 1 for ACLog1 and X = 2 for ACLog2', 'additional': u'One packet contains 6 bytes of data.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Size of CAN signals defined in IRD CAN are too small.', 'issue': u'1.4', 'refer': u'[CAN-IRD-636]'}, u'SWRD_GLOBAL-ACENM_0497': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG[1/2]_EDMU_IDENT_5\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n[SERIAL_NUMBER_CHAR9]\nByte 1\n[SERIAL_NUMBER_CHAR10]\nByte 2\n[SERIAL_NUMBER_CHAR11]\nByte 3\n[SERIAL_NUMBER_CHAR12]\nByte 4\n[SERIAL_NUMBER_CHAR13]\nByte 5\n[SERIAL_NUMBER_CHAR14]\nByte 6\n[SERIAL_NUMBER_CHAR15]\nByte 7\n[SERIAL_NUMBER_CHAR16]', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0496': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG[1/2]_EDMU_IDENT_4\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n[SERIAL_NUMBER_CHAR1]\nByte 1\n[SERIAL_NUMBER_CHAR2]\nByte 2\n[SERIAL_NUMBER_CHAR3]\nByte 3\n[SERIAL_NUMBER_CHAR4]\nByte 4\n[SERIAL_NUMBER_CHAR5]\nByte 5\n[SERIAL_NUMBER_CHAR6]\nByte 6\n[SERIAL_NUMBER_CHAR7]\nByte 7\n[SERIAL_NUMBER_CHAR8]', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0495': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG[1/2]_EDMU_IDENT_3\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n[PART_NUMBER_CHAR9]\nByte 1\n[PART_NUMBER_CHAR10]\nByte 2\n[PART_NUMBER_CHAR11]\nByte 3\n[PART_NUMBER_CHAR12]\nByte 4\n[PART_NUMBER_CHAR13]\nByte 5\n[PART_NUMBER_CHAR14]\nByte 6\n[PART_NUMBER_CHAR15]\nByte 7\n[PART_NUMBER_CHAR16]', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0494': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG[1/2]_EDMU_IDENT_2\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n[PART_NUMBER_CHAR1]\nByte 1\n[PART_NUMBER_CHAR2]\nByte 2\n[PART_NUMBER_CHAR3]\nByte 3\n[PART_NUMBER_CHAR4]\nByte 4\n[PART_NUMBER_CHAR5]\nByte 5\n[PART_NUMBER_CHAR6]\nByte 6\n[PART_NUMBER_CHAR7]\nByte 7\n[PART_NUMBER_CHAR8]', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0493': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG[1/2]_EDMU_IDENT_1\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n0\n0\n[ACLOG_EDMU_SIV]\nByte 1\n[MODULE_TYPE]\nByte 2\n0\n0\n0\n0\n0\n0\n0\n0\nByte 3\n0\n0\n0\n0\n0\n0\n0\n0\nByte 4\n[SW_CRC32]\nByte 5\nByte 6\nByte 7', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0492': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG2_EDMU_RCCB_CURRENT_[3/4]\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n0\n0\nByte 1\n0\n0\n0\nByte 2\n0\n0\nByte 3\n0\n0\n0\nByte 4\n0\n0\nByte 5\n0\n0\n0\nByte 6\n0\n0\nByte 7\n0\n0\n0', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0491': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG2_EDMU_RCCB_CURRENT_2\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n[ACMP3A_PHA_CURRENT_VALID]\n[ACMP3A_PHA_CURRENT]\nByte 1\n[ACMP3A_PHA_CURRENT]\n0\n0\nByte 2\n[ACMP3A_PHB_CURRENT_VALID]\n[ACMP3A_PHB_CURRENT]\nByte 3\n[ACMP3A_PHB_CURRENT]\n0\n0\nByte 4\n[ACMP3A_PHC_CURRENT_VALID]\n[ACMP3A_PHC_CURRENT]\nByte 5\n[ACMP3A_PHC_CURRENT]\n0\n0\nByte 6\n0\n0\nByte 7\n0\n0\n0', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0490': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG2_EDMU_RCCB_CURRENT_1\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n[ACMP1B_PHA_CURRENT_VALID]\n[ACMP1B_PHA_CURRENT]\nByte 1\n[ACMP1B_PHA_CURRENT]\n0\n0\nByte 2\n[ACMP1B_PHB_CURRENT_VALID]\n[ACMP1B_PHB_CURRENT]\nByte 3\n[ACMP1B_PHB_CURRENT]\n0\n0\nByte 4\n[ACMP1B_PHC_CURRENT_VALID]\n[ACMP1B_PHC_CURRENT]\nByte 5\n[ACMP1B_PHC_CURRENT]\n0\n0\nByte 6\n0\n0\nByte 7\n0\n0\n0', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0499': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG[1/2]_EDMU_IDENT_7\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n[SW_PART_NUMBER_CHAR9]\nByte 1\n[SW_PART_NUMBER_CHAR10]\nByte 2\n[SW_PART_NUMBER_CHAR11]\nByte 3\n[SW_PART_NUMBER_CHAR12]\nByte 4\n[SW_PART_NUMBER_CHAR13]\nByte 5\n[SW_PART_NUMBER_CHAR14]\nByte 6\n[SW_PART_NUMBER_CHAR15]\nByte 7\n[SW_PART_NUMBER_CHAR16]', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0498': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG[1/2]_EDMU_IDENT_6\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n[SW_PART_NUMBER_CHAR1]\nByte 1\n[SW_PART_NUMBER_CHAR2]\nByte 2\n[SW_PART_NUMBER_CHAR3]\nByte 3\n[SW_PART_NUMBER_CHAR4]\nByte 4\n[SW_PART_NUMBER_CHAR5]\nByte 5\n[SW_PART_NUMBER_CHAR6]\nByte 6\n[SW_PART_NUMBER_CHAR7]\nByte 7\n[SW_PART_NUMBER_CHAR8]', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0189': {'status': u'MATURE', 'body': u'ACENM CSCI shall perform ACMP OPENING SEQUENCE according to the following algorithm: \nFigure 35 : ACMP Opening Sequence', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1058]'}, u'SWRD_GLOBAL-ACENM_0445': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set {AC_EP_HW_OVERVOLTAGE_CALC_PROT} to:\nACTIVE when [DSI_CPU_HW_OV_STATUS] is equal to ACTIVE\nINACTIVE otherwise', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1506]'}, u'SWRD_GLOBAL-ACENM_0127': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set {ACMP3B_I2T_CALC_PROT} to:\nACTIVE when maximum of [ASI_RCCB1_CURRENT_PHA], [ASI_RCCB1_CURRENT_PHB] and [ASI_RCCB1_CURRENT_PHC] currents is above the maximum curve defined hereafter in Figure 10and in Table 66.\nINACTIVE when maximum of [ASI_RCCB1_CURRENT_PHA], [ASI_RCCB1_CURRENT_PHB] and [ASI_RCCB1_CURRENT_PHC] currents is under the minimum curve defined hereafter in Figure 10and in Table 66. \nThis protection includes a thermal memory.', 'additional': u'The maximum opening time of the contactor (20ms) is included in the tolerance.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_846],[SSCS_ACLog_459],[SSCS_ACLog_1097],[SSCS_ACLog_1499]'}, u'SWRD_GLOBAL-ACENM_0126': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set the following ACMPX RCCB protection status to INACTIVE: \n{ACMPX_I2T_PROT}\n{ACMPX_GFI_PROT}\n{ACMP_ACBUS2_OVERVOLTAGE_PROT}\n{ACMPX_UNBALANCED_PROT}\nwhen at least one of the following conditions is true:\n{SW_MODE} is equal to INIT and board position in NVM [NVM_BOARD_CONFIG] has changed \nEDMU trip command {EDMU_ACMPX_TRIPPED_CMD} has switched from NO_CHANGE or TRIP_SET to TRIP_RESET and {WOW_STATUS} is equal to ON_GROUND.\nWith ACMPX = ACMP1B or ACMP3A ', 'additional': u'At start-up these data are initialized first with values from NVM.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_486],[SSCS_ACLog_1284],[SSCS_ACLog_1285],[SSCS_ACLog_1142],[SSCS_ACLog_1279],[SSCS_ACLog_1119],[SSCS_ACLog_1280]'}, u'SWRD_GLOBAL-ACENM_0125': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set the following ACMP3B RCCB protection status to INACTIVE: \n{ACMP3B_I2T_PROT}\n{ACMP3B_GFI_PROT}\n{ACMP_ACBUS1_OVERVOLTAGE_PROT}\n{ACMP3B_UNBALANCED_PROT}\nwhen at least one of the following conditions is true:\n{SW_MODE} is equal to INIT and board position in NVM [NVM_BOARD_CONFIG] has changed \nEDMU trip command {EDMU_ACMP3B_TRIPPED_CMD} has switched from NO_CHANGE or TRIP_SET to TRIP_RESET and {WOW_STATUS} is equal to ON_GROUND.', 'additional': u'At start-up these data are initialized first with values from NVM.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_486],[SSCS_ACLog_1284],[SSCS_ACLog_1285],[SSCS_ACLog_1142],[SSCS_ACLog_1279],[SSCS_ACLog_1119],[SSCS_ACLog_1280]'}, u'SWRD_GLOBAL-ACENM_0124': {'status': u'MATURE ', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set ACMPX RCCB protection global status {ACMPX_PROT} to INACTIVE if all the following ACMPX RCCB protection status are equal to INACTIVE:\n{ACMPX_I2T_PROT}\n{ACMPX_GFI_PROT}\n{ACMP_ACBUS2_OVERVOLTAGE_PROT}\n{ACMPX_UNBALANCED_PROT}\nOtherwise {ACMPX_PROT} is set to ACTIVE\nWith ACMPX = ACMP1B or ACMP3A', 'additional': u'Need to have a global protection status to compute RCCB states.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1121]'}, u'SWRD_GLOBAL-ACENM_0123': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set ACMP3B RCCB protection global status {ACMP3B_PROT} to INACTIVE if all the following ACMP3B RCCB protection status are equal to INACTIVE:\n{ACMP3B_I2T_PROT}\n{ACMP3B_GFI_PROT}\n{ACMP_ACBUS1_OVERVOLTAGE_PROT}\n{ ACMP3B_UNBALANCED_PROT}\nOtherwise {ACMP3B_PROT} is set to ACTIVE', 'additional': u'Need to have a global protection status to compute RCCB states. ', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1121]'}, u'SWRD_GLOBAL-ACENM_0089': {'status': u'MATURE', 'body': u'If software mode {SW_MODE} is equal to OPERATIONAL, ACENM CSCI shall set AEC auxiliary failure {AEC_AUX_FAILURE} according to the following logic:\nNOT_FAILED, when {AEC_CTC_FAILURE} is not equal to AUX during 1s\xb1250ms\nFAILED, when  {AEC_CTC_FAILURE} is equal to AUX during 2s\xb10.5s\nOtherwise {AEC_AUX_FAILURE} keeps its previous value.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_1149],[SSCS_ACLog_922],[SSCS_ACLog_1181],[SSCS_ACLog_883],[SSCS_ACLog_880]'}, u'SWRD_GLOBAL-ACENM_0121': {'status': u'MATURE', 'body': u'ACENM CSCI shall set ACLog fail CAS message [ACLOGX_FAIL] to ACTIVATED when at least one of the following condition is true:\n{PBIT_TEST_RESULT} or {IBIT_TEST_RESULT}  is equal to FAILED \n{CONTACTOR_DSO_FAILURE}  or  {OTHER_DSO_FAILURE}  is equal to FAILED\n{ANTI_PARALLELING_CTCX_FAILURE} is equal to FAILED\n{INTERNAL_POWER_SPLY_FAILURE} is equal to FAILED \nOtherwise, [ACLOGX_FAIL] is set to NOT_ACTIVATED\nWith ACLOGX=ACLOG1 and CTCX=ATC1, ATC3 (for ACLog1) or\nwith ACLOGX=ACLOG2 and CTCX=ATC2 and ELC (for ACLog2)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1326],[SSCS_ACLog_1337],[SSCS_ACLog_1336],[SSCS_ACLog_1345],[CAN-IRD-426],[CAN-IRD-427],[CAN-IRD-534]'}, u'SWRD_GLOBAL-ACENM_0120': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set {AC_EP_OPEN_PHASE_CALC_PROT} to:\nACTIVE when ([ASI_ACEP_CURRENT_PHA] is lower than 30A\xb15A AND [ASI_ACEP_CURRENT_PHB] and [ASI_ACEP_CURRENT_PHC] are greater than 50A\xb15A) for more than 2,7s\xb1300msOR when ([ASI_ACEP_CURRENT_PHB] is lower than 30A\xb15A AND [ASI_ACEP_CURRENT_PHA] and [ASI_ACEP_CURRENT_PHC] are greater than 50A\xb15A) for more than 2,7s\xb1300msORwhen ([ASI_ACEP_CURRENT_PHC] is lower than 30A\xb15A AND [ASI_ACEP_CURRENT_PHA] and [ASI_ACEP_CURRENT_PHB] are greater than 50A\xb15A) for more than 2,7s\xb1300ms\nINACTIVE otherwise', 'additional': u'The maximum opening time of the contactor (20ms) is included in the tolerance.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_445],[SSCS_ACLog_437],[SSCS_ACLog_1499]'}, u'SWRD_GLOBAL-ACENM_0084': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set AEC contactor status {AEC_CTC_STATUS} according to the following logic:\n[DSI_AC_CTC3_OPP_NO]\n[DSI_AC_CTC3_OPP_NC]\n{AEC_CTC_STATUS}\nOPEN\nCLOSED\nOPEN\nOPEN\nOPEN\nCLOSED\nCLOSED\nCLOSED\nCLOSED\nCLOSED\nOPEN\nCLOSED\nTable 45 : AEC contactor status management (for ACLog2)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_883],[SSCS_ACLog_875],[SSCS_ACLog_1541]'}, u'SWRD_GLOBAL-ACENM_0085': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set AEC contactor status validity {AEC_CTC_STATUS_VALIDITY} according to the following logic:\n{AEC_CTC_CMD}\n[DSI_AC_CTC3_NO]\n[DSI_AC_CTC3_NC]\n{AEC_CTC_STATUS_VALIDITY}\nOPEN\nOPEN\nCLOSED\nVALID\nOPEN\nOPEN\nOPEN\nINVALID\nOPEN\nCLOSED\nCLOSED\nINVALID\nOPEN\nCLOSED\nOPEN\nINVALID\nCLOSE\nOPEN\nCLOSED\nINVALID\nCLOSE\nOPEN\nOPEN\nINVALID\nCLOSE\nCLOSED\nCLOSED\nINVALID\nCLOSE\nCLOSED\nOPEN\nVALID\nTable 46 : AEC contactor status validity management (for ACLog1)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_883],[SSCS_ACLog_874]'}, u'SWRD_GLOBAL-ACENM_0086': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set AEC contactor status validity {AEC_CTC_STATUS_VALIDITY} according to the following logic:\n[DSI_AC_CTC3_OPP_NO]\n[DSI_AC_CTC3_OPP_NC]\n{AEC_CTC_STATUS_VALIDITY}\nOPEN\nCLOSED\nVALID\nOPEN\nOPEN\nINVALID\nCLOSED\nCLOSED\nINVALID\nCLOSED\nOPEN\nVALID\nTable 47 : AEC contactor status validity management (for ACLog2)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_883],[SSCS_ACLog_875],[SSCS_ACLog_1541]'}, u'SWRD_GLOBAL-ACENM_0087': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set AEC contactor failure {AEC_CTC_FAILURE} according to the following logic:\n{AEC_CTC_CMD}\n[DSI_AC_CTC3_NO]\n[DSI_AC_CTC3_NC]\n{AEC_CTC_FAILURE}\nOPEN\nOPEN\nCLOSED\nNONE\nOPEN\nOPEN\nOPEN\nAUX\nOPEN\nCLOSED\nCLOSED\nAUX\nOPEN\nCLOSED\nOPEN\nCOMMAND\nCLOSE\nOPEN\nCLOSED\nCOMMAND\nCLOSE\nOPEN\nOPEN\nAUX\nCLOSE\nCLOSED\nCLOSED\nAUX\nCLOSE\nCLOSED\nOPEN\nNONE\nTable 48 : AEC contactor failure management (for ACLog1)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_883],[SSCS_ACLog_874]'}, u'SWRD_GLOBAL-ACENM_0080': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set ATC2 contactor failure {ATC2_CTC_FAILURE} according to the following logic:\n{ATC2_CTC_CMD}\n[DSI_AC_CTC2_NO]\n[DSI_AC_CTC2_NC]\n{ATC2_CTC_FAILURE}\nOPEN\nOPEN\nCLOSED\nNONE\nOPEN\nOPEN\nOPEN\nAUX\nOPEN\nCLOSED\nCLOSED\nAUX\nOPEN\nCLOSED\nOPEN\nCOMMAND\nCLOSE\nOPEN\nCLOSED\nCOMMAND\nCLOSE\nOPEN\nOPEN\nAUX\nCLOSE\nCLOSED\nCLOSED\nAUX\nCLOSE\nCLOSED\nOPEN\nNONE\nTable 42 : ATC2 contactor failure management (for ACLog2)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_1519],[SSCS_ACLog_610]'}, u'SWRD_GLOBAL-ACENM_0081': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set ATC3 contactor failure {ATC3_CTC_FAILURE} according to the following logic:\n[DSI_AC_CTC2_OPP_NO]\n[DSI_AC_CTC2_OPP_NC]\n{ATC3_CTC_FAILURE}\nOPEN\nCLOSED\nNONE\nOPEN\nOPEN\nAUX\nCLOSED\nCLOSED\nAUX\nCLOSED\nOPEN\nNONE\nTable 43 : ATC3 contactor failure management (for ACLog2)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_610],[SSCS_ACLog_1407]'}, u'SWRD_GLOBAL-ACENM_0129': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set {ACMP3B_GFI_CALC_PROT} to:\nACTIVE in less than 4ms\xb11ms when [ASI_RCCB1_CURRENT_GFI] is higher than 2A\xb10.2A\nINACTIVE otherwise', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_862],[SSCS_ACLog_479],[SSCS_ACLog_480]'}, u'SWRD_GLOBAL-ACENM_0083': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set AEC contactor status {AEC_CTC_STATUS} according to the following logic:\n{AEC_CTC_CMD}\n[DSI_AC_CTC3_NO]\n[DSI_AC_CTC3_NC]\n{AEC_CTC_STATUS}\nOPEN\nOPEN\nCLOSED\nOPEN\nOPEN\nOPEN\nOPEN\nOPEN\nOPEN\nCLOSED\nCLOSED\nOPEN\n\tOPEN\nCLOSED\nOPEN\nCLOSED\nCLOSE\nOPEN\nCLOSED\nOPEN\nCLOSE\nOPEN\nOPEN\nCLOSED\nCLOSE\nCLOSED\nCLOSED\nCLOSED\nCLOSE\nCLOSED\nOPEN\nCLOSED\nTable 44 : AEC contactor status management (for ACLog1)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_883],[SSCS_ACLog_874]'}, u'SWRD_GLOBAL-ACENM_0066': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set ATC3 contactor status {ATC3_CTC_STATUS} according to the following logic:\n{ATC3_CTC_CMD} \n[DSI_AC_CTC2_NO]\n[DSI_AC_CTC2_NC]\n{ATC3_CTC_STATUS}\nOPEN\nOPEN\nCLOSED\nOPEN\nOPEN\nOPEN\nOPEN\nOPEN\nOPEN\nCLOSED\nCLOSED\nOPEN\n\tOPEN\nCLOSED\nOPEN\nCLOSED\nCLOSE\nOPEN\nCLOSED\nOPEN\nCLOSE\nOPEN\nOPEN\nCLOSED\nCLOSE\nCLOSED\nCLOSED\nCLOSED\nCLOSE\nCLOSED\nOPEN\nCLOSED\nTable 28 : ATC3 contactor status management (for ACLog1)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_614],[SSCS_ACLog_609]'}, u'SWRD_GLOBAL-ACENM_0067': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set ATC1 contactor status {ATC1_CTC_STATUS} according to the following logic:\n[DSI_AC_CTC1_OPP_NO]\n[DSI_AC_CTC1_OPP_NC]\n{ATC1_CTC_STATUS}\nOPEN\nCLOSED\nOPEN\nOPEN\nOPEN\nCLOSED\nCLOSED\nCLOSED\nCLOSED\nCLOSED\nOPEN\nCLOSED\nTable 29 : ATC1 contactor status management (for ACLog2)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_610],[SSCS_ACLog_1407]'}, u'SWRD_GLOBAL-ACENM_0064': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set ATC1 contactor status {ATC1_CTC_STATUS} according to the following logic:\n{ATC1_CTC_CMD}\n[DSI_AC_CTC1_NO]\n[DSI_AC_CTC1_NC]\n{ATC1_CTC_STATUS}\nOPEN\nOPEN\nCLOSED\nOPEN\nOPEN\nOPEN\nOPEN\nOPEN\nOPEN\nCLOSED\nCLOSED\nOPEN\n\tOPEN\nCLOSED\nOPEN\nCLOSED\nCLOSE\nOPEN\nCLOSED\nOPEN\nCLOSE\nOPEN\nOPEN\nCLOSED\nCLOSE\nCLOSED\nCLOSED\nCLOSED\nCLOSE\nCLOSED\nOPEN\nCLOSED\nTable 26 : ATC1 contactor status management (for ACLog1)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_614],[SSCS_ACLog_609]'}, u'SWRD_GLOBAL-ACENM_0065': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set ATC2 contactor status {ATC2_CTC_STATUS} according to the following logic:\n[DSI_AC_CTC2_OPP_NO]\n[DSI_AC_CTC2_OPP_NC]\n{ATC2_CTC_STATUS}\nOPEN\nCLOSED\nOPEN\nOPEN\nOPEN\nCLOSED\nCLOSED\nCLOSED\nCLOSED\nCLOSED\nOPEN\nCLOSED\nTable 27 : ATC2 contactor status management (for ACLog1)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_609],[SSCS_ACLog_1407]'}, u'SWRD_GLOBAL-ACENM_0062': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set ELC contactor failure {ELC_CTC_FAILURE} according to the following logic:\n{ELC_CTC_CMD}\n[DSI_AC_CTC1_NO]\n[DSI_AC_CTC1_NC]\n{ELC_CTC_FAILURE}\nOPEN\nOPEN\nCLOSED\nNONE\nOPEN\nOPEN\nOPEN\nAUX\nOPEN\nCLOSED\nCLOSED\nAUX\nOPEN\nCLOSED\nOPEN\nCOMMAND\nCLOSE\nOPEN\nCLOSED\nCOMMAND\nCLOSE\nOPEN\nOPEN\nAUX\nCLOSE\nCLOSED\nCLOSED\nAUX\nCLOSE\nCLOSED\nOPEN\nNONE\nTable 25 : ELC contactor failure management (for ACLog2)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_596],,[SSCS_ACLog_595]'}, u'SWRD_GLOBAL-ACENM_0063': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 or ACLog2 configuration and software mode {SW_MODE} is equal to OPERATIONAL, ACENM CSCI shall set ELC auxiliary failure {ELC_AUX_FAILURE} according to the following logic:\nNOT_FAILED, when {ELC_CTC_FAILURE} is not equal to AUX during 1s\xb1250ms\nFAILED, when {ELC_CTC_FAILURE} is equal to AUX during 2s\xb1500ms\nOtherwise {ELC_AUX_FAILURE} keeps its previous value.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1149],[SSCS_ACLog_922],[SSCS_ACLog_1181],[SSCS_ACLog_596],[SSCS_ACLog_599]'}, u'SWRD_GLOBAL-ACENM_0060': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set ELC contactor status validity {ELC_CTC_STATUS_VALIDITY} according to the following logic:\n{ELC_CTC_CMD}\n[DSI_AC_CTC1_NO]\n[DSI_AC_CTC1_NC]\n{ELC_CTC_STATUS_VALIDITY}\nOPEN\nOPEN\nCLOSED\nVALID\nOPEN\nOPEN\nOPEN\nINVALID\nOPEN\nCLOSED\nCLOSED\nINVALID\nOPEN\nCLOSED\nOPEN\nINVALID\nCLOSE\nOPEN\nCLOSED\nINVALID\nCLOSE\nOPEN\nOPEN\nINVALID\nCLOSE\nCLOSED\nCLOSED\nINVALID\nCLOSE\nCLOSED\nOPEN\nVALID\nTable 23 : ELC contactor status validity management (for ACLog2)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_596],[SSCS_ACLog_595]'}, u'SWRD_GLOBAL-ACENM_0308': {'status': u'MATURE', 'body': u'When software mode {SW_MODE} is equal to INIT, ACENM shall set DSO contactor failure {CONTACTOR_DSO_FAILURE} to NOT_FAILED.', 'additional': u'N/A', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Default value NOT_FAILED is specified during SW initialization phase.', 'issue': u'1.0', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0307': {'status': u'MATURE', 'body': u'When software mode {SW_MODE} is equal to OPERATIONAL, ACENM shall set 28V AC EP TR fuse failure {28V_AC_EP_TR_FUSE_FAILURE} according to the following logic:\nNOT_FAILED, when 28V AC EP TR fuse failure to filter {FILT_28V_AC_EP_TR_FUSE_FAILURE } is equal to NOT_FAILED during 2.5s\xb10.5s\nFAILED, when 28V AC EP TR fuse failure to filter {FILT_28V_AC_EP_TR_FUSE_FAILURE} is equal to FAILED during 5s\xb10.5s.\nOtherwise {28V_AC_EP_TR_FUSE_FAILURE} keeps its previous value.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1181],[SSCS_ACLog_1455]'}, u'SWRD_GLOBAL-ACENM_0306': {'status': u'MATURE', 'body': u'When software mode {SW_MODE} is equal to OPERATIONAL, ACENM shall set 28V AC EP TR failure to filter {FILT_28V_AC_EP_TR_FUSE_FAILURE} according to the following logic:\n28V AC EP TR upstream fuse [DSI_28V_AC_EP_TR_FUSE_UP_STS]\n28V AC EP TR downstream fuse [DSI_28V_AC_EP_TR_STS]\n{FILT_28V_AC_EP_TR_FUSE_FAILURE}\nACTIVE\nACTIVE\nNOT_FAILED\nACTIVE\nINACTIVE\nFAILED\nINACTIVE\nACTIVE\nNOT_FAILED\nINACTIVE\nINACTIVE\nNOT_FAILED', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1083]'}, u'SWRD_GLOBAL-ACENM_0305': {'status': u'MATURE', 'body': u'When software mode {SW_MODE} is equal to INIT, ACENM shall set 28V AC EP TR fuse failure {28V_AC_EP_TR_FUSE_FAILURE} to NOT_FAILED.', 'additional': u'N/A', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Default value NOT_FAILED is specified during SW initialization phase.', 'issue': u'1.0', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0304': {'status': u'MATURE', 'body': u'When software mode {SW_MODE} is equal to OPERATIONAL, ACENM shall set 28V DC Ess bus 2 fuse {28V_DC_ESS_BUS2_FUSE_FAILURE} according to the following logic:\nNOT_FAILED, when 28V DC Ess bus 2 fuse failure to filter {FILT_28V_DC_ESS_BUS2_FUSE_FAILURE } is equal to NOT_FAILED during 2.5s\xb10.5s\nFAILED, when 28V DC Ess bus 2 fuse failure to filter {FILT_28V_DC_ESS_BUS2_FUSE_FAILURE} is equal to FAILED during 5s\xb10.5s.\nOtherwise {28V_DC_ESS_BUS2_FUSE_FAILURE} keeps its previous value.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1181],[SSCS_ACLog_1455]'}, u'SWRD_GLOBAL-ACENM_0303': {'status': u'MATURE', 'body': u'When software mode {SW_MODE} is equal to OPERATIONAL, ACENM shall set 28V DC Ess bus2 fuse failure to filter {FILT_28V_DC_ESS_BUS2_FUSE_FAILURE} according to the following logic:\n28V DC Ess bus 2 upstream fuse [DSI_28V_DC_ESS_BUS2_FUSE_UP_STS]\n28V DC Ess bus 2 downstream fuse [DSI_28V_DC_ESS_BUS2_STS]\n{FILT_28V_DC_ESS_BUS2_FUSE_FAILURE}\nACTIVE\nACTIVE\nNOT_FAILED\nACTIVE\nINACTIVE\nFAILED\nINACTIVE\nACTIVE\nNOT_FAILED\nINACTIVE\nINACTIVE\nNOT_FAILED', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1083]'}, u'SWRD_GLOBAL-ACENM_0302': {'status': u'MATURE', 'body': u'When software mode {SW_MODE} is equal to INIT, ACENM shall set 28V DC essential bus 2 fuse failure {28V_DC_ESS_BUS2_FUSE_FAILURE} to NOT_FAILED.', 'additional': u'N/A', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Default value NOT_FAILED is specified during SW initialization phase.', 'issue': u'1.0', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0068': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set ATC2 contactor status {ATC2_CTC_STATUS} according to the following logic:\n{ATC2_CTC_CMD}\n[DSI_AC_CTC2_NO]\n[DSI_AC_CTC2_NC]\n{ATC2_CTC_STATUS}\nOPEN\nOPEN\nCLOSED\nOPEN\nOPEN\nOPEN\nOPEN\nOPEN\nOPEN\nCLOSED\nCLOSED\nOPEN\n\tOPEN\nCLOSED\nOPEN\nCLOSED\nCLOSE\nOPEN\nCLOSED\nOPEN\nCLOSE\nOPEN\nOPEN\nCLOSED\nCLOSE\nCLOSED\nCLOSED\nCLOSED\nCLOSE\nCLOSED\nOPEN\nCLOSED\nTable 30 : ATC2 contactor status management (for ACLog2)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1519],[SSCS_ACLog_610]'}, u'SWRD_GLOBAL-ACENM_0069': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set ATC3 contactor status {ATC3_CTC_STATUS} according to the following logic:\n[DSI_AC_CTC2_OPP_NO]\n[DSI_AC_CTC2_OPP_NC]\n{ATC3_CTC_STATUS}\nOPEN\nCLOSED\nOPEN\nOPEN\nOPEN\nCLOSED\nCLOSED\nCLOSED\nCLOSED\nCLOSED\nOPEN\nCLOSED\nTable 31 : ATC3 contactor status management (for ACLog2)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_610],[SSCS_ACLog_1407]'}, u'SWRD_GLOBAL-ACENM_0013': {'status': u'MATURE', 'body': u'The \u201cMessage number ID\u201d transmitted to EDMU shall be with the following format:\nMSG Name\nMessage number ID\nMSB\n16\nLSB\n6\nACLOG[1/2]_EDMU_IDENT_1\n0\nACLOG[1/2]_EDMU_IDENT_2\n1\nACLOG[1/2]_EDMU_IDENT_3\n2\nACLOG[1/2]_EDMU_IDENT_4\n3\nACLOG[1/2]_EDMU_IDENT_5\n4\nACLOG[1/2]_EDMU_IDENT_6\n5\nACLOG[1/2]_EDMU_IDENT_7\n6\nACLOG[1/2]_EDMU_NETWORK_STATUS_1\n8\nACLOG[1/2]_EDMU_NETWORK_STATUS_2\n9\nACLOG[1/2]_EDMU_CNTOR_STATUS\n10\nACLOG[1/2]_EDMU_PROTEC_STATUS\n11\nACLOG[1/2]_EDMU_ALARM_STATUS\n12\nACLOG[1/2]_EDMU_RCCB_STATUS_1\n14\nACLOG[1/2]_EDMU_RCCB_STATUS_2\n15\nACLOG[1/2]_EDMU_CB_STATUS_1\n24\nACLOG[1/2]_EDMU_CB_STATUS_2\n25\nACLOG[1/2]_EDMU_CB_STATUS_3\n26\nACLOG[1/2]_EDMU_CB_STATUS_4\n27\nACLOG[1/2]_EDMU_IO_STATE_1\n28\nACLOG[1/2]_EDMU_IO_STATE_2\n29\nACLOG[1/2]_EDMU_IO_STATE_3\n30\nACLOG[1/2]_EDMU_IO_STATE_4\n40\nACLOG[1/2]_EDMU_IO_STATE_5\n41\nACLOG[1/2]_EDMU_IO_STATE_6\n42\nACLOG[1/2]_EDMU_FUSE_STATUS_1\n31\nACLOG[1/2]_EDMU_ANALOG_1\n32\nACLOG[1/2]_EDMU_ANALOG_2\n33\nACLOG[1/2]_EDMU_ANALOG_3\n34\nACLOG[1/2]_EDMU_RCCB_CURRENT_1\n\t\t\t\t35\nACLOG[1/2]_EDMU_RCCB_CURRENT_2\n\t\t\t\t36\nACLOG[1/2]_EDMU_RCCB_CURRENT_3\n\t\t\t\t37\nACLOG[1/2]_EDMU_RCCB_CURRENT_4\n\t\t\t\t38\nACLOG[1/2]_EDMU_MODULE_STATUS\n48\nACLOG[1/2]_EDMU_BITE_1\n49\nACLOG[1/2]_EDMU_BITE_2\n50\nACLOG[1/2]_EDMU_BITE_3\n51\nACLOG[1/2]_EDMU_SNPTC_COLOR_1\n52\nACLOG[1/2]_EDMU_ENG_DATA_1\n56\nACLOG[1/2]_EDMU_ENG_DATA_2\n57\nACLOG[1/2]_EDMU_ENG_DATA_3\n58\nACLOG[1/2]_EDMU_ENG_DATA_4\n59\nACLOG[1/2]_EDMU_NVM_DL_STATUS\n72\nACLOG[1/2]_EDMU_NVM_PACKET_n\nWith n = [01;14]\n72+n', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[CAN-IRD-365],[CAN-IRD-525],[CAN-IRD-466],[CAN-IRD-366],[CAN-IRD-526],[CAN-IRD-367],[CAN-IRD-671],[CAN-IRD-501],[CAN-IRD-506],[CAN-IRD-853]'}, u'SWRD_GLOBAL-ACENM_0399': {'status': u'MATURE', 'body': u'When software mode {SW_MODE} is equal to OPERATIONAL, ACENM shall set converter failures to filter {FILT_CONVERTER_XXX_FAILURE} according to the following logic:\n28V DC bus  status [DSI_28V_SEC_POWER_SUPPLY_FAIL_STATUS]\nconverter status [DSI_CONVERTER_XXX_STS]\n{FILT_CONVERTER_XXX_FAILURE}\nACTIVE\nACTIVE\nNOT_FAILED\nACTIVE\nINACTIVE\nFAILED\nINACTIVE\nACTIVE\nNOT_FAILED\nINACTIVE\nINACTIVE\nNOT_FAILED\nWith XXX = 28V_5V, 28V_12V and 28V_MINUS_12V ', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_909]'}, u'SWRD_GLOBAL-ACENM_0468': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG[1/2]_EDMU_CB_STATUS_1\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n0\n0\n0\n0\n0\n0\n0\n0\nByte 1\n0\n0\n0\n0\n0\n0\n0\n0\nByte 2\n[CB_012_CLOSED_VALID]\n[CB_012_CLOSED]\n[CB_011_CLOSED_VALID]\n[CB_011_CLOSED]\n0\n0\n0\n0\nByte 3\n0\n0\n[CB_015_CLOSED_VALID]\n[CB_015_CLOSED]\n[CB_014_CLOSED_VALID]\n[CB_014_CLOSED]\n[CB_013_CLOSED_VALID]\n[CB_013_CLOSED]\nByte 4\n0\n0\n0\n0\n0\n0\n0\n0\nByte 5\n[CB_024_CLOSED_VALID]\n[CB_024_CLOSED]\n[CB_023_CLOSED_VALID]\n[CB_023_CLOSED]\n[CB_022_CLOSED_VALID]\n[CB_022_CLOSED]\n[CB_021_CLOSED_VALID]\n[CB_021_CLOSED]\nByte 6\n0\n0\n0\n0\n0\n0\n[CB_025_CLOSED_VALID]\n[CB_025_CLOSED]\nByte 7\n[CB_032_CLOSED_VALID]\n[CB_032_CLOSED]\n[CB_031_CLOSED_VALID]\n[CB_031_CLOSED]\n0\n0\n0\n0', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0469': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG[1/2]_EDMU_CB_STATUS_2\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n0\n0\n[CB_035_CLOSED_VALID]\n[CB_035_CLOSED]\n[CB_034_CLOSED_VALID]\n[CB_034_CLOSED]\n[CB_033_CLOSED_VALID]\n[CB_033_CLOSED]\nByte 1\n0\n0\n0\n0\n0\n0\n0\n0\nByte 2\n[CB_044_CLOSED_VALID]\n[CB_044_CLOSED]\n[CB_043_CLOSED_VALID]\n[CB_043_CLOSED]\n[CB_042_CLOSED_VALID]\n[CB_042_CLOSED]\n[CB_041_CLOSED_VALID]\n[CB_041_CLOSED]\nByte 3\n0\n0\n0\n0\n0\n0\n[CB_045_CLOSED_VALID]\n[CB_045_CLOSED]\nByte 4\n[CB_052_CLOSED_VALID]\n[CB_052_CLOSED]\n[CB_051_CLOSED_VALID]\n[CB_051_CLOSED]\n0\n0\n0\n0\nByte 5\n0\n0\n[CB_055_CLOSED_VALID]\n[CB_055_CLOSED]\n[CB_054_CLOSED_VALID]\n[CB_054_CLOSED]\n[CB_053_CLOSED_VALID]\n[CB_053_CLOSED]\nByte 6\n0\n0\n0\n0\n0\n0\n0\n0\nByte 7\n0\n0\n0\n0\n0\n0\n0\n0', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0017': {'status': u'MATURE', 'body': u'When {SW_MODE} is equal to INIT, ACENM CSCI shall set {PRELIMINARY_TEST_RESULT} to FAILED if at least one of the following conditions is true:\n{PIN_PROG_TEST_RESULT} is equal to FAILED.\n{RAM_TEST_RESULT} is equal to FAILED.\n{ROM_TEST_RESULT} is equal to FAILED.\nOtherwise, {PRELIMINARY_TEST_RESULT} is set to OK.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_667],[SSCS_ACLog_897]'}, u'SWRD_GLOBAL-ACENM_0016': {'status': u'MATURE', 'body': u'At power up, ACENM CSCI shall initialize {SW_MODE} to INIT', 'additional': u'N/A', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Not defined in SSCS', 'issue': u'1.0', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0015': {'status': u'DELETED', 'body': u'DELETED', 'additional': 'EMPTY', 'derived': 'EMPTY', 'terminal': 'EMPTY', 'safety': 'EMPTY', 'rationale': u'The figure included in this requirement has been moved outside of a requirement.', 'issue': u'1.4', 'refer': 'EMPTY'}, u'SWRD_GLOBAL-ACENM_0014': {'status': u'MATURE', 'body': u'The \u201cSYSTEM ID\u201d shall be with the following format:\nSystem\nSystem ID\n5\n4\n3\n2\n1\n0\nElectrical System\n0\n0\n0\n1\n0\n0', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[CAN-IRD-352]'}, u'SWRD_GLOBAL-ACENM_0462': {'status': u'MATURE', 'body': u'For ACLog1, CAN data field for message ID \u201cACLOG1_EDMU_ALARM_STATUS\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n0\n0\n0\n[ACLOG1_DP_ACT]\n0\n0\n[AC_BUS1_FAIL]\n[ACLOG1_FAIL]\nByte 1\n0\n0\n0\n0\n0\n0\n0\n0\nByte 2\n[AEC_FAILED_CLOSED_CAS]\n[ATC3_FAILED_OPEN_CAS]\n[ATC3_FAILED_CLOSED_CAS]\n[ATC1_FAILED_OPEN_CAS]\n[ATC1_FAILED_CLOSED_CAS]\n0\n0\n0\nByte 3\n0\n0\n0\n0\n0\n0\n0\n[AEC_FAILED_OPEN_CAS]\nByte 4\n0\n0\n0\n0\n0\n0\n0\n0\nByte 5\n0\n0\n0\n0\n0\n0\n0\n0\nByte 6\n0\n0\n0\n0\n0\n0\n0\n0\nByte 7\n0\n0\n0\n0\n0\n0\n0\n0', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0463': {'status': u'MATURE', 'body': u'For ACLog2, CAN data field for message ID \u201cACLOG2_EDMU_ALARM_STATUS\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n\t\t0\n0\n0\n[ACLOG2_DP_ACT]\n0\n0\n[AC_BUS2_FAIL]\n[ACLOG2_FAIL]\nByte 1\n0\n0\n0\n0\n0\n0\n0\n0\nByte 2\n[AEC_FAILED_CLOSED_CAS]\n[ELC_FAILED_OPEN_CAS]\n[ELC_FAILED_CLOSED_CAS]\n[ATC2_FAILED_OPEN_CAS]\n[ATC2_FAILED_CLOSED_CAS]\n0\n0\n0\nByte 3\n0\n0\n0\n0\n0\n0\n0\n0\nByte 4\n0\n0\n0\n0\n0\n0\n0\n0\nByte 5\n0\n0\n0\n0\n0\n0\n0\n0\nByte 6\n0\n0\n0\n0\n0\n0\n0\n0\nByte 7\n0\n0\n0\n0\n0\n0\n0\n0', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0460': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG[1/2]_EDMU_CNTOR_STATUS\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n0\n0\n0\n[AEC_CNTOR_CLOSED]\n[ELC_CNTOR_CLOSED]\n[ATC3_CNTOR_CLOSED]\n[ATC2_CNTOR_CLOSED]\n[ATC1_CNTOR_CLOSED]\nByte 1\n0\n0\n0\n0\n0\n0\n0\n0\nByte 2\n0\n0\n0\n[AEC_CNTOR_CLOSED_VALID]\n[ELC_CNTOR_CLOSED_VALID]\n[ATC3_CNTOR_CLOSED_VALID]\n[ATC2_CNTOR_CLOSED_VALID]\n[ATC1_CNTOR_CLOSED_VALID]\nByte 3\n0\n0\n0\n0\n0\n0\n0\n0\nByte 4\n0\n0\n0\n0\n0\n0\n0\n0\nByte 5\n0\n0\n0\n0\n0\n0\n0\n0\nByte 6\n0\n0\n0\n0\n0\n0\n0\n0\nByte 7\n0\n0\n0\n0\n0\n0\n0\n0', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394],[CAN-IRD-845]'}, u'SWRD_GLOBAL-ACENM_0461': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG[1/2]_EDMU_PROTEC_STATUS\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n[PROTEC_08_ACTIVATED]\n[PROTEC_07_ACTIVATED]\n[PROTEC_06_ACTIVATED]\n[PROTEC_05_ACTIVATED]\n[PROTEC_04_ACTIVATED]\n[PROTEC_03_ACTIVATED]\n[PROTEC_02_ACTIVATED]\n[PROTEC_01_ACTIVATED]\nByte 1\n[PROTEC_16_ACTIVATED]\n[PROTEC_15_ACTIVATED]\n[PROTEC_14_ACTIVATED]\n[PROTEC_13_ACTIVATED]\n[PROTEC_12_ACTIVATED]\n[PROTEC_11_ACTIVATED]\n[PROTEC_10_ACTIVATED]\n[PROTEC_09_ACTIVATED]\nByte 2\n[PROTEC_24_ACTIVATED]\n[PROTEC_23_ACTIVATED]\n[PROTEC_22_ACTIVATED]\n[PROTEC_21_ACTIVATED]\n[PROTEC_20_ACTIVATED]\n[PROTEC_19_ACTIVATED]\n[PROTEC_18_ACTIVATED]\n[PROTEC_17_ACTIVATED]\nByte 3\n[PROTEC_32_ACTIVATED]\n[PROTEC_31_ACTIVATED]\n[PROTEC_30_ACTIVATED]\n[PROTEC_29_ACTIVATED]\n[PROTEC_28_ACTIVATED]\n[PROTEC_27_ACTIVATED]\n[PROTEC_26_ACTIVATED]\n[PROTEC_25_ACTIVATED]\nByte 4\n0\n0\n0\n0\n0\n0\n0\n0\nByte 5\n0\n0\n0\n0\n0\n0\n0\n0\nByte 6\n0\n0\n0\n0\n0\n0\n0\n0\nByte 7\n0\n0\n0\n0\n0\n0\n0\n0', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0466': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG1_EDMU_RCCB_STATUS_1\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n0\n0\n0\n0\n0\n0\n0\n0\nByte 1\n0\n0\n0\n0\n0\n0\n0\n0\nByte 2\n0\n0\n0\n0\n0\n0\n0\n0\nByte 3\n0\n0\n0\n0\n0\n0\n0\n0\nByte 4\n0\n0\n0\n0\n0\n0\n0\n0\nByte 5\n0\n0\n0\n0\n0\n0\n0\n0\nByte 6\n0\n0\n0\n0\n0\n0\n0\n0\nByte 7\n0\n0\n0\n0\n0\n0\n0\n0', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0467': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG1_EDMU_RCCB_STATUS_2\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n[ACMP3B_CLOSED_STATE]\n[ACMP3B_TRIPPED_STATE]\n0\n0\n[ACMP3B_OPEN_LOCKED_STATE]\nByte 1\n[ACMP3B_SHED_STATE]\n0\n0\n0\n[ACMP3B_TRIP_CAUSE_PHA]\nByte 2\n0\n0\n0\n0\n0\n[ACMP3B_TRIP_CAUSE_PHB]\nByte 3\n0\n0\n0\n0\n0\n[ACMP3B_TRIP_CAUSE_PHC]\nByte 4\n0\n0\n0\n0\n0\n0\n0\n0\nByte 5\n0\n0\n0\n0\n0\n0\n0\n0\nByte 6\n0\n0\n0\n0\n0\n0\n0\n0\nByte 7\n0\n0\n0\n0\n0\n0\n0\n0', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0464': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG2_EDMU_RCCB_STATUS_1\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n[ACMP1B_CLOSED_STATE]\n[ACMP1B_TRIPPED_STATE]\n0\n0\n[ACMP1B_OPEN_LOCKED_STATE]\nByte 1\n[ACMP1B_SHED_STATE]\n0\n0\n0\n[ACMP1B_TRIP_CAUSE_PHA]\nByte 2\n0\n0\n0\n0\n0\n[ACMP1B_TRIP_CAUSE_PHB]\nByte 3\n0\n0\n0\n0\n0\n[ACMP1B_TRIP_CAUSE_PHC]\nByte 4\n[ACMP3A_CLOSED_STATE]\n[ACMP3A_TRIPPED_STATE]\n0\n0\n[ACMP3A_OPEN_LOCKED_STATE]\nByte 5\n[ACMP3A_SHED_STATE]\n0\n0\n0\n[ACMP3A_TRIP_CAUSE_PHA]\nByte 6\n0\n0\n0\n0\n0\n[ACMP3A_TRIP_CAUSE_PHB]\nByte 7\n0\n0\n0\n0\n0\n[ACMP3A_TRIP_CAUSE_PHC]', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0465': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG2_EDMU_RCCB_STATUS_2\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n0\n0\n0\n0\n0\n0\n0\n0\nByte 1\n0\n0\n0\n0\n0\n0\n0\n0\nByte 2\n0\n0\n0\n0\n0\n0\n0\n0\nByte 3\n0\n0\n0\n0\n0\n0\n0\n0\nByte 4\n0\n0\n0\n0\n0\n0\n0\n0\nByte 5\n0\n0\n0\n0\n0\n0\n0\n0\nByte 6\n0\n0\n0\n0\n0\n0\n0\n0\nByte 7\n0\n0\n0\n0\n0\n0\n0\n0', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0264': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set AEC failed closed failure {AEC_FAILED_CLOSED_FAILURE} according to the following logic:\nLatched to FAILED when {AEC_CTC_STATUS} is equal to CLOSED and {AEC_CTC_FAILURE} is equal to COMMAND during more than 2s\xb1500ms AND {AEC_FAILED_OPEN_FAILURE} is not equal to FAILED', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_563],[SSCS_ACLog_920],[SSCS_ACLog_1196]'}, u'SWRD_GLOBAL-ACENM_0265': {'status': u'DELETED', 'body': u'DELETED', 'additional': 'EMPTY', 'derived': 'EMPTY', 'terminal': 'EMPTY', 'safety': 'EMPTY', 'rationale': u'Upper requirement SSCS_ACLog_1313 has been deleted.', 'issue': u'1.4', 'refer': 'EMPTY'}, u'SWRD_GLOBAL-ACENM_0266': {'status': u'DELETED', 'body': u'DELETED', 'additional': 'EMPTY', 'derived': 'EMPTY', 'terminal': 'EMPTY', 'safety': 'EMPTY', 'rationale': u'The figure included in this requirement has been moved outside of a requirement (refer to Figure 11).', 'issue': u'1.5', 'refer': 'EMPTY'}, u'SWRD_GLOBAL-ACENM_0267': {'status': u'MATURE', 'body': u'ACENM CSCI shall set the global BITE failure status {GLOBAL_BITE_FAILURE_STATUS} to FAILED if at least one of the following conditions is true:\n{PBIT_TEST_RESULT}  is equal to FAILED\n{IBIT_TEST_RESULT}  is equal to FAILED\n{CBIT_TEST_RESULT}  is equal to FAILED\nOtherwise, {GLOBAL_BITE_FAILURE_STATUS} is set to OK.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_701]'}, u'SWRD_GLOBAL-ACENM_0260': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 or ACLog2 configuration, ACENM CSCI shall set ELC failed closed failure {ELC_FAILED_CLOSED_FAILURE} according to the following logic:\nLatched to FAILED when {ELC_CTC_STATUS} is equal to CLOSED and {ELC_CTC_FAILURE} is equal to COMMAND during more than 2s\xb1500ms AND {ELC_FAILED_OPEN_FAILURE} is not equal to FAILED', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_563],[SSCS_ACLog_920],[SSCS_ACLog_1196]'}, u'SWRD_GLOBAL-ACENM_0261': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set ATC3 failed open failure {ATC3_FAILED_OPEN_FAILURE} according to the following logic:\nLatched to FAILED when {ATC3_CTC_STATUS} is equal to OPEN and {ATC3_CTC_FAILURE} is equal to COMMAND during more than 2s\xb1500ms AND {ATC3_FAILED_CLOSED_FAILURE} is not equal to FAILED', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_585],[SSCS_ACLog_626],[SSCS_ACLog_628],[SSCS_ACLog_630],[SSCS_ACLog_919],[SSCS_ACLog_1196]'}, u'SWRD_GLOBAL-ACENM_0262': {'status': u'MATURE', 'body': u'ACENM CSCI shall set ATCX failed closed failure {ATCX_FAILED_CLOSED_FAILURE} according to the following logic:\nLatched to FAILED when {ATCX_CTC_STATUS} is equal to CLOSED and {ATCX_CTC_FAILURE} is equal to COMMAND during more than 2s\xb1500ms AND {ATCX_FAILED_OPEN_FAILURE} is not equal to FAILED\nWith ATCX = ATC1 or ATC3 (for ACLog1) \nWith ATCX = ATC2 (for ACLog2)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_563],[SSCS_ACLog_624],[SSCS_ACLog_627],[SSCS_ACLog_920],[SSCS_ACLog_1196]'}, u'SWRD_GLOBAL-ACENM_0263': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set AEC failed open failure {AEC_FAILED_OPEN_FAILURE} according to the following logic:\nLatched to FAILED when {AEC_CTC_STATUS} is equal to OPEN and {AEC_CTC_FAILURE} is equal to COMMAND during more than 2s\xb1500ms AND {XFR_POSITION} is not equal to NOT_VALID AND {AEC_FAILED_CLOSED_FAILURE} is not equal to FAILED', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_585],[SSCS_ACLog_919],[SSCS_ACLog_1196],[SSCS_ACLog_1325]'}, u'SWRD_GLOBAL-ACENM_0268': {'status': u'MATURE', 'body': u'When {SW_MODE} is equal to INIT, ACENM CSCI shall perform the preliminary tests including:\nROM integrity test\nRAM integrity test\nPin Prog consistency test', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A ', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_667]'}, u'SWRD_GLOBAL-ACENM_0269': {'status': u'MATURE', 'body': u'ACENM shall set pin programming test result {PIN_PROG_TEST_RESULT} according to the following condition:\nFAILED, if {BOARD_CONFIG} is equal to BOARD_ERROR.\nOK, otherwise', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.2', 'refer': u'[SSCS_ACLog_667]'}, u'SWRD_GLOBAL-ACENM_0391': {'status': u'MATURE', 'body': u'When {SW_MODE} is equal to INIT and {BOARD_CONFIG} is equal to ACLog2, ACENM CSCI shall set ACMP1B and ACMP3A RCCB commands {ACMP1B_RCCB_CMD} and {ACMP3A_RCCB_CMD} to OPEN. ', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_663]'}, u'SWRD_GLOBAL-ACENM_0392': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set AC External connected status [EXT_AC_CONNECTED] according to the following logic:\nCONNECTED when AC external power voltage presence {AC_EP_PRESENCE}  is equal to CONNECTED \nNOT_CONNECTED otherwise', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1140]'}, u'SWRD_GLOBAL-ACENM_0393': {'status': u'DELETED', 'body': u'DELETED', 'additional': 'EMPTY', 'derived': 'EMPTY', 'terminal': 'EMPTY', 'safety': 'EMPTY', 'rationale': u'FO/FC monitoring of the opposite contactor has been removed in SSCS', 'issue': u'1.5', 'refer': 'EMPTY'}, u'SWRD_GLOBAL-ACENM_0150': {'status': u'MATURE', 'body': u'ACENM CSCI shall set TCB matrix test 1 status {TCB_TEST1_STATUS} to:\nFAILED if  [DSI_AC_CB_TEST] is equal at least one time to INACTIVE when [DSO_AC_CB_CY] is set to ACTIVE during one TCB matrix monitoring\nOK otherwise \nWith Y = 1, 2, 3, 4 or 5', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_683],[SSCS_ACLog_1040],[SSCS_ACLog_1038]'}, u'SWRD_GLOBAL-ACENM_0169': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set ACMP1B contactor command {ACMP1B_RCCB_CMD_TO_APPLY} according to the following logic (close conditions are evaluated first):\nFigure 24 : ACMP1B RCCB equation (close command)\nOtherwise {ACMP1B_RCCB_CMD_TO_APPLY} is set to OPEN.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1068],[SSCS_ACLog_1121],[SSCS_ACLog_721],[SSCS_ACLog_661],[SSCS_ACLog_464],[SSCS_ACLog_482],[SSCS_ACLog_869],[SSCS_ACLog_1122],[SSCS_ACLog_1320],[SSCS_ACLog_1321]'}, u'SWRD_GLOBAL-ACENM_0151': {'status': u'MATURE', 'body': u'ACENM CSCI shall set TCB matrix test 2 step 1 status {TCB_TEST2_STEP1_STATUS} to:\nFAILED if  at least one [DSI_AC_CB_LX] is equal to INACTIVE when [DSO_AC_CB_TEST] is set to ACTIVE \nOK otherwise \nWith X = 1, 2, 3, 4 or 5', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_683],[SSCS_ACLog_1040],[SSCS_ACLog_1038]'}, u'SWRD_GLOBAL-ACENM_0163': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set ELC contactor command {ELC_CTC_CMD_TO_APPLY} according to the following logic (close conditions are evaluated first):\nFigure 19 : ELC contactor equation (close command)\nOtherwise {ELC_CTC_CMD_TO_APPLY} is set to OPEN.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_557],[SSCS_ACLog_627],[SSCS_ACLog_1214],[SSCS_ACLog_1315],[SSCS_ACLog_1462],[SSCS_ACLog_1463],[SSCS_ACLog_1483],[SSCS_ACLog_1515]'}, u'SWRD_GLOBAL-ACENM_0162': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set ATC3 contactor command {ATC3_CTC_CMD} according to the following logic (close conditions are evaluated first):\nFigure 18 : ATC3 contactor equation (close command)\nOtherwise {ATC3_CTC_CMD_TO_APPLY} is set to OPEN.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_557],[SSCS_ACLog_1228],[SSCS_ACLog_630],[SSCS_ACLog_639],[SSCS_ACLog_827],[SSCS_ACLog_566],[SSCS_ACLog_1219],[SSCS_ACLog_1222],[SSCS_ACLog_1315],[SSCS_ACLog_1462],[SSCS_ACLog_1463]'}, u'SWRD_GLOBAL-ACENM_0161': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set ATC2 contactor command {ATC2_CTC_CMD_TO_APPLY} according to the following logic (close conditions are evaluated first):\nFigure 17 : ATC2 contactor equation (close command)\nOtherwise {ATC2_CTC_CMD_TO_APPLY} is set to OPEN.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_557],[SSCS_ACLog_591],[SSCS_ACLog_628],[SSCS_ACLog_1228],[SSCS_ACLog_638],[SSCS_ACLog_828],[SSCS_ACLog_566],[SSCS_ACLog_1222],[SSCS_ACLog_1315],[SSCS_ACLog_1462],[SSCS_ACLog_1463]'}, u'SWRD_GLOBAL-ACENM_0160': {'status': u'MATURE', 'body': u'If{BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set ATC1 contactor command to apply {ATC1_CTC_CMD_TO_APPLY} according to the following logic (close conditions are evaluated first): \nFigure 16 : ATC1 contactor equation (close command)\nOtherwise {ATC1_CTC_CMD_TO_APPLY} is set to OPEN.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_557],[SSCS_ACLog_589],[SSCS_ACLog_626],[SSCS_ACLog_1228],[SSCS_ACLog_637],[SSCS_ACLog_566],[SSCS_ACLog_1219],[SSCS_ACLog_1222],[SSCS_ACLog_1315],[SSCS_ACLog_1462],[SSCS_ACLog_1463]'}, u'SWRD_GLOBAL-ACENM_0167': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set GLC2 contactor command {GLC2_CTC_GCU_ACK_TO_APPLY} according to the following logic (close conditions are evaluated first):\nFigure 22 : GLC2 contactor equation (close command)\nOtherwise {GLC2_CTC_GCU_ACK_TO_APPLY} is set to OPEN.', 'additional': u'Closed state corresponds to a GCU \u201cacknowledged\u201d and Open state corresponds to a GCU \u201cnot acknowledged\u201d', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_557],[SSCS_ACLog_627],[SSCS_ACLog_1217],[SSCS_ACLog_1462]'}, u'SWRD_GLOBAL-ACENM_0166': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set GLC1 contactor command {GLC1_CTC_GCU_ACK_TO_APPLY} according to the following logic (close conditions are evaluated first):\nFigure 21 : GLC1 contactor equation (close command)\nOtherwise {GLC1_CTC_GCU_ACK_TO_APPLY} is set to OPEN.', 'additional': u'Closed state corresponds to a GCU \u201cacknowledged\u201d and Open state corresponds to a GCU \u201cnot acknowledged\u201d', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_557],[SSCS_ACLog_624],[SSCS_ACLog_1216],[SSCS_ACLog_1462]'}, u'SWRD_GLOBAL-ACENM_0165': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set AEC contactor command {AEC_CTC_CMD_TO_APPLY} according to the following logic (close conditions are evaluated first):\nFigure 20 : AEC contactor equation (close command)\nOtherwise {AEC_CTC_CMD_TO_APPLY} is set to OPEN.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1055],[SSCS_ACLog_1228],[SSCS_ACLog_566],[SSCS_ACLog_1462],[SSCS_ACLog_1463]'}, u'SWRD_GLOBAL-ACENM_0164': {'status': u'DELETED', 'body': u'DELETED', 'additional': 'EMPTY', 'derived': 'EMPTY', 'terminal': 'EMPTY', 'safety': 'EMPTY', 'rationale': u'The DSI Emerlog AEC open is no more used.', 'issue': u'1.5', 'refer': 'EMPTY'}, u'SWRD_GLOBAL-ACENM_0185': {'status': u'MATURE', 'body': u'When {SW_MODE} is equal to INIT and {BOARD_CONFIG} is equal to ACLog2, ACENM CSCI shall set ACMP1B and ACMP3A RCCB commands to apply {ACMP1B_RCCB_CMD_TO_APPLY} and {ACMP3A_RCCB_CMD_TO_APPLY} to OPEN. ', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_663]'}, u'SWRD_GLOBAL-ACENM_0184': {'status': u'MATURE', 'body': u'When {SW_MODE} is equal to INIT and {BOARD_CONFIG} is equal to ACLog1, ACENM CSCI shall set ACMP3B RCCB command to apply {ACMP3B_RCCB_CMD_TO_APPLY} to OPEN. ', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_663]'}, u'SWRD_GLOBAL-ACENM_0028': {'status': u'TBC', 'body': u'If {NVM_DATA_LOAD_COMMAND} is equal to ACTIVE, ACENM CSCI shall perform this sequence each time the message EDMU_XLOG_NVM_DL is received by ACENM:\n1/ Read sequentially bytes in the NVM from current block address to transmit {NVM_BLOCK_TO_SEND_ADDR} to {NVM_BLOCK_TO_SEND_ADDR} + 14*6 \n2/ Fill the NVM packets to transmit [ACLOGX_NVM_YY_PACKET_BYTE_ZZ] with bytes data read in NVM (beginning with YY=1 and ZZ=1 to 6 then YY = 2 and ZZ=1 to 6 \u2026. until YY=42)\n3/ Fill number of the current NVM packets to transmit [ACLOGX_NVM_YY_PACKET_NUMBER] with value of {NVM_BLOCK_TO_SEND_NUMBER}+YY  \n4/ Set {NVM_BLOCK_TO_SEND_ADDR} with value of {NVM_BLOCK_TO_SEND_ADDR} + 14*6\n5/ Set {NVM_BLOCK_TO_SEND_NUMBER} with value of {NVM_BLOCK_TO_SEND_NUMBER} + 6\nWith X = 1 for ACLog1 and X = 2 for ACLog2\nWith YY = 1 to 42\nWith ZZ = 1 to 6', 'additional': u'Each time slot contains 42 messages including 6 bytes of NVM data.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Size of CAN signals defined in IRD CAN are too small.', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1077],[CAN-IRD-633],[CAN-IRD-643],[CAN-IRD-641],[CAN-IRD-644],[CAN-IRD-642]'}, u'SWRD_GLOBAL-ACENM_0029': {'status': u'MATURE', 'body': u'If {NVM_BLOCK_TO_SEND_ADDR} is greater than LAST_NVM_ADDR, ACENM CSCI shall set the NVM current block address to transmit {NVM_BLOCK_TO_SEND_ADDR} to LAST_NVM_ADDR, the NVM packets to transmit [ACLOGX_NVM_YY_PACKET_BYTE_ZZ] to 0, the number of the current NVM packets to transmit [ACLOGX_NVM_YY_PACKET_NUMBER] to 0 and the number of current NVM block to transmit {NVM_BLOCK_TO_SEND_NUMBER} to 0.', 'additional': u'N/A', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Manage the case when the NVM transfer is finished. This case is not defined in IRD CAN.', 'issue': u'1.4', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0181': {'status': u'MATURE', 'body': u'At the end of opening sequence, ACENM CSCI shall apply closure contactor sequence according to the following algorithm: \nFigure 31 : Contactor Closure Sequence', 'additional': u'For ATC1, ATC2 and AEC contactors, the validity of XFR is checked in the STEP4.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_558],[SSCS_ACLog_560],[SSCS_ACLog_563],[SSCS_ACLog_561]'}, u'SWRD_GLOBAL-ACENM_0180': {'status': u'MATURE', 'body': u'ACENM CSCI shall perform the \u201cCLOSE CHECK STEP\u201d (check if ACMP not declared as failed which are commanded to close are CLOSED {ACMP_NTW_GLOBAL_EDMU_CLOSE_CHECK}) according to the following logic:\n{BOARD_CONFIG}\nContactor Close condition\nGlobal Contactor Close check\n{ACMP_NTW_GLOBAL_EDMU_CLOSE_CHECK}\nACLog1\n{ACMP3B_RCCB_CMD} = CLOSE and {ACMP3B_RCCB_STATUS} = CLOSEDOR {ACMP3B_FAILED_CLOSED_FAILURE} = FAILED or{ACMP3B_FAILED_OPEN_FAILURE} = FAILED\nYES if all the contactor close conditions are TRUE\nNO otherwise\nACLog2\nIf { ACMP1B_RCCB_CMD} = CLOSE and {ACMP3B_RCCB_STATUS} = CLOSEDOR{ACMP1B_FAILED_CLOSED_FAILURE} = FAILED or{ACMP1B_FAILED_OPEN_FAILURE} = FAILED\nACLog2\nIf { ACMP3A_RCCB_CMD} = CLOSE and {ACMP3B_RCCB_STATUS} = CLOSEDOR{ACMP3A_FAILED_CLOSED_FAILURE} = FAILED or{ACMP3A_FAILED_OPEN_FAILURE} = FAILED\nFigure 43 : Close contactor status check ', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1058],[SSCS_ACLog_1206]'}, u'SWRD_GLOBAL-ACENM_0183': {'status': u'MATURE', 'body': u'ACENM CSCI shall check if contactors (not declared as failed) which are commanded to close are CLOSED {AC_NTW_GLOBAL_CLOSE_CHECK} according to the following logic:\n{BOARD_CONFIG}\nContactor Close condition\nGlobal Contactor Close check {AC_NTW_GLOBAL_CLOSE_CHECK}\nACLog1\n{ATC1_CTC_CMD} = CLOSE and{ATC1_CTC_STATUS} = CLOSEDOR {ATC1_FAILED_CLOSED_FAILURE} = FAILED or{ATC1_FAILED_OPEN_FAILURE} = FAILED or{XFR_POSITION} is equal to NOT_VALID\nYES if all the contactor close conditions are TRUE\nNO otherwise\nACLog2\n{ATC2_CTC_CMD} = CLOSE and {ATC2_CTC_STATUS } = CLOSEDOR{ATC2_FAILED_CLOSED_FAILURE} = FAILED or{ATC2_FAILED_OPEN_FAILURE} = FAILED or{XFR_POSITION} is equal to NOT_VALID\nACLog1\n{ATC3_CTC_CMD} = CLOSE and {ATC3_CTC_STATUS} = CLOSEDOR{ATC3_FAILED_CLOSED_FAILURE} = FAILED or{ATC3_FAILED_OPEN_FAILURE} = FAILED\nACLog2\n{ELC_CTC_CMD} = CLOSE and {ELC_CTC_STATUS} = CLOSEDOR{ELC_FAILED_CLOSED_FAILURE} = FAILED or{ELC_FAILED_OPEN_FAILURE} = FAILED\nACLog1\n{GLC1_CTC_GCU_ACK} = CLOSE and {GLC1_CTC_STATUS} = CLOSEDOR{GLC1_FAILED_CLOSED_FAILURE} = FAILED or{GLC1_FAILED_OPEN_FAILURE} = FAILED\nACLog2\n{GLC2_CTC_GCU_ACK} = CLOSE and {GLC2_CTC_STATUS} = CLOSEDOR{GLC2_FAILED_CLOSED_FAILURE} = FAILED or{GLC2_FAILED_OPEN_FAILURE} = FAILED\nACLog1\n{ALC_CTC_GCU_ACK} = CLOSE and {ALC_CTC_STATUS} = CLOSEDOR{ALC_FAILED_CLOSED_FAILURE} = FAILED or{ALC_FAILED_OPEN_FAILURE} = FAILED\nFigure 33 : Close contactor status check ', 'additional': u'For ATC1, ATC2 and AEC contactors, the validity of XFR is checked.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_563],[SSCS_ACLog_1325]'}, u'SWRD_GLOBAL-ACENM_0182': {'status': u'MATURE', 'body': u'ACENM CSCI shall set to CLOSE the applied close contactor command according to the following logic:\n{BOARD_CONFIG}\nComputed Close Command\nApplied Close Command\nACLog1\nIf {ATC1_CTC_CMD_TO_APPLY} = CLOSE\n{ATC1_CTC_CMD} is set to CLOSE\nACLog2\nIf {ATC2_CTC_CMD_TO_APPLY} = CLOSE\n{ATC2_CTC_CMD} is set to CLOSE\nACLog1\nIf {ATC3_CTC_CMD_TO_APPLY} = CLOSE\n{ATC3_CTC_CMD} is set to CLOSE\nACLog2\nIf {ELC_CTC_CMD_TO_APPLY} = CLOSE\n{ELC_CTC_CMD} is set to CLOSE\nACLog1\nIf {GLC1_CTC_GCU_ACK_TO_APPLY} = CLOSE\n{GLC1_CTC_GCU_ACK} is set to CLOSE\nACLog2\nIf {GLC2_CTC_GCU_ACK_TO_APPLY} = CLOSE\n{GLC2_CTC_GCU_ACK} is set to CLOSE\nACLog1\nIf {ALC_CTC_GCU_ACK_TO_APPLY} = CLOSE\n{ALC_CTC_GCU_ACK} is set to CLOSE\nFigure 32 : Applied close command management', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_561]'}, u'SWRD_GLOBAL-ACENM_0022': {'status': u'MATURE', 'body': u'When {SW_MODE} is equal to INIT, ACENM CSCI shall perform the cold start phase on ground in less than 940ms', 'additional': u'The cold start phase includes preliminary tests and PBIT tests.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_669]'}, u'SWRD_GLOBAL-ACENM_0023': {'status': u'MATURE', 'body': u'When {SW_MODE} is equal to INIT, ACENM CSCI shall perform the warm start in less than 130ms\xb110ms', 'additional': u'The warm start phase includes preliminary tests.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_672]'}, u'SWRD_GLOBAL-ACENM_0020': {'status': u'MATURE', 'body': u'When {SW_MODE} is equal to INIT, ACENM CSCI shall set start mode {START_MODE} to:\nCOLD if [DSI_5S_POWER_CUT] is equal to ACTIVE\nWARM otherwise', 'additional': u'DSI_5S_POWER_CUT is ACTIVE when a power interrupt greater than 5s has occurred.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_664]'}, u'SWRD_GLOBAL-ACENM_0021': {'status': u'MATURE', 'body': u'When {SW_MODE} is equal to INIT, ACENM CSCI shall set PBIT activation state {PBIT_ACTIVATION} to:\nACTIVE if {START_MODE} is equal to COLD and {WOW_STATUS} is equal to ON_GROUND and {IBIT_COMMAND} is equal to INACTIVE.\nINACTIVE otherwise', 'additional': u'PBIT is not performed if there is a IBIT request.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_668],[SSCS_ACLog_896]'}, u'SWRD_GLOBAL-ACENM_0026': {'status': u'TBC', 'body': u'If {NVM_DATA_LOAD_COMMAND} switches from INACTIVE to ACTIVE state, ACENM CSCI shall initialize the NVM current block address to transmit {NVM_BLOCK_TO_SEND_ADDR} to FIRST_NVM_ADDR, the NVM packets to transmit [ACLOGX_NVM_YY_PACKET_BYTE_ZZ] to 0, the number of the current NVM packets to transmit [ACLOGX_NVM_YY_PACKET_NUMBER] to 0 and the number of current NVM block to transmit {NVM_BLOCK_TO_SEND_NUMBER} to 0.\nWith X = 1 for ACLog1 and X = 2 for ACLog2\nWith YY = 1 to 42\nWith ZZ = 1 to 6', 'additional': u'N/A', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Provide the initialization value of NVM data to transmit to EDMU.', 'issue': u'1.5', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0158': {'status': u'MATURE', 'body': u'ACENM CSCI shall set APU overload pre-computed failure {APU_OVL_NOVL_PRECOMPUTED_FAILURE} according to the following logic:\n[DSI_OL_APU]\n[DSI_NOL_APU]\n{APU_OVL_NOVL_PRECOMPUTED_FAILURE}\nOVERLOAD\nNOT_OVERLOAD\nNOT_FAILED\nOVERLOAD\nOVERLOAD\nFAILED\nNOT_OVERLOAD\nNOT_OVERLOAD\nFAILED\nNOT_OVERLOAD\nOVERLOAD\nNOT_FAILED\nTable 77 : APU overload failure management', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_575],[SSCS_ACLog_927]'}, u'SWRD_GLOBAL-ACENM_0024': {'status': u'MATURE', 'body': u'When {SW_MODE} is equal to INIT, ACENM CSCI shall use [DSI_PINPROG1], [DSI_PINPROG2], [DSI_PINPROG3], [DSI_PINPROG4] and [DSI_PINPROG5] to compute {BOARD_CONFIG} according to the following logic:\nPINPROG\n{BOARD_CONFIG}\n[DSI_PINPROG1]\n[DSI_PINPROG2]\n[DSI_PINPROG3]\n[DSI_PINPROG4]\n[DSI_PINPROG5]\nACTIVE\nACTIVE\nACTIVE\nACTIVE\nACTIVE\nACLog1\nACTIVE\nINACTIVE\nINACTIVE\nACTIVE\nACTIVE\nACLog2\nOthers combination\nBOARD_ERROR\nTable 6 : Board pin programming', 'additional': u'ACTIVE corresponds to Ground in SSCS, INACTIVE corresponds to Open in SSCS. BOARD_ERROR state is used at software level to catch all wrong pin programming combination.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_886]'}, u'SWRD_GLOBAL-ACENM_0025': {'status': u'MATURE', 'body': u'When {SW_MODE} is equal to OPERATIONAL, ACENM CSCI shall set all spare DSO [DSO_XXX_SPARE_XX] to INACTIVE.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.1', 'refer': u'[SSCS_ACLog_1084],[SSCS_ACLog_1174]'}, u'SWRD_GLOBAL-ACENM_0509': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG[1/2]_EDMU_NVM_DL_STATUS\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n0\n0\n0\n0\n0\n0\n0\n[ACLOGX_NVM_DL_ANSWER]\nByte 1\n[ACLOGX_NVM_SIZE]\nByte 2\n[ACLOGX_NVM_SIZE]\nByte 3\n[ACLOGX_NVM_SIZE]\nByte 4\n[ACLOGX_NVM_BLOCK_NB_PACKET]\nByte 5\n[ACLOGX_NVM_BLOCK_NB_PACKET]\nByte 6\n[ACLOGX_NVM_BLOCK_CRC]\nByte 7\n[ACLOGX_NVM_BLOCK_CRC]\nWith ACLOGX = ACLOG1 or ACLOG2', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0508': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG[1/2]_EDMU_ENG_DATA_4\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n[ED_BYTE_25]\nByte 1\n[ED_BYTE_26]\nByte 2\n[ED_BYTE_27]\nByte 3\n[ED_BYTE_28]\nByte 4\n[ED_BYTE_29]\nByte 5\n[ED_BYTE_30]\nByte 6\n[ED_BYTE_31]\nByte 7\n[ED_BYTE_32]', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0159': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set AC External Power overload pre-computed failure {AC_EP_OVL_NOVL_PRECOMPUTED_FAILURE} according to the following logic:\n[DSI_OL_AC_EP]\n[DSI_NOL_AC_EP]\n{AC_EP_OVL_NOVL_PRECOMPUTED_FAILURE}\nOVERLOAD\nNOT_OVERLOAD\nNOT_FAILED\nOVERLOAD\nOVERLOAD\nFAILED\nNOT_OVERLOAD\nNOT_OVERLOAD\nFAILED\nNOT_OVERLOAD\nOVERLOAD\nNOT_FAILED\nTable 78 : AC External Power overload failure management', 'additional': u'N/A', 'derived': u'NO\t', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_936],[SSCS_ACLog_927]'}, u'SWRD_GLOBAL-ACENM_0118': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set {AC_EP_UNDERFREQUENCY_CALC_PROT} to:\nACTIVE when {AC_EP_PHASEA_FREQ} or {AC_EP_PHASEB_FREQ} or {AC_EP_PHASEC_FREQ} is lower than 370Hz\xb120Hz for more than 4s\xb10,5s.\nINACTIVE otherwise', 'additional': u'The maximum opening time of the contactor (20ms) is included in the tolerance.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_443],[SSCS_ACLog_437],[SSCS_ACLog_1499]'}, u'SWRD_GLOBAL-ACENM_0119': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set {AC_EP_OVERFREQUENCY_CALC_PROT} to:\nACTIVE when {AC_EP_PHASEA_FREQ} or {AC_EP_PHASEB_FREQ} or {AC_EP_PHASEC_FREQ} is higher than 420Hz\xb120Hz for more than 2s\xb10,5s.\nINACTIVE otherwise', 'additional': u'The maximum opening time of the contactor (20ms) is included in the tolerance.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_444],[SSCS_ACLog_437],[SSCS_ACLog_1499]'}, u'SWRD_GLOBAL-ACENM_0116': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set {AC_EP_UNBALANCED_CALC_PROT} to:\nACTIVE when current difference between [ASI_ACEP_CURRENT_PHA] and [ASI_ACEP_CURRENT_PHB] OR when current difference between [ASI_ACEP_CURRENT_PHA] and [ASI_ACEP_CURRENT_PHC] OR when current difference between [ASI_ACEP_CURRENT_PHB] and [ASI_ACEP_CURRENT_PHC] are above the maximum step curve defined hereafter in Figure 9 and in table 64\nINACTIVE when current difference between [ASI_ACEP_CURRENT_PHA] and [ASI_ACEP_CURRENT_PHB] AND when current difference between [ASI_ACEP_CURRENT_PHA] and [ASI_ACEP_CURRENT_PHC] AND when current difference between [ASI_ACEP_CURRENT_PHB] and [ASI_ACEP_CURRENT_PHC] are under the minimum step curve defined hereafter in Figure 9 and in table 64\nShall TRIPShall not TRIPShall TRIPShall not TRIP\nShall TRIP\nShall not TRIP\nShall TRIP\nShall not TRIP\nFigure 9 : Unbalance step curves for AC External Power\nStep Number\nConfirmation time (s)\nEP delta current (A)\n1\n0,35s\xb10,05\n870\xb130\n2\n0,475\xb10,075\n770\xb130\n3\n1,05\xb10,15\n520\xb130\n4\n1,85\xb10,35\n410\xb130\n5\n3,25\xb10,75\n334\xb130\n6\n13\xb13\n210\xb130\n7\n58\xb12\n130\xb130\nTable 64 : Definition of AC External Power unbalance Min/Max step curves ', 'additional': u'The maximum opening time of the contactor (20ms) is included in the tolerance.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1096],[SSCS_ACLog_888],[SSCS_ACLog_437],[SSCS_ACLog_1499]'}, u'SWRD_GLOBAL-ACENM_0117': {'status': u'TBC', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall compute AC External power phase frequencies {AC_EP_PHASEA_FREQ}, {AC_EP_PHASEB_FREQ} or {AC_EP_PHASEC_FREQ} according to the following logic:\n{AC_EP_PHASEA_FREQ} is set:\nwith the inverse of the time value between each consecutive rising edges which occur on [DSI_ZERO_DETECTOR_PHASEA]\nto 2000Hz if the computed frequency is greater than 2000Hz\nto 10Hz if the computed frequency is lower than 10Hz\n{AC_EP_PHASEB_FREQ} is set:\nwith the inverse of the time value between each consecutive rising edges which occur on [DSI_ZERO_DETECTOR_PHASEB]\nto 2000Hz if the computed frequency is greater than 2000Hz\nto 10Hz if the computed frequency is lower than 10Hz\n{AC_EP_PHASEC_FREQ} is set:\nwith the inverse of the time value between each consecutive rising edges which occur on [DSI_ZERO_DETECTOR_PHASEC]\nto 2000Hz if the computed frequency is greater than 2000Hz\nto 10Hz if the computed frequency is lower than 10Hz', 'additional': u'N/A ', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'The frequency range is not specified in SSCS.', 'issue': u'1.3', 'refer': u'[SSCS_ACLog_1089]'}, u'SWRD_GLOBAL-ACENM_0114': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall manage overvoltage protection on PINE {AC_EP_PINE_OVERVOLTAGE_CALC_PROT} according to the following condition:\nACTIVE when [ASI_DC_ACEP_PINE] is higher than 42V\xb15V for more than 60ms\xb120ms.\nINACTIVE otherwise', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_437],[SSCS_ACLog_440],[SSCS_ACLog_1499]'}, u'SWRD_GLOBAL-ACENM_0115': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set {AC_EP_OVERLOAD_CALC_PROT} to:\nACTIVE when [ASI_ACEP_CURRENT_PHA], [ASI_ACEP_CURRENT_PHB] or [ASI_ACEP_CURRENT_PHC] currents is above a step current threshold during more than its confirmation time (each step\u2019s parameters are defined hereafter).\nINACTIVE otherwise.\nWith\nStep number\nStep current threshold  \nI/Inom\n(with Inom =170A)\nStep current threshold  (A)\nStep confirmation time (s)\n1\n1,18\xb10.05\n201A\xb18A\n480s\xb1120s\n2\n1,29\xb10.05\n219A\xb18A \n20s\xb15s\n3\n1,39\xb10.05\n236A\xb18A \n9,6s\xb12,4s\n4\n1,5\xb10.05\n255A\xb18A\n4,8s\xb11,2s\n5\n1,62\xb10.06\n275A\xb110A\n3,28s\xb10,82s\n6\n1,75\xb10.06\n298A\xb110A\n2,64s\xb10,66s\n7\n1,88\xb10.06\n320A\xb110A\n2,125s\xb10,375s\n8\n2,02\xb10.06\n343A\xb110A\n1,8s\xb10,2s\n9\n2,17\xb10.06\n369A\xb110A\n0,45s\xb10,05s\nTable 63 : Definition of AC External Power overload step curve', 'additional': u'The maximum opening time of the contactor (20ms) is included in the tolerance.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_441],[SSCS_ACLog_888],[SSCS_ACLog_1064],[SSCS_ACLog_437],[SSCS_ACLog_1499]'}, u'SWRD_GLOBAL-ACENM_0112': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall manage {AC_EP_UNDERVOLTAGE_CALC_PROT} according to the following condition:\nACTIVE when [ASI_ACEP_VOLTAGE_PHA], [ASI_ACEP_VOLTAGE_PHB] or [ASI_ACEP_VOLTAGE_PHC] are lower than 100V\xb110V for more than 5s\xb1200ms.\nINACTIVE otherwise', 'additional': u'The maximum opening time of the contactor (20ms) is included in the tolerance.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_437],[SSCS_ACLog_438],[SSCS_ACLog_1499]'}, u'SWRD_GLOBAL-ACENM_0113': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set {AC_EP_SW_OVERVOLTAGE_CALC_PROT} to:\nACTIVE when [ASI_ACEP_VOLTAGE_PHA], [ASI_ACEP_VOLTAGE_PHB] or [ASI_ACEP_VOLTAGE_PHC] voltages are above the step curve (+5%) defined hereafter in Table 62\nINACTIVE when [ASI_ACEP_VOLTAGE_PHA], [ASI_ACEP_VOLTAGE_PHB] and [ASI_ACEP_VOLTAGE_PHC] voltages are under the step curve (-5%) defined hereafter in Table 62\nStep\nVoltage  threshold\nTiming threshold\nStep 1\n170V\xb18V\n20ms\xb110ms\nStep 2\n150V\xb17V\n40ms\xb120ms\nStep 3\n130V\xb16V\n280ms\xb130ms\nTable 62 : Overvoltage steps for AC External Power', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_437],[SSCS_ACLog_439],[SSCS_ACLog_1499]'}, u'SWRD_GLOBAL-ACENM_0110': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set AC external power protection global status {AC_EP_PROT} to INACTIVE if all the following AC external power protection status are equal to INACTIVE:\n{AC_EP_UNDERVOLTAGE_PROT}\n{AC_EP_OVERVOLTAGE_PROT}\n{AC_EP_PINE_OVERVOLTAGE_PROT}\n{AC_EP_OVERLOAD_PROT}\n{AC_EP_UNBALANCED_PROT}\n{AC_EP_PHASE_ORDER_PROT}\n{AC_EP_UNDERFREQUENCY_PROT}\n{AC_EP_OVERFREQUENCY_PROT}\n{AC_EP_OPEN_PHASE_PROT}\nOtherwise {AC_EP_PROT} is set to ACTIVE', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.1', 'refer': u'[SSCS_ACLog_437]'}, u'SWRD_GLOBAL-ACENM_0111': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set the following AC external power protection status to INACTIVE: \n{AC_EP_UNDERVOLTAGE_PROT}\n{AC_EP_OVERVOLTAGE_PROT}\n{AC_EP_PINE_OVERVOLTAGE_PROT}\n{AC_EP_OVERLOAD_PROT}\n{AC_EP_UNBALANCED_PROT}\n{AC_EP_PHASE_ORDER_PROT}\n{AC_EP_UNDERFREQUENCY_PROT}\n{AC_EP_OVERFREQUENCY_PROT}\n{AC_EP_OPEN_PHASE_PROT}\nwhen at least one of the following conditions is true:\n {AC_EP_MODE} or {AC_GS_MODE} switches from ACTIVE to NOT_ACTIVE\n{SW_MODE} is equal to INIT and [STATIC_IBIT_COMMAND] is equal to ACTIVE\n{SW_MODE} is equal to INIT and {START_MODE} is equal to COLD and {WOW_STATUS} is equal to ON_GROUND\n{SW_MODE} is equal to INIT and board position in NVM [NVM_BOARD_CONFIG] has changed ', 'additional': u'At start-up these data are initialized first with values from NVM.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_447],[SSCS_ACLog_1262],[SSCS_ACLog_1142],[SSCS_ACLog_1119],[SSCS_ACLog_1443]'}, u'SWRD_GLOBAL-ACENM_0396': {'status': u'MATURE', 'body': u'ACENM CSCI shall set the CAN signal values in the third column with the value in the second column according to the board configuration {BOARD_CONFIG}:\n{BOARD_CONFIG}\nSignal Value\nCAN Signal Name\nAClog1 or ACLog2\n{ACLOG_SIV}\n[ACLOG_EDMU_SIV]\nAClog1\nACLOG1\n[MODULE_TYPE]\nAClog2\nACLOG2\n[MODULE_TYPE]\nAClog1 or ACLog2\nComputed SW checksum\n[SW_CRC32]\nAClog1 or ACLog2\n{HW_PN}\n[PART_NUMBER_CHARX] \nwith X=1 to 16\nAClog1 or ACLog2\n0\n[PART_NUMBER_CHARX] \nwith X=14 to 16\nAClog1 or ACLog2\n{HW_SN}\n[SERIAL_NUMBER_CHARX]\nwith X=1 to 16\nAClog1 or ACLog2\n{SW_PN}\n[SW_PART_NUMBER_CHARX]\nwith X=1 to 15\nAClog1 or ACLog2\n0\n[SW_PART_NUMBER_CHARX]\nwith X=16\nTable 112 : Correspondence table between internal signal and CAN signal', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-211]'}, u'SWRD_GLOBAL-ACENM_0326': {'status': u'MATURE', 'body': u'Each contactor command shall be stored in static area with its complement value.', 'additional': u'The complement value will be used for data integrity check in static area.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_1261]'}, u'SWRD_GLOBAL-ACENM_0019': {'status': u'MATURE', 'body': u'When {SW_MODE} is equal to OPERATIONAL, ACENM CSCI shall set {CRITICAL_SW_ERROR} to PRESENT if a critical software error occurs.\nOtherwise, {CRITICAL_SW_ERROR} is set to NOT_PRESENT.', 'additional': u'A critical software error occurs in case of an unexpected interruption, an exception (address error, trap error,\u2026), a CPU overload, ....  ', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Prevent SW from an unexpected behavior in case of a critical SW error', 'issue': u'1.4', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0336': {'status': u'MATURE', 'body': u'ACENM shall have NVM mapping organization according to the following table:\nRelative NVM Address from NVM failure start address\nSize (bytes)\n+ [0x0000-0x00FF]\n256\nHEADER\n+ [0x0100-0x903F]\n36672\nFAULTS\n36Kbytes\nAll data are on 8 bits.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_1224],[SSCS_ACLog_1373],[SSCS_ACLog_1372]'}, u'SWRD_GLOBAL-ACENM_0337': {'status': u'MATURE', 'body': u'ACENM shall have NVM faults mapping organization according to the following table:\nRelative NVM Address from FIFO FAULTS start address\nSize (bytes)\n+ [0x0000-0x00BF]\n192\nFAULT1\n+ [0x00C0-0x017F]\n192\nFAULT2\n+ [0x0180-0x8E7F]\n192*188\n\u2026\n+ [0x8E80-0x8F3F]\n192\nFAULT191', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.1', 'refer': u'[SSCS_ACLog_1224],[SSCS_ACLog_1373]'}, u'SWRD_GLOBAL-ACENM_0334': {'status': u'MATURE', 'body': u'All Contactor command shall be restored from static area once at start-up ({SW_MODE} is equal to INIT) and if {IBIT_COMMAND} is equal to ACTIVE.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_1229],[SSCS_ACLog_1230]'}, u'SWRD_GLOBAL-ACENM_0335': {'status': u'MATURE', 'body': u'ACENM CSCI shall restore all contactor command to apply (third column) from static area according to the following condition:\nCLOSE, when corresponding contactor command read in static area (second column) is equal to CLOSE and its complement value is valid.\nOPEN, in all others cases.\nBoard Configuration\nContactor command Status from static area\nContactor command Status to apply\nAClog1\n[STATIC_AEC_CTC_CMD]\n{AEC_CTC_CMD_TO_APPLY}\nAClog1\n[STATIC_GLC1_CTC_GCU_ACK]\n{GLC1_CTC_GCU_ACK_TO_APPLY}\nAClog1\n[STATIC_ALC_CTC_GCU_ACK]\n{ALC_CTC_GCU_ACK_TO_APPLY}\nAClog1\n[STATIC_ATC1_CTC_CMD]\n{ATC1_CTC_CMD_TO_APPLY}\nAClog1\n[STATIC_ATC3_CTC_CMD]\n{ATC3_CTC_CMD_TO_APPLY} \nAClog2\n[STATIC_GLC2_CTC_GCU_ACK]\n{GLC2_CTC_GCU_ACK_TO_APPLY}\nAClog2\n[STATIC_ATC2_CTC_CMD]\n{ATC2_CTC_CMD_TO_APPLY}\nAClog2\n[STATIC_ELC_CTC_CMD]\n{ELC_CTC_CMD_TO_APPLY}\nTable 71 : Protection Status Restoration', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_1229],[SSCS_ACLog_1230]'}, u'SWRD_GLOBAL-ACENM_0332': {'status': u'MATURE', 'body': u'ACENM CSCI shall restore all ACMP/Contactor command failure (first column) from NVM according to the following condition:\nFAILED, when corresponding ACMP/Contactor command failure read in NVM (first column) is equal to FAILED and its complement value is valid.\nNOT_FAILED, in all others cases.\nNVM ACMP/Contactor Command failure\nRestored ACMP/Contactor Command failure\n [NVM_XXX_FAILED_OPEN_FAILURE] \n{XXX_FAILED_OPEN_FAILURE}\n[NVM_XXX_FAILED_CLOSED_FAILURE]\n{XXX_FAILED_CLOSED_FAILURE}\n[NVM_ACMPX_FAILED_OPEN_FAILURE]\n{ACMPX_FAILED_OPEN_FAILURE}\n[NVM_ACMPX_FAILED_CLOSED_FAILURE]\n{ACMPX_FAILED_CLOSED_FAILURE}\nTable 90 : ACMP/Contactor command failure Restoration\nWith XXX = ATC1, ATC3, GLC1, ALC or AEC (for ACLog1) or ATC2, GLC2 or ELC (for ACLog2)\nWith ACMPX = ACMP3A or ACMP1B (for ACLog2) or ACMP3B (for ACLog1)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1112]'}, u'SWRD_GLOBAL-ACENM_0333': {'status': u'MATURE', 'body': u'ACENM CSCI shall restore all protections status (third column) from NVM according to the following condition:\nACTIVE, when corresponding protection status read in NVM (second column) is equal to ACTIVE and its complement value is valid and {NVM_FAILURE} is not equal to FAILED.\nINACTIVE, in all others cases.\nBoard Configuration\nNVM protection Status\nProtection Status\nAClog2\n[NVM_AC_EP_PINE_OVERVOLTAGE_PROT]\n{AC_EP_PINE_OVERVOLTAGE_PROT}\nAClog2\n[NVM_AC_EP_OVERLOAD_PROT]\n{AC_EP_OVERLOAD_PROT}\nAClog2\n[NVM_AC_EP_UNBALANCED_PROT]\n{AC_EP_UNBALANCED_PROT}\nAClog2\n[NVM_AC_EP_PHASE_ORDER_PROT]\n{AC_EP_PHASE_ORDER_PROT}\nAClog2\n[NVM_AC_EP_UNDERFREQUENCY_PROT]\n{AC_EP_UNDERFREQUENCY_PROT}\nAClog2\n[NVM_AC_EP_OVERFREQUENCY_PROT]\n{AC_EP_OVERFREQUENCY_PROT}\nAClog2\n[NVM_AC_EP_UNDERVOLTAGE_PROT]\n{AC_EP_UNDERVOLTAGE_PROT}\nAClog2\n[NVM_AC_EP_OVERVOLTAGE_PROT]\n{AC_EP_OVERVOLTAGE_PROT}\nAClog2\n[NVM_AC_EP_OPEN_PHASE_PROT]\n{AC_EP_OPEN_PHASE_PROT}\nAClog1 and ACLog2\n[NVM_DIFFERENTIAL_PROT]\n{DIFFERENTIAL_PROT}\nAClog1\n[NVM_ANTI_PARALLELING_ATC1_PROT]\n{ANTI_PARALLELING_ATC1_PROT}\nAClog2\n[NVM_ANTI_PARALLELING_ATC2_PROT]\n{ANTI_PARALLELING_ATC2_PROT}\nAClog1\n[NVM_ANTI_PARALLELING_ATC3_PROT]\n{ANTI_PARALLELING_ATC3_PROT}\nAClog2\n[NVM_ANTI_PARALLELING_ELC_PROT]\n{ANTI_PARALLELING_ELC_PROT}\nACLog1\n[NVM_ACMP3B_I2T_PROT]\n{ACMP3B_I2T_PROT}\nACLog1\n[NVM_ACMP3B_GFI_PROT]\n{ACMP3B_GFI_PROT}\nACLog1\n[NVM_ACMP3B_UNBALANCED_PROT]\n{ ACMP3B_UNBALANCED_PROT}\nAClog2\n[NVM_ACMP3A_I2T_PROT]\n{ACMP3A_I2T_PROT}\nAClog2\n[NVM_ACMP3A_GFI_PROT]\n{ACMP3A_GFI_PROT}\nAClog2\n[NVM_ACMP3A_UNBALANCED_PROT]\n{ ACMP3A_UNBALANCED_PROT}\nAClog2\n[NVM_ACMP1B_I2T_PROT]\n{ACMP1B_I2T_PROT}\nAClog2\n[NVM_ACMP1B_GFI_PROT]\n{ACMP1B_GFI_PROT}\nAClog2\n[NVM_ACMP1B_UNBALANCED_PROT]\n{ ACMP1B_UNBALANCED_PROT}\nACLog1\n[NVM_ACMP_ACBUS1_OVERVOLTAGE_PROT]\n{ACMP_ACBUS1_OVERVOLTAGE_PROT}\nACLog2\n[NVM_ACMP_ACBUS2_OVERVOLTAGE_PROT]\n{ACMP_ACBUS2_OVERVOLTAGE_PROT}\nTable 91 : Protection Status Restoration', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1443],[SSCS_ACLog_1288]'}, u'SWRD_GLOBAL-ACENM_0330': {'status': u'MATURE', 'body': u'ACENM CSCI shall restore HW part number, pin programming, RCCB states (second column) from NVM (first column).\nNVM data\nRestored data\n[NVM_HW_PN]\n{HW_PN}\n[NVM_HW_SN]\n{HW_SN}\n[NVM_BOARD_CONFIG]\n{BOARD_CONFIG}\n[NVM_ACMPX_TRIPPED_STATE]\n{ACMPX_TRIPPED_STATE}\n[NVM_ACMPX_OPEN_LOCKED_STATE]\n{ACMPX_OPEN_LOCKED_STATE}\n[NVM_ACMPX_TRIP_CAUSE]\n{ACMPX_TRIP_CAUSE}\nTable 89 : HW/SW part number, pin programming, RCCB states Restoration\nWith ACMPX = ACMP3A or ACMP1B (for ACLog2) or ACMP3B (for ACLog1)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1119],[SSCS_ACLog_1275],[SSCS_ACLog_1276]'}, u'SWRD_GLOBAL-ACENM_0331': {'status': u'MATURE', 'body': u'ACENM CSCI shall restore IBIT command {IBIT_COMMAND} from static area [STATIC_IBIT_COMMAND] when {SW_MODE} is equal to INIT.', 'additional': u'N/A', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'IBIT command is saved in static area in order to take into account the request for the next SW start-up.', 'issue': u'1.4', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0237': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall:\n inhibit and reset all the AC EP protection calculation when AC external power voltage presence {AC_EP_PRESENCE} is equal to NOT_CONNECTED.\nOtherwise authorized all the AC EP protection calculation', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1359]'}, u'SWRD_GLOBAL-ACENM_0236': {'status': u'MATURE', 'body': u'Single Event Upset and Multiple Bit Upset shall not affect the operation of control and protection function', 'additional': u'SW is protected against SEU/MBU to avoid unexpected behavior.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1300],[SSCS_ACLog_1301],[SSCS_ACLog_1302]'}, u'SWRD_GLOBAL-ACENM_0235': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set AC Bus 2 fail status [AC_BUS2_FAIL] according to the following logic:\nACTIVATED when {AC2_BUSBAR_AVAIL} is equal to NOT_AVAILABLE AND({RIGHT_GEN_AVAIL}, {LEFT_GEN_AVAIL} or {APU_AVAIL} are equal to AVAILABLE or {AC_EP_PR} is equal to READY)\nNOT_ACTIVATED otherwise', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_1138],[SSCS_ACLog_1345],[CAN-IRD-426],[CAN-IRD-534]'}, u'SWRD_GLOBAL-ACENM_0234': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set AC Bus 1 fail status [AC_BUS1_FAIL] according to the following logic:\nACTIVATED when {AC1_BUSBAR_AVAIL} is equal to NOT_AVAILABLE AND({RIGHT_GEN_AVAIL}, {LEFT_GEN_AVAIL} or {APU_AVAIL} are equal to AVAILABLE or {AC_EP_PR} is equal to READY)\nNOT_ACTIVATED otherwise', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_1137],[SSCS_ACLog_1336],[CAN-IRD-426],[CAN-IRD-427]'}, u'SWRD_GLOBAL-ACENM_0233': {'status': u'MATURE', 'body': u'ACENM CSCI shall set ACMP open locked states {ACMPX_OPEN_LOCKED_STATE} according to the following logic:\nACMP commands from EDMU\nACMP states\nACMP open locked states\n{EDMU_ACMPX_TRIPPED_CMD}\n{EDMU_ACMPX_OPEN_LOCKED_CMD}\n{ACMPX_RCCB_STATUS}\n{ACMPX_PROT}\n{ACMPX_OPEN_LOCKED_STATE}\nTRIP_RESET\nOPEN LOCKED\nOPEN\nINACTIVE\nOPEN_LOCKED\nNO_CHANGE\nOPEN_LOCKED\nOPEN\nINACTIVE\nOPEN_LOCKED\nOther cases\nNOT_OPEN_LOCKED\nTable 56 : ACMP RCCB states management\nWith ACMPX = ACMP3A or ACMPX = ACMP1B (for ACLog2) or\nACMPX = ACMP3B (for ACLog1)', 'additional': u'Other combinations (data are invalid) are managed in CAN bus management. If a data is invalid on one CAN bus, the data used is taken on the other bus. If a data is invalid on the two CAN busses, a default value is used.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_1121],[SSCS_ACLog_721],[SSCS_ACLog_1123],[SSCS_ACLog_1278]'}, u'SWRD_GLOBAL-ACENM_0232': {'status': u'MATURE', 'body': u'ACENM CSCI shall set EDMU computed RCCB commands {EDMU_ACMPX_COMPUTED_RCCB_CMD} according to the following logic:\nRCCB commands from EDMU\n{EDMU_ACMPX_TRIPPED_CMD}\n{EDMU_ACMPX_OPEN_LOCKED_CMD}\n{EDMU_ACMPX_CLOSED_CMD}\n{EDMU_ACMPX_COMPUTED_RCCB_CMD}\nTRIP_SET\nX\nX\nOPEN\nTRIP_RESET\nOPEN LOCKED\nX\nOPEN\nTRIP_RESET\nNOT OPEN LOCKED\nOPEN\nOPEN\nTRIP_RESET\nNOT OPEN LOCKED\nCLOSED\nCLOSE\nNO_CHANGE\nOPEN_LOCKED\nX\nOPEN\nNO_CHANGE\nNOT_OPEN_LOCKED\nOPEN\nOPEN\nNO_CHANGE\nNOT_OPEN_LOCKED\nCLOSED\nCLOSE\nOther cases\nINVALID\nX: Don\u2019t care\nTable 57 : EDMU computed RCCB commands management\nWith ACMPX = ACMP3A, ACMP1B or ACMP3B', 'additional': u'Other cases (data are invalid) are managed in CAN bus management. If a data is invalid on one CAN bus, the data used is taken on the other bus. If a data is invalid on the two CAN busses, a default value is used.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_1121],[SSCS_ACLog_721]'}, u'SWRD_GLOBAL-ACENM_0338': {'status': u'MATURE', 'body': u'ACENM shall have fault mapping organization according to the following table:\nRelative NVM Address from FAULTx start address\nSize (bytes)\n+ 0x0000\n2\n[NVM_FAULT_CODE]\n+ 0x0002\n2\n[NVM_FAULT_OCCURRENCE]\n+ 0x0004\n4\n[NVM_DATE_FIRST_OCCURRENCE]\n+ 0x0008\n4\n[NVM_TIME_FIRST_OCCURRENCE]\n+ 0x000C\n4\n[NVM_DATE_LAST_OCCURRENCE]\n+ 0x0010\n4\n[NVM_TIME_LAST_OCCURRENCE]\n+ 0x0014\n4\n[NVM_FLIGHT_LEG]\n+ 0x0018\n4\n[NVM_AC_TAIL]\n+ 0x001C\n2\n[NVM_FAULT_INDEX_FOR_THIS_LEG]\n+ 0x001E\n2\n[NVM_FLIGHT_PHASE]\n+ 0x0020\n2\n[NVM_FAULT_HEADER_CHECKSUM]\n+ 0x0022\n2\n[NVM_ED_CHECKSUM]\n+ 0x0024\n28\nSpare\n+ [0x0040-0x00BF]\n128\n[NVM_ED]', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1224],[SSCS_ACLog_1079],[SSCS_ACLog_1379]'}, u'SWRD_GLOBAL-ACENM_0339': {'status': u'MATURE', 'body': u'ACENM CSCI shall set ACMPX shed state [ACMPX_SHED_STATE] according to the following logic: \nSHED when {ACMP_NETWORK_RECONF} is not equal to FINISHED\nNOT_SHED otherwise\nWith ACMPX = ACMP3A or ACMP1B (for ACLog2) or ACMP3B (for ACLog1)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.1', 'refer': u'[SSCS_ACLog_1394]'}, u'SWRD_GLOBAL-ACENM_0435': {'status': u'MATURE', 'body': u'When {SW_MODE} is equal to INIT, ACENM CSCI shall re-execute all the tests included in IBIT which have been declared as FAILED during the first execution of these tests.', 'additional': u'The IBIT tests results of the second execution override the IBIT results of the first execution.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.1', 'refer': u'[SSCS_ACLog_955],[SSCS_ACLog_1178]'}, u'SWRD_GLOBAL-ACENM_0434': {'status': u'MATURE', 'body': u'When {SW_MODE} is equal to OPERATIONAL and when {IBIT_COMMAND} is equal to ACTIVE, ACENM CSCI shall perform the following sequence:\n1/ Store in static area all current contactor commands and {IBIT_COMMAND} state and stop all access to NVM (refer to \xa73.2.6.2.3.1.1).\n2/ Do not refresh the watchdog command. (Set [DSO_WDG_REFRESH_CMD] to INACTIVE during more than watchdog timeout).\n3/ Verify that a CPU reset has occurred\nIf YES the second IBIT phase is performed (refer to \xa73.2.6.2.3.3).\nIf NO:\nset the {WATCHDOG_TEST_RESULT} to FAILED\nset the {IBIT_TEST_RESULT} to FAILED\nset the {IBIT_COMMAND} to INACTIVE', 'additional': u'N/A', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Not defined in SSCS', 'issue': u'1.4', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0341': {'status': u'MATURE', 'body': u'When software mode {SW_MODE} is equal to OPERATIONAL, ACENM CSCI shall set the NVM last flight LEG [NVM_LAST_FLIGHT_LEG] with the EDMU flight leg {EDMU_FLIGHT_LEG} value when [NVM_LAST_FLIGHT_LEG] is different from EDMU flight leg {EDMU_FLIGHT_LEG}.', 'additional': u'Write NVM current LEG even If no failure is detected on this current LEG.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_1378]'}, u'SWRD_GLOBAL-ACENM_0436': {'status': u'MATURE', 'body': u'When software mode {SW_MODE} is equal to INIT, ACENM shall set all DSO\xa0to the following value while the {SW_MODE} remains to INIT:\nDSO name\nValue\n[DSO_AC_BUS_AVAIL]\nINACTIVE\n[DSO_AC_BUS_OPP_AVAIL]\nINACTIVE\n[DSO_AC_CB_CY] with Y=1 to 5\nINACTIVE\n[DSO_AC_CB_TEST]\nINACTIVE\n[DSO_ACLOG_VALID]\nINACTIVE\n[DSO_PR_AC_EP]\nINACTIVE\n[DSO_NPR_AC_EP]\nINACTIVE\n[DSO_AC_EP_PINF]\nINACTIVE\n[DSO_ACEP_AVAIL]\nINACTIVE\n[DSO_ACEP_ON]\nINACTIVE\n[DSO_ACEP_PB_SUPPLY]\nINACTIVE\n[DSO_BUS_ACKN_GEN]\nINACTIVE\n[DSO_BUS_NACKN_GEN]\nINACTIVE\n[DSO_BUS_ACKN_APU]\nINACTIVE\n[DSO_BUS_NACKN_APU]\nINACTIVE\n[DSO_CDE_AC_CTC1]\nOPEN\n[DSO_CDE_AC_CTC2]\nOPEN\n[DSO_CDE_AC_CTC3]\nOPEN\n[DSO_CDE_RCCB1]\nOPEN\n[DSO_CDE_RCCB2]\nOPEN\n[DSO_ELC_OPEN_REQ]\nINACTIVE\n[DSO_ELC_CMD]\nINACTIVE\n[HEALTH_LED]\nRED\n[DSO_GS_MODE]\nINACTIVE\n[DSO_GS_ON]\nINACTIVE\n[DSO_NBPT]\nINACTIVE\n[DSO_NOL_AC_EP]\nINACTIVE\n[DSO_OL_AC_EP]\nINACTIVE\n[DSO_XXX_SPARE_XX]\nINACTIVE\nTable 4 : DSO values during INIT mode', 'additional': u'Command DSO for RCCB/contactor will be override if a IBIT is requested. ', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_898],[SSCS_ACLog_663],[SSCS_ACLog_1084],[SSCS_ACLog_1174]'}, u'SWRD_GLOBAL-ACENM_0347': {'status': u'DELETED', 'body': u'DELETED', 'additional': 'EMPTY', 'derived': 'EMPTY', 'terminal': 'EMPTY', 'safety': 'EMPTY', 'rationale': u'Merged in requirement SWRD_GLOBAL-ACENM_0237', 'issue': u'1.4', 'refer': 'EMPTY'}, u'SWRD_GLOBAL-ACENM_0430': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set the following AC external power protection status (second column) according to the following logic:\nACTIVE if the corresponding AC external power calculated protection status (first column) is equal to ACTIVE\nOtherwise AC external power protection statuses (second column) keep their previous values.\nAC EP Calculated Protection Statuses\nAC EP Global Protection Statuses\n{AC_EP_UNDERVOLTAGE_CALC_PROT}\n{AC_EP_UNDERVOLTAGE_PROT}\n{AC_EP_OVERVOLTAGE_CALC_PROT}\n{AC_EP_OVERVOLTAGE_PROT}\n{AC_EP_PINE_OVERVOLTAGE_CALC_PROT}\n{AC_EP_PINE_OVERVOLTAGE_PROT}\n{AC_EP_OVERLOAD_CALC_PROT}\n{AC_EP_OVERLOAD_PROT}\n{AC_EP_UNBALANCED_CALC_PROT}\n{AC_EP_UNBALANCED_PROT}\n{AC_EP_PHASE_ORDER_CALC_PROT}\n{AC_EP_PHASE_ORDER_PROT}\n{AC_EP_UNDERFREQUENCY_CALC_PROT}\n{AC_EP_UNDERFREQUENCY_PROT}\n{AC_EP_OVERFREQUENCY_CALC_PROT}\n{AC_EP_OVERFREQUENCY_PROT}\n{AC_EP_OPEN_PHASE_CALC_PROT}\n{AC_EP_OPEN_PHASE_PROT}\nTable 61 : AC EP Global Protection Statuses', 'additional': u'NO', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Copy of the AC EP calculated protection statuses in the associated AC EP global protection statuses.', 'issue': u'1.1', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0433': {'status': u'MATURE', 'body': u'ACENM CSCI shall set CTCX anti-paralleling protection status {ANTI_PARALLELING_CTCX_PROT} according to the following logic:\nACTIVE if the CTCX anti-paralleling calculated protection status {ANTI_PARALLELING_CTCX_CALC_PROT} is equal to ACTIVE\nOtherwise {ANTI_PARALLELING_CTCX_PROT} keep its previous value.\nWith CTCX = ATC1 or ATC3 (for ACLog1) and CTCX = ATC2 or ELC (for ACLog2).', 'additional': u'NO', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Copy of the anti-paralleling calculated protection status in the associated anti-paralleling global protections status.', 'issue': u'1.1', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0432': {'status': u'MATURE', 'body': u'ACENM CSCI shall set differential protection status {DIFFERENTIAL_PROT} according to the following logic:\nACTIVE if the differential calculated protection status {DIFFERENTIAL_CALC_PROT} is equal to ACTIVE\nOtherwise {DIFFERENTIAL_PROT} keep its previous value.', 'additional': u'NO', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Copy of the differential calculated protection status in the associated differential global protections status.', 'issue': u'1.1', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0246': {'status': u'MATURE', 'body': u'ACENM CSCI shall set the DSO AC bus availability [DSO_AC_BUS_AVAIL] to:\nACTIVE when {ACX_BUS_AVAIL} is equal to AVAILABLE\nINACTIVE otherwise\nWith ACX = AC1 (for ACLog1) or ACX = AC2 (for ACLog2)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_1127]'}, u'SWRD_GLOBAL-ACENM_0349': {'status': u'MATURE', 'body': u'If {SW_MODE} is equal to INIT, ACENM CSCI shall set CAN data X bus {CAN_DATAX_BUS} for each CAN data X without validity to BUS_1.\nWith DATAX =\nIBIT_REQUEST\nNVM_DL_REQUEST', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_692]'}, u'SWRD_GLOBAL-ACENM_0348': {'status': u'MATURE', 'body': u'If {SW_MODE} is equal to OPERATIONAL, ACENM CSCI shall only use the CAN data X received on {CAN_DATAX_BUS} and ignore the data X received on the other bus.\nWith DATAX =\nFLIGHT_LEG\nAC_TAIL\nFLIGHT_PHASE\nXFR\nDATE_TIME\nACMP3B_CMD\nACMP1B_CMD\nACMP3A_CMD', 'additional': u'CAN Data with validities are only extracted from one and only one CAN bus.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_722],[SSCS_ACLog_725],[SSCS_ACLog_728],[SSCS_ACLog_729],[SSCS_ACLog_730],[SSCS_ACLog_731],[SSCS_ACLog_693],[SSCS_ACLog_694],[CAN-IRD-857]'}, u'SWRD_GLOBAL-ACENM_0439': {'status': u'MATURE', 'body': u'When software mode {SW_MODE} is equal to INIT, ACENM CSCI shall perform this sequence:\n1/ Restore the first fault index of the last flight {FIRST_FAULT_INDEX} with first fault index of the last flight leg stored in NVM [NVM_LAST_FLIGHT_LEG_FIRST_FAULT_INDEX]\n2/ Restore the current LEG with fault {CURRENT_LEG} with last flight leg stored in NVM [NVM_LAST_FLIGHT_LEG]\n3/ If the fault counter of the last flight leg from NVM [NVM_LAST_FLIGHT_LEG_FAULT_COUNTER] is equal to 0 then:\nSet faults snapshot {FAULTS_SNAPSHOT} to NO_FAULT and set number of fault on current leg {CURRENT_LEG_NB_FAULT} to 0\nOtherwise, set number of fault on current leg {CURRENT_LEG_NB_FAULT} to [NVM_LAST_FLIGHT_LEG_FAULT_COUNTER] and fill faults snapshot {FAULTS_SNAPSHOT} with faults stored in NVM from index [NVM_LAST_FLIGHT_LEG_FIRST_FAULT_INDEX] to [NVM_LAST_FLIGHT_LEG_FIRST_FAULT_INDEX]+ [NVM_LAST_FLIGHT_LEG_FAULT_COUNTER] ', 'additional': u'Roll-over of fault index will be managed at design level (maximum 191 faults can be stored in NVM).', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Manage the restoration of the faults and the flight leg at power-up.', 'issue': u'1.4', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0438': {'status': u'MATURE', 'body': u'When a fault occurs, ACENM CSCI shall perform this logic: \nIf a fault with the same fault code [NVM_FAULT_CODE] is already present in {FAULTS_SNAPSHOT} and if its occurrence counter [NVM_FAULT_OCCURRENCE] is lower or equal to 255:\nUpdate the fault already present in NVM and in {FAULTS_SNAPSHOT}\nOtherwise If {CURRENT_LEG_NB_FAULT} is lower or equal to 31\nAdd the new fault in NVM and in {FAULTS_SNAPSHOT}\nOtherwise\nDo not memorize the new fault', 'additional': u'When the maximum number of different faults for one flight leg is reached, the new faults are not registered. When the maximum occurrence of a given fault for one flight leg is reached, this fault is not updated when it occurs again. A fault is updated only when its state switch from NOT_FAILED to FAILED.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1382],[SSCS_ACLog_1395]'}, u'SWRD_GLOBAL-ACENM_0247': {'status': u'MATURE', 'body': u'ACENM CSCI shall set the DSO AC opposite bus availability [DSO_AC_BUS_OPP_AVAIL] to:\nACTIVE when {ACX_OPP_BUS_AVAIL} is equal to AVAILABLE\nINACTIVE otherwise\nWith ACX = AC1 (for ACLog1) or ACX = AC2 (for ACLog2)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_1128]'}, u'SWRD_GLOBAL-ACENM_0168': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set ALC contactor command {ALC_CTC_GCU_ACK_TO_APPLY} according to the following logic (close conditions are evaluated first):\nFigure 23 : ALC contactor equation (close command)\nOtherwise {ALC_CTC_GCU_ACK_TO_APPLY} is set to OPEN.', 'additional': u'Closed state corresponds to a GCU \u201cacknowledged\u201d and Open state corresponds to a GCU \u201cnot acknowledged\u201d', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_557],[SSCS_ACLog_624],[SSCS_ACLog_629],[SSCS_ACLog_1220],[SSCS_ACLog_1221],[SSCS_ACLog_1462]'}, u'SWRD_GLOBAL-ACENM_0378': {'status': u'MATURE', 'body': u'ACENM CSCI shall set EDMU NVM download answer [ACLOGX_NVM_DOWNLD_ACCEPT] and [ACLOGX_NVM_DL_ANSWER] according to the following logic:\nACCEPTED if IBIT command status {NVM_DATA_LOAD_COMMAND} is equal to ACTIVE.\nNOT_ACCEPTED otherwise.\nWith X = 1 for ACLog1 and X = 2 for ACLog2', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[CAN-IRD-636]'}, u'SWRD_GLOBAL-ACENM_0379': {'status': u'DELETED', 'body': u'DELETED', 'additional': 'EMPTY', 'derived': 'EMPTY', 'terminal': 'EMPTY', 'safety': 'EMPTY', 'rationale': u'Unlatch failure request is no more used', 'issue': u'1.4', 'refer': 'EMPTY'}, u'SWRD_GLOBAL-ACENM_0350': {'status': u'MATURE', 'body': u'If software mode {SW_MODE} is equal to OPERATIONAL, ACENM CSCI shall set CAN data X bus {CAN_DATAX_BUS} for each CAN data X according to the following condition:\nConditions\nSet CAN data bus \n{CAN_DATAX_BUS} to\nCAN x interface version status {CAN_X_INTERFACE_VERSION_FAILURE}\nCAN x message status (message including  the data X)\n{CAN_X_MSGX_FAILURE}\nCAN x data request status {CAN_X_DATAX_REQUEST_STS}\nX = 1\nX = 2\nX = 1\nX = 2\nX = 1\nX = 2\nNOT_FAILED\nNOT_FAILED\nNOT_FAILED\nNOT_FAILED\nREQUESTED\nREQUESTED\nUnchanged\nNOT_FAILED\nNOT_FAILED\nNOT_FAILED\nNOT_FAILED\nNOT_REQUESTED\nNOT_REQUESTED\nUnchanged\nNOT_FAILED\nNOT_FAILED\nNOT_FAILED\nNOT_FAILED\nREQUESTED\nNOT_REQUESTED\nBUS_1\nNOT_FAILED\nNOT_FAILED\nNOT_FAILED\nNOT_FAILED\nNOT_REQUESTED\nREQUESTED\nBUS_2\nNOT_FAILED\nFAILED\nNOT_FAILED\nX\nX\nX\nBUS_1\nNOT_FAILED\nX\nNOT_FAILED\nFAILED\nX\nX\nBUS_1\nFAILED\nNOT_FAILED\nX\nNOT_FAILED\nX\nX\nBUS_2\nX\nNOT_FAILED\nFAILED\nNOT_FAILED\nX\nX\nBUS_2\nOther cases\nUnchanged\nX: Don\u2019t care\nTable 98 : CAN bus associated with each data without validity\nWith CAN_X =\nWith MSG_X =\nWith DATAX =\nCAN_1\nBITE\nIBIT_REQUEST\nCAN_2\nNVM_DL\nNVM_DL_REQUEST ', 'additional': u'A communication failure can be a loss of the bus, a loss of one or several messages in reception, an issue to send message(s) on CAN bus or a protocol error.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1404],[SSCS_ACLog_1405],[SSCS_ACLog_693],[SSCS_ACLog_694],[CAN-IRD-857]'}, u'SWRD_GLOBAL-ACENM_0351': {'status': u'MATURE', 'body': u'If {SW_MODE} is equal to OPERATIONAL, ACENM CSCI shall only use the CAN data X received on {CAN_DATAX_BUS} and ignore the data X received on the other bus.\nWith DATAX =\nIBIT_REQUEST\nNVM_DL_REQUEST', 'additional': u'CAN Data without validities are extracted from the first CAN bus which provide the data.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1404],[SSCS_ACLog_1405],[SSCS_ACLog_693],[SSCS_ACLog_694],[CAN-IRD-857]'}, u'SWRD_GLOBAL-ACENM_0376': {'status': u'MATURE', 'body': u'ACENM CSCI shall set EDMU IBIT acceptance state [ACLOGX_IBIT_ACCEPT] according to the following logic:\nACCEPTED if IBIT command status {IBIT_COMMAND} is equal to ACTIVE.\nNOT_ ACCEPTED otherwise.\nWith X = 1 for ACLog1 and X = 2 for ACLog2', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-215]'}, u'SWRD_GLOBAL-ACENM_0377': {'status': u'MATURE', 'body': u'ACENM CSCI shall set NVM data load command {NVM_DATA_LOAD_COMMAND} according to the following logic:\nACTIVE if EDMU ACLog data load request [ACLOG_NVM_DL_REQUEST] is equal to REQUESTED and {SW_MODE} is equal to OPERATIONAL and {WOW_STATUS} is equal to ON_GROUND and {IBIT_COMMAND} is equal to INACTIVE and {NVM_BITE_ERASE_COMMAND} is INACTIVE.\nINACTIVE otherwise', 'additional': u'If NVM download request, NVM erase or IBIT request are sent at the same time, only the first command received will be taken into account', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A ', 'issue': u'1.5', 'refer': u'[CAN-IRD-643],[CAN-IRD-641],[SSCS_ACLog_1531]'}, u'SWRD_GLOBAL-ACENM_0188': {'status': u'MATURE', 'body': u'If a start/restart of ACMP network configuration occurs, ACENM CSCI shall apply in the following order:\n1\u201cOPENING SEQUENCE\u201d if at least one ACMPX command to apply {ACMPX_RCCB_CMD_TO_APPLY} is equal to OPEN. \n2\u201cAC NETWORK CLOSURE SEQUENCE\u201d if network configuration index {NETWORK_CONFIGURATION_INDEX} has changed \n3\u201cEDMU CLOSURE SEQUENCE\u201d if at least one ACMPX command to apply {ACMPX_RCCB_CMD_TO_APPLY} is equal to CLOSE.\nWith ACMPX = ACMP3A, ACMP1B (for ACLog2) or ACMP3B (for ACLog1)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_1056],[SSCS_ACLog_1058],[SSCS_ACLog_1098]'}, u'SWRD_GLOBAL-ACENM_0187': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall start/restart an ACMP network configuration when one at least of the following conditions is true:\nACMP3A command to apply {ACMP3A_RCCB_CMD_TO_APPLY} has changed\nACMP1B command to apply {ACMP1B_RCCB_CMD_TO_APPLY} has changed\nAC Network configuration state{AC_NETWORK_RECONF} is equal to START', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_1056],[SSCS_ACLog_1058],[SSCS_ACLog_1206]'}, u'SWRD_GLOBAL-ACENM_0152': {'status': u'MATURE', 'body': u'ACENM CSCI shall set TCB matrix test 2 step 2 status {TCB_TEST2_STEP2_STATUS} to:\nFAILED if  at least one [DSI_AC_CB_LX] is equal to ACTIVE when [DSO_AC_CB_TEST] and all [DSO_AC_CB_CY] are set to INACTIVE\nOK otherwise \nWith X = 1, 2, 3, 4 or 5\nWith Y = 1, 2, 3, 4 or 5', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_683],[SSCS_ACLog_1040],[SSCS_ACLog_1038]'}, u'SWRD_GLOBAL-ACENM_0153': {'status': u'MATURE', 'body': u'ACENM CSCI shall set TCB matrix failure status {TCB_MATRIX_PRECOMPUTED_FAILURE} to:\nNOT_FAILED if  {TCB_TEST1_STATUS}, {TCB_TEST2_STEP1_STATUS} and {TCB_TEST2_STEP2_STATUS} are equal to OK\nFAILED otherwise ', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1040],[SSCS_ACLog_1038]'}, u'SWRD_GLOBAL-ACENM_0099': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set ACMP3B closed state status {ACMP3B_CLOSED_STATE_STATUS} to:\n{ACMP3B_RCCB_STATUS} when {ACMP3B_RCCB_STS_VALIDITY} is equal to VALID\nINVALID otherwise', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_717],[SSCS_ACLog_718]'}, u'SWRD_GLOBAL-ACENM_0098': {'status': u'MATURE', 'body': u'ACENM CSCI shall set ACMPX failed open failure {ACMPX_FAILED_OPEN_FAILURE} according to the following logic:\nLatched to FAILED when {ACMPX_RCCB_STATUS} is equal to OPEN and{ACMPX_RCCB_FAILURE} is equal to COMMAND during more than 2s\xb1500ms AND {ACMPX_FAILED_CLOSED_FAILURE} is not equal to FAILED\nWith ACMPX = ACMP3B (for ACLog1) and ACMP1B or ACMP3A (for ACLog2),', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_717],[SSCS_ACLog_1072],[SSCS_ACLog_939],[SSCS_ACLog_1370]'}, u'SWRD_GLOBAL-ACENM_0156': {'status': u'MATURE', 'body': u'ACENM CSCI shall set right generator overload pre-computed failure {R_VFG_OVL_NOVL_PRECOMPUTED_FAILURE} according to the following logic:\n[DSI_OL_RGEN]\n[DSI_NOL_RGEN]\n{R_VFG_OVL_NOVL_PRECOMPUTED_FAILURE}\nOVERLOAD\nNOT_OVERLOAD\nNOT_FAILED\nOVERLOAD\nOVERLOAD\nFAILED\nNOT_OVERLOAD\nNOT_OVERLOAD\nFAILED\nNOT_OVERLOAD\nOVERLOAD\nNOT_FAILED\nTable 75 : Right generator overload failure management', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_575],[SSCS_ACLog_927]'}, u'SWRD_GLOBAL-ACENM_0157': {'status': u'MATURE', 'body': u'ACENM CSCI shall set left generator overload pre-computed failure {L_VFG_OVL_NOVL_PRECOMPUTED_FAILURE} according to the following logic:\n[DSI_OL_LGEN]\n[DSI_NOL_LGEN]\n{L_VFG_OVL_NOVL_PRECOMPUTED_FAILURE}\nOVERLOAD\nNOT_OVERLOAD\nNOT_FAILED\nOVERLOAD\nOVERLOAD\nFAILED\nNOT_OVERLOAD\nNOT_OVERLOAD\nFAILED\nNOT_OVERLOAD\nOVERLOAD\nNOT_FAILED\nTable 76 : Left generator overload failure management', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_575],[SSCS_ACLog_927]'}, u'SWRD_GLOBAL-ACENM_0154': {'status': u'DELETED', 'body': u'DELETED', 'additional': 'EMPTY', 'derived': 'EMPTY', 'terminal': 'EMPTY', 'safety': 'EMPTY', 'rationale': u'PBIT execution time has been removed in SSCS.', 'issue': u'1.5', 'refer': 'EMPTY'}, u'SWRD_GLOBAL-ACENM_0155': {'status': u'MATURE', 'body': u'ACENM CSCI shall set CTCX anti-paralleling failure {ANTI_PARALLELING_CTCX_FAILURE} according to the following logic:\n{CTCX_CTC_CMD}\n[DSI_CTCX_AP1_PRESENCE]\n[DSI_CTCX_AP2_PRESENCE]\n[DSI_ANTIPARALLELING_DETECTION_CTCX]\n{ANTI_PARALLELING_CTCX_FAILURE}\nOPEN\nNOT_PRESENT\nNOT_PRESENT\nOPEN\nNOT_FAILED\nOPEN\nNOT_PRESENT\nNOT_PRESENT\nCLOSE\nFAILED\nOPEN\nNOT_PRESENT\nPRESENT\nOPEN\nNOT_FAILED\nOPEN\nNOT_PRESENT\nPRESENT\nCLOSE\nFAILED\nOPEN\nPRESENT\nNOT_PRESENT\nOPEN\nNOT_FAILED\nOPEN\nPRESENT\nNOT_PRESENT\nCLOSE\nFAILED\nOPEN\nPRESENT\nPRESENT\nOPEN\nNOT_FAILED\nOPEN\nPRESENT\nPRESENT\nCLOSE\nFAILED\nCLOSE\nNOT_PRESENT\nNOT_PRESENT\nOPEN\nFAILED\nCLOSE\nNOT_PRESENT\nNOT_PRESENT\nCLOSE\nNOT_FAILED\nCLOSE\nNOT_PRESENT\nPRESENT\nOPEN\nFAILED\nCLOSE\nNOT_PRESENT\nPRESENT\nCLOSE\nNOT_FAILED\nCLOSE\nPRESENT\nNOT_PRESENT\nOPEN\nFAILED\nCLOSE\nPRESENT\nNOT_PRESENT\nCLOSE\nNOT_FAILED\nCLOSE\nPRESENT\nPRESENT\nOPEN\nNOT_FAILED\nCLOSE\nPRESENT\nPRESENT\nCLOSE\nNOT_FAILED\nTable 83 : Anti-paralleling failure management\nACLog1\nWith \nCTCX = ATC1 (for command, failure and anti-paralleling detection) and \nCTCX = CTC1 (for presence)\nOr\nCTCX = ATC3 (for command, failure and anti-paralleling detection) and \nCTCX = CTC2 (for presence)\nACLog2\nWith \nCTCX = ATC2 (for command, failure and anti-paralleling detection) and \nCTCX = CTC2 (for presence)\nOr\nCTCX = ELC (for command, failure and anti-paralleling detection) and \nCTCX = CTC1 (for presence)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_903],[SSCS_ACLog_840]'}, u'SWRD_GLOBAL-ACENM_0093': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set ACMP3B RCCB status {ACMP3B_RCCB_STATUS}, ACMP3B RCCB status validity {ACMP3B_RCCB_STS_VALIDITY} and ACMP3B RCCB failure {ACMP3B_RCCB_FAILURE} according to the following logic:\n[DSI_RCCB1_OPP_NO]\n[DSI_RCCB1_OPP_NC]\n{ACMP3B_RCCB_STATUS}\n{ACMP3B_RCCB_STS_VALIDITY}\n{ACMP3B_RCCB_FAILURE}\nOPEN\nCLOSED\nOPEN\nVALID\nNONE\nOPEN\nOPEN\nCLOSED\nINVALID\nAUX\nCLOSED\nCLOSED\nCLOSED\nINVALID\nAUX\nCLOSED\nOPEN\nCLOSED\nVALID\nNONE\nTable 53 : ACMP3B RCCB status management (for ACLog2)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_717],[SSCS_ACLog_714]'}, u'SWRD_GLOBAL-ACENM_0092': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set ACMP1B RCCB status {ACMP1B_RCCB_STATUS}, ACMP1B RCCB status validity {ACMP1B_RCCB_STS_VALIDITY} and ACMP1B RCCB failure {ACMP1B_RCCB_FAILURE} according to the following logic:\n[DSI_RCCB2_OPP_NO]\n[DSI_RCCB2_OPP_NC]\n{ACMP1B_RCCB_STATUS}\n{ACMP1B_RCCB_STS_VALIDITY}\n{ACMP1B_RCCB_FAILURE}\nOPEN\nCLOSED\nOPEN\nVALID\nNONE\nOPEN\nOPEN\nCLOSED\nINVALID\nAUX\nCLOSED\nCLOSED\nCLOSED\nINVALID\nAUX\nCLOSED\nOPEN\nCLOSED\nVALID\nNONE\nTable 52 : ACMP1B RCCB status management (for ACLog1)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_717],[SSCS_ACLog_713]'}, u'SWRD_GLOBAL-ACENM_0091': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set ACMP3A RCCB status {ACMP3A_RCCB_STATUS}, ACMP3A RCCB status validity {ACMP3A_RCCB_STS_VALIDITY} and ACMP3A RCCB failure {ACMP3A_RCCB_FAILURE} according to the following logic:\n[DSI_RCCB1_OPP_NO]\n[DSI_RCCB1_OPP_NC]\n{ACMP3A_RCCB_STATUS}\n{ACMP3A_RCCB_STS_VALIDITY}\n{ACMP3A_RCCB_FAILURE}\nOPEN\nCLOSED\nOPEN\nVALID\nNONE\nOPEN\nOPEN\nCLOSED\nINVALID\nAUX\nCLOSED\nCLOSED\nCLOSED\nINVALID\nAUX\nCLOSED\nOPEN\nCLOSED\nVALID\nNONE\nTable 51 : ACMP3A RCCB status management (for ACLog1)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_717],[SSCS_ACLog_713]'}, u'SWRD_GLOBAL-ACENM_0090': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set ACMP3B RCCB status {ACMP3B_RCCB_STATUS}, ACMP3B RCCB status validity {ACMP3B_RCCB_STS_VALIDITY} and ACMP3B RCCB failure {ACMP3B_RCCB_FAILURE} according to the following logic:\n{ACMP3B_RCCB_CMD}\n[DSI_RCCB1_NO]\n[DSI_RCCB1_NC]\n{ACMP3B_RCCB_STATUS}\n{ACMP3B_RCCB_STS_VALIDITY}\n{ACMP3B_RCCB_FAILURE}\nOPEN\nOPEN\nCLOSED\nOPEN\nVALID\nNONE\nOPEN\nOPEN\nOPEN\nOPEN\nINVALID\nAUX\nOPEN\nCLOSED\nCLOSED\nOPEN\nINVALID\nAUX\n\tOPEN\nCLOSED\nOPEN\nCLOSED\nINVALID\nCOMMAND\nCLOSE\nOPEN\nCLOSED\nOPEN\nINVALID\nCOMMAND\nCLOSE\nOPEN\nOPEN\nCLOSED\nINVALID\nAUX\nCLOSE\nCLOSED\nCLOSED\nCLOSED\nINVALID\nAUX\nCLOSE\nCLOSED\nOPEN\nCLOSED\nVALID\nNONE\nTable 50 : ACMP3B RCCB status management (for ACLog1)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_717],[SSCS_ACLog_713]'}, u'SWRD_GLOBAL-ACENM_0097': {'status': u'MATURE', 'body': u'ACENM CSCI shall set ACMPX failed closed failure {ACMPX_FAILED_CLOSED_FAILURE} according to the following logic:\nLatched to FAILED when {ACMPX_RCCB_STATUS} is equal to CLOSED and{ACMPX_RCCB_FAILURE} is equal to COMMAND during more than 2s\xb1500ms AND {ACMPX_FAILED_OPEN_FAILURE} is not equal to FAILED\nWith ACMPX = ACMP3B (for ACLog1) and ACMP1B or ACMP3A (for ACLog2),', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_717],[SSCS_ACLog_1071],[SSCS_ACLog_939],[SSCS_ACLog_1370]'}, u'SWRD_GLOBAL-ACENM_0096': {'status': u'MATURE', 'body': u'ACENM CSCI shall set ACMPX auxiliary failure {ACMPX_RCCB_AUX_FAILURE} according to the following logic:\nFAILED when {ACMPX_RCCB_FAILURE} is equal to AUX during 2s\xb10.5s\nNOT_FAILED, when {ACMPX_RCCB_FAILURE} is not equal to AUX during 1s\xb1250ms\nOtherwise {ACMPX_RCCB_AUX_FAILURE} keeps its previous value.\nWith ACMPX = ACMP3A, ACMP3B or ACMP1B', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_717],[SSCS_ACLog_1070],[SSCS_ACLog_940],[SSCS_ACLog_1371]'}, u'SWRD_GLOBAL-ACENM_0095': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set ACMP1B RCCB status {ACMP1B_RCCB_STATUS}, ACMP1B RCCB status validity {ACMP1B_RCCB_STS_VALIDITY} and ACMP1B RCCB failure {ACMP1B_RCCB_FAILURE} according to the following logic:\n{ACMP1B_RCCB_CMD}\n[DSI_RCCB2_NO]\n[DSI_RCCB2_NC]\n{ACMP1B_RCCB_STATUS}\n{ACMP1B_RCCB_STS_VALIDITY}\n{ACMP1B_RCCB_FAILURE}\nOPEN\nOPEN\nCLOSED\nOPEN\nVALID\nNONE\nOPEN\nOPEN\nOPEN\nOPEN\nINVALID\nAUX\nOPEN\nCLOSED\nCLOSED\nOPEN\nINVALID\nAUX\n\tOPEN\nCLOSED\nOPEN\nCLOSED\nINVALID\nCOMMAND\nCLOSE\nOPEN\nCLOSED\nOPEN\nINVALID\nCOMMAND\nCLOSE\nOPEN\nOPEN\nCLOSED\nINVALID\nAUX\nCLOSE\nCLOSED\nCLOSED\nCLOSED\nINVALID\nAUX\nCLOSE\nCLOSED\nOPEN\nCLOSED\nVALID\nNONE\nTable 55 : ACMP1B RCCB status management (for ACLog2)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_717],[SSCS_ACLog_714]'}, u'SWRD_GLOBAL-ACENM_0094': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set ACMP3A RCCB status {ACMP3A_RCCB_STATUS}, ACMP3A RCCB status validity {ACMP3A_RCCB_STS_VALIDITY} and ACMP3A RCCB failure {ACMP3A_RCCB_FAILURE} according to the following logic:\n{ACMP3A_RCCB_CMD}\n[DSI_RCCB1_NO]\n[DSI_RCCB1_NC]\n{ACMP3A_RCCB_STATUS}\n{ACMP3A_RCCB_STS_VALIDITY}\n{ACMP3A_RCCB_FAILURE}\nOPEN\nOPEN\nCLOSED\nOPEN\nVALID\nNONE\nOPEN\nOPEN\nOPEN\nOPEN\nINVALID\nAUX\nOPEN\nCLOSED\nCLOSED\nOPEN\nINVALID\nAUX\n\tOPEN\nCLOSED\nOPEN\nCLOSED\nINVALID\nCOMMAND\nCLOSE\nOPEN\nCLOSED\nOPEN\nINVALID\nCOMMAND\nCLOSE\nOPEN\nOPEN\nCLOSED\nINVALID\nAUX\nCLOSE\nCLOSED\nCLOSED\nCLOSED\nINVALID\nAUX\nCLOSE\nCLOSED\nOPEN\nCLOSED\nVALID\nNONE\nTable 54 : ACMP3A RCCB status management (for ACLog2)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_717],[SSCS_ACLog_714]'}, u'SWRD_GLOBAL-ACENM_0075': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set ATC3 contactor status validity {ATC3_CTC_STATUS_VALIDITY} according to the following logic:\n[DSI_AC_CTC2_OPP_NO]\n[DSI_AC_CTC2_OPP_NC]\n{ATC3_CTC_STATUS_VALIDITY}\nOPEN\nCLOSED\nVALID\nOPEN\nOPEN\nINVALID\nCLOSED\nCLOSED\nINVALID\nCLOSED\nOPEN\nINVALID\nTable 37 : ATC3 contactor status validity management (for ACLog2)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_610],[SSCS_ACLog_1407]'}, u'SWRD_GLOBAL-ACENM_0074': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set ATC2 contactor status validity {ATC2_CTC_STATUS_VALIDITY} according to the following logic:\n{ATC2_CTC_CMD}\n[DSI_AC_CTC2_NO]\n[DSI_AC_CTC2_NC]\n{ATC2_CTC_STATUS_VALIDITY}\nOPEN\nOPEN\nCLOSED\nVALID\nOPEN\nOPEN\nOPEN\nINVALID\nOPEN\nCLOSED\nCLOSED\nINVALID\nOPEN\nCLOSED\nOPEN\nINVALID\nCLOSE\nOPEN\nCLOSED\nINVALID\nCLOSE\nOPEN\nOPEN\nINVALID\nCLOSE\nCLOSED\nCLOSED\nINVALID\nCLOSE\nCLOSED\nOPEN\nVALID\nTable 36 : ATC2 contactor status validity management (for ACLog2)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1519],[SSCS_ACLog_610]'}, u'SWRD_GLOBAL-ACENM_0077': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set ATC2 contactor failure {ATC2_CTC_FAILURE} according to the following logic:\n[DSI_AC_CTC2_OPP_NO]\n[DSI_AC_CTC2_OPP_NC]\n{ATC2_CTC_FAILURE}\nOPEN\nCLOSED\nNONE\nOPEN\nOPEN\nAUX\nCLOSED\nCLOSED\nAUX\nCLOSED\nOPEN\nNONE\nTable 39 : ATC2 contactor failure management (for ACLog1)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_609],[SSCS_ACLog_1407]'}, u'SWRD_GLOBAL-ACENM_0076': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set ATC1 contactor failure {ATC1_CTC_FAILURE} according to the following logic:\n{ATC1_CTC_CMD}\n[DSI_AC_CTC1_NO]\n[DSI_AC_CTC1_NC]\n{ATC1_CTC_FAILURE}\nOPEN\nOPEN\nCLOSED\nNONE\nOPEN\nOPEN\nOPEN\nAUX\nOPEN\nCLOSED\nCLOSED\nAUX\nOPEN\nCLOSED\nOPEN\nCOMMAND\nCLOSE\nOPEN\nCLOSED\nCOMMAND\nCLOSE\nOPEN\nOPEN\nAUX\nCLOSE\nCLOSED\nCLOSED\nAUX\nCLOSE\nCLOSED\nOPEN\nNONE\nTable 38 : ATC1 contactor failure management (for ACLog1)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_614],[SSCS_ACLog_609]'}, u'SWRD_GLOBAL-ACENM_0071': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set ATC2 contactor status validity {ATC2_CTC_STATUS_VALIDITY} according to the following logic:\n[DSI_AC_CTC2_OPP_NO]\n[DSI_AC_CTC2_OPP_NC]\n{ATC2_CTC_STATUS_VALIDITY}\nOPEN\nCLOSED\nVALID\nOPEN\nOPEN\nINVALID\nCLOSED\nCLOSED\nINVALID\nCLOSED\nOPEN\nVALID\nTable 33 : ATC2 contactor status validity management (for ACLog1)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_609],[SSCS_ACLog_1407]'}, u'SWRD_GLOBAL-ACENM_0070': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set ATC1 contactor status validity {ATC1_CTC_STATUS_VALIDITY} according to the following logic:\n{ATC1_CTC_CMD}\n[DSI_AC_CTC1_NO]\n[DSI_AC_CTC1_NC]\n{ATC1_CTC_STATUS_VALIDITY}\nOPEN\nOPEN\nCLOSED\nVALID\nOPEN\nOPEN\nOPEN\nINVALID\nOPEN\nCLOSED\nCLOSED\nINVALID\nOPEN\nCLOSED\nOPEN\nINVALID\nCLOSE\nOPEN\nCLOSED\nINVALID\nCLOSE\nOPEN\nOPEN\nINVALID\nCLOSE\nCLOSED\nCLOSED\nINVALID\nCLOSE\nCLOSED\nOPEN\nVALID\nTable 32 : ATC1 contactor status validity management (for ACLog1)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_614],[SSCS_ACLog_609]'}, u'SWRD_GLOBAL-ACENM_0073': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set ATC1 contactor status validity {ATC1_CTC_STATUS_VALIDITY} according to the following logic:\n[DSI_AC_CTC1_OPP_NO]\n[DSI_AC_CTC1_OPP_NC]\n{ATC1_CTC_STATUS_VALIDITY}\nOPEN\nCLOSED\nVALID\nOPEN\nOPEN\nINVALID\nCLOSED\nCLOSED\nINVALID\nCLOSED\nOPEN\nVALID\nTable 35 : ATC1 contactor status validity management (for ACLog2)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_610],[SSCS_ACLog_1407]'}, u'SWRD_GLOBAL-ACENM_0072': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set ATC3 contactor status validity {ATC3_CTC_STATUS_VALIDITY} according to the following logic:\n{ATC3_CTC_CMD}\n[DSI_AC_CTC2_NO]\n[DSI_AC_CTC2_NC]\n{ATC3_CTC_STATUS_VALIDITY}\nOPEN\nOPEN\nCLOSED\nVALID\nOPEN\nOPEN\nOPEN\nINVALID\nOPEN\nCLOSED\nCLOSED\nINVALID\nOPEN\nCLOSED\nOPEN\nINVALID\nCLOSE\nOPEN\nCLOSED\nINVALID\nCLOSE\nOPEN\nOPEN\nINVALID\nCLOSE\nCLOSED\nCLOSED\nINVALID\nCLOSE\nCLOSED\nOPEN\nVALID\nTable 34 : ATC3 contactor status validity management (for ACLog1)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_614],[SSCS_ACLog_609]'}, u'SWRD_GLOBAL-ACENM_0372': {'status': u'DELETED', 'body': u'DELETED', 'additional': 'EMPTY', 'derived': 'EMPTY', 'terminal': 'EMPTY', 'safety': 'EMPTY', 'rationale': u'Merged in requirement SWRD_GLOBAL-ACENM_0373', 'issue': u'1.4', 'refer': 'EMPTY'}, u'SWRD_GLOBAL-ACENM_0373': {'status': u'TBC', 'body': u'ACENM CSCI shall set ACMPX trip cause {ACMPX_TRIP_CAUSE} according to the following logic:\n{ACMPX_TRIP_CAUSE} is set to NONE if at least one of the following conditions is true:\n{SW_MODE} is equal to INIT and {START_MODE} is equal to COLD and {WOW_STATUS} is equal to ON_GROUND\n{SW_MODE} is equal to INIT and board position in NVM [NVM_BOARD_CONFIG] has changed \nEDMU trip command {EDMU_ACMPX_TRIPPED_CMD} has switched from NO_CHANGE or TRIP_SET to TRIP_RESET\nOtherwise {ACMPX_TRIP_CAUSE} is set with the value of EDMU trip cause {EDMU_ACMPX_TRIP_CAUSE_CMD} if EDMU trip command {EDMU_ACMPX_TRIPPED_CMD} is equal to TRIP_SET\nOtherwise {ACMPX_TRIP_CAUSE} is set to:\nI2T if {ACMPX_I2T_PROT} is equal to ACTIVE\nGFI if {ACMPX_GFI_PROT} is equal to ACTIVE\nOVERVOLTAGE if {ACMP_ACBUSX_OVERVOLTAGE_PROT} is equal to ACTIVE\nUNBALANCED if {ACMPX_UNBALANCED_PROT} is equal to ACTIVE\nNONE if there is no protection activated on ACMPX\nWith ACMPX = ACMP3A or ACMP1B (for ACLog2) or ACMP3B (for ACLog1)\nWith ACBUSX = ACBUS1 (for ACLog1) or ACBUS2 (for ACLog2)', 'additional': u'If several protections are active, the trip cause is set with the first protection which occurred. Each EDMU_ACMPX_TRIPPED_CMD is associated with one ACMP. An ACMP can receive a TRIP reset independently from other ACMPs.  ', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'Not clearly defined in SSCS', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1281],[SSCS_ACLog_1283],[SSCS_ACLog_721],[SSCS_ACLog_1142],[SSCS_ACLog_1119],[SSCS_ACLog_1280]'}, u'SWRD_GLOBAL-ACENM_0370': {'status': u'MATURE', 'body': u'If {SW_MODE} is equal to OPERATIONAL, ACENM CSCI shall set a CAN failure status for each data with validities received on CAN bus {CAN_DATAX_FAILURE_STS} according to the following conditions:\nConditions\nSet CAN data bus\n{CAN_DATAX_FAILURE_STS} to\nCAN x interface version status {CAN_X_INTERFACE_VERSION_FAILURE}\nCAN x message status (message including  the data X)\n{CAN_X_MSGX_FAILURE}\nCAN x validity {CAN_X_DATAX_VALIDITY}\nX = 1\nX = 2\nX = 1\nX = 2\nX = 1\nX = 2\nFAILED\nFAILED\nX\nX\nX\nX\nFAILED\nX\nX\nFAILED\nFAILED\nX\nX\nFAILED\nX\nX\nX\nX\nNOT_VALID\nNOT_VALID\nFAILED\nX\nFAILED\nFAILED\nX\nX\nX\nFAILED\nX\nFAILED\nX\nX\nNOT_VALID\nX\nFAILED\nFAILED\nX\nX\nFAILED\nX\nX\nFAILED\nFAILED\nX\nX\nX\nX\nNOT_VALID\nFAILED\nX\nX\nFAILED\nX\nX\nNOT_VALID\nFAILED\nX\nX\nX\nFAILED\nNOT_VALID\nX\nFAILED\nOther cases\nNOT_FAILED\nX: Don\u2019t care\nTable 99 : CAN bus data failure\nWith CAN_X =\nWith MSG_X =\nWith DATAX =\nCAN_1\nRCCB_CMD_1\nFLIGHT_LEG\nCAN_2\nRCCB_CMD_2\nAC_TAIL\nDISC1\nFLIGHT_PHASE\nFLIGHTINFO_1\nXFR\nFLIGHTINFO_2\nDATE_TIME\nFLIGHTINFO_3\nACMP3B_CMD\nFLIGHTINFO_4\nACMP1B_CMD\nACMP3A_CMD', 'additional': u'N/A', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Default values are specified for data which are extracted from CAN bus when data are not available or not valid on CAN bus.', 'issue': u'1.4', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0371': {'status': u'MATURE', 'body': u'If {SW_MODE} is equal to OPERATIONAL, ACENM CSCI shall set CAN X data X request status {CAN_X_DATAX_REQUEST_STS} to:\nREQUESTED if the data X received on BUS_X is in \u201crequested\u201d state.\nNOT_REQUESTED otherwise\nWith DATAX =\nIBIT\nNVM_DL\nWith BUS_X=BUS_1 or BUS_2\nWith CAN_X=CAN_1 or CAN_2', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_1405]'}, u'SWRD_GLOBAL-ACENM_0079': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set ATC1 contactor failure {ATC1_CTC_FAILURE} according to the following logic:\n[DSI_AC_CTC1_OPP_NO]\n[DSI_AC_CTC1_OPP_NC]\n{ATC1_CTC_FAILURE}\nOPEN\nCLOSED\nNONE\nOPEN\nOPEN\nAUX\nCLOSED\nCLOSED\nAUX\nCLOSED\nOPEN\nNONE\nTable 41 : ATC1 contactor failure management (for ACLog2)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_610],[SSCS_ACLog_1407]'}, u'SWRD_GLOBAL-ACENM_0078': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set ATC3 contactor failure {ATC3_CTC_FAILURE} according to the following logic:\n{ATC3_CTC_CMD}\n[DSI_AC_CTC2_NO]\n[DSI_AC_CTC2_NC]\n{ATC3_CTC_FAILURE}\nOPEN\nOPEN\nCLOSED\nNONE\nOPEN\nOPEN\nOPEN\nAUX\nOPEN\nCLOSED\nCLOSED\nAUX\nOPEN\nCLOSED\nOPEN\nCOMMAND\nCLOSE\nOPEN\nCLOSED\nCOMMAND\nCLOSE\nOPEN\nOPEN\nAUX\nCLOSE\nCLOSED\nCLOSED\nAUX\nCLOSE\nCLOSED\nOPEN\nNONE\nTable 40 : ATC3 contactor failure management (for ACLog1)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_614],[SSCS_ACLog_609]'}, u'SWRD_GLOBAL-ACENM_0374': {'status': u'DELETED', 'body': u'DELETED', 'additional': 'EMPTY', 'derived': 'EMPTY', 'terminal': 'EMPTY', 'safety': 'EMPTY', 'rationale': u'If the protocol version is different for EDMU and ACLOG, the ACLOG continues to answer to all message from EDMU.', 'issue': u'1.5', 'refer': 'EMPTY'}, u'SWRD_GLOBAL-ACENM_0375': {'status': u'MATURE', 'body': u'ACENM CSCI shall set IBIT command {IBIT_COMMAND} according to the following logic:\nACTIVE if EDMU IBIT request [ACLOG_IBIT_REQUEST] is equal to REQUESTED and {WOW_STATUS} is equal to ON_GROUND and {NVM_DATA_LOAD_COMMAND} is not ACTIVE and {NVM_BITE_ERASE_COMMAND} is not ACTIVE.\nINACTIVE otherwise', 'additional': u'If NVM download request and IBIT request are sent at the same time, only the first command received will be taken into account. While the IBIT has not been fully perfomed the IBIT request are ignored.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1259],[SSCS_ACLog_1260]'}, u'SWRD_GLOBAL-ACENM_0479': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG2_EDMU_IO_STATE_2\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n[ACLOG2_DSO_CDE_AC_CTC1]\n[ACLOG2_DSO_ACEP_PB_SUPPLY]\n0\n[ACLOG2_DSO_BUS_NACKN_GEN]\n[ACLOG2_DSO_BUS_ACKN_GEN]\n[ACLOG2_DSO_AC_EP_PINF]\n0\n0\nByte 1\n[ACLOG2_DSO_GS_ON]\n[ACLOG2_DSO_ACEP_ON]\n[ACLOG2_DSO_ACEP_AVAIL]\n[ACLOG2_DSO_NBPT]\n[ACLOG2_DSO_CDE_RCCB2]\n[ACLOG2_DSO_CDE_RCCB1]\n0\n[ACLOG2_DSO_CDE_AC_CTC2]\nByte 2\n0\n[ACLOG2_DSI_ACLOG_OPP_VALID]\n0\n[ACLOG2_DSO_NOL_AC_EP]\n[ACLOG2_DSO_OL_AC_EP]\n[ACLOG2_DSO_NPR_AC_EP]\n[ACLOG2_DSO_PR_AC_EP]\n[ACLOG2_DSO_GS_MODE]\nByte 3\n0\n[ACLOG2_DSI_AC_CB_L1]\n[ACLOG2_DSI_AC_CB_L2]\n[ACLOG2_DSI_AC_CB_L3]\n[ACLOG2_DSI_AC_CB_L4]\n[ACLOG2_DSI_AC_CB_L5]\n[ACLOG2_DSI_AC_CB_TEST]\n0\nByte 4\n0\n0\n0\n0\n0\n0\n0\n0\nByte 5\n0\n0\n0\n0\n0\n0\n0\n0\nByte 6\n[ACLOG2_DSO_AC_BUS_AVAIL]\n[ACLOG2_DSO_AC_BUS_OPP_AVAIL]\n[ACLOG2_DSO_ACLOG_VALID]\n0\n[ACLOG2_DSO_ELC_CMD]\n0\n0\n0\nByte 7\n0\n0\n0\n0\n0\n0\n0\n0', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0478': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG2_EDMU_IO_STATE_1\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n[ACLOG2_DSI_PR_RGEN]\n0\n[ACLOG2_DSI_AGLC_NC]\n[ACLOG2_DSI_GLC2_NC]\n[ACLOG2_DSI_GLC1_NC]\n[ACLOG2_DSI_AGLC_NO]\n[ACLOG2_DSI_GLC2_NO]\n[ACLOG2_DSI_GLC1_NO]\nByte 1\n[ACLOG2_DSI_PR_APU]\n[ACLOG2_DSI_NOL_LGEN]\n[ACLOG2_DSI_OL_LGEN]\n[ACLOG2_DSI_NPR_LGEN]\n[ACLOG2_DSI_PR_LGEN]\n[ACLOG2_DSI_NOL_RGEN]\n[ACLOG2_DSI_OL_RGEN]\n[ACLOG2_DSI_NPR_RGEN]\nByte 2\n[ACLOG2_DSI_PINPROG1]\n0\n0\n0\n0\n[ACLOG2_DSI_NOL_APU]\n[ACLOG2_DSI_OL_APU]\n[ACLOG2_DSI_NPR_APU]\nByte 3\n[ACLOG2_DSI_ELC_OPEN_REQ]\n0\n[ACLOG2_DSI_WOW_ON_GROUND]\n[ACLOG2_DSI_WOW_IN_FLIGHT]\n[ACLOG2_DSI_PINPROG5]\n[ACLOG2_DSI_PINPROG4]\n[ACLOG2_DSI_PINPROG3]\n[ACLOG2_DSI_PINPROG2]\nByte 4\n[ACLOG2_DSI_AC_CTC2_NO]\n[ACLOG2_DSI_AC_CTC1_NO]\n0\n0\n[ACLOG2_DSI_ATC_NLCKOUT1]\n[ACLOG2_DSI_ATC_LCKOUT1]\n0\n0\nByte 5\n[ACLOG2_DSI_AC_CTC1_OPP_NC]\n[ACLOG2_DSI_AC_CTC3_OPP_NO]\n[ACLOG2_DSI_AC_CTC2_OPP_NO]\n[ACLOG2_DSI_AC_CTC1_OPP_NO]\n0\n[ACLOG2_DSI_AC_CTC2_NC]\n[ACLOG2_DSI_AC_CTC1_NC]\n0\nByte 6\n0\n0\n0\n0\n[ACLOG2_DSI_GS_PB]\n[ACLOG2_DSI_ACEP_PB]\n[ACLOG2_DSI_AC_CTC3_OPP_NC]\n[ACLOG2_DSI_AC_CTC2_OPP_NC]\nByte 7\n[ACLOG2_DSI_RCCB1_OPP_NC]\n[ACLOG2_DSI_RCCB1_OPP_NO]\n[ACLOG2_DSI_RCCB2_NC]\n[ACLOG2_DSI_RCCB2_NO]\n[ACLOG2_DSI_RCCB1_NC]\n[ACLOG2_DSI_RCCB1_NO]\n0\n0', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0471': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG[1/2]_EDMU_CB_STATUS_4\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n0\n0\n0\n0\n0\n0\n0\n0\nByte 1\n0\n0\n0\n0\n0\n0\n0\n0\nByte 2\n0\n0\n0\n0\n0\n0\n0\n0\nByte 3\n0\n0\n0\n0\n0\n0\n0\n0\nByte 4\n0\n0\n0\n0\n0\n0\n0\n0\nByte 5\n0\n0\n0\n0\n0\n0\n0\n0\nByte 6\n0\n0\n0\n0\n0\n0\n0\n0\nByte 7\n0\n0\n0\n0\n0\n0\n0\n0', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0470': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG[1/2]_EDMU_CB_STATUS_3\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n0\n0\n0\n0\n0\n0\n0\n0\nByte 1\n0\n0\n0\n0\n0\n0\n0\n0\nByte 2\n0\n0\n0\n0\n0\n0\n0\n0\nByte 3\n0\n0\n0\n0\n0\n0\n0\n0\nByte 4\n0\n0\n0\n0\n0\n0\n0\n0\nByte 5\n0\n0\n0\n0\n0\n0\n0\n0\nByte 6\n0\n0\n0\n0\n0\n0\n0\n0\nByte 7\n0\n0\n0\n0\n0\n0\n0\n0', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0473': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG1_EDMU_IO_STATE_2\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n[ACLOG1_DSO_CDE_AC_CTC1]\n[ACLOG1_DSO_BUS_NOTACKN_APU]\n[ACLOG1_DSO_BUS_ACKN_APU]\n[ACLOG1_DSO_BUS_NACKN_GEN]\n[ACLOG1_DSO_BUS_ACKN_GEN]\n0\n[ACLOG1_DSI_RCCB2_OPP_NC]\n[ACLOG1_DSI_RCCB2_OPP_NO]\nByte 1\n0\n0\n0\n[ACLOG1_DSO_NBPT]\n0\n[ACLOG1_DSO_CDE_RCCB1]\n[ACLOG1_DSO_CDE_AC_CTC3]\n[ACLOG1_DSO_CDE_AC_CTC2]\nByte 2\n[ACLOG1_DSI_AEC_OPEN]\n[ACLOG1_DSI_ACLOG_OPP_VALID]\n0\n0\n0\n0\n0\n0\nByte 3\n0\n[ACLOG1_DSI_AC_CB_L1]\n[ACLOG1_DSI_AC_CB_L2]\n[ACLOG1_DSI_AC_CB_L3]\n[ACLOG1_DSI_AC_CB_L4]\n[ACLOG1_DSI_AC_CB_L5]\n[ACLOG1_DSI_AC_CB_TEST]\n0\nByte 4\n0\n0\n0\n0\n0\n0\n0\n0\nByte 5\n0\n0\n0\n0\n0\n0\n0\n0\nByte 6\n[ACLOG1_DSO_AC_BUS_AVAIL]\n[ACLOG1_DSO_AC_BUS_OPP_AVAIL]\n[ACLOG1_DSO_ACLOG_VALID]\n[ACLOG1_DSO_ELC_OPEN_REQ]\n0\n0\n0\n0\nByte 7\n0\n0\n0\n0\n0\n0\n0\n0', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0472': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG1_EDMU_IO_STATE_1\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n[ACLOG1_DSI_PR_RGEN]\n0\n[ACLOG1_DSI_AGLC_NC]\n[ACLOG1_DSI_GLC2_NC]\n[ACLOG1_DSI_GLC1_NC]\n[ACLOG1_DSI_AGLC_NO]\n[ACLOG1_DSI_GLC2_NO]\n[ACLOG1_DSI_GLC1_NO]\nByte 1\n[ACLOG1_DSI_PR_APU]\n[ACLOG1_DSI_NOL_LGEN]\n[ACLOG1_DSI_OL_LGEN]\n[ACLOG1_DSI_NPR_LGEN]\n[ACLOG1_DSI_PR_LGEN]\n[ACLOG1_DSI_NOL_RGEN]\n[ACLOG1_DSI_OL_RGEN]\n[ACLOG1_DSI_NPR_RGEN]\nByte 2\n[ACLOG1_DSI_PINPROG1]\n[ACLOG1_DSI_NOL_AC_EP]\n[ACLOG1_DSI_OL_AC_EP]\n[ACLOG1_DSI_NPR_AC_EP]\n[ACLOG1_DSI_PR_AC_EP]\n[ACLOG1_DSI_NOL_APU]\n[ACLOG1_DSI_OL_APU]\n[ACLOG1_DSI_NPR_APU]\nByte 3\n0\n[ACLOG1_DSI_ELC_CMD]\n[ACLOG1_DSI_WOW_ON_GROUND]\n[ACLOG1_DSI_WOW_IN_FLIGHT]\n[ACLOG1_DSI_PINPROG5]\n[ACLOG1_DSI_PINPROG4]\n[ACLOG1_DSI_PINPROG3]\n[ACLOG1_DSI_PINPROG2]\nByte 4\n[ACLOG1_DSI_AC_CTC2_NO]\n[ACLOG1_DSI_AC_CTC1_NO]\n[ACLOG1_DSI_ATC_NLCKOUT2]\n[ACLOG1_DSI_ATC_LCKOUT2]\n[ACLOG1_DSI_ATC_NLCKOUT1]\n[ACLOG1_DSI_ATC_LCKOUT1]\n0\n0\nByte 5\n[ACLOG1_DSI_AC_CTC1_OPP_NC]\n0\n[ACLOG1_DSI_AC_CTC2_OPP_NO]\n[ACLOG1_DSI_AC_CTC1_OPP_NO]\n[ACLOG1_DSI_AC_CTC3_NC]\n[ACLOG1_DSI_AC_CTC2_NC]\n[ACLOG1_DSI_AC_CTC1_NC]\n[ACLOG1_DSI_AC_CTC3_NO]\nByte 6\n0\n0\n0\n0\n[ACLOG1_DSI_GS_PB]\n[ACLOG1_DSI_ACEP_PB]\n0\n[ACLOG1_DSI_AC_CTC2_OPP_NC]\nByte 7\n[ACLOG1_DSI_RCCB1_OPP_NC]\n[ACLOG1_DSI_RCCB1_OPP_NO]\n0\n0\n[ACLOG1_DSI_RCCB1_NC]\n[ACLOG1_DSI_RCCB1_NO]\n0\n0', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0475': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG1_EDMU_IO_STATE_4\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n[ACLOG1_DSI_PR_RGEN_VALID]\n0\n[ACLOG1_DSI_AGLC_NC_VALID]\n[ACLOG1_DSI_GLC2_NC_VALID]\n[ACLOG1_DSI_GLC1_NC_VALID]\n[ACLOG1_DSI_AGLC_NO_VALID]\n[ACLOG1_DSI_GLC2_NO_VALID]\n[ACLOG1_DSI_GLC1_NO_VALID]\nByte 1\n[ACLOG1_DSI_PR_APU_VALID]\n[ACLOG1_DSI_NOL_LGEN_VALID]\n[ACLOG1_DSI_OL_LGEN_VALID]\n[ACLOG1_DSI_NPR_LGEN_VALID]\n[ACLOG1_DSI_PR_LGEN_VALID]\n[ACLOG1_DSI_NOL_RGEN_VALID]\n[ACLOG1_DSI_OL_RGEN_VALID]\n[ACLOG1_DSI_NPR_RGEN_VALID]\nByte 2\n[ACLOG1_DSI_PINPROG1_VALID]\n[ACLOG1_DSI_NOL_AC_EP_VALID]\n[ACLOG1_DSI_OL_AC_EP_VALID]\n[ACLOG1_DSI_NPR_AC_EP_VALID]\n[ACLOG1_DSI_PR_AC_EP_VALID]\n[ACLOG1_DSI_NOL_APU_VALID]\n[ACLOG1_DSI_OL_APU_VALID]\n[ACLOG1_DSI_NPR_APU_VALID]\nByte 3\n0\n[ACLOG1_DSI_ELC_CMD_VALID]\n[ACLOG1_DSI_WOW_ON_GROUND_VALID]\n[ACLOG1_DSI_WOW_IN_FLIGHT_VALID]\n[ACLOG1_DSI_PINPROG5_VALID]\n[ACLOG1_DSI_PINPROG4_VALID]\n[ACLOG1_DSI_PINPROG3_VALID]\n[ACLOG1_DSI_PINPROG2_VALID]\nByte 4\n[ACLOG1_DSI_AC_CTC2_NO_VALID]\n[ACLOG1_DSI_AC_CTC1_NO_VALID]\n[ACLOG1_DSI_ATC_NLCKOUT2_VALID]\n[ACLOG1_DSI_ATC_LCKOUT2_VALID]\n[ACLOG1_DSI_ATC_NLCKOUT1_VALID]\n[ACLOG1_DSI_ATC_LCKOUT1_VALID]\n0\n0\nByte 5\n[ACLOG1_DSI_AC_CTC1_OPP_NC_VALID]\n0\n[ACLOG1_DSI_AC_CTC2_OPP_NO_VALID]\n[ACLOG1_DSI_AC_CTC1_OPP_NO_VALID]\n[ACLOG1_DSI_AC_CTC3_NC_VALID]\n[ACLOG1_DSI_AC_CTC2_NC_VALID]\n[ACLOG1_DSI_AC_CTC1_NC_VALID]\n[ACLOG1_DSI_AC_CTC3_NO_VALID]\nByte 6\n0\n0\n0\n0\n[ACLOG1_DSI_GS_PB_VALID]\n[ACLOG1_DSI_ACEP_PB_VALID]\n0\n[ACLOG1_DSI_AC_CTC2_OPP_NC_VALID]\nByte 7\n[ACLOG1_DSI_RCCB1_OPP_NC_VALID]\n[ACLOG1_DSI_RCCB1_OPP_NO_VALID]\n0\n0\n[ACLOG1_DSI_RCCB1_NC_VALID]\n[ACLOG1_DSI_RCCB1_NO_VALID]\n0\n0', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0474': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG[1/2]_EDMU_IO_STATE_3\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n0\n0\n0\n0\n0\n0\n0\n0\nByte 1\n0\n0\n0\n0\n0\n0\n0\n0\nByte 2\n0\n0\n0\n0\n0\n0\n0\n0\nByte 3\n0\n0\n0\n0\n0\n0\n0\n0\nByte 4\n0\n0\n0\n0\n0\n0\n0\n0\nByte 5\n0\n0\n0\n0\n0\n0\n0\n0\nByte 6\n0\n0\n0\n0\n0\n0\n0\n0\nByte 7\n0\n0\n0\n0\n0\n0\n0\n0', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0477': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG[1/2]_EDMU_IO_STATE_6\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n0\n0\n0\n0\n0\n0\n0\n0\nByte 1\n0\n0\n0\n0\n0\n0\n0\n0\nByte 2\n0\n0\n0\n0\n0\n0\n0\n0\nByte 3\n0\n0\n0\n0\n0\n0\n0\n0\nByte 4\n0\n0\n0\n0\n0\n0\n0\n0\nByte 5\n0\n0\n0\n0\n0\n0\n0\n0\nByte 6\n0\n0\n0\n0\n0\n0\n0\n0\nByte 7\n0\n0\n0\n0\n0\n0\n0\n0', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0476': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG1_EDMU_IO_STATE_5\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n[ACLOG1_DSO_CDE_AC_CTC1_VALID]\n[ACLOG1_DSO_BUS_NOTACKN_APU_VALID]\n[ACLOG1_DSO_BUS_ACKN_APU_VALID]\n[ACLOG1_DSO_BUS_NACKN_GEN_VALID]\n[ACLOG1_DSO_BUS_ACKN_GEN_VALID]\n0\n[ACLOG1_DSI_RCCB2_OPP_NC_VALID]\n[ACLOG1_DSI_RCCB2_OPP_NO_VALID]\nByte 1\n0\n0\n0\n[ACLOG1_DSO_NBPT_VALID]\n0\n[ACLOG1_DSO_CDE_RCCB1_VALID]\n[ACLOG1_DSO_CDE_AC_CTC3_VALID]\n[ACLOG1_DSO_CDE_AC_CTC2_VALID]\nByte 2\n[ACLOG1_DSI_AEC_OPEN_VALID]\n[ACLOG1_DSI_ACLOG_OPP_VALID_VALID]\n0\n0\n0\n0\n0\n0\nByte 3\n0\n[ACLOG1_DSI_AC_CB_L1_VALID]\n[ACLOG1_DSI_AC_CB_L2_VALID]\n[ACLOG1_DSI_AC_CB_L3_VALID]\n[ACLOG1_DSI_AC_CB_L4_VALID]\n[ACLOG1_DSI_AC_CB_L5_VALID]\n[ACLOG1_DSI_AC_CB_TEST_VALID]\n0\nByte 4\n0\n0\n0\n0\n0\n0\n0\n0\nByte 5\n0\n0\n0\n0\n0\n0\n0\n0\nByte 6\n[ACLOG1_DSO_AC_BUS_AVAIL_VALID]\n[ACLOG1_DSO_AC_BUS_OPP_AVAIL_VALID]\n[ACLOG1_DSO_ACLOG_VALID_VALID]\n[ACLOG1_DSO_ELC_OPEN_REQ_VALID]\n0\n0\n0\n0\nByte 7\n0\n0\n0\n0\n0\n0\n0\n0', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0387': {'status': u'MATURE', 'body': u'When {SW_MODE} is equal to INIT and {BOARD_CONFIG} is equal to ACLog1, ACENM CSCI shall set ACMP3B RCCB command {ACMP3B_RCCB_CMD} to OPEN. ', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_663]'}, u'SWRD_GLOBAL-ACENM_0386': {'status': u'MATURE', 'body': u'If {SW_MODE} is equal to OPERATIONAL, ACENM CSCI shall compute protection.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_932],[SSCS_ACLog_1194],[SSCS_ACLog_942],[SSCS_ACLog_944],[SSCS_ACLog_1191],[SSCS_ACLog_1457],[SSCS_ACLog_1546]'}, u'SWRD_GLOBAL-ACENM_0385': {'status': u'MATURE', 'body': u'ACENM CSCI shall set the ACLog flight information signal values in the third column with the value of the flight information signal values provided by EDMU in the second column according to the board configuration {BOARD_CONFIG}:\n{BOARD_CONFIG}\nCAN Signal Name\nSignal Name\nAClog1 or AClog2\n[Tens_of_the_year]\n{EDMU_DATE}\nAClog1 or AClog2\n[Units_of_the_year]\nAClog1 or AClog2\n[Tens_of_the_month]\nAClog1 or AClog2\n[Units_of_the_month]\nAClog1 or AClog2\n[Tens_of_the_day]\nAClog1 or AClog2\n[Units_of_the_day]\nAClog1 or AClog2\n[Tens_of_the_hours]\n{EDMU_TIME}\nAClog1 or AClog2\n[Units_of_the_hours]\nAClog1 or AClog2\n[Tenths_of_minutes]\nAClog1 or AClog2\n[Tens_of_minutes]\nAClog1 or AClog2\n[Units_of_minutes]\nAClog1 or AClog2\n[VB1]\n{EDMU_DATE_TIME_VALIDITY}\nAClog1 or AClog2\n[MAINT_AIR_OUT]\n{EDMU_FLIGHT_PHASE}\n[MAINT_APPROACH_OUT]\n[MAINT_DESCENT_OUT]\n[MAINT_CRUISE_OUT]\n[MAINT_CLIMB_OUT]\n[MAINT_TAKEOFF_OUT]\n[MAINT_TAXI_OUT]\n[MAINT_GROUND_OUT]\n[PLT_Event_MKR_Selected_OUT]\nAClog1 or AClog2\n[FLIGHT_PHASE_NDO_VALID]\n{EDMU_FLIGHT_PHASE_VALIDITDY}\nAClog1 or AClog2\n[FLIGHT_LEG]\n{EDMU_FLIGHT_LEG}\nAClog1 or AClog2\n[FLIGHT_LEG_NDO_VALID]\n{EDMU_FLIGHT_LEG_VALIDITDY}\nAClog1 or AClog2\n[AC_TAIL]\n{EDMU_AIRCRAFT_TAIL}\nAClog1 or AClog2\n[AC_TAIL_NDO_VALID]\n{EDMU_AIRCRAFT_TAIL_VALIDITY}\nTable 117 : Correspondence table between internal signal and CAN signal', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1080]'}, u'SWRD_GLOBAL-ACENM_0384': {'status': u'MATURE', 'body': u'ACENM CSCI shall set the health LED output signal [HEALTH_LED] to:\nGREEN when the health led command {HEALTH_LED_CMD} is equal to GREEN\nRED otherwise', 'additional': u'GREEN and RED are described in HSID. ', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.2', 'refer': u'[SSCS_ACLog_701]'}, u'SWRD_GLOBAL-ACENM_0383': {'status': u'MATURE', 'body': u'ACENM CSCI shall apply EDMU commands in less than 35ms\xb15ms from the reception of the command.', 'additional': u'ACMP opening/closure time has been taken into account.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1069]'}, u'SWRD_GLOBAL-ACENM_0382': {'status': u'DELETED', 'body': u'DELETED', 'additional': 'EMPTY', 'derived': 'EMPTY', 'terminal': 'EMPTY', 'safety': 'EMPTY', 'rationale': u'Trip reset request is no more used', 'issue': u'1.4', 'refer': 'EMPTY'}, u'SWRD_GLOBAL-ACENM_0381': {'status': u'DELETED', 'body': u'DELETED', 'additional': 'EMPTY', 'derived': 'EMPTY', 'terminal': 'EMPTY', 'safety': 'EMPTY', 'rationale': u'Trip reset request is no more used', 'issue': u'1.4', 'refer': 'EMPTY'}, u'SWRD_GLOBAL-ACENM_0380': {'status': u'DELETED', 'body': u'DELETED', 'additional': 'EMPTY', 'derived': 'EMPTY', 'terminal': 'EMPTY', 'safety': 'EMPTY', 'rationale': u'Unlatch failure request is no more used', 'issue': u'1.4', 'refer': 'EMPTY'}, u'SWRD_GLOBAL-ACENM_0389': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set {AC_EP_PHASE_ORDER_CALC_PROT} to:\nACTIVE when [DSI_PHASE_ORDER_RESULT] is ACTIVE for more than 80ms\xb110ms.\nINACTIVE otherwise', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1247],[SSCS_ACLog_437],[SSCS_ACLog_1499]'}, u'SWRD_GLOBAL-ACENM_0388': {'status': u'MATURE', 'body': u'ACENM shall have NVM header mapping organization according to the following table:\nRelative NVM Address from HEADER start address\nSize (bytes)\n+ 0x0000\n2\n[NVM_LAST_FLIGHT_LEG_FIRST_FAULT_INDEX]\n+ 0x0002\n2\n[NVM_LAST_FLIGHT_LEG_FAULT_COUNTER] \n+ 0x0004\n4\n[NVM_LAST_FLIGHT_LEG_WITH_FAULT] \n+ 0x0008\n4\n[NVM_LAST_FLIGHT_LEG]\n+ 0x000C\n2\n[NVM_BITE_HEADER_CHECKSUM]\n+ [0x000E-0x00FF]\n242\nSpare', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_1224],[SSCS_ACLog_1374]'}, u'SWRD_GLOBAL-ACENM_0206': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set the DSO GCU GLC1 acknowledge [DSO_BUS_ACKN_GEN] and  DSO GCU GLC1 not acknowledge [DSO_BUS_NACKN_GEN] according to the following logic:\n{GLC1_CTC_GCU_ACK}\n[DSO_BUS_ACKN_GEN]\n[DSO_BUS_NACKN_GEN]\nOPEN\nINACTIVE\nACTIVE\nCLOSE\nACTIVE\nINACTIVE\nTable 93 : DSO GCU GLC1 ack/not ack management', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_753]'}, u'SWRD_GLOBAL-ACENM_0207': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set the DSO GCU GLC2 acknowledge [DSO_BUS_ACKN_GEN] and  DSO GCU GLC2 not acknowledge [DSO_BUS_NACKN_GEN] according to the following logic:\n{GLC2_CTC_GCU_ACK}\n[DSO_BUS_ACKN_GEN]\n[DSO_BUS_NACKN_GEN]\nOPEN\nINACTIVE\nACTIVE\nCLOSE\nACTIVE\nINACTIVE\nTable 94 : DSO GCU GLC2 ack/not ack management', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_754]'}, u'SWRD_GLOBAL-ACENM_0204': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set the DSO AC external power ON state [DSO_ACEP_ON] to:\nACTIVE when {AC_EP_MODE} is equal to ACTIVE OR {AC_GS_MODE} is equal to ACTIVE\nINACTIVE otherwise', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_536]'}, u'SWRD_GLOBAL-ACENM_0205': {'status': u'MATURE', 'body': u'ACENM CSCI shall set the DSO no break power transfer state [DSO_NBPT] to:\nACTIVE during 100ms\xb120ms when a start/restart of the AC network configuration occurs ({AC_NETWORK_RECONF} is equal to START) and if Ground servicing request status {AC_GS_REQUEST} is equal to OPEN\nINACTIVE otherwise', 'additional': u'The ground service mode cannot be active if the ground servicing request is open.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_552],[SSCS_ACLog_554],[SSCS_ACLog_1504]'}, u'SWRD_GLOBAL-ACENM_0202': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set the DSO AC external power not ready [DSO_NPR_AC_EP] to:\nINACTIVE when {AC_EP_PR} is equal to READY \nACTIVE otherwise', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_537],[SSCS_ACLog_1471]'}, u'SWRD_GLOBAL-ACENM_0203': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set the DSO AC external power availability [DSO_ACEP_AVAIL] to:\nACTIVE when {AC_EP_AVAIL} is equal to ACTIVE\nINACTIVE otherwise', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1479]'}, u'SWRD_GLOBAL-ACENM_0200': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration and {SW_MODE} is equal to OPERATIONAL or INIT, ACENM CSCI shall modify the state of DSO AC external power PIN F [DSO_AC_EP_PINF] from INACTIVE to ACTIVE in less than 150ms\xb120ms.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_526]'}, u'SWRD_GLOBAL-ACENM_0201': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set the DSO AC external power ready [DSO_PR_AC_EP] to:\nACTIVE when {AC_EP_PR} is equal to READY\nINACTIVE otherwise', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_537],[SSCS_ACLog_1471]'}, u'SWRD_GLOBAL-ACENM_0208': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set the DSO GCU ALC acknowledge [DSO_BUS_ACKN_APU] and  DSO GCU ALC not acknowledge [DSO_BUS_NACKN_APU] according to the following logic:\n{ALC_CTC_GCU_ACK}\n[DSO_BUS_ACKN_APU]\n[DSO_BUS_NACKN_APU]\nOPEN\nINACTIVE\nACTIVE\nCLOSE\nACTIVE\nINACTIVE\nTable 95 : DSO GCU ALC ack/not ack management', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_755]'}, u'SWRD_GLOBAL-ACENM_0209': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set the DSO ATC1 command [DSO_CDE_AC_CTC1] to:\nCLOSE when {ATC1_CTC_CMD} is equal to CLOSE\nOPEN otherwise', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_735]'}, u'SWRD_GLOBAL-ACENM_0273': {'status': u'DELETED', 'body': u'DELETED', 'additional': 'EMPTY', 'derived': 'EMPTY', 'terminal': 'EMPTY', 'safety': 'EMPTY', 'rationale': u'CPU test is not required during preliminary tests', 'issue': u'1.5', 'refer': 'EMPTY'}, u'SWRD_GLOBAL-ACENM_0272': {'status': u'MATURE', 'body': u'ACENM shall set HW/SW compatibility test result {HW_SW_COMPATIBILITY_TEST_RESULT} to OK if all the conditions in the Table 70 are TRUE; otherwise {HW_SW_COMPATIBILITY_TEST_RESULT} is set to FAILED.\nHW part number \nvalue\nExpected\n value\nByte 1 of {HW_PN}\n\u20184\u2019\nByte 2 of {HW_PN}\n\u20180\u2019\nByte 3 of {HW_PN}\n\u20180\u2019\nByte 4 of {HW_PN}\n\u2018C\u2019\nByte 5 of {HW_PN}\n\u2018E\u2019\nByte 6 of {HW_PN}\n\u20180\u2019\nByte 7 of {HW_PN}\n\u20186\u2019\nByte 8 of {HW_PN}\n\u2018L\u2019\nByte 9 of {HW_PN}\nByte 12 of {SW_PN}\nByte 10 of {HW_PN}\nByte 13 of {SW_PN}\nByte 11 of {HW_PN}\n\u2018Y\u2019\nByte 12 of {HW_PN}\nDon\u2019t care\nByte 13 of {HW_PN}\nDon\u2019t care\nTable 70 : HW/SW compatibility table', 'additional': u'Bytes 12/13 of {SW_PN} and bytes 9/10 of {HW_PN} are software version. HW PN format is recovered from \u201cG7000/8000 PPDS ECE Electronic Boards EMP ref ET2890-E and IG 0.2.1.006.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1535],[SSCS_ACLog_1550]'}, u'SWRD_GLOBAL-ACENM_0271': {'status': u'MATURE', 'body': u'ACENM shall set ROM integrity test result {ROM_TEST_RESULT} to:\nOK, if the computed ROM checksum is correct\nFAILED, otherwise.', 'additional': u'A 32bits checksum is computed by an additional tool. In ROM, a 32bits constant (initially equal to 0x00000000) is replaced by the complemented value of the computed checksum. It is why ACENM software will get 0x00000000 as result of ROM checksum.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_667]'}, u'SWRD_GLOBAL-ACENM_0270': {'status': u'MATURE', 'body': u'ACENM shall compute RAM integrity test {RAM_TEST_RESULT} according to the following algorithm:', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.2', 'refer': u'[SSCS_ACLog_667]'}, u'SWRD_GLOBAL-ACENM_0277': {'status': u'MATURE', 'body': u'When {SW_MODE} is equal to INIT, ACENM CSCI shall set PBIT result {PBIT_TEST_RESULT} to FAILED if at least one of the following conditions is true:\n{WATCHDOG_TEST_RESULT} is equal to FAILED.\n{ASI_TEST_RESULT} is equal to FAILED.\n{DSI_TEST_RESULT} is equal to FAILED.\n{NVM_CHECK_TEST_RESULT} is equal to FAILED.\n{HW_OVERVOLTAGE_PROT_TEST_RESULT} is equal to FAILED.\n{CT_AC_EP_TEST_RESULT} is equal to FAILED.\n{CT_AC_TIE_TEST_RESULT} is equal to FAILED.\n{HW_SW_COMPATIBILITY_TEST_RESULT} is equal to FAILED.\nOtherwise, {PBIT_TEST_RESULT} is set to OK.', 'additional': u'N/A', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Used to have a global result of the PBIT.', 'issue': u'1.5', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0276': {'status': u'MATURE', 'body': u'When {SW_MODE} is equal to INIT, ACENM CSCI shall re-execute all the tests included in PBIT which have been declared as FAILED during the first execution of these tests.', 'additional': u'The PBIT tests results of the second execution override the PBIT results of the first execution.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_1178]'}, u'SWRD_GLOBAL-ACENM_0275': {'status': u'MATURE\t', 'body': u'When {SW_MODE} is equal to INIT and when {PBIT_ACTIVATION} is equal to ACTIVE, ACENM CSCI shall perform the PBIT including the following sequence:\n1/ Perform Watchdog test.\n2/ Perform NVM check test.\n3/ Perform HW overvoltage function test.\n4/ Perform Current transformer test.\n5/ Perform DSI test.\n6/ Perform ASI test.\n7/ Perform HW/SW compatibility test.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_899],[SSCS_ACLog_900],[SSCS_ACLog_904],[SSCS_ACLog_1141],[SSCS_ACLog_1176],[SSCS_ACLog_897],[SSCS_ACLog_1419],[SSCS_ACLog_1535]'}, u'SWRD_GLOBAL-ACENM_0274': {'status': u'MATURE', 'body': u'ACENM shall set watchdog test result {WATCHDOG_TEST_RESULT} according to the following algorithm:\n(1): The current counter value is equal to X+1 if [DSI_WDG_COUNTER_X] = ACTIVE and all other [DSI_WDG_COUNTER_Y] = INACTIVE (with X/Y=0 to 4).\nFigure 12 \u2013 Watchdog test management diagram', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_897]'}, u'SWRD_GLOBAL-ACENM_0319': {'status': u'MATURE', 'body': u'ACENM CSCI shall copy and store ACMPX trip cause {ACMPX_TRIP_CAUSE} in NVM [NVM_ACMPX_TRIP_CAUSE] when {ACMPX_TRIP_CAUSE} value is different from the value already stored in NVM.\nWith ACMPX = ACMP3A or ACMP1B (for ACLog2) or ACMP3B (for ACLog1)', 'additional': u'Improve lifetime of NVM device by not writing the same value several time.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.1', 'refer': u'[SSCS_ACLog_1276]'}, u'SWRD_GLOBAL-ACENM_0279': {'status': u'MATURE', 'body': u'ACENM shall set hardware overvoltage protection test result {HW_OVERVOLTAGE_PROT_TEST_RESULT} according to the following logic:\nOK if the hardware overvoltage protection test is successful\nFAILED otherwise', 'additional': u'The procedure to test the hardware overvoltage protection function is described in HSID.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_904]'}, u'SWRD_GLOBAL-ACENM_0278': {'status': u'MATURE', 'body': u'ACENM shall set ASI test result {ASI_TEST_RESULT} to OK if all the following sequences results are true (FAILED otherwise):\nAll ASI listed in the Table 68 are all equal to MAX when [DSO_TEST_BITE_ASI] is set to HIGH.\nAll ASI listed in the Table 68 are all equal to MIN when [DSO_TEST_BITE_ASI] is set to LOW.\nASI Signal Name\n[ASI_RCCB1_CURRENT_PHA]\n[ASI_RCCB1_CURRENT_PHB]\n[ASI_RCCB1_CURRENT_PHC]\n[ASI_RCCB2_CURRENT_PHA]\n[ASI_RCCB2_CURRENT_PHB]\n[ASI_RCCB2_CURRENT_PHC]\n[ASI_RCCB1_CURRENT_GFI]\n[ASI_RCCB2_CURRENT_GFI]\n[ASI_AC_CTC1_AP1]\n[ASI_AC_CTC1_AP2]\n[ASI_AC_CTC2_AP1]\n[ASI_AC_CTC2_AP2]\n[ASI_AC_BUSBAR_VOLT_PHA]\n[ASI_AC_BUSBAR_VOLT_PHB]\n[ASI_AC_BUSBAR_VOLT_PHC]\n[ASI_AC_OPP_BUSBAR_VOLT_PHA]\n[ASI_ACEP_CURRENT_PHA]\n[ASI_ACEP_CURRENT_PHB]\n[ASI_ACEP_CURRENT_PHC]\n[ASI_ACEP_VOLTAGE_PHA]\n[ASI_ACEP_VOLTAGE_PHB]\n[ASI_ACEP_VOLTAGE_PHC]\n[ASI_DC_ACEP_PINE]\n[ASI_DP_PHA]\n[ASI_DP_PHB]\n[ASI_DP_PHC]\nTable 68 : ASI signal to test during PBIT', 'additional': u'MAX and MIN value are defined in HSID', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_900],[SSCS_ACLog_832],[SSCS_ACLog_833],[SSCS_ACLog_1084]'}, u'SWRD_GLOBAL-ACENM_0501': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG1_EDMU_BITE_1\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n[ACLOG1_CNTOR_DSO]\n[ACLOG1_ATC3_LCKOUT]\n[ACLOG1_ASI]\n[ACLOG1_DSI]\n[ACLOG1_TCB_AC1_MATRIX]\n[ACLOG1_POWER_CUT_5S]\n[ACLOG1_GND_FLIGHT_STATUS_FAIL]\n[ACLOG1_FUNC_CPU_WDG]\nByte 1\n0\n[ACLOG1_INTERNAL_PWR_SPLY_FAIL]\n[ACLOG1_AC_TIE_DP_TRIP]\n[ACLOG1_ANTI_PARALLELING_FUNC]\n[ACLOG1_28V_AC_EP_TR_PRES_FAIL]\n[ACLOG1_28V_DC_ESS2_PRES_FAIL]\n[ACLOG1_28V_DC1_PRES_FAIL]\n[ACLOG1_OTHER_DSO]\nByte 2\n0\n0\n0\n0\n0\n[ACLOG1_ATC1_LCKOUT]\n0\n[ACLOG1_AC_BUS1_OV]\nByte 3\n[ACLOG1_AC_EP_PR_NPR_SIG]\n[ACLOG1_APU_OVL_NOVL_SIG]\n[ACLOG1_APU_PR_NPR_SIG]\n[ACLOG1_R_VFG_OVL_NOVL_SIG]\n[ACLOG1_R_VFG_PR_NPR_SIG]\n[ACLOG1_L_VFG_OVL_NOVL_SIG]\n[ACLOG1_L_VFG_PR_NPR_SIG]\n0\nByte 4\n[ACLOG1_ATC3_FAILED_OPEN]\n[ACLOG1_ATC3_FAILED_CLOSED]\n[ACLOG1_ATC1_FAILED_OPEN]\n[ACLOG1_ATC1_FAILED_CLOSED]\n[ACLOG1_ATC3_AUX_STATUS_FAILED]\n[ACLOG1_ATC2_AUX_STATUS_FAILED]\n[ACLOG1_ATC1_AUX_STATUS_FAILED]\n[ACLOG1_AC_EP_OVL_NOVL_SIG]\nByte 5\n0\n0\n0\n[ACLOG1_RCCB1_AUX_STATUS_FAIL]\n[ACLOG1_RCCB1_FAILED_OPEN]\n[ACLOG1_RCCB1_FAILED_CLOSED]\n[ACLOG1_AEC_FAILED_OPEN]\n[ACLOG1_AEC_FAILED_CLOSED]\nByte 6\n[ATC1_ANTIPARALLELING_PROT_ACT]\n[ACLOG1_AEC_AUX_STATUS_FAILED]\n[ACLOG1_ELC_AUX_STATUS_FAILED]\n[ACLOG1_CT_AC_EP_FAIL]\n0\n0\n[ACLOG1_CT_AC_TIE_FAIL]\n0\nByte 7\n0\n0\n0\n0\n0\n0\n0\n[ATC3_ANTIPARALLELING_PROT_ACT]', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394],[SSCS_ACLog_1460]'}, u'SWRD_GLOBAL-ACENM_0500': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG[1/2]_EDMU_MODULE_STATUS\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n[ACLOGX_MODULE_MODE]\nByte 1\n0\n0\n0\n0\n0\n[ACLOGX_28V_DC_ESS_PRESENT]\n[ACLOGX_28V_AC_EP_TR_PRESENT]\n[ACLOGX_28V_DC_PRESENT] \nByte 2\n0\n0\n0\n0\n0\n0\n[ACLOGX_FLIGHT_STATE_VALID]\n[ACLOGX_IS_IN_FLIGHT]\nByte 3\n0\n0\n0\n0\n[ACLOGX_NVM_DOWNLD_ACCEPT]\n0\n0\n[ACLOGX_IBIT_ACCEPT]\nByte 4\n0\n0\n0\n0\n0\n0\n0\n0\nByte 5\n0\n0\n0\n0\n0\n0\n0\n0\nByte 6\n0\n0\n0\n0\n0\n0\n0\n0\nByte 7\n0\n0\n0\n0\n0\n0\n0\n0\nWith ACLOGX = ACLOG1 for ACLog1 and ACLOGX = ACLOG2 for ACLog2', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0503': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG[1/2]_EDMU_BITE_2/3\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n0\n0\n0\n0\n0\n0\n0\n0\nByte 1\n0\n0\n0\n0\n0\n0\n0\n0\nByte 2\n0\n0\n0\n0\n0\n0\n0\n0\nByte 3\n0\n0\n0\n0\n0\n0\n0\n0\nByte 4\n0\n0\n0\n0\n0\n0\n0\n0\nByte 5\n0\n0\n0\n0\n0\n0\n0\n0\nByte 6\n0\n0\n0\n0\n0\n0\n0\n0\nByte 7\n0\n0\n0\n0\n0\n0\n0\n0', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0502': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG2_EDMU_BITE_1\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n[ACLOG2_CNTOR_DSO]\n[ACLOG2_ATC2_LCKOUT]\n[ACLOG2_ASI]\n[ACLOG2_DSI]\n[ACLOG2_TCB_AC2_MATRIX]\n[ACLOG2_POWER_CUT_5S]\n[ACLOG2_GND_FLIGHT_STATUS_FAIL]\n[ACLOG2_FUNC_CPU_WDG]\nByte 1\n0\n[ACLOG2_INTERNAL_PWR_SPLY_FAIL]\n[ACLOG2_AC_TIE_DP_TRIP]\n[ACLOG2_ANTI_PARALLELING_FUNC]\n[ACLOG2_28V_AC_EP_TR_PRES_FAIL]\n[ACLOG2_28V_DC_ESS2_PRES_FAIL]\n[ACLOG2_28V_DC1_PRES_FAIL]\n[ACLOG2_OTHER_DSO]\nByte 2\n[ACLOG2_AC_EP_UF_PROT_ACT]\n[ACLOG2_AC_EP_PO_PROT_ACT]\n[ACLOG2_AC_EP_OC_PROT_ACT]\n[ACLOG2_AC_EP_UV_PROT_ACT]\n[ACLOG2_AC_EP_OV_PROT_ACT]\n0\n[ACLOG2_AC_BUS2_OV]\n0\nByte 3\n0\n[ACLOG2_APU_OVL_NOVL_SIG]\n[ACLOG2_APU_PR_NPR_SIG]\n[ACLOG2_R_VFG_OVL_NOVL_SIG]\n[ACLOG2_R_VFG_PR_NPR_SIG]\n[ACLOG2_L_VFG_OVL_NOVL_SIG]\n[ACLOG2_L_VFG_PR_NPR_SIG]\n[ACLOG2_AC_EP_OF_PROT_ACT]\nByte 4\n[ACLOG2_ATC2_FAILED_OPEN]\n[ACLOG2_ATC2_FAILED_CLOSED]\n[ACLOG2_ELC_FAILED_OPEN]\n[ACLOG2_ELC_FAILED_CLOSED]\n[ACLOG2_ATC3_AUX_STATUS_FAILED]\n[ACLOG2_ATC2_AUX_STATUS_FAILED]\n[ACLOG2_ATC1_AUX_STATUS_FAILED]\n0\nByte 5\n[ACLOG2_RCCB2_AUX_STATUS_FAIL]\n[ACLOG2_RCCB2_FAILED_OPEN]\n[ACLOG2_RCCB2_FAILED_CLOSED]\n[ACLOG2_RCCB1_AUX_STATUS_FAIL]\n[ACLOG2_RCCB1_FAILED_OPEN]\n[ACLOG2_RCCB1_FAILED_CLOSED]\n0\n0\nByte 6\n[ELC_ANTIPARALLELING_PROT_ACT]\n[ACLOG2_AEC_AUX_STATUS_FAILED]\n[ACLOG2_ELC_AUX_STATUS_FAILED]\n[ACLOG2_CT_AC_EP_FAIL]\n0\n0\n[ACLOG2_CT_AC_TIE_FAIL]\n0\nByte 7\n0\n0\n0\n0\n0\n0\n0\n[ATC2_ANTIPARALLELING_PROT_ACT]', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0505': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG[1/2]_EDMU_ENG_DATA_1\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n[ED_BYTE_1]\nByte 1\n[ED_BYTE_2]\nByte 2\n[ED_BYTE_3]\nByte 3\n[ED_BYTE_4]\nByte 4\n[ED_BYTE_5]\nByte 5\n[ED_BYTE_6]\nByte 6\n[ED_BYTE_7]\nByte 7\n[ED_BYTE_8]', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0504': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG[1/2]_EDMU_SNPTC_COLOR_1\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n0\n0\n0\n0\n0\n[EXT_AC_VOLTAGE_YELLOW]\n(only for ACLog2, 0 for ACLog1)\n[EXT_AC_POWER_YELLOW]\n(only for ACLog2, 0 for ACLog1)\n[EXT_AC_FREQUENCY_YELLOW]\n(only for ACLog2, 0 for ACLog1)\nByte 1\n0\n0\n0\n0\n0\n0\n0\n0\nByte 2\n0\n0\n0\n0\n0\n0\n0\n0\nByte 3\n0\n0\n0\n0\n0\n0\n0\n0\nByte 4\n0\n0\n0\n0\n0\n0\n0\n0\nByte 5\n0\n0\n0\n0\n0\n0\n0\n0\nByte 6\n0\n0\n0\n0\n0\n0\n0\n0\nByte 7\n0\n0\n0\n0\n0\n0\n0\n0', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0507': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG[1/2]_EDMU_ENG_DATA_3\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n[ED_BYTE_17]\nByte 1\n[ED_BYTE_18]\nByte 2\n[ED_BYTE_19]\nByte 3\n[ED_BYTE_20]\nByte 4\n[ED_BYTE_21]\nByte 5\n[ED_BYTE_22]\nByte 6\n[ED_BYTE_23]\nByte 7\n[ED_BYTE_24]', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0506': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG[1/2]_EDMU_ENG_DATA_2\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n[ED_BYTE_9]\nByte 1\n[ED_BYTE_10]\nByte 2\n[ED_BYTE_11]\nByte 3\n[ED_BYTE_12]\nByte 4\n[ED_BYTE_13]\nByte 5\n[ED_BYTE_14]\nByte 6\n[ED_BYTE_15]\nByte 7\n[ED_BYTE_16]', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0039': {'status': u'TBC', 'body': u'ACENM CSCI shall set Ground servicing request status {AC_GS_REQUEST} according following algorithm:\nFigure 7: Ground servicing request status management\nTransitions are defined hereafter:\nOPEN_TO_CLOSE\n[DSI_GS_PB] switches from ACTIVE to INACTIVE AND {AC_EP_REQUEST} is equal to OPEN AND[DSI_28V_AC_EP_TR_FUSE_UP_STS] is equal to ACTIVE (TBD)  AND{AC_EP_PR} is equal to READY AND{RIGHT_GEN_AVAIL}, {LEFT_GEN_AVAIL} and {APU_AVAIL} are equal to NOT_AVAILABLE\nCLOSE_TO_OPEN\n[DSI_GS_PB] switches from ACTIVE to INACTIVE OR{AC_EP_REQUEST} is equal to CLOSE OR[DSI_28V_AC_EP_TR_FUSE_UP_STS] is not equal to ACTIVE (TBD) OR{AC_EP_PR} is not equal to READY OR{RIGHT_GEN_AVAIL}, {LEFT_GEN_AVAIL} or {APU_AVAIL} are equal to AVAILABLE OR{ELC_FAILED_OPEN_FAILURE} is equal to FAILED', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'The signal to check the 28V_AC_EP presence should be verified.', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_507],[SSCS_ACLog_1208],[SSCS_ACLog_1481],[SSCS_ACLog_1482]'}, u'SWRD_GLOBAL-ACENM_0038': {'status': u'MATURE', 'body': u'ACENM CSCI shall set AC External Power request status {AC_EP_REQUEST} according following algorithm:\nFigure 6: AC External Power request status management\nTransitions are defined hereafter:\nOPEN_TO_CLOSE\n[DSI_ACEP_PB] switches from ACTIVE to INACTIVE AND {AC_EP_PR} is equal to READY AND{ELC_FAILED_OPEN_FAILURE} is not equal to FAILED\nCLOSE_TO_OPEN\n[DSI_ACEP_PB] switches from ACTIVE to INACTIVE OR{AC_EP_PR} is not equal to READY OR{ELC_FAILED_OPEN_FAILURE} is equal to FAILED', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_534],[SSCS_ACLog_1474],[SSCS_ACLog_1475]'}, u'SWRD_GLOBAL-ACENM_0031': {'status': u'DELETED', 'body': u'DELETED', 'additional': u'EMPTY,\t,\t,\t,\t,\t,\t,\t,\t', 'derived': 'EMPTY', 'terminal': 'EMPTY', 'safety': 'EMPTY', 'rationale': u'Filter on WOW DSI has been removed in SSCS (req SSCS_ACLog_662 removed).', 'issue': u'1.5', 'refer': 'EMPTY'}, u'SWRD_GLOBAL-ACENM_0030': {'status': u'DELETED', 'body': u'DELETED', 'additional': 'EMPTY', 'derived': 'EMPTY', 'terminal': 'EMPTY', 'safety': 'EMPTY', 'rationale': u'Filter on WOW DSI has been removed in SSCS.', 'issue': u'1.5', 'refer': 'EMPTY'}, u'SWRD_GLOBAL-ACENM_0033': {'status': u'MATURE', 'body': u'ACENM CSCI shall set WOW status validity {WOW_STATUS_VALIDITY} according to the following logic:\n[DSI_WOW_ON_GROUND]\n[DSI_WOW_IN_FLIGHT]\n{WOW_STATUS_VALIDITY}\nACTIVE\nACTIVE\nINVALID\nACTIVE\nINACTIVE\nVALID\nINACTIVE\nACTIVE\nVALID\nINACTIVE\nINACTIVE\nINVALID\nTable 84 : Aircraft WOW status validity management', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_548],[SSCS_ACLog_953]'}, u'SWRD_GLOBAL-ACENM_0032': {'status': u'MATURE', 'body': u'ACENM CSCI shall set WOW status {WOW_STATUS} according to the following logic:\n[DSI_WOW_ON_GROUND]\n[DSI_WOW_IN_FLIGHT]\n{WOW_STATUS}\nACTIVE\nACTIVE\nFLIGHT\nACTIVE\nINACTIVE\nON_GROUND\nINACTIVE\nACTIVE\nFLIGHT\nINACTIVE\nINACTIVE\nFLIGHT\nTable 8 : Aircraft WOW status management', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_548]'}, u'SWRD_GLOBAL-ACENM_0035': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set AC External Power ready status {AC_EP_PR} according to the following logic:\n[DSI_PR_AC_EP]\n[DSI_NPR_AC_EP]\n{AC_EP_PR}\nREADY\nREADY\nNOT_READY\nREADY\nNOT_READY\nREADY\nNOT_READY\nNOT_READY\nNOT_READY\nNOT_READY\nREADY\nNOT_READY\nTable 9 : AC External Power ready status (for ACLog1) management', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_578]'}, u'SWRD_GLOBAL-ACENM_0034': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set AC External Power ready status {AC_EP_PR} according to the following logic:\nREADY when {AC_EP_PRESENCE} is equal to CONNECTED AND when {AC_EP_PROT} is INACTIVE AND when {WOW_STATUS} is equal to ON_GROUND\nNOT_READY otherwise', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1469],[SSCS_ACLog_1470]'}, u'SWRD_GLOBAL-ACENM_0037': {'status': u'DELETED', 'body': u'DELETED', 'additional': 'EMPTY', 'derived': 'EMPTY', 'terminal': 'EMPTY', 'safety': 'EMPTY', 'rationale': u'Functionalities deleted in SSCS.', 'issue': u'1.4', 'refer': 'EMPTY'}, u'SWRD_GLOBAL-ACENM_0036': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set AC External Power ready pre-computed failure for ACLog1 {AC_EP_PR_PRECOMPUTED_FAILURE} according to the following logic:\n[DSI_PR_AC_EP]\n[DSI_NPR_AC_EP]\n{AC_EP_PR_PRECOMPUTED_FAILURE}\nREADY\nNOT_READY\nNOT_FAILED\nREADY\nREADY\nFAILED\nNOT_READY\nNOT_READY\nFAILED\nNOT_READY\nREADY\nNOT_FAILED\nTable 82 : AC External Power ready failure (for ACLog1) management', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_578],[SSCS_ACLog_925]'}, u'SWRD_GLOBAL-ACENM_0109': {'status': u'MATURE', 'body': u'ACENM CSCI shall set the AC network reconfiguration state for CAN {AC_NETWORK_RECONF_FOR_CAN} to:\nIN_PROGRESS during one software cycle when a start/restart of the AC network configuration occurs.\nIN_PROGRESS after one software cycle from a start/restart of the AC network configuration.\nSTABLE when all AC network configuration sequences are finished or when {SW_MODE} is INIT', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.1', 'refer': u'[CAN-IRD-180]'}, u'SWRD_GLOBAL-ACENM_0108': {'status': u'MATURE', 'body': u'ACENM CSCI shall set module mode state [ACLOGX_MODULE_MODE] according to the following logic:\nOPERATIONAL if software mode {SW_MODE} is equal to OPERATIONAL.\nFAIL otherwise.\nWith X = 1 for ACLog1 and X = 2 for ACLog2', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[CAN-IRD-215]'}, u'SWRD_GLOBAL-ACENM_0105': {'status': u'DELETED', 'body': u'DELETED', 'additional': 'EMPTY', 'derived': 'EMPTY', 'terminal': 'EMPTY', 'safety': 'EMPTY', 'rationale': u'No external fuse to monitor.', 'issue': u'1.5', 'refer': 'EMPTY'}, u'SWRD_GLOBAL-ACENM_0104': {'status': u'MATURE', 'body': u'ACENM CSCI shall set the computed transfer inhibition switch position {XFR_POSITION} according to the following logic:\n[EMERLOG_DSI_XFR_LEFT]\n[EMERLOG_DSI_XFR_LEFT_VALID]\n[EMERLOG_DSI_XFR_NORM]\n[EMERLOG_DSI_XFR_NORM_VALID]\n[EMERLOG_DSI_XFR_RIGHT]\n[EMERLOG_DSI_XFR_RIGHT_VALID]\n[EMERLOG_DSI_XFR_ESS]\n[EMERLOG_DSI_XFR_ESS_VALID]\n{XFR_POSITION}\nNOT_ACTIVE\nVALID\nNOT_ACTIVE\nVALID\nNOT_ACTIVE\nVALID\nACTIVE\nVALID\nESS\nNOT_ACTIVE\nVALID\nNOT_ACTIVE\nVALID\nACTIVE\nVALID\nNOT_ACTIVE\nVALID\nRIGHT\nNOT_ACTIVE\nVALID\nACTIVE\nVALID\nNOT_ACTIVE\nVALID\nNOT_ACTIVE\nVALID\nNORM\nACTIVE\nVALID\nNOT_ACTIVE\nVALID\nNOT_ACTIVE\nVALID\nNOT_ACTIVE\nVALID\nLEFT\nOther cases\nNOT_VALID\nTable 118 : Transfer inhibition switch position management', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.1', 'refer': u'[SSCS_ACLog_1227]'}, u'SWRD_GLOBAL-ACENM_0107': {'status': u'MATURE', 'body': u'ACENM CSCI shall set ATCX failed open failure {ATCX_FAILED_OPEN_FAILURE} according to the following logic:\nLatched to FAILED when {ATCX_CTC_STATUS} is equal to OPEN and {ATCX_CTC_FAILURE} is equal to COMMAND during more than 2s\xb1500ms AND {XFR_POSITION} is not equal to NOT_VALID AND {ATCX_FAILED_CLOSED_FAILURE} is not equal to FAILED\nWith ATCX = ATC1 (for ACLog1) or ATC2 (for ACLog2)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_585],[SSCS_ACLog_626],[SSCS_ACLog_628],[SSCS_ACLog_630],[SSCS_ACLog_919],[SSCS_ACLog_1196],[SSCS_ACLog_1325]'}, u'SWRD_GLOBAL-ACENM_0106': {'status': u'MATURE', 'body': u'ACENM CSCI shall set the EDMU ACMP command signal values in the third column with the value of the ACMP command signal values provided by EDMU in the second column according to the board configuration {BOARD_CONFIG}:\n{BOARD_CONFIG}\nCAN Signal Name\nSignal Name\nAClog1 or AClog2\n[ACMPX_TRIPPED_CMD]\n{EDMU_ACMPX_TRIPPED_CMD}\nAClog1 or AClog2\n[ACMPX_OPEN_LOCKED_CMD]\n{EDMU_ACMPX_OPEN_LOCKED_CMD}\nAClog1 or AClog2\n[ACMPX_CLOSED_CMD]\n{EDMU_ACMPX_CLOSED_CMD}\nAClog1 or AClog2\n[ACMPX_TRIP_CAUSE_PHA]\n{EDMU_ACMPX_TRIP_CAUSE_CMD}\nTable 116 : Correspondence table between internal signal and CAN signal\nWith ACMPX = ACMP3A or ACMPX = ACMP1B (for ACLog2) or\nACMPX = ACMP3B (for ACLog1)', 'additional': u'Only EDMU trip cause on phase A is used (the ACMP protections are not computed for each phase).', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_1121],[SSCS_ACLog_721]'}, u'SWRD_GLOBAL-ACENM_0101': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set ATC1 Lockout status {ATC1_LOCKOUT_STATUS} and its status failure {ATC1_LOCKOUT_STS_PRECOMPUTED_FAILURE} according to the following logic:\n[DSI_ATC_LCKOUT1]\n[DSI_ATC_NLCKOUT1]\n{ATC1_LOCKOUT_STATUS}\n{ATC1_LOCKOUT_STS_PRECOMPUTED_FAILURE}\nACTIVE\nINACTIVE\nOPEN\nFAILED\nACTIVE\nACTIVE\nCLOSED\nNOT_FAILED\nINACTIVE\nINACTIVE\nOPEN\nNOT_FAILED\nINACTIVE\nACTIVE\nOPEN\nFAILED\nTable 58 : ATC1 Lockout status and its validity (for ACLog1) management', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_636],[SSCS_ACLog_632],[SSCS_ACLog_1450],[SSCS_ACLog_1451]'}, u'SWRD_GLOBAL-ACENM_0100': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set ACMPX closed state status {ACMPX_CLOSED_STATE_STATUS} to:\n{ACMPX_RCCB_STATUS} when {ACMPX_RCCB_STS_VALIDITY} is equal to VALID\nINVALID otherwise\nWith ACMPX = ACMP3A or ACMP1B', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_717],[SSCS_ACLog_719]'}, u'SWRD_GLOBAL-ACENM_0103': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set ATC2 Lockout status {ATC2_LOCKOUT_STATUS} and its status failure {ATC2_LOCKOUT_STS_PRECOMPUTED_FAILURE} according to the following logic:\n[DSI_ATC_LCKOUT1]\n[DSI_ATC_NLCKOUT1]\n{ATC2_LOCKOUT_STATUS}\n{ATC2_LOCKOUT_STS_PRECOMPUTED_FAILURE}\nACTIVE\nINACTIVE\nOPEN\nFAILED\nACTIVE\nACTIVE\nCLOSED\nNOT_FAILED\nINACTIVE\nINACTIVE\nOPEN\nNOT_FAILED\nINACTIVE\nACTIVE\nOPEN\nFAILED\nTable 60 : ATC2 Lockout status and its validity (for ACLog2) management', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_636],[SSCS_ACLog_634],[SSCS_ACLog_1450],[SSCS_ACLog_1451]'}, u'SWRD_GLOBAL-ACENM_0102': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set ATC3 Lockout status {ATC3_LOCKOUT_STATUS} and its status failure {ATC3_LOCKOUT_STS_PRECOMPUTED_FAILURE} according to the following logic:\n[DSI_ATC_LCKOUT2]\n[DSI_ATC_NLCKOUT2]\n{ATC3_LOCKOUT_STATUS}\n{ATC3_LOCKOUT_STS_PRECOMPUTED_FAILURE}\nACTIVE\nINACTIVE\nOPEN\nFAILED\nACTIVE\nACTIVE\nCLOSED\nNOT_FAILED\nINACTIVE\nINACTIVE\nOPEN\nNOT_FAILED\nINACTIVE\nACTIVE\nOPEN\nFAILED\nTable 59 : ATC3 Lockout status and its validity (for ACLog1) management', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_636],[SSCS_ACLog_632],[SSCS_ACLog_1450],[SSCS_ACLog_1451]'}, u'SWRD_GLOBAL-ACENM_0534': {'status': u'TBD', 'body': u'ACENM CSCI shall fill the CAN engineering data [ED_BYTE_X] with the engineering data {BITE_ED_X}.\nWith X = 1 to 32', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Engineering data are not defined in SSCS/IRD CAN', 'issue': u'1.5', 'refer': u'[CAN-IRD-219]'}, u'SWRD_GLOBAL-ACENM_0535': {'status': u'MATURE', 'body': u'If {NVM_BITE_ERASE_COMMAND} is equal to ACTIVE, ACENM CSCI shall delay all the write accesses to BITE NVM and continue to authorize all write accesses to CONTEXT NVM.', 'additional': u'Write accesses to BITE NVM are not authorized during BITE NVM reset but write accesses to CONTEXT NVM are still authorized.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1364]'}, u'SWRD_GLOBAL-ACENM_0536': {'status': u'MATURE', 'body': u'The \u201cTime Slot Start\u201d shall be with the following format:\nThe message start a time slot\nTime start slot\nBit 6\nYes\n1\nNo\n0', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[CAN-IRD-499],[CAN-IRD-501],[CAN-IRD-505],[CAN-IRD-506],[CAN-IRD-331]'}, u'SWRD_GLOBAL-ACENM_0530': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set the DSO ELC open request for ACLog2 [DSO_ELC_OPEN_REQ] to:\nACTIVE when {ATC3_FAILED_CLOSED_FAILURE} is equal to FAILED\nINACTIVE otherwise', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_629]'}, u'SWRD_GLOBAL-ACENM_0531': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall:\nreset overload step time only if [ASI_ACEP_CURRENT_PHA], [ASI_ACEP_CURRENT_PHB] or [ASI_ACEP_CURRENT_PHC] is lower than its current step threshold during more than 5s\xb10,2s.\nOtherwise the overload step time is kept', 'additional': u'A timer is allocated for each phase for each step. If a fault condition comes back, the associated step timer start from its last saved value.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1487],[SSCS_ACLog_1097]'}, u'SWRD_GLOBAL-ACENM_0532': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set AC external push button supply [DSO_ACEP_PB_SUPPLY] to ACTIVE.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1533]'}, u'SWRD_GLOBAL-ACENM_0533': {'status': u'MATURE', 'body': u'ACENM shall set DSI multiplexer failure {DSI_MUX_FAILURE} according to the following logic:\nNOT_FAILED if DSI multiplexer test is successful\nFAILED otherwise', 'additional': u'The procedure to test DSI multiplexer is described in HSID.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1107]'}, u'SWRD_GLOBAL-ACENM_0088': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set AEC contactor failure {AEC_CTC_FAILURE} according to the following logic:\n[DSI_AC_CTC3_OPP_NO]\n[DSI_AC_CTC3_OPP_NC]\n{AEC_CTC_FAILURE}\nOPEN\nCLOSED\nNONE\nOPEN\nOPEN\nAUX\nCLOSED\nCLOSED\nAUX\nCLOSED\nOPEN\nNONE\nTable 49 : AEC contactor failure management (for ACLog2)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_883],[SSCS_ACLog_875],[SSCS_ACLog_1541]'}, u'SWRD_GLOBAL-ACENM_0122': {'status': u'MATURE', 'body': u'ACENM CSCI shall set ACLog differential protection CAS message [ACLOGX_DP_ACT] according to the following logic:\nACTIVATED when {DIFFERENTIAL_PROT} is equal to ACTIVE\nNOT_ACTIVATED otherwise\nWith ACLOGX=ACLOG1 (for ACLog1) or\nwith ACLOGX=ACLOG2 (for ACLog2)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.1', 'refer': u'[SSCS_ACLog_1327],[SSCS_ACLog_1338],[SSCS_ACLog_1336],[SSCS_ACLog_1345],[CAN-IRD-426],[CAN-IRD-427],[CAN-IRD-534]'}, u'SWRD_GLOBAL-ACENM_0325': {'status': u'MATURE', 'body': u'Each contactor command shall be stored in static area only if {IBIT_COMMAND} is equal to ACTIVE.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_1229],[SSCS_ACLog_1230]'}, u'SWRD_GLOBAL-ACENM_0324': {'status': u'MATURE', 'body': u'ACENM CSCI shall set the NVM ACMP protection status (third column) according to the following logic:\nACTIVE if the corresponding protection status (second  column) is equal to ACTIVE\nINACTIVE otherwise\nBoard Configuration\nProtection Status\nNVM Protection Status\nACLog1\n{ACMP3B_I2T_PROT}\n[NVM_ACMP3B_I2T_PROT]\nACLog1\n{ACMP3B_GFI_PROT}\n[NVM_ACMP3B_GFI_PROT]\nACLog1\n{ ACMP3B_UNBALANCED_PROT}\n[NVM_ACMP3B_UNBALANCED_PROT]\nAClog2\n{ACMP3A_I2T_PROT}\n[NVM_ACMP3A_I2T_PROT]\nAClog2\n{ACMP3A_GFI_PROT}\n[NVM_ACMP3A_GFI_PROT]\nAClog2\n{ACMP3A_UNBALANCED_PROT}\n[NVM_ACMP3A_UNBALANCED_PROT]\nAClog2\n{ACMP1B_I2T_PROT}\n[NVM_ACMP1B_I2T_PROT]\nAClog2\n{ACMP1B_GFI_PROT}\n[NVM_ACMP1B_GFI_PROT]\nAClog2\n{ACMP1B_UNBALANCED_PROT}\n[NVM_ACMP1B_UNBALANCED_PROT]\nACLog1\n{ACMP_ACBUS1_OVERVOLTAGE_PROT}\n[NVM_ACMP_ACBUS1_OVERVOLTAGE_PROT]\nACLog2\n{ACMP_ACBUS2_OVERVOLTAGE_PROT}\n[NVM_ACMP_ACBUS2_OVERVOLTAGE_PROT]\nTable 88 : ACMP Protection Status stored in NVM', 'additional': u'N/A  ', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_676],[SSCS_ACLog_485],[SSCS_ACLog_1117],[SSCS_ACLog_1115],[SSCS_ACLog_1262],[SSCS_ACLog_1119],[SSCS_ACLog_1142],[SSCS_ACLog_1279]'}, u'SWRD_GLOBAL-ACENM_0327': {'status': u'MATURE', 'body': u'ACENM CSCI shall set the static contactor command (third column) according to the following logic:\nOPEN, when {SW_MODE} is equal to INIT and board position in NVM [NVM_BOARD_CONFIG] has changed \nOtherwise, the static contactor command (third column) is set with the value of the corresponding contactor command (second  column)\nBoard Configuration\nContactor/ACMP command Status\nstatic contactor/ACMP command Status\nAClog1\n{AEC_CTC_CMD}\n[STATIC_AEC_CTC_CMD]\nAClog1\n{GLC1_CTC_GCU_ACK}\n[STATIC_GLC1_CTC_GCU_ACK]\nAClog1\n{ALC_CTC_GCU_ACK}\n[STATIC_ALC_CTC_GCU_ACK]\nAClog1\n{ATC1_CTC_CMD}\n[STATIC_ATC1_CTC_CMD]\nAClog1\n{ATC3_CTC_CMD} \n[STATIC_ATC3_CTC_CMD]\nAClog2\n{GLC2_CTC_GCU_ACK}\n[STATIC_GLC2_CTC_GCU_ACK]\nAClog2\n{ATC2_CTC_CMD}\n[STATIC_ATC2_CTC_CMD]\nAClog2\n{ELC_CTC_CMD} \n[STATIC_ELC_CTC_CMD]\nTable 72 : Contactor/ACMP command stored in static area', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_1229],[SSCS_ACLog_1230],[SSCS_ACLog_1119]'}, u'SWRD_GLOBAL-ACENM_0249': {'status': u'DELETED', 'body': u'DELETED', 'additional': 'EMPTY', 'derived': 'EMPTY', 'terminal': 'EMPTY', 'safety': 'EMPTY', 'rationale': u'Upper requirement has been deleted.', 'issue': u'1.5', 'refer': 'EMPTY'}, u'SWRD_GLOBAL-ACENM_0321': {'status': u'MATURE', 'body': u'ACENM CSCI shall set the NVM contactor failed Open/Closed status (second column) according to the following logic:\nFAILED if the corresponding contactor failed Open/Closed status (first column) is equal to FAILED\nNOT_FAILED otherwise\nFailed Open/Closed Status\nNVM Failed Open/Closed Status\n{XXX_FAILED_OPEN_FAILURE}\n[NVM_XXX_FAILED_OPEN_FAILURE] \n{XXX_FAILED_CLOSED_FAILURE}\n[NVM_XXX_FAILED_CLOSED_FAILURE]\n{ACMPX_FAILED_OPEN_FAILURE}\n[NVM_ACMPX_FAILED_OPEN_FAILURE]\n{ACMPX_FAILED_CLOSED_FAILURE}\n[NVM_ACMPX_FAILED_CLOSED_FAILURE]\nTable 86 : Contactor command failure Status stored in NVM\nWith XXX = ATC1, ATC3, GLC1, ALC or AEC (for ACLog1) or ATC2, GLC2 or ELC (for ACLog2)\nWith ACMPX = ACMP3A or ACMP1B (for ACLog2) or ACMP3B (for ACLog1)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1112],[SSCS_ACLog_1119]'}, u'SWRD_GLOBAL-ACENM_0320': {'status': u'MATURE', 'body': u'ACENM CSCI shall copy and store IBIT command {IBIT_COMMAND} in static area [STATIC_IBIT_COMMAND] when {IBIT_COMMAND} is different from the value already stored in static area.', 'additional': u'N/A', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'IBIT command is saved in static area in order to take into account the request for the next SW start-up.', 'issue': u'1.4', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0323': {'status': u'MATURE', 'body': u'ACENM CSCI shall set the NVM protection status (third column) according to the following logic:\nACTIVE if the corresponding protection status (second  column) is equal to ACTIVE\nINACTIVE otherwise\nBoard Configuration\nProtection Status\nNVM Protection Status\nAClog2\n{AC_EP_PINE_OVERVOLTAGE_PROT}\n[NVM_AC_EP_PINE_OVERVOLTAGE_PROT]\nAClog2\n{AC_EP_OVERLOAD_PROT}\n[NVM_AC_EP_OVERLOAD_PROT]\nAClog2\n{AC_EP_UNBALANCED_PROT}\n[NVM_AC_EP_UNBALANCED_PROT]\nAClog2\n{AC_EP_PHASE_ORDER_PROT}\n[NVM_AC_EP_PHASE_ORDER_PROT]\nAClog2\n{AC_EP_UNDERFREQUENCY_PROT}\n[NVM_AC_EP_UNDERFREQUENCY_PROT]\nAClog2\n{AC_EP_OVERFREQUENCY_PROT}\n[NVM_AC_EP_OVERFREQUENCY_PROT]\nAClog2\n{AC_EP_UNDERVOLTAGE_PROT}\n[NVM_AC_EP_UNDERVOLTAGE_PROT]\nAClog2\n{AC_EP_OVERVOLTAGE_PROT}\n[NVM_AC_EP_OVERVOLTAGE_PROT]\nAClog2\n{AC_EP_OPEN_PHASE_PROT}\n[NVM_AC_EP_OPEN_PHASE_PROT]\nAClog1 and ACLog2\n{DIFFERENTIAL_PROT}\n[NVM_DIFFERENTIAL_PROT]\nAClog1\n{ANTI_PARALLELING_ATC1_PROT}\n[NVM_ANTI_PARALLELING_ATC1_PROT]\nAClog2\n{ANTI_PARALLELING_ATC2_PROT}\n[NVM_ANTI_PARALLELING_ATC2_PROT]\nAClog1\n{ANTI_PARALLELING_ATC3_PROT}\n[NVM_ANTI_PARALLELING_ATC3_PROT]\nAClog2\n{ANTI_PARALLELING_ELC_PROT}\n[NVM_ANTI_PARALLELING_ELC_PROT]\nTable 87 : Protection Status stored in NVM', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_446],[SSCS_ACLog_830],[SSCS_ACLog_1063],[SSCS_ACLog_1262],[SSCS_ACLog_1142],[SSCS_ACLog_1119]'}, u'SWRD_GLOBAL-ACENM_0322': {'status': u'MATURE', 'body': u'Each protection status shall be stored with its complement value.', 'additional': u'The complement value will be used for data integrity check in NVM.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_1261]'}, u'SWRD_GLOBAL-ACENM_0242': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set the DSO ground servicing mode [DSO_GS_MODE] to:\nACTIVE when {AC_GS_MODE} is equal to ACTIVE\nINACTIVE otherwise', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_504],[SSCS_ACLog_1485]'}, u'SWRD_GLOBAL-ACENM_0243': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set the DSO ground servicing ON state [DSO_GS_ON] to:\nACTIVE when {AC_GS_MODE} is equal to ACTIVE\nINACTIVE otherwise', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_504],[SSCS_ACLog_1485]'}, u'SWRD_GLOBAL-ACENM_0240': {'status': u'MATURE', 'body': u'The ACENM CSCI shall be the same for all board configurations (ACLog1 and ACLog2).', 'additional': u'N/A', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Only one software is used for the two ACLog. One unique part number is used.', 'issue': u'1.0', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0241': {'status': u'MATURE', 'body': u'The ACENM CSCI shall be developed according to Level B of DO178-B R[4]', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'YES', 'safety': u'YES', 'rationale': u'Defined in PSAC.', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1085],[SSCS_ACLog_491]'}, u'SWRD_GLOBAL-ACENM_0329': {'status': u'MATURE', 'body': u'All ACMP/Contactor command failures, Pin programming, RCCB states, Protection status, HW/SW part number shall be initialized once at the beginning of start-up phase with data restored from NVM ({SW_MODE} is equal to INIT).', 'additional': u'All these data are initialized first with values from NVM at start-up. Then, others treatments at start-up can modify the value of these data.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1443]'}, u'SWRD_GLOBAL-ACENM_0328': {'status': u'MATURE', 'body': u'At NVM data restoration, ACENM shall set NVM failure {NVM_FAILURE} according to the following condition:\nFAILED, when a restored data from NVM is corrupted according to its complement value.\nNOT_FAILED, otherwise.', 'additional': u'Whatever startup type, NVM failure declaration in case of corrupted data.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_1261],[SSCS_ACLog_1288]'}, u'SWRD_GLOBAL-ACENM_0244': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set the DSO AC external power overload [DSO_OL_AC_EP] to:\nACTIVE when {AC_EP_OVERLOAD_PROT} is equal to ACTIVE\nINACTIVE otherwise', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_935]'}, u'SWRD_GLOBAL-ACENM_0245': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set the DSO AC external power no overload [DSO_NOL_AC_EP] to:\nINACTIVE when {AC_EP_OVERLOAD_PROT} is equal to ACTIVE\nACTIVE otherwise', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_935]'}, u'SWRD_GLOBAL-ACENM_0400': {'status': u'MATURE', 'body': u'ACENM CSCI shall set the ACLog CAN Software interface {ACLOG_SIV} to 0x01.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.1', 'refer': u'[CAN-IRD-211]'}, u'SWRD_GLOBAL-ACENM_0401': {'status': u'MATURE', 'body': u'ACENM CSCI shall set EDMU SIV {EDMU_SIV} with the value of EDMU software interface version [EDMU_ACLOG_SIV].', 'additional': u'N/A', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Not defined in SSCS/IRD CAN', 'issue': u'1.3', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0402': {'status': u'MATURE', 'body': u'ACENM CSCI shall set the ACMP network reconfiguration state {ACMP_NETWORK_RECONF} to:\nSTART during one software cycle when a start/restart of the ACMP network configuration occurs.\nIN_PROGRESS after one software cycle from a start/restart of the ACMP network configuration.\nFINISHED when all ACMP network configuration sequences are finished or when {SW_MODE} is INIT', 'additional': u'N/A', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Used in order to ignore a IBIT command when the network reconfiguration is in progress.', 'issue': u'1.1', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0403': {'status': u'MATURE', 'body': u'ACENM CSCI shall set the global network reconfiguration state {GLOBAL_NETWORK_RECONF} to:\nFINISHED when {AC_NETWORK_RECONF} and {ACMP_NETWORK_RECONF} are equal to FINISHED or when {SW_MODE} is INIT\nIN_PROGRESS otherwise', 'additional': u'N/A', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Used in order to ignore a IBIT command when the network reconfiguration is in progress.', 'issue': u'1.1', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0404': {'status': u'DELETED', 'body': u'DELETED', 'additional': 'EMPTY', 'derived': 'EMPTY', 'terminal': 'EMPTY', 'safety': 'EMPTY', 'rationale': u'This alias is no more useful (it is not relevant to merge all the CTC anti-paralleling protection).', 'issue': u'1.5', 'refer': 'EMPTY'}, u'SWRD_GLOBAL-ACENM_0405': {'status': u'MATURE', 'body': u'ACENM CSCI shall set global anti-paralleling protection failure status {ANTI_PARALLELING_FAILURE} according to the following logic:\nNOT_FAILED if all CTCX anti-paralleling failure status {ANTI_PARALLELING_CTCX_FAILURE} are equal to NOT_FAILED during 2.5s\xb1250ms.\nFAILED, when at least one CTCX anti-paralleling failure status {ANTI_PARALLELING_CTCX_FAILURE} is set to FAILED during 5s\xb10.5s.\nOtherwise {ANTI_PARALLELING_FAILURE} keeps its previous value.\nWith CTCX = ATC1 and ATC3 (for ACLog1)\nWith CTCX = ATC2 and ELC (for ACLog2)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_845]'}, u'SWRD_GLOBAL-ACENM_0406': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set the AC external power availability {AC_EP_AVAIL} to:\nACTIVE when {AC_EP_PR} is equal to READY and {AC_EP_MODE} is equal to NOT_ACTIVE\nINACTIVE otherwise', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1479]'}, u'SWRD_GLOBAL-ACENM_0407': {'status': u'MATURE', 'body': u'ACENM CSCI shall set software part number {SW_PN} to \u201cECE31-A333-0101\u201d.', 'additional': u'SW Part number is built according to PSAC', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'A software PN is defined for each software build.', 'issue': u'1.5', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0408': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set the CAN signal values in the third column with the value of the signal in the second column according to the board configuration {BOARD_CONFIG}:\n{BOARD_CONFIG}\nSignal Name\nCAN Signal Name\nAClog2\n{AC_GS_MODE}\n[GROUND_SERVICING_ACT]\nTable 114 : Correspondence table between internal signal and CAN signal', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-784]'}, u'SWRD_GLOBAL-ACENM_0409': {'status': u'MATURE', 'body': u'Data field of CAN frame shall be 8 bytes long.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.1', 'refer': u'[CAN-IRD-315]'}, u'SWRD_GLOBAL-ACENM_0082': {'status': u'MATURE', 'body': u'If software mode {SW_MODE} is equal to OPERATIONAL, ACENM CSCI shall set ATCX auxiliary failure {ATCX_AUX_FAILURE} according to the following logic:\nNOT_FAILED, when {ATCX_CTC_FAILURE} is not equal to AUX during 1s\xb1250ms\nFAILED, when  {ATCX_CTC_FAILURE} is equal to AUX during 2s\xb10.5s\nOtherwise {ATCX_AUX_FAILURE} keeps its previous value.\nWith ATCX = ATC1, ATC3 (for ACLog1) or ATC2 (for ACLog2)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_1149],[SSCS_ACLog_922],[SSCS_ACLog_1181],[SSCS_ACLog_614],[SSCS_ACLog_616],[SSCS_ACLog_1410]'}, u'SWRD_GLOBAL-ACENM_0128': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set {ACMPX_I2T_CALC_PROT} to:\nACTIVE when maximum of [ASI_RCCBX_CURRENT_PHA], [ASI_RCCBX_CURRENT_PHB] and [ASI_RCCBX_CURRENT_PHC] currents is above the maximum curve defined hereafter in Figure 10and in Table 66.\nINACTIVE when maximum of [ASI_RCCBX_CURRENT_PHA], [ASI_RCCBX_CURRENT_PHB] and [ASI_RCCBX_CURRENT_PHC] currents is under the minimum curve defined hereafter in Figure 10and in Table 66. \nWith ACMPX = ACMP1B and RCCBX = RCCB2 orACMPX = ACMP3A and RCCBX = RCCB1\nThis protection includes a thermal memory.', 'additional': u'The maximum opening time of the contactor (20ms) is included in the tolerance.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_850],[SSCS_ACLog_459],[SSCS_ACLog_1097],[SSCS_ACLog_1499]'}, u'SWRD_GLOBAL-ACENM_0248': {'status': u'MATURE', 'body': u'ACENM CSCI shall set the DSO ACLog validity [DSO_ACLOG_VALID] to:\nINACTIVE when {PBIT_TEST_RESULT} or {IBIT_TEST_RESULT} or {DSI_MUX_FAILURE} is equal to FAILED\nACTIVE otherwise', 'additional': u'The preliminary tests are already taken into account in the failed mode management.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1107]'}, u'SWRD_GLOBAL-ACENM_0239': {'status': u'MATURE', 'body': u'The ACENM CSCI shall utilize less than 70% of microcontroller FLASH memory', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_1087]'}, u'SWRD_GLOBAL-ACENM_0238': {'status': u'MATURE', 'body': u'The ACENM CSCI shall utilize less than 70% of microcontroller RAM memory', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_1087]'}, u'SWRD_GLOBAL-ACENM_0231': {'status': u'MATURE', 'body': u'ACENM CSCI shall set the CAN signal values in the third column with the value of the signal in the second column according to the board configuration {BOARD_CONFIG}:\n{BOARD_CONFIG}\nSignal Name\nCAN Signal Name\nAClog1 or ACLog2\n{AC_EP_PR}\n[EXT_AC_PR]\nAClog1 or ACLog2\n{AC_EP_AVAIL}\n[EXT_AC_AVAIL]\nTable 113 : Correspondence table between internal signal and CAN signal', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1334],[SSCS_ACLog_1343],[CAN-IRD-180]'}, u'SWRD_GLOBAL-ACENM_0230': {'status': u'MATURE', 'body': u'ACENM CSCI shall set the CAN signal values in the third column with the value of the signal in the second column according to the board configuration {BOARD_CONFIG}:\n{BOARD_CONFIG}\nSignal Name\nCAN Signal Name\nAClog1\n{ACLOG_R_VFG_PR_FAILURE}\n[ACLOG1_R_VFG_PR_NPR_SIG]\nAClog1\n{ACLOG_L_VFG_PR_FAILURE}\n[ACLOG1_L_VFG_PR_NPR_SIG]\nAClog1\n{ACLOG_APU_PR_FAILURE}\n[ACLOG1_APU_PR_NPR_SIG]\nAClog2\n{ACLOG_R_VFG_PR_FAILURE}\n[ACLOG2_R_VFG_PR_NPR_SIG]\nAClog2\n{ACLOG_L_VFG_PR_FAILURE}\n[ACLOG2_L_VFG_PR_NPR_SIG]\nAClog2\n{ACLOG_APU_PR_FAILURE}\n[ACLOG2_APU_PR_NPR_SIG]\nAClog1\n{AC_EP_PR_FAILURE}\n[ACLOG1_AC_EP_PR_NPR_SIG]\nAClog1\n{ANTI_PARALLELING_FAILURE}\n[ACLOG1_ANTI_PARALLELING_FUNC]\nAClog2\n{ANTI_PARALLELING_FAILURE}\n[ACLOG2_ANTI_PARALLELING_FUNC]\nAClog1\n{APU_OVL_NOVL_FAILURE}\n[ACLOG1_APU_OVL_NOVL_SIG]\nAClog1\n{R_VFG_OVL_NOVL_FAILURE}\n[ACLOG1_R_VFG_OVL_NOVL_SIG]\nAClog1\n{L_VFG_OVL_NOVL_FAILURE}\n[ACLOG1_L_VFG_OVL_NOVL_SIG]\nAClog2\n{APU_OVL_NOVL_FAILURE}\n[ACLOG2_APU_OVL_NOVL_SIG]\nAClog2\n{R_VFG_OVL_NOVL_FAILURE}\n[ACLOG2_R_VFG_OVL_NOVL_SIG]\nAClog2\n{L_VFG_OVL_NOVL_FAILURE}\n[ACLOG2_L_VFG_OVL_NOVL_SIG]\nAClog1\n{AC_EP_OVL_NOVL_FAILURE}\n[ACLOG1_AC_EP_OVL_NOVL_SIG]\nAClog1\n{TCB_MATRIX_FAILURE}\n[ACLOG1_TCB_AC1_MATRIX]\nAClog2\n{TCB_MATRIX_FAILURE}\n[ACLOG2_TCB_AC2_MATRIX]\nAClog1\n{CONTACTOR_DSO_FAILURE}\n[ACLOG1_CNTOR_DSO]\nAClog2\n{CONTACTOR_DSO_FAILURE}\n[ACLOG2_CNTOR_DSO]\nAClog1\n{ASI_TEST_RESULT}\n[ACLOG1_ASI]\nAClog2\n{ASI_TEST_RESULT}\n[ACLOG2_ASI]\nAClog1\n{DSI_TEST_RESULT}\n[ACLOG1_DSI]\nAClog2\n{DSI_TEST_RESULT}\n[ACLOG2_DSI]\nAClog1\n{5S_POWER_CUT_FAILURE}\n[ACLOG1_POWER_CUT_5S]\nAClog2\n{5S_POWER_CUT_FAILURE}\n[ACLOG2_POWER_CUT_5S]\nAClog1\n{WATCHDOG_TEST_RESULT}\n[ACLOG1_FUNC_CPU_WDG]\nAClog2\n{WATCHDOG_TEST_RESULT}\n[ACLOG2_FUNC_CPU_WDG]\nAClog1\n{INTERNAL_POWER_SPLY_FAILURE}\n[ACLOG1_INTERNAL_PWR_SPLY_FAIL]\nAClog2\n{INTERNAL_POWER_SPLY_FAILURE}\n[ACLOG2_INTERNAL_PWR_SPLY_FAIL]\nAClog1\n{28V_AC_EP_TR_FAILURE}\n[ACLOG1_28V_AC_EP_TR_PRES_FAIL]\nAClog2\n{28V_AC_EP_TR_FAILURE}\n[ACLOG2_28V_AC_EP_TR_PRES_FAIL]\nAClog1\n{28V_DC_ESS_BUS2_FAILURE}\n[ACLOG1_28V_DC_ESS2_PRES_FAIL]\nAClog2\n{28V_DC_ESS_BUS2_FAILURE}\n[ACLOG2_28V_DC_ESS2_PRES_FAIL]\nAClog1\n{28V_DC_BUS1_FAILURE}\n[ACLOG1_28V_DC1_PRES_FAIL]\nAClog2\n{28V_DC_BUS1_FAILURE}\n[ACLOG2_28V_DC1_PRES_FAIL]\nAClog1\n{OTHER_DSO_FAILURE}\n[ACLOG1_OTHER_DSO]\nAClog2\n{OTHER_DSO_FAILURE}\n[ACLOG2_OTHER_DSO]\nAClog1\n{ELC_AUX_FAILURE}\n[ACLOG1_ELC_AUX_STATUS_FAILED]\nAClog2\n{ELC_AUX_FAILURE}\n[ACLOG2_ELC_AUX_STATUS_FAILED]\nAClog1\n{ATC1_AUX_FAILURE}\n[ACLOG1_ATC1_AUX_STATUS_FAILED]\nACLog2\n{ATC1_AUX_FAILURE}\n[ACLOG2_ATC1_AUX_STATUS_FAILED]\nAClog1\n{ATC2_AUX_FAILURE}\n[ACLOG1_ATC2_AUX_STATUS_FAILED]\nACLog2\n{ATC2_AUX_FAILURE}\n[ACLOG2_ATC2_AUX_STATUS_FAILED]\nAClog1\n{ATC3_AUX_FAILURE}\n[ACLOG1_ATC3_AUX_STATUS_FAILED]\nACLog2\n{ATC3_AUX_FAILURE}\n[ACLOG2_ATC3_AUX_STATUS_FAILED]\nAClog1\n{AEC_AUX_FAILURE}\n[ACLOG1_AEC_AUX_STATUS_FAILED]\nACLog2\n{AEC_AUX_FAILURE}\n[ACLOG2_AEC_AUX_STATUS_FAILED]\nAClog1\n{ATC1_FAILED_OPEN_FAILURE}\n[ACLOG1_ATC1_FAILED_OPEN]\nAClog1\n{ATC3_FAILED_OPEN_FAILURE}\n[ACLOG1_ATC3_FAILED_OPEN]\nAClog1\n{AEC_FAILED_OPEN_FAILURE}\n[ACLOG1_AEC_FAILED_OPEN]\nAClog1\n{ATC1_FAILED_CLOSED_FAILURE}\n[ACLOG1_ATC1_FAILED_CLOSED]\nAClog1\n{ATC3_FAILED_CLOSED_FAILURE}\n[ACLOG1_ATC3_FAILED_CLOSED]\nAClog1\n{AEC_FAILED_CLOSED_FAILURE}\n[ACLOG1_AEC_FAILED_CLOSED]\nACLog2\n{ATC2_FAILED_OPEN_FAILURE}\n[ACLOG2_ATC2_FAILED_OPEN]\nACLog2\n{ELC_FAILED_OPEN_FAILURE}\n[ACLOG2_ELC_FAILED_OPEN]\nACLog2\n{ATC2_FAILED_CLOSED_FAILURE}\n[ACLOG2_ATC2_FAILED_CLOSED]\nACLog2\n{ELC_FAILED_CLOSED_FAILURE}\n[ACLOG2_ELC_FAILED_CLOSED]\nAClog1\n{ACMP3B_RCCB_AUX_FAILURE}\n[ACLOG1_RCCB1_AUX_STATUS_FAIL]\nACLog2\n{ACMP1B_RCCB_AUX_FAILURE}\n[ACLOG2_RCCB2_AUX_STATUS_FAIL]\nACLog2\n{ACMP3A_RCCB_AUX_FAILURE}\n[ACLOG2_RCCB1_AUX_STATUS_FAIL]\nAClog1\n{ACMP3B_FAILED_CLOSED_FAILURE}\n[ACLOG1_RCCB1_FAILED_CLOSED]\nACLog2\n{ACMP1B_FAILED_CLOSED_FAILURE}\n[ACLOG2_RCCB2_FAILED_CLOSED]\nACLog2\n{ACMP3A_FAILED_CLOSED_FAILURE}\n[ACLOG2_RCCB1_FAILED_CLOSED]\nAClog1\n{ACMP3B_FAILED_OPEN_FAILURE}\n[ACLOG1_RCCB1_FAILED_OPEN]\nACLog2\n{ACMP1B_FAILED_OPEN_FAILURE}\n[ACLOG2_RCCB2_FAILED_OPEN]\nACLog2\n{ACMP3A_FAILED_OPEN_FAILURE}\n[ACLOG2_RCCB1_FAILED_OPEN]\nACLog1\n{CT_AC_TIE_TEST_RESULT}\n[ACLOG1_CT_AC_TIE_FAIL]\nACLog2\n{CT_AC_EP_TEST_RESULT}\n[ACLOG2_CT_AC_EP_FAIL]\nACLog2\n{CT_AC_TIE_TEST_RESULT}\n[ACLOG2_CT_AC_TIE_FAIL]\nACLog1\n{ATC3_LOCKOUT_STS_FAILURE}\n[ACLOG1_ATC3_LCKOUT]\nACLog1\n{ATC1_LOCKOUT_STS_FAILURE}\n[ACLOG2_ATC1_LCKOUT]\nACLog2\n{ATC2_LOCKOUT_STS_FAILURE}\n[ACLOG2_ATC2_LCKOUT]\nACLog1\n{WOW_FAILURE}\n[ACLOG1_GND_FLIGHT_STATUS_FAIL]\nACLog2\n{WOW_FAILURE}\n[ACLOG2_GND_FLIGHT_STATUS_FAIL]\nTable 110 : Correspondence table between internal signal and CAN signal', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_574],[SSCS_ACLog_845],[SSCS_ACLog_576],[SSCS_ACLog_937],[SSCS_ACLog_1041],[SSCS_ACLog_957],[SSCS_ACLog_901],[SSCS_ACLog_1187],[SSCS_ACLog_913],[SSCS_ACLog_921],[SSCS_ACLog_926],[SSCS_ACLog_929],[SSCS_ACLog_928],[SSCS_ACLog_941],[SSCS_ACLog_599],[SSCS_ACLog_616],[SSCS_ACLog_880],[SSCS_ACLog_1070],[SSCS_ACLog_1071],[SSCS_ACLog_1072],[SSCS_ACLog_1397],[SSCS_ACLog_1410],[SSCS_ACLog_1453],[SSCS_ACLog_1545],[CAN-IRD-180],[CAN-IRD-216]'}, u'SWRD_GLOBAL-ACENM_0343': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration and software mode {SW_MODE} is equal to OPERATIONAL, ACENM CSCI shall set AC External Power ready failure {AC_EP_PR_FAILURE} according to the following logic:\nNOT_FAILED, when {AC_EP_PR_PRECOMPUTED_FAILURE}is not equal to FAILED during 1.5s\xb1250ms\nFAILED, when  {AC_EP_PR_PRECOMPUTED_FAILURE} is equal to FAILED during 3s\xb10.5s\nOtherwise {AC_EP_PR_FAILURE} keeps its previous value.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_1368]'}, u'SWRD_GLOBAL-ACENM_0342': {'status': u'MATURE', 'body': u'When software mode {SW_MODE} is equal to OPERATIONAL and EDMU flight leg {EDMU_FLIGHT_LEG} value is modified and different from {CURRENT_LEG}, ACENM CSCI shall perform this sequence:\n1/ set the current LEG {CURRENT_LEG} with the EDMU flight leg {EDMU_FLIGHT_LEG} value \n2/ set {FIRST_FAULT_INDEX} to {FIRST_FAULT_INDEX} + {CURRENT_LEG_NB_FAULT}\n3/ set {CURRENT_LEG_NB_FAULT} to 0 \n4/ set {FAULTS_SNAPSHOT} to NO_FAULT', 'additional': u'Roll-over of fault index will be managed at design level (maximum 191 faults can be stored in NVM).', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Define LEG transition according to EDMU flight leg status.', 'issue': u'1.4', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0437': {'status': u'MATURE', 'body': u'When software mode {SW_MODE} is equal to OPERATIONAL, ACENM CSCI shall set the NVM last LEG with fault [NVM_LAST_FLIGHT_LEG_WITH_FAULT] with the current LEG with fault {CURRENT_LEG} value when [NVM_LAST_FLIGHT_LEG_WITH_FAULT] is different from {CURRENT_LEG} and if the number of fault on current leg {CURRENT_LEG_NB_FAULT} is different from 0.', 'additional': u'Write NVM last LEG with fault.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.1', 'refer': u'[SSCS_ACLog_1377]'}, u'SWRD_GLOBAL-ACENM_0340': {'status': u'MATURE', 'body': u'When a new fault has to be register in the current leg, ACENM CSCI shall perform this sequence:\nAdd the new fault in NVM at index {FIRST_FAULT_INDEX} + {CURRENT_LEG_NB_FAULT}\nIncrement of one {CURRENT_LEG_NB_FAULT}\nAdd the new fault in {FAULTS_SNAPSHOT}', 'additional': u'When the maximum number of fault stored in NVM is reached, there is a roll-over of the fault buffer. Roll-over of fault index will be managed at design level (maximum 191 faults can be stored in NVM).', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_1376],[SSCS_ACLog_1381]'}, u'SWRD_GLOBAL-ACENM_0431': {'status': u'MATURE', 'body': u'ACENM CSCI shall set the following ACMPX global protection statuses (second column) according to the following logic:\nACTIVE if the corresponding ACMPX calculated protection statuses (first column) is equal to ACTIVE\nOtherwise ACMPX global protection statuses (second column) keep their previous values.\nACMPX Calculated Protection Statuses\nACMPX Global Protection Statuses\n{ACMPX_I2T_CALC_PROT}\n{ACMPX_I2T_PROT}\n{ACMPX_GFI_CALC_PROT}\n{ACMPX_GFI_PROT}\n{ACMP_ACBUSX_OVERVOLTAGE_CALC_PROT}\n{ACMP_ACBUSX_OVERVOLTAGE_PROT}\n{ACMPX_UNBALANCED_CALC_PROT}\n{ACMPX_UNBALANCED_PROT}\nTable 65 : ACMPX global Protection Statuses\nWith ACMPX = ACMP3A or ACMP1B (for ACLog2) or ACMP3B (for ACLog1)\nWith ACBUSX = ACBUS1 (for ACLog1) or ACBUS2 (for ACLog2)', 'additional': u'NO', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Copy of the ACMP calculated protection statuses in the associated ACMP global protections statuses.', 'issue': u'1.5', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0346': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration and software mode {SW_MODE} is equal to OPERATIONAL, ACENM CSCI shall set AC External Power overload failure {AC_EP_OVL_NOVL_FAILURE} according to the following logic:\nNOT_FAILED, when {AC_EP_OVL_NOVL_PRECOMPUTED_FAILURE}is not equal to FAILED during 1.5s\xb1250ms\nFAILED, when  {AC_EP_OVL_NOVL_PRECOMPUTED_FAILURE} is equal to FAILED during 3s\xb10.5s\nOtherwise {AC_EP_OVL_NOVL_FAILURE} keeps its previous value.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_1369]'}, u'SWRD_GLOBAL-ACENM_0345': {'status': u'MATURE', 'body': u'If software mode {SW_MODE} is equal to OPERATIONAL, ACENM CSCI shall set embedded sources overload failure {XXX_OVL_NOVL_FAILURE} according to the following logic:\nNOT_FAILED, when {XXX_OVL_NOVL_PRECOMPUTED_FAILURE}is not equal to FAILED during 1.5s\xb1250ms\nFAILED, when  {XXX_OVL_NOVL_PRECOMPUTED_FAILURE} is equal to FAILED during 3s\xb1500ms\nOtherwise {XXX_OVL_NOVL_FAILURE} keeps its previous value.\nWith XXX= R_VFG, L_VFG or APU', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_1367]'}, u'SWRD_GLOBAL-ACENM_0344': {'status': u'MATURE', 'body': u'If software mode {SW_MODE} is equal to OPERATIONAL, ACENM CSCI shall set embedded sources  power ready failure {ACLOG_XXX_PR_FAILURE} according to the following logic:\nNOT_FAILED, when {ACLOG_XXX_PR_PRECOMPUTED_FAILURE}is not equal to FAILED during 1.5s\xb1250ms\nFAILED, when  {ACLOG_XXX_PR_PRECOMPUTED_FAILURE} is equal to FAILED during 3s\xb10.5s\nOtherwise {ACLOG_XXX_PR_FAILURE} keeps its previous value.\nWith XXX= R_VFG, L_VFG or APU', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_1366]'}, u'SWRD_GLOBAL-ACENM_0368': {'status': u'MATURE', 'body': u'If {SW_MODE} is equal to OPERATIONAL, ACENM CSCI shall set the CAN X data X bus validity {CAN_X_DATAX_VALIDITY} to:\nVALID if all the DATAX received on BUS_X is valid \nNOT_VALID if the DATAX received on BUS_X is not valid\nWith BUS_X = BUS_1 or BUS_2\nWith DATAX =\nFLIGHT_LEG\nAC_TAIL\nFLIGHT_PHASE\nXFR\nDATE_TIME', 'additional': u'{CAN_X_DATAX_VALIDITY} of ACMPX_CMD are managed in another requirement.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.1', 'refer': u'[SSCS_ACLog_693]'}, u'SWRD_GLOBAL-ACENM_0309': {'status': u'MATURE', 'body': u'When software mode {SW_MODE} is equal to OPERATIONAL, ACENM shall set DSO contactor failure {CONTACTOR_DSO_FAILURE} according to the following logic:\nNOT_FAILED, when all contactor DSO failures are equal to NOT_FAILED.\nOtherwise {CONTACTOR_DSO_FAILURE} is set to FAILED.', 'additional': u'N/A', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Synthesis of all the contactor DSO failures used to compute global contactor DSO failure.', 'issue': u'1.1', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0061': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set ELC contactor failure {ELC_CTC_FAILURE} according to the following logic:\n[DSI_ELC_CMD]\n[DSI_AC_CTC1_OPP_NO]\n[DSI_AC_CTC1_OPP_NC]\n{ELC_CTC_FAILURE}\nOPEN\nOPEN\nCLOSED\nNONE\nOPEN\nOPEN\nOPEN\nAUX\nOPEN\nCLOSED\nCLOSED\nAUX\nOPEN\nCLOSED\nOPEN\nCOMMAND\nCLOSE\nOPEN\nCLOSED\nCOMMAND\nCLOSE\nOPEN\nOPEN\nAUX\nCLOSE\nCLOSED\nCLOSED\nAUX\nCLOSE\nCLOSED\nOPEN\nNONE\nTable 24 : ELC contactor failure management (for ACLog1)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_598],[SSCS_ACLog_596],[SSCS_ACLog_1517]'}, u'SWRD_GLOBAL-ACENM_0141': {'status': u'MATURE', 'body': u'ACENM CSCI shall set CTCX anti-paralleling protection status {ANTI_PARALLELING_CTCX_PROT} to INACTIVE when at least one of the following conditions is true:\n{SW_MODE} is equal to INIT and [STATIC_IBIT_COMMAND] is equal to ACTIVE\n{SW_MODE} is equal to INIT and {START_MODE} is equal to COLD and {WOW_STATUS} is equal to ON_GROUND\n{SW_MODE} is equal to INIT and board position in NVM [NVM_BOARD_CONFIG] has changed \nWith CTCX = ATC1 or ATC3 (for ACLog1) and CTCX = ATC2 or ELC (for ACLog2).', 'additional': u'At start-up these data are initialized first with values from NVM.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1142],[SSCS_ACLog_1262],[SSCS_ACLog_1119],[SSCS_ACLog_1503],[SSCS_ACLog_1443]'}, u'SWRD_GLOBAL-ACENM_0140': {'status': u'MATURE', 'body': u'ACENM CSCI shall set {DIFFERENTIAL_CALC_PROT} to:\nACTIVE when [ASI_DP_PHA], [ASI_DP_PHB] or [ASI_DP_PHC] differential currents are higher than 40A\xb115A for more than 30ms\xb120%.\nINACTIVE otherwise', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_826],[SSCS_ACLog_1499]'}, u'SWRD_GLOBAL-ACENM_0143': {'status': u'MATURE', 'body': u'ACENM CSCI shall set CTCX failed open CAS message [CTCX_FAILED_OPEN_CAS] according to the following logic:\nACTIVATED when {CTCX_FAILED_OPEN_FAILURE} is equal to FAILED\nNOT_ACTIVATED otherwise\nWith CTCX=ATC1, ATC3 or AEC (for ACLog1) or\nwith CTCX=ATC2, or ELC (for ACLog2)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.1', 'refer': u'[SSCS_ACLog_1329],[SSCS_ACLog_1331],[SSCS_ACLog_1333],[SSCS_ACLog_1340],[SSCS_ACLog_1342],[SSCS_ACLog_1336],[SSCS_ACLog_1345],[CAN-IRD-426],[CAN-IRD-427],[CAN-IRD-534]'}, u'SWRD_GLOBAL-ACENM_0142': {'status': u'MATURE', 'body': u'ACENM CSCI shall set anti-paralleling protection status {ANTI_PARALLELING_CTCX_CALC_PROT} according to the following logic:\n{CTCX_CTC_CMD}\n[DSI_CTCX_AP1_PRESENCE]\n[DSI_CTCX_AP2_PRESENCE]\n[DSI_ANTIPARALLELING_DETECTION_CTCX]\n{ANTI_PARALLELING_CTCX_CALC_PROT}\nCLOSE\nPRESENT\nPRESENT\nOPEN\nACTIVE\nOthers combination \nINACTIVE\nTable 67 : Anti-paralleling protection management\nWith CTCX = ATC1 or ATC3 (for ACLog1) and CTCX = ATC2 or ELC (for ACLog2).', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1063],[SSCS_ACLog_832],[SSCS_ACLog_833],[SSCS_ACLog_837]'}, u'SWRD_GLOBAL-ACENM_0145': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set AC EP frequency yellow synoptic message [EXT_AC_FREQUENCY_YELLOW] according to the following logic:\nTRUE when {AC_EP_PHASEA_FREQ}  is lower or equal to 375Hz OR{AC_EP_PHASEA_FREQ} is greater or equal to 485Hz\nFALSE otherwise', 'additional': u'The computation is done on the same frequencies sent on CAN busses [EXT_AC_FREQUENCY]. That\u2019s why there is no tolerance. ', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.1', 'refer': u'[SSCS_ACLog_1350],[SSCS_ACLog_1353],[CAN-IRD-792]'}, u'SWRD_GLOBAL-ACENM_0301': {'status': u'MATURE', 'body': u'When software mode {SW_MODE} is equal to OPERATIONAL, ACENM shall set 28V DC bus 1 fuse {28V_DC_BUS1_FUSE_FAILURE} according to the following logic:\nNOT_FAILED, when 28V DC bus 1 fuse failure to filter {FILT_28V_DC_BUS1_FUSE_FAILURE} is equal to NOT_FAILED during 2.5s\xb10.5s\nFAILED, when 28V DC bus 1 fuse failure to filter {FILT_28V_DC_BUS1_FUSE_FAILURE} is equal to FAILED during 5s\xb10.5s.\nOtherwise {28V_DC_BUS1_FUSE_FAILURE} keeps its previous value.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1181],[SSCS_ACLog_1455]'}, u'SWRD_GLOBAL-ACENM_0147': {'status': u'MATURE', 'body': u'ACENM CSCI shall process TCB matrix monitoring according to the following algorithm:\nFigure 15 : TCB matrix monitoring algorithm', 'additional': u'10ms timing is defined in HSID', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_683],[SSCS_ACLog_1040],[SSCS_ACLog_1038]'}, u'SWRD_GLOBAL-ACENM_0146': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set AC EP power yellow synoptic message [EXT_AC_POWER_YELLOW] according to the following logic:\nTRUE when [ASI_ACEP_VOLTAGE_PHA] * [ASI_ACEP_CURRENT_PHA] + [ASI_ACEP_VOLTAGE_PHB] * [ASI_ACEP_CURRENT_PHB]+ [ASI_ACEP_VOLTAGE_PHC] * [ASI_ACEP_CURRENT_PHC] is lower or equal to 10KVA OR[ ASI_ACEP_VOLTAGE_PHA] * [ASI_ACEP_CURRENT_PHA] + [ASI_ACEP_VOLTAGE_PHB] * [ASI_ACEP_CURRENT_PHB]+ [ASI_ACEP_VOLTAGE_PHC] * [ASI_ACEP_CURRENT_PHC] is greater or equal to 60KVA\nFALSE otherwise', 'additional': u'The computation is done on the same power sent on CAN busses [EXT_AC_LOAD]. That\u2019s why there is no tolerance.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1351],[SSCS_ACLog_1353],[CAN-IRD-792]'}, u'SWRD_GLOBAL-ACENM_0149': {'status': u'MATURE', 'body': u'ACENM CSCI shall set each TCB status {TCB_LYCX_STATUS} with the value of [DSI_AC_CB_LX] when only [DSO_AC_CB_CY] is set to ACTIVE.\nWith X = 1, 2, 3, 4 or 5\nWith Y = 1, 2, 3, 4 or 5', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_683]'}, u'SWRD_GLOBAL-ACENM_0148': {'status': u'MATURE', 'body': u'ACENM CSCI shall start TCB matrix monitoring every 125ms\xb110ms.', 'additional': u'TCB status is sent every 250ms to EDMU through CAN bus.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_682]'}, u'SWRD_GLOBAL-ACENM_0300': {'status': u'MATURE', 'body': u'When software mode {SW_MODE} is equal to OPERATIONAL, ACENM shall set 28V DC bus1 fuse failure to filter {FILT_28V_DC_BUS1_FUSE_FAILURE} according to the following logic:\n28V DC bus 1 upstream fuse [DSI_28V_DC_BUS1_FUSE_UP_STS]\n28V DC bus 1 downstream fuse [DSI_28V_DC_BUS1_STS]\n{FILT_28V_DC_BUS1_FUSE_FAILURE}\nACTIVE\nACTIVE\nNOT_FAILED\nACTIVE\nINACTIVE\nFAILED\nINACTIVE\nACTIVE\nNOT_FAILED\nINACTIVE\nINACTIVE\nNOT_FAILED', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1083]'}, u'SWRD_GLOBAL-ACENM_0398': {'status': u'MATURE', 'body': u'When software mode {SW_MODE} is equal to INIT, ACENM shall set converter failures {CONVERTER_XXX_FAILURE} to NOT_FAILED.\nWith XXX = 28V_5V, 28V_12V and 28V_MINUS_12V ', 'additional': u'N/A', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Default value NOT_FAILED is specified during SW initialization phase.', 'issue': u'1.1', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0012': {'status': u'MATURE', 'body': u'The \u201cMessage number ID\u201d received from EDMU shall be with the following format:\nMSG Name\nMessage number ID\nMSB 13\nLSB 7\nEDMU_XLOG_IDENT\n0\nEDMU_XLOG_NETWORK_STATUS\n8\nEDMU_ACLOG_RCCB_CMD_1\n9\nEDMU_ACLOG_RCCB_CMD_2\n10\nEDMU_XLOG_CB_STATUS\n24\nEDMU_XLOG_DISC1\n25\nEDMU_XLOG_ANALOG\n32\nEDMU_XLOG_BITE\n48\nEDMU_XLOG_ENG_DATA\n56\nEDMU_XLOG_NVM_DL\n72\nEDMU_XLOG_FLIGHTINFO_1\n120\nEDMU_XLOG_FLIGHTINFO_2\n121\nEDMU_XLOG_FLIGHTINFO_3\n122\nEDMU_XLOG_FLIGHTINFO_4\n123\nEDMU_XLOG_FLIGHTINFO_5\n124', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[CAN-IRD-365],[CAN-IRD-525],[CAN-IRD-466],[CAN-IRD-366],[CAN-IRD-526],[CAN-IRD-367],[CAN-IRD-671],[CAN-IRD-499],[CAN-IRD-505],[CAN-IRD-853]'}, u'SWRD_GLOBAL-ACENM_0011': {'status': u'MATURE', 'body': u'The \u201cLRU ID\u201d shall be with the following format:\nLRU\nLRU ID\nMSB\nLSB\nXLOG1\n0\n0\n0\n0\n0\n0\n0\nXLOG2\n0\n0\n0\n0\n0\n0\n1\nACLOG1\n0\n0\n0\n0\n1\n0\n0\nACLOG2\n0\n0\n0\n0\n1\n0\n1', 'additional': u'ACLog 1 is identified either by XLOG1 or ACLOG1. ACLog 2 is identified either by XLOG2 or ACLOG2.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[CAN-IRD-347]'}, u'SWRD_GLOBAL-ACENM_0369': {'status': u'DELETED', 'body': u'DELETED', 'additional': 'EMPTY', 'derived': 'EMPTY', 'terminal': 'EMPTY', 'safety': 'EMPTY', 'rationale': u'This requirement is redundant with requirement SWRD_GLOBAL-ACENM_0383', 'issue': u'1.5', 'refer': 'EMPTY'}, u'SWRD_GLOBAL-ACENM_0041': {'status': u'DELETED', 'body': u'DELETED', 'additional': 'EMPTY', 'derived': 'EMPTY', 'terminal': 'EMPTY', 'safety': 'EMPTY', 'rationale': u'Source availability is no more impacted by failed open/closed states.', 'issue': u'1.5', 'refer': 'EMPTY'}, u'SWRD_GLOBAL-ACENM_0042': {'status': u'MATURE', 'body': u'ACENM CSCI shall set left generator source availability {LEFT_GEN_AVAIL} according to the following logic:\n[DSI_PR_LGEN]\n[DSI_NPR_LGEN]\n{LEFT_GEN_AVAIL}\nREADY\nNOT_READY\nAVAILABLE\nREADY\nREADY\nNOT_AVAILABLE\nNOT_READY\nNOT_READY\nNOT_AVAILABLE\nNOT_READY\nREADY\nNOT_AVAILABLE\nTable 11 : Left generator source availability management', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_571]'}, u'SWRD_GLOBAL-ACENM_0010': {'status': u'MATURE', 'body': u'The \u201cSide ID\u201d shall be with the following format:\nSide\nSide ID\n24\nACLog1\n0\nACLog2\n1', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[CAN-IRD-351]'}, u'SWRD_GLOBAL-ACENM_0044': {'status': u'MATURE', 'body': u'ACENM CSCI shall set APU generator source availability {APU_AVAIL} according to the following logic:\n[DSI_PR_APU]\n[DSI_NPR_APU]\n{APU_AVAIL}\nREADY\nNOT_READY\nAVAILABLE\nREADY\nREADY\nNOT_AVAILABLE\nNOT_READY\nNOT_READY\nNOT_AVAILABLE\nNOT_READY\nREADY\nNOT_AVAILABLE\nTable 12 : APU source availability management', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_571]'}, u'SWRD_GLOBAL-ACENM_0045': {'status': u'DELETED', 'body': u'DELETED', 'additional': 'EMPTY', 'derived': 'EMPTY', 'terminal': 'EMPTY', 'safety': 'EMPTY', 'rationale': u'Source availability is no more impacted by failed open/closed states.', 'issue': u'1.5', 'refer': 'EMPTY'}, u'SWRD_GLOBAL-ACENM_0046': {'status': u'MATURE', 'body': u'ACENM CSCI shall set right generator power ready pre-computed failure {ACLOG_R_VFG_PR_PRECOMPUTED_FAILURE} according to the following logic:\n[DSI_PR_RGEN]\n[DSI_NPR_RGEN]\n{ACLOG_R_VFG_PR_PRECOMPUTED_FAILURE}\nREADY\nNOT_READY\nNOT_FAILED\nREADY\nREADY\nFAILED\nNOT_READY\nNOT_READY\nFAILED\nNOT_READY\nREADY\nNOT_FAILED\nTable 79 : Right generator power ready failure management', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_571],[SSCS_ACLog_924]'}, u'SWRD_GLOBAL-ACENM_0047': {'status': u'MATURE', 'body': u'ACENM CSCI shall set left generator power ready pre-computed failure {ACLOG_L_VFG_PR_PRECOMPUTED_FAILURE} according to the following logic:\n[DSI_PR_LGEN]\n[DSI_NPR_LGEN]\n{ACLOG_L_VFG_PR_PRECOMPUTED_FAILURE}\nREADY\nNOT_READY\nNOT_FAILED\nREADY\nREADY\nFAILED\nNOT_READY\nNOT_READY\nFAILED\nNOT_READY\nREADY\nNOT_FAILED\nTable 80 : Left generator power ready failure management', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_571],[SSCS_ACLog_924]'}, u'SWRD_GLOBAL-ACENM_0048': {'status': u'MATURE', 'body': u'ACENM CSCI shall set APU power ready pre-computed failure {ACLOG_APU_PR_PRECOMPUTED_FAILURE} according to the following logic:\n[DSI_PR_APU]\n[DSI_NPR_APU]\n{ACLOG_APU_PR_PRECOMPUTED_FAILURE}\nREADY\nNOT_READY\nNOT_FAILED\nREADY\nREADY\nFAILED\nNOT_READY\nNOT_READY\nFAILED\nNOT_READY\nREADY\nNOT_FAILED\nTable 81 : APU power ready failure management', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_571],[SSCS_ACLog_924]'}, u'SWRD_GLOBAL-ACENM_0049': {'status': u'MATURE', 'body': u'ACENM CSCI shall set AC Bus 1 supply source {AC_BUSBAR1_SUPPLY_SOURCE},  AC Bus 2 supply source {AC_BUSBAR2_SUPPLY_SOURCE},  AEC Bus supply source {AEC_BUSBAR_SUPPLY_SOURCE} and network configuration index {NETWORK_CONFIGURATION_INDEX} according to the following logic:\n{AC_EP_REQUEST}\n{LEFT_GEN_AVAIL}\n{APU_AVAIL}\n{RIGHT_GEN_AVAIL}\n{AC_BUSBAR1_SUPPLY_SOURCE}\n{AEC_BUSBAR_SUPPLY_SOURCE}\n{AC_BUSBAR2_SUPPLY_SOURCE}\n{NETWORK_CONFIGURATION_INDEX}\nOPEN\nNOT_AVAILABLE\nNOT_AVAILABLE\nNOT_AVAILABLE\nDISCONNECTED\nDISCONNECTED\nDISCONNECTED\n0\nOPEN\nNOT_AVAILABLE\nNOT_AVAILABLE\nAVAILABLE\nR_GEN\nR_GEN\nR_GEN\n1\nOPEN\nNOT_AVAILABLE\nAVAILABLE\nNOT_AVAILABLE\nAPU_GEN\nAPU_GEN\nAPU_GEN\n2\nOPEN\nNOT_AVAILABLE\nAVAILABLE\nAVAILABLE\nAPU_GEN\nAPU_GEN\nR_GEN\n3\nOPEN\nAVAILABLE\nNOT_AVAILABLE\nNOT_AVAILABLE\nL_GEN\nL_GEN\nL_GEN\n4\nOPEN\nAVAILABLE\nNOT_AVAILABLE\nAVAILABLE\nL_GEN\nL_GEN\nR_GEN\n5\nOPEN\nAVAILABLE\nAVAILABLE\nNOT_AVAILABLE\nL_GEN\nAPU_GEN\nAPU_GEN\n6\nOPEN\nAVAILABLE\nAVAILABLE\nAVAILABLE\nL_GEN\nAPU_GEN\nR_GEN\n7\nCLOSE\nNOT_AVAILABLE\nNOT_AVAILABLE\nNOT_AVAILABLE\nEXT_AC\nEXT_AC\nEXT_AC\n8\nCLOSE\nNOT_AVAILABLE\nNOT_AVAILABLE\nAVAILABLE\nEXT_AC\nEXT_AC\nR_GEN\n9\nCLOSE\nNOT_AVAILABLE\nAVAILABLE\nNOT_AVAILABLE\nAPU_GEN\nAPU_GEN\nEXT_AC\n10\nCLOSE\nNOT_AVAILABLE\nAVAILABLE\nAVAILABLE\nAPU_GEN\nAPU_GEN\nR_GEN\n11\nCLOSE\nAVAILABLE\nNOT_AVAILABLE\nNOT_AVAILABLE\nL_GEN\nL_GEN\nEXT_AC\n12\nCLOSE\nAVAILABLE\nNOT_AVAILABLE\nAVAILABLE\nL_GEN\nL_GEN\nR_GEN\n13\nCLOSE\nAVAILABLE\nAVAILABLE\nNOT_AVAILABLE\nL_GEN\nAPU_GEN\nAPU_GEN\n14\nCLOSE\nAVAILABLE\nAVAILABLE\nAVAILABLE\nL_GEN\nAPU_GEN\nR_GEN\n15\nTable 13 : Bus Bas Supply Source management', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_557],[SSCS_ACLog_1225],[CAN-IRD-182]'}, u'SWRD_GLOBAL-ACENM_0363': {'status': u'MATURE', 'body': u'If {SW_MODE} is equal to INIT, ACENM CSCI shall set the CAN X Message X Failure {CAN_X_MSGX_FAILURE} to NOT_FAILED.\nWith CAN_X = CAN_1 or CAN_2\nWith MSG_X =\nIDENT\nNETWORK_STATUS\nRCCB_CMD_1\nRCCB_CMD_2\nCB_STATUS\nDISC1\nANALOG\nBITE\nENG_DATA\nNVM_DL\nFLIGHTINFO_1\nFLIGHTINFO_2\nFLIGHTINFO_3\nFLIGHTINFO_4\nFLIGHTINFO_5', 'additional': u'N/A', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Initial value is provided at start-up.', 'issue': u'1.1', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0362': {'status': u'MATURE', 'body': u'If {SW_MODE} is equal to OPERATIONAL mode, ACENM CSCI shall set the CAN X communication failure status {CAN_X_COMMUNICATION_FAILURE} to\nFAILED if no valid CAN is received on BUS_X during 3s\xb10.1s \nNOT_FAILED if at least one valid CAN is received on BUS_X\nOtherwise {CAN_X_COMMUNICATION_FAILURE} keeps its previous value\nWith X = 1 or 2', 'additional': u'All messages are sent by EDMU every 1s.No valid CAN message means bad CRC on CAN message or bad CAN identifier or no message received or CAN HW error.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.1', 'refer': u'[SSCS_ACLog_693]'}, u'SWRD_GLOBAL-ACENM_0365': {'status': u'MATURE', 'body': u'If {SW_MODE} is equal to INIT, ACENM CSCI shall set CAN data X bus {CAN_DATAX_BUS} for each CAN data X associated with validity to BUS_1.\nWith DATAX =\nFLIGHT_LEG\nAC_TAIL\nFLIGHT_PHASE\nXFR\nDATE_TIME\nACMP3B_CMD\nACMP1B_CMD\nACMP3A_CMD', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.1', 'refer': u'[SSCS_ACLog_692]'}, u'SWRD_GLOBAL-ACENM_0364': {'status': u'MATURE', 'body': u'If {SW_MODE} is equal to OPERATIONAL, ACENM CSCI shall set the CAN X Message X Failure {CAN_X_MSGX_FAILURE} to FAILED if the MSGX (first column) is not received valid on BUS_X during more than the confirmation time specified in the second column:\nCAN message\nDelay\nCAN X message failure\nIDENT\n3s\xb1100ms\n{CAN_X_IDENT_FAILURE}\nNETWORK_STATUS\n150ms\xb110ms\n{CAN_X_NETWORK_STATUS_FAILURE}\nRCCB_CMD_1\n150ms\xb110ms\n{CAN_X_RCCB_CMD_1_FAILURE}\nRCCB_CMD_2\n150ms\xb110ms\n{CAN_X_RCCB_CMD_2_FAILURE}\nCB_STATUS\n750ms\xb150ms\n{CAN_X_CB_STATUS_FAILURE}\nDISC1\n750ms\xb150ms\n{CAN_X_DISC1_FAILURE}\nANALOG\n750ms\xb150ms\n{CAN_X_ANALOG_FAILURE}\nBITE\n3s\xb1100ms\n{CAN_X_BITE_FAILURE}\nENG_DATA\n3s\xb1100ms\n{CAN_X_ENG_DATA_FAILURE}\nNVM_DL\n1500ms\xb1100ms\n{CAN_X_NVM_DL_FAILURE}\nFLIGHTINFO_1\n3s\xb1100ms\n{CAN_X_FLIGHTINFO_1_FAILURE}\nFLIGHTINFO_2\n3s\xb1100ms\n{CAN_X_FLIGHTINFO_2_FAILURE}\nFLIGHTINFO_3\n3s\xb1100ms\n{CAN_X_FLIGHTINFO_3_FAILURE}\nFLIGHTINFO_4\n3s\xb1100ms\n{CAN_X_FLIGHTINFO_4_FAILURE}\nFLIGHTINFO_5\n3s\xb1100ms\n{CAN_X_FLIGHTINFO_5_FAILURE}\nTable 96 : CAN message failure computation\nOtherwise, the CAN X Message X Failure {CAN_X_MSGX_FAILURE} is set to NOT_FAILED\nWith BUS_X = BUS_1 or BUS_2', 'additional': u'A message is considered as failed if this message is not received on the CAN bus during 3 times its period.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_693]'}, u'SWRD_GLOBAL-ACENM_0367': {'status': u'MATURE', 'body': u'After 1s\xb110ms from the start of OPERATIONAL mode and If {SW_MODE} is equal to OPERATIONAL, ACENM CSCI shall set the CAN X ACMPX bus validity {CAN_X_DATAX_VALIDITY} to:\nVALID if the closed command of ACMPX [ACMPX_CLOSED_CMD] received on BUS_X is not equal to INVALID during 150ms\xb110ms \nNOT_VALID if the closed command of ACMPX [ACMPX_CLOSED_CMD] received on BUS_X is equal to INVALID during 150ms\xb110ms\nOtherwise {CAN_X_DATAX_VALIDITY} keeps its previous value\nWith DATAX = ACMP3B_CMD, ACMP3A_CMD or ACMP1B_CMD\nWith BUS_X = BUS_1 or BUS_2', 'additional': u'Each ACMP is commanded only by one CAN bus, commands of an ACMP cannot be split between two CAN busses. If closed command of an ACMP is invalid, all the commands of this ACMP are switches to the other CAN bus.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_728],[SSCS_ACLog_730],[SSCS_ACLog_731],[SSCS_ACLog_693]'}, u'SWRD_GLOBAL-ACENM_0366': {'status': u'MATURE', 'body': u'If {SW_MODE} is equal to OPERATIONAL, ACENM CSCI shall set the CAN 1 ACMPX bus validity {CAN_1_DATAX_VALIDITY} to VALID if the closed command of ACMPX [ACMPX_CLOSED_CMD] received on BUS_1 is not equal to INVALID during 150ms\xb110ms in less than 1s\xb110ms from the start of OPERATIONAL mode\nWith DATAX = ACMP3B_CMD, ACMP3A_CMD and ACMP1B_CMD', 'additional': u'Each ACMP is commanded only by one CAN bus, commands of an ACMP cannot be split between two CAN busses. If closed command of an ACMP is invalid, all the commands of this ACMP are switched to the other CAN bus. ', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_722],[SSCS_ACLog_725],[SSCS_ACLog_731],[SSCS_ACLog_693],[SSCS_ACLog_692]'}, u'SWRD_GLOBAL-ACENM_0197': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall perform EDMU CLOSURE SEQUENCE according to the following algorithm: \nFigure 42 : ACLog2 EDMU closure sequence\n(1): {ACMP3A_RCCB_CMD} is set to CLOSE\n(2): {ACMP1B_RCCB_CMD} is set to CLOSE\n(3): {ACMP1B_RCCB_CMD} and {ACMP3A_RCCB_CMD} are set to CLOSE', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1058],[SSCS_ACLog_1098]'}, u'SWRD_GLOBAL-ACENM_0444': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set the DSO ELC command for ACLog2 [DSO_ELC_CMD] to:\nCLOSE when {ELC_CTC_CMD} is equal to CLOSE\nOPEN otherwise', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1516]'}, u'SWRD_GLOBAL-ACENM_0390': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set the AC External Power phase A frequency validity {AC_EP_PHASEA_FREQ_VDY} to:\nINVALID when the inverse of the time value between each consecutive rising edges which occur on [DSI_ZERO_DETECTOR_PHASEA] is lower than 10Hz or greater than 2000Hz\nVALID otherwise', 'additional': u'N/A. ', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Validity bit is computed for CAN bus.', 'issue': u'1.3', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0446': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cEDMU_XLOG_IDENT\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\nX\nX\n[EDMU_ACLOG_SIV]\nByte 1\nX\nX\nX\nX\nX\nX\nX\nX\nByte 2\nX\nX\nX\nX\nX\nX\nX\nX\nByte 3\nX\nX\nX\nX\nX\nX\nX\nX\nByte 4\nX\nX\nX\nX\nX\nX\nX\nX\nByte 5\nX\nX\nX\nX\nX\nX\nX\nX\nByte 6\nX\nX\nX\nX\nX\nX\nX\nX\nByte 7\nX\nX\nX\nX\nX\nX\nX\nX\nX: Don\u2019t care', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0447': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cEDMU_XLOG_FLIGHTINFO_1\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n[Ten_of_the_year]\n[Units_of_the_year]\nByte 1\n[Units_of_the_day]\n[Units_of_the_month]\nByte 2\n[Tenths_of_minutes]\n[Tens_of_the_day]\n[Tens_of_the_month]\n[VB1]\nByte 3\n[Tens_of_minutes]\n[Units_of_minutes]\nByte 4\nX\n[Tens_of_the_hours]\n[Units_of_the_hours]\nByte 5\nX\nX\nX\nX\nX\nX\nX\nX\nByte 6\nX\nX\nX\nX\nX\nX\nX\nX\nByte 7\nX\nX\nX\nX\nX\nX\nX\nX\nX: Don\u2019t care', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0440': {'status': u'MATURE', 'body': u'When software mode {SW_MODE} is equal to OPERATIONAL, ACENM CSCI shall set the NVM first fault index of the last flight leg [NVM_LAST_FLIGHT_LEG_FIRST_FAULT_INDEX]with the first fault index {FIRST_FAULT_INDEX} value when [NVM_LAST_FLIGHT_LEG_FIRST_FAULT_INDEX] is different from first fault index {FIRST_FAULT_INDEX}.', 'additional': u'Write NVM first fault index.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_1375]'}, u'SWRD_GLOBAL-ACENM_0441': {'status': u'MATURE', 'body': u'if {BOARD_CONFIG} is equal to ACLog1, ACENM CSCI shall set the applied contactor command {AEC_CTC_CMD} according to the following logic:\nOPEN if {AEC_CTC_CMD_TO_APPLY} is equal to OPEN\nCLOSE otherwise', 'additional': u'The command of the AEC contactor is not sequenced. The command is directly applied independently from the other contactors.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.1', 'refer': u'[SSCS_ACLog_1055]'}, u'SWRD_GLOBAL-ACENM_0442': {'status': u'DELETED', 'body': u'DELETED', 'additional': u'EMPTY,\t,\t,\t,\t,\t,\t,\t,\t', 'derived': 'EMPTY', 'terminal': 'EMPTY', 'safety': 'EMPTY', 'rationale': u'FO/FC monitoring of the opposite contactor has been removed in SSCS', 'issue': u'1.5', 'refer': 'EMPTY'}, u'SWRD_GLOBAL-ACENM_0443': {'status': u'DELETED', 'body': u'DELETED', 'additional': u'EMPTY,\t,\t,\t,\t,\t,\t,\t,\t', 'derived': 'EMPTY', 'terminal': 'EMPTY', 'safety': 'EMPTY', 'rationale': u'FO/FC monitoring of the opposite contactor has been removed in SSCS', 'issue': u'1.5', 'refer': 'EMPTY'}, u'SWRD_GLOBAL-ACENM_0448': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cEDMU_XLOG_FLIGHTINFO_2\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n[FLIGHT_LEG_NDO_VALID]\nX\nX\nX\nX\nX\nX\nX\nByte 1\nX\nX\nX\nX\nX\nByte 2\n[FLIGHT_LEG]\nByte 3\nX\nX\nX\nByte 4\nX\nX\nX\nX\nX\nX\nX\nX\nByte 5\nX\nX\nX\nX\nX\nX\nX\nX\nByte 6\nX\nX\nX\nX\nX\nX\nX\nX\nByte 7\nX\nX\nX\nX\nX\nX\nX\nX\nX: Don\u2019t care', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0449': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cEDMU_XLOG_FLIGHTINFO_3\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n[FLIGHT_PHASE_NDO_VALID]\nX\nX\nX\nX\nX\nX\nX\nByte 1\nX\nX\nX\nX\nX\n[MAINT_FLIGHT_LEG_INCREMENT_OUT]\nX\nX\nByte 2\nX\nX\nX\nX\nX\nX\n[PLT_Event_MKR_Selected_OUT]\nX\nByte 3\n[MAINT_AIR_OUT]\n[MAINT_APPROACH_OUT]\n[MAINT_DESCENT_OUT]\n[MAINT_CRUISE_OUT]\n[MAINT_CLIMB_OUT]\n[MAINT_TAKEOFF_OUT]\n[MAINT_TAXI_OUT]\n[MAINT_GROUND_OUT]\nByte 4\nX\nX\nX\nX\nX\nX\nX\nX\nByte 5\nX\nX\nX\nX\nX\nX\nX\nX\nByte 6\nX\nX\nX\nX\nX\nX\nX\nX\nByte 7\nX\nX\nX\nX\nX\nX\nX\nX\nX: Don\u2019t care', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0193': {'status': u'MATURE', 'body': u'If an\u201dAC NETWORK CLOSURE SEQUENCE\u201d is started, ACENM CSCI shall compute the ACMPs sequence to apply {ACMP_SEQUENCE} according to the following table: \n\xa0\n\xa0\nTo  {NETWORK_CONFIGURATION_INDEX}  n+1\n\xa0\n\xa0\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\nFrom{NETWORK_\nCONFIGURATION_\nINDEX} n\n0\nG\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\n1\nG\nG\nP\nB\nP\nB\nP\nB\nP\nB\nP\nB\nP\nB\nP\nB\n2\nG\nP\nG\nR\nP\nP\nB\nP\nP\nP\nR\nR\nP\nP\nB\nP\n3\nG\nB\nR\nG\nP\nB\nP\nB\nP\nB\nR\nG\nP\nB\nP\nB\n4\nG\nP\nP\nP\nG\nR\nR\nR\nP\nP\nP\nP\nR\nR\nR\nR\n5\nG\nB\nP\nB\nR\nG\nR\nG\nP\nB\nP\nB\nR\nG\nR\nG\n6\nG\nP\nB\nP\nR\nR\nG\nR\nP\nP\nP\nP\nR\nR\nG\nR\n7\nG\nB\nP\nB\nR\nG\nR\nG\nP\nB\nP\nB\nR\nG\nR\nG\n8\nG\nP\nP\nP\nP\nP\nP\nP\nG\nR\nB\nP\nB\nP\nP\nP\n9\nG\nB\nP\nB\nP\nB\nP\nB\nR\nG\nP\nB\nP\nB\nP\nB\n10\nG\nP\nR\nR\nP\nP\nP\nP\nB\nP\nG\nR\nB\nP\nP\nP\n11\nG\nB\nR\nG\nP\nB\nP\nB\nP\nB\nR\nG\nP\nB\nP\nB\n12\nG\nP\nP\nP\nR\nR\nR\nR\nB\nP\nB\nP\nG\nR\nR\nR\n13\nG\nB\nP\nB\nR\nG\nR\nG\nP\nB\nP\nB\nR\nG\nR\nG\n14\nG\nP\nB\nP\nR\nR\nG\nR\nP\nP\nP\nP\nR\nR\nG\nR\n15\nG\nB\nP\nB\nR\nG\nR\nG\nP\nB\nP\nB\nR\nG\nR\nG\nG (Grey)    {ACMP_SEQUENCE} is set to NO_ACTION\nP (Purple)  {ACMP_SEQUENCE} is set to ALL_ACMP_SEQUENCES\nB (Blue)     {ACMP_SEQUENCE} is set to ACMP3B_SEQUENCE\nR (Red)     {ACMP_SEQUENCE} is set to ACMP1B3A_SEQUENCES\nTable 92 : ACMP sequence management', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_1056]'}, u'SWRD_GLOBAL-ACENM_0018': {'status': u'MATURE', 'body': u'When {SW_MODE} is equal to FAILED, ACENM shall perform the following actions in an infinite loop:\nIf {CRITICAL_SW_ERROR} is PRESENT\nDo not refresh watchdog\nWait the hardware reset\nif {PRELIMINARY_TEST_RESULT}, {ASI_TEST_RESULT}, {DSI_TEST_RESULT} or {HW_SW_COMPATIBILITY_TEST_RESULT} or {WATCHDOG_TEST_RESULT} or {NVM_CHECK_TEST_RESULT} or {HW_OVERVOLTAGE_PROT_TEST_RESULT}  is FAILED \nRefresh watchdog.\nSet all contactors/ACMP commands to OPEN.\nSet DSO to INACTIVE/OPEN\nStop reception and transmission on CAN bus ', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_892],[SSCS_ACLog_1308],[SSCS_ACLog_1412],[SSCS_ACLog_1363]'}, u'SWRD_GLOBAL-ACENM_0190': {'status': u'MATURE', 'body': u'ACENM CSCI shall set to OPEN the applied open ACMP command according to the following logic:\n{BOARD_CONFIG}\nComputed Open Command\nApplied Open Command\nACLog1\nIf {ACMP3B_RCCB_CMD_TO_APPLY} = OPEN\n{ACMP3B_RCCB_CMD} is set to OPEN\nACLog2\nIf {ACMP1B_RCCB_CMD_TO_APPLY} = OPEN\n{ACMP1B_RCCB_CMD} is set to OPEN\nACLog2\nIf {ACMP3A_RCCB_CMD_TO_APPLY} = OPEN\n{ACMP3A_RCCB_CMD} is set to OPEN\nFigure 36 : Applied open command management', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_1058]'}, u'SWRD_GLOBAL-ACENM_0394': {'status': u'MATURE', 'body': u'When a new FAULT is detected, ACENM CSCI shall set the new fault code according to the following table:\n{BOARD_CONFIG}\nFault detected\nAssociated Fault Code Number\nAClog1 or AClog2\n{WATCHDOG_TEST_RESULT}\n1\nAClog1 or AClog2\n{WOW_FAILURE}\n2\nAClog1 or AClog2\n{5S_POWER_CUT_FAILURE}\n3\nAClog1 or AClog2\n{TCB_MATRIX_FAILURE}\n4\nAClog1 or AClog2\n{DSI_TEST_RESULT}\n5\nAClog1 or AClog2\n{ASI_TEST_RESULT}\n6\nAClog1\n{ATC3_LOCKOUT_STS_FAILURE}\n7\nAClog2\n{ATC2_LOCKOUT_STS_FAILURE}\n7\nAClog1 or AClog2\n{CONTACTOR_DSO_FAILURE}\n8\nAClog1 or AClog2\n{OTHER_DSO_FAILURE}\n9\nAClog1 or AClog2\n{ANTI_PARALLELING_FAILURE}\n13\nAClog1 or AClog2\n{DIFFERENTIAL_PROT}\n14\nAClog1 or AClog2\n{INTERNAL_POWER_SPLY_FAILURE}\n15\nAClog1\n{ACMP_ACBUS1_OVERVOLTAGE_PROT}\n17\nAClog2\n{ACMP_ACBUS2_OVERVOLTAGE_PROT}\n18\nAClog1\n{ATC1_LOCKOUT_STS_FAILURE}\n19\nAClog2\n{AC_EP_OVERVOLTAGE_PROT} or {AC_EP_PINE_OVERVOLTAGE_PROT}\n20\nAClog2\n{AC_EP_UNDERVOLTAGE_PROT}\n21\nAClog2\n{AC_EP_OVERLOAD_PROT}\n22\nAClog2\n{AC_EP_PHASE_ORDER_PROT}\n23\nAClog2\n{AC_EP_UNDERFREQUENCY_PROT}\n24\nAClog2\n{AC_EP_OVERFREQUENCY_PROT}\n25\nAClog1 or AClog2\n{ACLOG_L_VFG_PR_FAILURE}\n26\nAClog1 or AClog2\n{L_VFG_OVL_NOVL_FAILURE}\n27\nAClog1 or AClog2\n{ACLOG_R_VFG_PR_FAILURE}\n28\nAClog1 or AClog2\n{R_VFG_OVL_NOVL_FAILURE}\n29\nAClog1 or AClog2\n{ACLOG_APU_PR_FAILURE}\n30\nAClog1 or AClog2\n{APU_OVL_NOVL_FAILURE}\n31\nAClog1\n{AC_EP_PR_FAILURE}\n32\nAClog1\n{AC_EP_OVL_NOVL_FAILURE}\n33\nAClog1 or AClog2\n{ATC1_AUX_FAILURE}\n34\nAClog1 or AClog2\n{ATC2_AUX_FAILURE}\n35\nAClog1 or AClog2\n{ATC3_AUX_FAILURE}\n36\nAClog1\n{ATC1_FAILED_CLOSED_FAILURE}\n37\nAClog2\n{ELC_FAILED_CLOSED_FAILURE}\n37\nAClog1\n{ATC1_FAILED_OPEN_FAILURE}\n38\nAClog2\n{ELC_FAILED_OPEN_FAILURE}\n38\nAClog1\n{ATC3_FAILED_CLOSED_FAILURE}\n39\nAClog2\n{ATC2_FAILED_CLOSED_FAILURE}\n39\nAClog1\n{ATC3_FAILED_OPEN_FAILURE}\n40\nAClog2\n{ATC2_FAILED_OPEN_FAILURE}\n40\nAClog1\n{AEC_FAILED_CLOSED_FAILURE}\n41\nAClog1\n{AEC_FAILED_OPEN_FAILURE}\n42\nAClog1 \n{ACMP3B_FAILED_CLOSED_FAILURE}\n43\nAClog2\n{ACMP3A_FAILED_CLOSED_FAILURE}\n43\nAClog1 \n{ACMP3B_FAILED_OPEN_FAILURE}\n44\nAClog2\n{ACMP3A_FAILED_OPEN_FAILURE}\n44\nAClog1 \n{ACMP3B_RCCB_AUX_FAILURE}\n45\nAClog2\n{ACMP3A_RCCB_AUX_FAILURE}\n45\nAClog2\n{ACMP1B_FAILED_CLOSED_FAILURE}\n46\nAClog2\n{ACMP1B_FAILED_OPEN_FAILURE}\n47\nAClog1 or AClog2\n{ACMP1B_RCCB_AUX_FAILURE}\n48\nAClog1 or AClog2\n{CT_AC_TIE_TEST_RESULT}\n50\nAClog2\n{CT_AC_EP_TEST_RESULT}\n53\nAClog1 or AClog2\n{ELC_AUX_FAILURE}\n54\nAClog1 or AClog2\n{AEC_AUX_FAILURE}\n55\nAClog1\n{ANTI_PARALLELING_ATC1_PROT}\n56\nAClog2\n{ANTI_PARALLELING_ELC_PROT}\n56\nAClog1\n{ANTI_PARALLELING_ATC3_PROT}\n57\nAClog2\n{ANTI_PARALLELING_ATC2_PROT}\n57', 'additional': u'Each fault has a unique fault code. The power supplies presence failures are not stored in NVM.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1188],[SSCS_ACLog_1380],[SSCS_ACLog_1400]'}, u'SWRD_GLOBAL-ACENM_0191': {'status': u'MATURE', 'body': u'ACENM CSCI shall check if ACMP which are commanded to open are OPEN {ACMP_NTW_GLOBAL_OPEN_CHECK} according to the following logic:\n{BOARD_CONFIG}\nACMP Open condition\nGlobal ACMP Open check {ACMP_NTW_GLOBAL_OPEN_CHECK}\nACLog1\n{ACMP3B_RCCB_CMD} = OPEN and {ACMP3B_RCCB_STATUS} = OPENOR {ACMP3B_FAILED_CLOSED_FAILURE} = FAILED or{ACMP3B_FAILED_OPEN_FAILURE} = FAILED\nYES if all the ACMP open conditions are TRUE\nNO otherwise\nACLog2\nIf { ACMP1B_RCCB_CMD} = OPEN and {ACMP3B_RCCB_STATUS} = OPENOR{ACMP1B_FAILED_CLOSED_FAILURE} = FAILED or{ACMP1B_FAILED_OPEN_FAILURE} = FAILED\nACLog2\nIf { ACMP3A_RCCB_CMD} = OPEN and {ACMP3B_RCCB_STATUS} = OPENOR{ACMP3A_FAILED_CLOSED_FAILURE} = FAILED or{ACMP3A_FAILED_OPEN_FAILURE} = FAILED\nFigure 37 : Open ACMP status check ', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1058],[SSCS_ACLog_1206]'}, u'SWRD_GLOBAL-ACENM_0395': {'status': u'MATURE', 'body': u'ACENM shall set current transformer for AC TIE bus test result {CT_AC_TIE_TEST_RESULT} according to the following logic:\nOK if the AC TIE current transformer test is successful\nFAILED otherwise', 'additional': u'The procedure to test the AC TIE current transformer is described in HSID.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1141],[SSCS_ACLog_1419]'}, u'SWRD_GLOBAL-ACENM_0215': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set the DSO ACMP1B command [DSO_CDE_RCCB2] to:\nCLOSE when {ACMP1B_RCCB_CMD} is equal to CLOSE\nOPEN otherwise', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_744]'}, u'SWRD_GLOBAL-ACENM_0214': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set the DSO ACMP3B command [DSO_CDE_RCCB1] to:\nCLOSE when {ACMP3B_RCCB_CMD} is equal to CLOSE\nOPEN otherwise', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_743]'}, u'SWRD_GLOBAL-ACENM_0217': {'status': u'MATURE', 'body': u'ACENM CSCI shall set AC External connected status [EXT_AC_ONLINE] according to the following logic:\nONLINE when {AC_EP_AVAIL} is equal to ACTIVE and {ELC_CTC_STATUS} is equal to CLOSED\nNOT_ONLINE otherwise', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1335],[SSCS_ACLog_1344]'}, u'SWRD_GLOBAL-ACENM_0216': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set the DSO ACMP3A command [DSO_CDE_RCCB1] to:\nCLOSE when {ACMP3A_RCCB_CMD} is equal to CLOSE\nOPEN otherwise', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_745]'}, u'SWRD_GLOBAL-ACENM_0211': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set the DSO ATC3 command [DSO_CDE_AC_CTC2] to:\nCLOSE when {ATC3_CTC_CMD} is equal to CLOSE\nOPEN otherwise', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_737]'}, u'SWRD_GLOBAL-ACENM_0210': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set the DSO ATC2 command [DSO_CDE_AC_CTC2] to:\nCLOSE when {ATC2_CTC_CMD} is equal to CLOSE\nOPEN otherwise', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_736]'}, u'SWRD_GLOBAL-ACENM_0213': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set the DSO AEC command [DSO_CDE_AC_CTC3] to:\nCLOSE when {AEC_CTC_CMD} is equal to CLOSE\nOPEN otherwise', 'additional': u'For this contactor the hardware logic is inverted.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_739]'}, u'SWRD_GLOBAL-ACENM_0212': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set the DSO ELC command [DSO_CDE_AC_CTC1] to:\nCLOSE when {ELC_CTC_CMD} is equal to CLOSE\nOPEN otherwise', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_738]'}, u'SWRD_GLOBAL-ACENM_0397': {'status': u'MATURE', 'body': u'ACENM CSCI shall set the CAN signal values in the third column with the value of the signal in the second column according to the board configuration {BOARD_CONFIG}:\n{BOARD_CONFIG}\nSignal Name\nCAN Signal Name\nAClog1 or AClog2\n[DSI_28V_DC_ESS_BUS2_STS]\n[ACLOGX_28V_DC_ESS_PRESENT]\nAClog1 or ACLog2\n[DSI_28V_AC_EP_TR_STS]\n[ACLOGX_28V_AC_EP_TR_PRESENT]\nAClog1 or ACLog2\n[DSI_28V_DC_BUS1_STS]\n[ACLOGX_28V_DC_PRESENT]\nTable 108 : Correspondence table between internal signal and CAN signal\nWith X = 1 (for ACLog1) or 2 (for ACLog2)\nFor correspondence between signal and CAN signal:\nACTIVE = PRESENT\nINACTIVE = NOT_PRESENT ', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[CAN-IRD-215]'}, u'SWRD_GLOBAL-ACENM_0219': {'status': u'MATURE', 'body': u'ACENM CSCI shall set communication led command {COMMUNICATION_LED_CMD} to:\nBLINK_GREEN when {GLOBAL_CAN_COMMUNICATION_STATUS} is not equal to NO_CAN_COMMUNICATION.\nOFF otherwise', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_701]'}, u'SWRD_GLOBAL-ACENM_0218': {'status': u'MATURE', 'body': u'ACENM CSCI shall set health led command {HEALTH_LED_CMD} to:\nGREEN when {GLOBAL_BITE_FAILURE_STATUS} is equal to OK.\nRED otherwise', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_701]'}, u'SWRD_GLOBAL-ACENM_0288': {'status': u'MATURE', 'body': u'ACENM CSCI shall set {CBIT_TEST_RESULT} to FAILED if at least one of the following conditions is true:\n{TCB_MATRIX_FAILURE} is equal to FAILED\n{28V_DC_BUS1_FAILURE} is equal to FAILED\n{28V_DC_ESS_BUS2_FAILURE } is equal to FAILED\n{28V_AC_EP_TR_FAILURE} is equal to FAILED\n{CONTACTOR_DSO_FAILURE} is equal to FAILED\n{OTHER_DSO_FAILURE} is equal to FAILED\n{CTCX_FAILED_OPEN_FAILURE} is equal to FAILED\n{CTCX_FAILED_CLOSED_FAILURE} is equal to FAILED\n{CTCX_AUX_FAILURE} is equal to FAILED\n{ATCX_LOCKOUT_STS_FAILURE} is equal to FAILED\n{ACLOG_APU_PR_FAILURE} is equal to FAILED\n{ACLOG_L_VFG_PR_FAILURE} is equal to FAILED\n{ACLOG_R_VFG_PR_FAILURE} is equal to FAILED\n{R_VFG_OVL_NOVL_FAILURE} is equal to FAILED\n{L_VFG_OVL_NOVL_FAILURE} is equal to FAILED\n{APU_OVL_NOVL_FAILURE} is equal to FAILED\n{AC_EP_OVL_NOVL_FAILURE} is equal to FAILED\n{ACMPX_PROT} is equal to ACTIVE\n{AC_EP_PROT} is equal to ACTIVE\n{ANTI_PARALLELING_CTCX_PROT} is equal to ACTIVE\n{ACMPX_FAILED_OPEN_FAILURE} is equal to FAILED\n{ACMPX_FAILED_CLOSED_FAILURE} is equal to FAILED\n{ACMPX_RCCB_AUX_FAILURE} is equal to FAILED\n{ANTI_PARALLELING_FAILURE} is equal to FAILED\n{WOW_FAILURE} is equal to FAILED\n{5S_POWER_CUT_FAILURE} is equal to FAILED\n{INTERNAL_POWER_SPLY_FAILURE} is equal to FAILED\n{DSI_MUX_FAILURE} is equal to FAILED \nOtherwise, {CBIT_TEST_RESULT} is set to OK.\nWith ATCX=ATC1, ATC2 or ATC3\nWith ACMPX=ACMP1B, ACMP3B or ACMP3A\nWith CTCX= ATC1, ATC2, ATC3, ELC, ALC, AEC', 'additional': u'N/A', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Need to have a global synthesis of all the CBIT failures. Need to verify if all the CBIT failures are included in this list', 'issue': u'1.5', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0289': {'status': u'MATURE', 'body': u'When software mode {SW_MODE} is equal to OPERATIONAL, ACENM shall perform the CBIT test including:\nPower supplies presences monitoring\nInternal power supply monitoring\nDSO monitoring\nContactor Failed Open/Failed closed monitoring\nContactor auxiliary discrepancies monitoring\nRCCB Failed Open/Failed closed monitoring\nRCCB auxiliary discrepancies monitoring\nLockout discrepancies monitoring\nPower ready discrepancies monitoring\nSource Overload monitoring\nProtection monitoring\nTCB matrix monitoring\nWOW discrepancies monitoring\nAnti-paralleling protection monitoring\n5s power loss function monitoring\nMultiplexer monitoring', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_909],[SSCS_ACLog_1083],[SSCS_ACLog_912],[SSCS_ACLog_919],[SSCS_ACLog_920],[SSCS_ACLog_1149],[SSCS_ACLog_924],[SSCS_ACLog_927],[SSCS_ACLog_932],[SSCS_ACLog_1194],[SSCS_ACLog_939],[SSCS_ACLog_940],[SSCS_ACLog_942],[SSCS_ACLog_944],[SSCS_ACLog_1038],[SSCS_ACLog_840],[SSCS_ACLog_953],[SSCS_ACLog_902],[SSCS_ACLog_905]'}, u'SWRD_GLOBAL-ACENM_0286': {'status': u'MATURE', 'body': u'When {SW_MODE} is equal to INIT, ACENM CSCI shall set the IBIT result {IBIT_TEST_RESULT} to FAILED if at least one of the following conditions is true:\n{WATCHDOG_TEST_RESULT} is equal to FAILED.\n{NVM_CHECK_TEST_RESULT} is equal to FAILED.\n{ASI_TEST_RESULT} is equal to FAILED.\n{DSI_TEST_RESULT} is equal to FAILED.\n{HW_OVERVOLTAGE_PROT_TEST_RESULT} is equal to FAILED.\n{HW_SW_COMPATIBILITY_TEST_RESULT} is equal to FAILED.\nOtherwise, {IBIT_TEST_RESULT} is set to OK.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_955],[SSCS_ACLog_1141]'}, u'SWRD_GLOBAL-ACENM_0287': {'status': u'DELETED', 'body': u'DELETED', 'additional': 'EMPTY', 'derived': 'EMPTY', 'terminal': 'EMPTY', 'safety': 'EMPTY', 'rationale': u'This requirement is not allocated to software.', 'issue': u'1.5', 'refer': 'EMPTY'}, u'SWRD_GLOBAL-ACENM_0284': {'status': u'MATURE', 'body': u'When {SW_MODE} is equal to INIT and when {IBIT_COMMAND} is equal to ACTIVE, ACENM CSCI shall perform the IBIT in less than 90ms\xb110ms', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1230]'}, u'SWRD_GLOBAL-ACENM_0285': {'status': u'MATURE', 'body': u'When {SW_MODE} is equal to INIT and when {IBIT_COMMAND} is equal to ACTIVE, ACENM CSCI shall perform the IBIT including the following sequence:\n1/ Restore contactor command state from static data (refer to \xa73.2.6.2.3.1.1)\n2/ Check Watchdog test result.\n3/ Apply, before the preliminary tests, the restored contactor command (same as \xa73.2.8.5 \u2013 the close/open check is not performed)\n4/ Perform NVM check test (same test as PBIT).\n5/ Perform HW overvoltage function test (same test as PBIT).\n6/ Perform DSI test (same test as PBIT).\n7/ Perform ASI test (same test as PBIT).\n8/ Perform HW/SW compatibility test (same test as PBIT).\n9/ Set {IBIT_COMMAND} to INACTIVE', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_955],[SSCS_ACLog_1229],[SSCS_ACLog_1141]'}, u'SWRD_GLOBAL-ACENM_0282': {'status': u'MATURE', 'body': u'ACENM shall set DSI test result {DSI_TEST_RESULT} to OK if all the following sequences results are true (FAILED otherwise):\nAll DSI listed in the  are all equal to the value defined in high state column when [DSO_TEST_BITE_DSI] is set to HIGH.\nAll DSI listed in the  are all equal to the value defined in low state column when [DSO_TEST_BITE_DSI] is set to LOW.\nDSI Signal Name\nHigh state\nLow state\n[DSI_AC_CB_LX] with X=1 to 5\nACTIVE\nINACTIVE\n[DSI_AC_CB_TEST]\nACTIVE\nINACTIVE\n[DSI_AC_CTC1_NC]\nCLOSED\nOPEN\n[DSI_AC_CTC1_NO]\nCLOSED\nOPEN\n[DSI_AC_CTC1_OPP_NC]\nCLOSED\nOPEN\n[DSI_AC_CTC1_OPP_NO]\nCLOSED\nOPEN\n[DSI_AC_CTC2_NC]\nCLOSED\nOPEN\n[DSI_AC_CTC2_NO]\nCLOSED\nOPEN\n[DSI_AC_CTC2_OPP_NC]\nCLOSED\nOPEN\n[DSI_AC_CTC2_OPP_NO]\nCLOSED\nOPEN\n[DSI_AC_CTC3_NC]\nCLOSED\nOPEN\n[DSI_AC_CTC3_NO]\nCLOSED\nOPEN\n[DSI_AC_CTC3_OPP_NC]\nCLOSED\nOPEN\n[DSI_AC_CTC3_OPP_NO]\nCLOSED\nOPEN\n[DSI_ACEP_PB]\nACTIVE\nINACTIVE\n[DSI_AEC_OPEN]\nACTIVE\nINACTIVE\n[DSI_AGLC_NC]\nCLOSED\nOPEN\n[DSI_AGLC_NO]\nCLOSED\nOPEN\n[DSI_ATC_LCKOUT1]\nACTIVE\nINACTIVE\n[DSI_ATC_LCKOUT2]\nACTIVE\nINACTIVE\n[DSI_ATC_NLCKOUT1]\nACTIVE\nINACTIVE\n[DSI_ATC_NLCKOUT2]\nACTIVE\nINACTIVE\n[DSI_ELC_OPEN_REQ]\nACTIVE\nINACTIVE\n[DSI_ ELC_CMD]\nCLOSE\nOPEN\n[DSI_GLC1_NC]\nCLOSED\nOPEN\n[DSI_GLC1_NO]\nCLOSED\nOPEN\n[DSI_GLC2_NC]\nCLOSED\nOPEN\n[DSI_GLC2_NO]\nCLOSED\nOPEN\n[DSI_GS_PB]\nACTIVE\nINACTIVE\n[DSI_NOL_AC_EP]\nOVERLOAD\nNOT_OVERLOAD\n[DSI_NOL_APU]\nOVERLOAD\nNOT_OVERLOAD\n[DSI_NOL_LGEN]\nOVERLOAD\nNOT_OVERLOAD\n[DSI_NOL_RGEN]\nOVERLOAD\nNOT_OVERLOAD\n[DSI_NPR_AC_EP]\nREADY\nNOT_READY\n[DSI_NPR_APU]\nREADY\nNOT_READY\n[DSI_NPR_LGEN]\nREADY\nNOT_READY\n[DSI_NPR_RGEN]\nREADY\nNOT_READY\n[DSI_OL_AC_EP]\nOVERLOAD\nNOT_OVERLOAD\n[DSI_OL_APU]\nOVERLOAD\nNOT_OVERLOAD\n[DSI_OL_LGEN]\nOVERLOAD\nNOT_OVERLOAD\n[DSI_OL_RGEN]\nOVERLOAD\nNOT_OVERLOAD\n[DSI_PINPROG1]\nACTIVE\nINACTIVE\n[DSI_PINPROG2]\nACTIVE\nINACTIVE\n[DSI_PINPROG3]\nACTIVE\nINACTIVE\n[DSI_PINPROG4]\nACTIVE\nINACTIVE\n[DSI_PINPROG5]\nACTIVE\nINACTIVE\n[DSI_PR_AC_EP]\nREADY\nNOT_READY\n[DSI_PR_APU]\nREADY\nNOT_READY\n[DSI_PR_LGEN]\nREADY\nNOT_READY\n[DSI_PR_RGEN]\nREADY\nNOT_READY\n[DSI_RCCB1_NC]\nCLOSED\nOPEN\n[DSI_RCCB1_NO]\nCLOSED\nOPEN\n[DSI_RCCB1_OPP_NC]\nCLOSED\nOPEN\n[DSI_RCCB1_OPP_NO]\nCLOSED\nOPEN\n[DSI_RCCB2_NC]\nCLOSED\nOPEN\n[DSI_RCCB2_NO]\nCLOSED\nOPEN\n[DSI_RCCB2_OPP_NC]\nCLOSED\nOPEN\n[DSI_RCCB2_OPP_NO]\nCLOSED\nOPEN\n[DSI_WOW_IN_FLIGHT]\nACTIVE\nINACTIVE\n[DSI_WOW_ON_GROUND]\nACTIVE\nINACTIVE\n[DSI_ACLOG_OPP_VALID]\nACTIVE\nINACTIVE\nTable 69 : DSI signal to test during PBIT', 'additional': u'NO', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_899],[SSCS_ACLog_1084]'}, u'SWRD_GLOBAL-ACENM_0283': {'status': u'MATURE', 'body': u'If {NVM_DATA_LOAD_COMMAND} is equal to ACTIVE, ACENM CSCI shall delay all the write accesses to NVM.', 'additional': u'Write accesses to NVM are not authorized during NVM download to avoid inconsistency in NVM (checksum issue).', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.1', 'refer': u'[SSCS_ACLog_1364]'}, u'SWRD_GLOBAL-ACENM_0280': {'status': u'MATURE', 'body': u'If{BOARD_CONFIG} is equal to ACLog2 configuration, ACENM shall set current transformer for AC EP bus test result {CT_AC_EP_TEST_RESULT} according to the following logic:\nOK if the AC EP current transformer test is successful\nFAILED otherwise', 'additional': u'The procedure to test the AC EP current transformer is described in HSID. This test is only performed on ACLog2 board.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1141],[SSCS_ACLog_1419]'}, u'SWRD_GLOBAL-ACENM_0281': {'status': u'MATURE', 'body': u'ACENM shall set 5s power cut function failure {5S_POWER_CUT_FAILURE} according to the following logic:\nNOT_FAILED if the 5s power cut test is successful\nFAILED otherwise', 'additional': u'The procedure to test the 5s power cut function is described in HSID.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_902]'}, u'SWRD_GLOBAL-ACENM_0051': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set GLC1 contactor status {GLC1_CTC_STATUS} according to the following logic:\n{GLC1_CTC_GCU_ACK}\n[DSI_GLC1_NO]\n[DSI_GLC1_NC]\n{GLC1_CTC_STATUS}\nOPEN\nOPEN\nCLOSED\nOPEN\nOPEN\nOPEN\nOPEN\nOPEN\nOPEN\nCLOSED\nCLOSED\nOPEN\nOPEN\nCLOSED\nOPEN\nCLOSED\nCLOSE\nOPEN\nCLOSED\nOPEN\nCLOSE\nOPEN\nOPEN\nCLOSED\nCLOSE\nCLOSED\nCLOSED\nCLOSED\nCLOSE\nCLOSED\nOPEN\nCLOSED\nTable 14 : GLC1 contactor status management', 'additional': u'N/A ', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_583]'}, u'SWRD_GLOBAL-ACENM_0199': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set the DSO AC external power PIN F [DSO_AC_EP_PINF] according to the following algorithm:\nFigure 44: DSO PIN F signal management\nTransitions are defined hereafter:\nINACT_TO_ACT\n[ASI_ACEP_VOLTAGE_PHA], [ASI_ACEP_VOLTAGE_PHB] and [ASI_ACEP_VOLTAGE_PHC] are higher than 90V\xb15V during 5ms\xb11ms \nACT_TO_INACT\n[ASI_DC_ACEP_PINE] voltage is lower than 18V\xb110% for more than 30ms\xb13ms  OR{AC_EP_PROT} is equal to ACTIVE ORELC failed closed failure {ELC_FAILED_CLOSED_FAILURE} is FAILED', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_839],[SSCS_ACLog_526],[SSCS_ACLog_1396]'}, u'SWRD_GLOBAL-ACENM_0427': {'status': u'MATURE', 'body': u'If software mode {SW_MODE} is equal to OPERATIONAL, ACENM CSCI shall set CAN data X bus {CAN_DATAX_BUS} for each CAN data X according to the following condition:\nConditions\nSet CAN data bus \n{CAN_DATAX_BUS} to\nCAN x interface version status {CAN_X_INTERFACE_VERSION_FAILURE}\nCAN x message status (message including  the data X)\n{CAN_X_MSGX_FAILURE}\nCAN x validity {CAN_X_DATAX_VALIDITY}\nX = 1\nX = 2\nX = 1\nX = 2\nX = 1\nX = 2\nNOT_FAILED\nNOT_FAILED\nNOT_FAILED\nNOT_FAILED\nVALID\nVALID\nUnchanged\nNOT_FAILED\nFAILED\nNOT_FAILED\nX\nVALID\nX\nBUS_1\nNOT_FAILED\nX\nNOT_FAILED\nFAILED\nVALID\nX\nBUS_1\nNOT_FAILED\nX\nNOT_FAILED\nX\nVALID\nNOT_VALID\nBUS_1\nFAILED\nNOT_FAILED\nX\nNOT_FAILED\nX\nVALID\nBUS_2\nX\nNOT_FAILED\nFAILED\nNOT_FAILED\nX\nVALID\nBUS_2\nX\nNOT_FAILED\nX\nNOT_FAILED\nNOT_VALID\nVALID\nBUS_2\nOther cases\nUnchanged\nX: Don\u2019t care\nTable 97 : CAN bus associated with each data with validity\nWith CAN_X =\nWith MSG_X =\nWith DATAX =\nCAN_1\nRCCB_CMD_1\nFLIGHT_LEG\nCAN_2\nRCCB_CMD_2\nAC_TAIL\nDISC1\nFLIGHT_PHASE\nFLIGHTINFO_1\nXFR\nFLIGHTINFO_2\nDATE_TIME\nFLIGHTINFO_3\nACMP3B_CMD\nFLIGHTINFO_4\nACMP1B_CMD\nACMP3A_CMD', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_722],[SSCS_ACLog_725],[SSCS_ACLog_728],[SSCS_ACLog_729],[SSCS_ACLog_730],[SSCS_ACLog_731],[SSCS_ACLog_693],[SSCS_ACLog_694],[CAN-IRD-857]'}, u'SWRD_GLOBAL-ACENM_0138': {'status': u'MATURE', 'body': u'ACENM CSCI shall set CTCX failed closed CAS message [CTCX_FAILED_CLOSED_CAS] according to the following logic:\nACTIVATED when {CTCX_FAILED_CLOSED_FAILURE} is equal to FAILED\nNOT_ACTIVATED otherwise\nWith CTCX=ATC1, ATC3 or AEC (for ACLog1) or\nwith CTCX=ATC2, or ELC (for ACLog2)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.1', 'refer': u'[SSCS_ACLog_1328],[SSCS_ACLog_1330],[SSCS_ACLog_1332],[SSCS_ACLog_1339],[SSCS_ACLog_1341],[SSCS_ACLog_1336],[SSCS_ACLog_1345],[CAN-IRD-426],[CAN-IRD-427],[CAN-IRD-534]'}, u'SWRD_GLOBAL-ACENM_0139': {'status': u'MATURE', 'body': u'ACENM CSCI shall set differential protection status {DIFFERENTIAL_PROT} to INACTIVE when at least one of the following conditions is true:\n{SW_MODE} is equal to INIT and [STATIC_IBIT_COMMAND] is equal to ACTIVE\n{SW_MODE} is equal to INIT and {START_MODE} is equal to COLD and {WOW_STATUS} is equal to ON_GROUND\n{SW_MODE} is equal to INIT and board position in NVM [NVM_BOARD_CONFIG] has changed ', 'additional': u'At start-up these data are initialized first with values from NVM.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_831],[SSCS_ACLog_1142],[SSCS_ACLog_1262],[SSCS_ACLog_1119],[SSCS_ACLog_1443]'}, u'SWRD_GLOBAL-ACENM_0130': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set {ACMPX_GFI_CALC_PROT} to:\nACTIVE in less than 4ms\xb11ms when [ASI_RCCBX_CURRENT_GFI] is higher than 2A\xb10.2A.\nINACTIVE otherwise\nWith ACMPX = ACMP1B and RCCBX = RCCB2 orACMPX = ACMP3A and RCCBX = RCCB1', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_864],[SSCS_ACLog_479],[SSCS_ACLog_480]'}, u'SWRD_GLOBAL-ACENM_0131': {'status': u'MATURE', 'body': u'ACENM CSCI shall manage {ACMP_ACBUSX_OVERVOLTAGE_CALC_PROT} according to the following condition:\nACTIVE when [ASI_AC_BUSBAR_VOLT_PHA] or [ASI_AC_BUSBAR_VOLT_PHB] or [ASI_AC_BUSBAR_VOLT_PHC] is higher than 134V\xb115V for more than 1s\xb1100ms.\nINACTIVE otherwise\nWith ACBUSX = ACBUS1 (for ACLog1) or ACBUSX = ACBUS2 (for ACLog2)', 'additional': u'The maximum opening time of the contactor (20ms) is included in the tolerance.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_865],[SSCS_ACLog_866],[SSCS_ACLog_867],[SSCS_ACLog_1499],[SSCS_ACLog_1457],[SSCS_ACLog_1546]'}, u'SWRD_GLOBAL-ACENM_0132': {'status': u'MATURE', 'body': u'ACENM CSCI shall set ACX bus bar availability {ACX_BUS_AVAIL} according to the following conditions:\nAVAILABLE when [ASI_AC_BUSBAR_VOLT_PHA], [ASI_AC_BUSBAR_VOLT_PHB] or [ASI_AC_BUSBAR_VOLT_PHC] are higher than 90V\xb15V for more than 500ms\xb150ms.\nNOT_AVAILABLE otherwise\nWith ACX = AC1 (for ACLog1) or ACX = AC2 (for ACLog2)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_865],[SSCS_ACLog_866],[SSCS_ACLog_1127]'}, u'SWRD_GLOBAL-ACENM_0133': {'status': u'MATURE', 'body': u'ACENM CSCI shall set ACX opposite bus bar availability {ACX_OPP_BUS_AVAIL} according to the following conditions:\nAVAILABLE when [ASI_AC_OPP_BUSBAR_VOLT_PHA] is higher than 90V\xb15V for more than 500ms\xb150ms.\nNOT_AVAILABLE otherwise\nWith ACX = AC2 (for ACLog1) or ACX = AC1 (for ACLog2)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_865],[SSCS_ACLog_866],[SSCS_ACLog_1128]'}, u'SWRD_GLOBAL-ACENM_0134': {'status': u'MATURE', 'body': u'When software mode {SW_MODE} is equal to OPERATIONAL, ACENM shall set converter failures {CONVERTER_XXX_FAILURE} according to the following logic:\nNOT_FAILED, when converter failures to filter  {FILT_CONVERTER_XXX_FAILURE} is equal to NOT_FAILED during 2.5s\xb10.5s\nFAILED, when converter failures to filter {FILT_CONVERTER_XXX_FAILURE} is equal to FAILED during 5s\xb10.5s.\nOtherwise {CONVERTER_XXX_FAILURE} keeps its previous value.\nWith XXX = 28V_5V, 28V_12V and 28V_MINUS_12V ', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1181],[SSCS_ACLog_1455]'}, u'SWRD_GLOBAL-ACENM_0135': {'status': u'MATURE', 'body': u'When software mode {SW_MODE} is equal to OPERATIONAL, ACENM shall set each other DSO failure (third column) according to the following logic:\nNOT_FAILED, when each other DSO command (first column) is equal to its command feedback (second column) during 1s\xb1250ms\nFAILED, when each other DSO command (first column)  is not equal to its command feedback (second column) during 2s\xb10.5s\nOtherwise other DSO failure keeps its previous value.\nOther DSO Signal Name\nOther DSO Feedback Signal Name\nOther DSO Failure\n[DSO_AC_BUS_AVAIL]\n[DSI_AC_BUS_AVAIL_FEEDBACK]\n{DSO_AC_BUS_AVAIL_FAILURE}\n[DSO_AC_BUS_OPP_AVAIL]\n[DSI_AC_BUS_OPP_AVAIL_FEEDBACK]\n{DSO_AC_BUS_OPP_AVAIL_FAILURE}\n[DSO_AC_CB_CY] \nwith Y=1 to 5\n[DSI_AC_CB_CY_FEEDBACK] Y=1 to 5\n{DSO_AC_CB_CY_FAILURE} Y=1 to 5\n[DSO_AC_CB_TEST]\n[DSI_AC_CB_TEST_FEEDBACK]\n{DSO_AC_CB_TEST_FAILURE}\n[DSO_AC_EP_PINF]\n[DSI_AC_EP_PINF_FEEDBACK]\n{DSO_AC_EP_PINF_FAILURE}\n[DSO_ACEP_AVAIL]\n[DSI_ACEP_AVAIL_FEEDBACK]\n{DSO_ACEP_AVAIL_FAILURE}\n[DSO_ACEP_ON]\n[DSI_ACEP_ON_FEEDBACK]\n{DSO_ACEP_ON_FAILURE}\n[DSO_ACEP_PB_SUPPLY]\n[DSI_ACEP_PB_SUPPLY_FEEDBACK]\n{DSO_ACEP_PB_SUPPLY_FAILURE}\n[DSO_ACLOG_VALID]\n[DSI_ACLOG_VALID_FEEDBACK]\n{DSO_ACLOG_VALID_FAILURE}\n[DSO_BUS_ACKN_APU]\n[DSI_BUS_ACKN_APU_FEEDBACK]\n{DSO_BUS_ACKN_APU_FAILURE}\n[DSO_BUS_ACKN_GEN]\n[DSI_BUS_ACKN_GEN_FEEDBACK]\n{DSO_BUS_ACKN_GEN_FAILURE}\n[DSO_BUS_NACKN_APU]\n[DSI_BUS_NACKN_APU_FEEDBACK]\n{DSO_BUS_NACKN_APU_FAILURE}\n[DSO_BUS_NACKN_GEN]\n[DSI_BUS_NACKN_GEN_FEEDBACK]\n{DSO_BUS_NACKN_GEN_FAILURE}\n[DSO_ELC_OPEN_REQ]\n[DSI_ELC_OPEN_REQ_FEEDBACK]\n{DSO_ELC_OPEN_REQ_FAILURE}\n[DSO_ELC_CMD]\n[DSI_ELC_CMD_FEEDBACK]\n{DSO_ELC_CMD_FAILURE}\n[DSO_GS_MODE]\n[DSI_GS_MODE_FEEDBACK]\n{DSO_GS_MODE_FAILURE}\n[DSO_GS_ON]\n[DSI_GS_ON_FEEDBACK]\n{DSO_GS_ON_FAILURE}\n[DSO_NBPT]\n[DSI_NBPT_FEEDBACK]\n{DSO_NBPT_FAILURE}\n[DSO_NOL_AC_EP]\n[DSI_NOL_AC_EP_FEEDBACK]\n{DSO_NOL_AC_EP_FAILURE}\n[DSO_NPR_AC_EP]\n[DSI_NPR_AC_EP_FEEDBACK]\n{DSO_NPR_AC_EP_FAILURE}\n[DSO_OL_AC_EP]\n[DSI_OL_AC_EP_FEEDBACK]\n{DSO_OL_AC_EP_FAILURE}\n[DSO_PR_AC_EP]\n[DSI_PR_AC_EP_FEEDBACK]\n{DSO_PR_AC_EP_FAILURE}\nTable 74 : Others DSO list to monitor during CBIT', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_912],[SSCS_ACLog_1181],[SSCS_ACLog_1195],[SSCS_ACLog_1084]'}, u'SWRD_GLOBAL-ACENM_0136': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set {ACMP3B_UNBALANCED_CALC_PROT} to:\nACTIVE when current difference between [ASI_RCCB1_CURRENT_PHA] and [ASI_RCCB1_CURRENT_PHB] OR when current difference between [ASI_RCCB1_CURRENT_PHA] and [ASI_RCCB1_CURRENT_PHC] OR when current difference between [ASI_RCCB1_CURRENT_PHB] and [ASI_RCCB1_CURRENT_PHC] are higher than 12.5A\xb15A for more than 980ms\xb150ms.\nINACTIVE otherwise', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_846],[SSCS_ACLog_1114],[SSCS_ACLog_1499]'}, u'SWRD_GLOBAL-ACENM_0137': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set {ACMPX_UNBALANCED_CALC_PROT} to:\nACTIVE when current difference between [ASI_RCCBX_CURRENT_PHA] and [ASI_RCCBX_CURRENT_PHB] OR when current difference between [ASI_RCCBX_CURRENT_PHA] and [ASI_RCCBX_CURRENT_PHC] OR when current difference between [ASI_RCCBX_CURRENT_PHB] and [ASI_RCCBX_CURRENT_PHC] are higher than 12.5A\xb15A for more than 980ms\xb150ms.\nINACTIVE otherwise\nWith ACMPX = ACMP1B and RCCBX = RCCB2 orACMPX = ACMP3A and RCCBX = RCCB1', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_850],[SSCS_ACLog_1114],[SSCS_ACLog_1499]'}, u'SWRD_GLOBAL-ACENM_0488': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG1_EDMU_RCCB_CURRENT_1\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n[ACMP3B_PHA_CURRENT_VALID]\n[ACMP3B_PHA_CURRENT]\nByte 1\n[ACMP3B_PHA_CURRENT]\n0\n0\nByte 2\n[ACMP3B_PHB_CURRENT_VALID]\n[ACMP3B_PHB_CURRENT]\nByte 3\n[ACMP3B_PHB_CURRENT]\n0\n0\nByte 4\n[ACMP3B_PHC_CURRENT_VALID]\n[ACMP3B_PHC_CURRENT]\nByte 5\n[ACMP3B_PHC_CURRENT]\n0\n0\nByte 6\n0\n0\nByte 7\n0\n0\n0', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0489': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG1_EDMU_RCCB_CURRENT_[2/3/4]\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n0\n0\nByte 1\n0\n0\n0\nByte 2\n0\n0\nByte 3\n0\n0\n0\nByte 4\n0\n0\nByte 5\n0\n0\n0\nByte 6\n0\n0\nByte 7\n0\n0\n0', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0521': {'status': u'MATURE', 'body': u'ACENM CSCI shall be able to send back updated ACMP states in less than 190ms\xb110ms from the reception of the EDMU command.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1282]'}, u'SWRD_GLOBAL-ACENM_0520': {'status': u'MATURE', 'body': u'ACENM CSCI shall set AC Ground servicing mode status {AC_GS_MODE} according to the following logic:\nACTIVE when AC Ground servicing request status {AC_GS_REQUEST} is equal to CLOSE AND when ELC contactor status {ELC_CTC_STATUS} is equal to CLOSED\nNOT_ACTIVE otherwise', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_501],[SSCS_ACLog_527]'}, u'SWRD_GLOBAL-ACENM_0527': {'status': u'MATURE', 'body': u'ACENM shall re-execute 5s power cut test if this test has been declared as FAILED the first time.', 'additional': u'The power cut test result of the second execution override the result of the first execution.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_902]'}, u'SWRD_GLOBAL-ACENM_0526': {'status': u'MATURE', 'body': u'ACENM CSCI shall set NVM data load command {NVM_BITE_ERASE_COMMAND} according to the following logic:\nACTIVE if EDMU ACLog NVM reset request [ACLOG_NVM_RESET_REQUEST] is equal to REQUESTED and {SW_MODE} is equal to OPERATIONAL and {WOW_STATUS} is equal to ON_GROUND and {IBIT_COMMAND} is equal to INACTIVE and {NVM_DATA_LOAD_COMMAND} is equal to INACTIVE\nINACTIVE otherwise', 'additional': u'If NVM download request or NVM reset request or IBIT request are sent at the same time, only the first command received will be taken into account', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1528]'}, u'SWRD_GLOBAL-ACENM_0525': {'status': u'MATURE', 'body': u'ACENM CSCI shall clear all the BITE NVM memory (faults and header) if {NVM_BITE_ERASE_COMMAND} is equal to ACTIVE', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1257],[SSCS_ACLog_1078]'}, u'SWRD_GLOBAL-ACENM_0524': {'status': u'MATURE', 'body': u'When {SW_MODE} is equal to INIT, ACENM CSCI shall set WOW status {WOW_STATUS} according to the following logic:\n[DSI_5S_POWER_CUT]\n[DSI_WOW_ON_GROUND]\n[DSI_WOW_IN_FLIGHT]\n{WOW_STATUS}\nX\nACTIVE\nACTIVE\nFLIGHT\nX\nACTIVE\nINACTIVE\nON_GROUND\nX\nINACTIVE\nACTIVE\nFLIGHT\nACTIVE\nINACTIVE\nINACTIVE\nON_GROUND\nINACTIVE\nINACTIVE\nINACTIVE\nFLIGHT\nTable 7 : Aircraft WOW status management (during INIT phase)\nX: don\u2019t care', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1507],[SSCS_ACLog_548]'}, u'SWRD_GLOBAL-ACENM_0480': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG2_EDMU_IO_STATE_4\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n[ACLOG2_DSI_PR_RGEN_VALID]\n0\n[ACLOG2_DSI_AGLC_NC_VALID]\n[ACLOG2_DSI_GLC2_NC_VALID]\n[ACLOG2_DSI_GLC1_NC_VALID]\n[ACLOG2_DSI_AGLC_NO_VALID]\n[ACLOG2_DSI_GLC2_NO_VALID]\n[ACLOG2_DSI_GLC1_NO_VALID]\nByte 1\n[ACLOG2_DSI_PR_APU_VALID]\n[ACLOG2_DSI_NOL_LGEN_VALID]\n[ACLOG2_DSI_OL_LGEN_VALID]\n[ACLOG2_DSI_NPR_LGEN_VALID]\n[ACLOG2_DSI_PR_LGEN_VALID]\n[ACLOG2_DSI_NOL_RGEN_VALID]\n[ACLOG2_DSI_OL_RGEN_VALID]\n[ACLOG2_DSI_NPR_RGEN_VALID]\nByte 2\n[ACLOG2_DSI_PINPROG1_VALID]\n0\n0\n0\n0\n[ACLOG2_DSI_NOL_APU_VALID]\n[ACLOG2_DSI_OL_APU_VALID]\n[ACLOG2_DSI_NPR_APU_VALID]\nByte 3\n[ACLOG2_DSI_ELC_OPEN_REQ_VALID]\n0\n[ACLOG2_DSI_WOW_ON_GROUND_VALID]\n[ACLOG2_DSI_WOW_IN_FLIGHT_VALID]\n[ACLOG2_DSI_PINPROG5_VALID]\n[ACLOG2_DSI_PINPROG4_VALID]\n[ACLOG2_DSI_PINPROG3_VALID]\n[ACLOG2_DSI_PINPROG2_VALID]\nByte 4\n[ACLOG2_DSI_AC_CTC2_NO_VALID]\n[ACLOG2_DSI_AC_CTC1_NO_VALID]\n0\n0\n[ACLOG2_DSI_ATC_NLCKOUT1_VALID]\n[ACLOG2_DSI_ATC_LCKOUT1_VALID]\n0\n0\nByte 5\n[ACLOG2_DSI_AC_CTC1_OPP_NC_VALID]\n[ACLOG2_DSI_AC_CTC3_OPP_NO_VALID]\n[ACLOG2_DSI_AC_CTC2_OPP_NO_VALID]\n[ACLOG2_DSI_AC_CTC1_OPP_NO_VALID]\n0\n[ACLOG2_DSI_AC_CTC2_NC_VALID]\n[ACLOG2_DSI_AC_CTC1_NC_VALID]\n0\nByte 6\n0\n0\n0\n0\n[ACLOG2_DSI_GS_PB_VALID]\n[ACLOG2_DSI_ACEP_PB_VALID]\n[ACLOG2_DSI_AC_CTC3_OPP_NC_VALID]\n[ACLOG2_DSI_AC_CTC2_OPP_NC_VALID]\nByte 7\n[ACLOG2_DSI_RCCB1_OPP_NC_VALID]\n[ACLOG2_DSI_RCCB1_OPP_NO_VALID]\n[ACLOG2_DSI_RCCB2_NC_VALID]\n[ACLOG2_DSI_RCCB2_NO_VALID]\n[ACLOG2_DSI_RCCB1_NC_VALID]\n[ACLOG2_DSI_RCCB1_NO_VALID]\n0\n0', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0481': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG2_EDMU_IO_STATE_5\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n[ACLOG2_DSO_CDE_AC_CTC1_VALID]\n[ACLOG2_DSO_ACEP_PB_SUPPLY_VALID]\n0\n[ACLOG2_DSO_BUS_NACKN_GEN_VALID]\n[ACLOG2_DSO_BUS_ACKN_GEN_VALID]\n[ACLOG2_DSO_AC_EP_PINF_VALID]\n0\n0\nByte 1\n[ACLOG2_DSO_GS_ON_VALID]\n[ACLOG2_DSO_ACEP_ON_VALID]\n[ACLOG2_DSO_ACEP_AVAIL_VALID]\n[ACLOG2_DSO_NBPT_VALID]\n[ACLOG2_DSO_CDE_RCCB2_VALID]\n[ACLOG2_DSO_CDE_RCCB1_VALID]\n0\n[ACLOG2_DSO_CDE_AC_CTC2_VALID]\nByte 2\n0\n[ACLOG2_DSI_ACLOG_OPP_VALID_VALID]\n0\n[ACLOG2_DSO_NOL_AC_EP_VALID]\n[ACLOG2_DSO_OL_AC_EP_VALID]\n[ACLOG2_DSO_NPR_AC_EP_VALID]\n[ACLOG2_DSO_PR_AC_EP_VALID]\n[ACLOG2_DSO_GS_MODE_VALID]\nByte 3\n0\n[ACLOG2_DSI_AC_CB_L1_VALID]\n[ACLOG2_DSI_AC_CB_L2_VALID]\n[ACLOG2_DSI_AC_CB_L3_VALID]\n[ACLOG2_DSI_AC_CB_L4_VALID]\n[ACLOG2_DSI_AC_CB_L5_VALID]\n[ACLOG2_DSI_AC_CB_TEST_VALID]\n0\nByte 4\n0\n0\n0\n0\n0\n0\n0\n0\nByte 5\n0\n0\n0\n0\n0\n0\n0\n0\nByte 6\n[ACLOG2_DSO_AC_BUS_AVAIL_VALID]\n[ACLOG2_DSO_AC_BUS_OPP_AVAIL_VALID]\n[ACLOG2_DSO_ACLOG_VALID_VALID]\n[ACLOG2_DSO_ELC_CMD_VALID]\n0\n0\n0\n0\nByte 7\n0\n0\n0\n0\n0\n0\n0\n0', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0482': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG[1/2]_EDMU_FUSE_STATUS_1\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n0\n0\n0\n0\n0\n0\n0\n0\nByte 1\n0\n0\n0\n0\n0\n0\n0\n0\nByte 2\n0\n0\n0\n0\n0\n0\n0\n0\nByte 3\n0\n0\n0\n0\n0\n0\n0\n0\nByte 4\n0\n0\n0\n0\n0\n0\n0\n0\nByte 5\n0\n0\n0\n0\n0\n0\n0\n0\nByte 6\n0\n0\n0\n0\n0\n0\n0\n0\nByte 7\n0\n0\n0\n0\n0\n0\n0\n0', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394],[CAN-IRD-772]'}, u'SWRD_GLOBAL-ACENM_0483': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG1_EDMU_ANALOG_1\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n0\n0\nByte 1\n0\nByte 2\n0\n0\nByte 3\n0\nByte 4\n0\n0\nByte 5\n0\nByte 6\n0\n0\nByte 7\n0', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0484': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG1_EDMU_ANALOG_2\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n0\n0\nByte 1\n0\nByte 2\n0\n0\nByte 3\n0\nByte 4\n0\n0\nByte 5\n0\nByte 6\n0\n0\nByte 7\n0', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0485': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG[1/2]_EDMU_ANALOG_3\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n0\n0\nByte 1\n0\nByte 2\n0\n0\nByte 3\n0\nByte 4\n0\n0\nByte 5\n0\nByte 6\n0\n0\nByte 7\n0', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0486': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG2_EDMU_ANALOG_1\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n[EXT_AC_LOAD_VALID]\n[EXT_AC_LOAD]\nByte 1\n[EXT_AC_LOAD]\n0\n0\n0\n0\nByte 2\n[EXT_AC_PHA_VOLTAGE_VALID]\n[EXT_AC_PHA_VOLTAGE]\nByte 3\n[EXT_AC_PHA_VOLTAGE]\n0\n0\n0\n0\n0\nByte 4\n[EXT_AC_PHB_VOLTAGE_VALID]\n[EXT_AC_PHB_VOLTAGE]\nByte 5\n[EXT_AC_PHB_VOLTAGE]\n0\n0\n0\n0\n0\nByte 6\n[EXT_AC_PHC_VOLTAGE_VALID]\n[EXT_AC_PHC_VOLTAGE]\nByte 7\n[EXT_AC_PHC_VOLTAGE]\n0\n0\n0\n0\n0', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0487': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG2_EDMU_ANALOG_2\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n[EXT_AC_FREQUENCY_VALID]\n[EXT_AC_FREQUENCY]\nByte 1\n[EXT_AC_FREQUENCY]\n0\n0\n0\n0\nByte 2\n[EXT_AC_PHA_POWER_VALID]\n[EXT_AC_PHA_POWER]\nByte 3\n[EXT_AC_PHA_POWER]\n0\n0\n0\n0\nByte 4\n[EXT_AC_PHB_POWER_VALID]\n[EXT_AC_PHB_POWER]\nByte 5\n[EXT_AC_PHB_POWER]\n0\n0\n0\n0\nByte 6\n[EXT_AC_PHC_POWER_VALID]\n[EXT_AC_PHC_POWER]\nByte 7\n[EXT_AC_PHC_POWER]\n0\n0\n0\n0', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0310': {'status': u'MATURE', 'body': u'When software mode {SW_MODE} is equal to INIT, ACENM shall set other DSO failure {OTHER_DSO_FAILURE} to NOT_FAILED.', 'additional': u'N/A', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Default value NOT_FAILED is specified during SW initialization phase.', 'issue': u'1.0', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0311': {'status': u'MATURE', 'body': u'When software mode {SW_MODE} is equal to OPERATIONAL, ACENM shall set other DSO failure {OTHER_DSO_FAILURE} according to the following logic:\nNOT_FAILED, when all other DSO failures are equal to NOT_FAILED.\nOtherwise {OTHER_DSO_FAILURE} is set to FAILED.', 'additional': u'N/A', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Synthesis of all the other DSO failures used to compute global other DSO failure.', 'issue': u'1.1', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0312': {'status': u'MATURE', 'body': u'When [DSI_TRANSPARENCY] is equal to ACTIVE (ACLOG is powered down), ACENM CSCI shall finish current NVM storage in less than 3ms +/- 1ms and inhibit NVM storage access.', 'additional': u'HW keeps transparency during 5ms and SW read DSI every 1ms. SW uses transparency information to avoid NVM corruption at start up.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_1261]'}, u'SWRD_GLOBAL-ACENM_0313': {'status': u'MATURE', 'body': u'ACENM CSCI shall have NVM mapping organization according to the following table:\nNVM Address\n[0x0100-0x0900]\nNVM context\n[0x0A00-0x9A40]\nNVM failure\nTable 85 : NVM global mapping', 'additional': u'A mapping of NVM is defined in order to specify block of memory allocated by functionalities.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1491]'}, u'SWRD_GLOBAL-ACENM_0314': {'status': u'MATURE', 'body': u'If a data value to store in NVM is already stored in NVM then ACENM shall not store the value again.', 'additional': u'N/A', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Improve lifetime of NVM device by not writing the same value several time.', 'issue': u'1.0', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0315': {'status': u'DELETED', 'body': u'DELETED', 'additional': 'EMPTY', 'derived': 'EMPTY', 'terminal': 'EMPTY', 'safety': 'EMPTY', 'rationale': u'Upper requirement has been removed. HW and SW PN are stored in NVM during ATP.', 'issue': u'1.5', 'refer': 'EMPTY'}, u'SWRD_GLOBAL-ACENM_0316': {'status': u'MATURE', 'body': u'ACENM CSCI shall copy and store pin programming {BOARD_CONFIG} in NVM [NVM_BOARD_CONFIG] when {BOARD_CONFIG} is different from the value already stored in NVM and when {BOARD_CONFIG} is not equal to BOARD_ERROR.', 'additional': u'Improve lifetime of NVM device by not writing the same value several time.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_1119]'}, u'SWRD_GLOBAL-ACENM_0317': {'status': u'MATURE', 'body': u'ACENM CSCI shall copy and store ACMPX trip state {ACMPX_TRIPPED_STATE} in NVM [NVM_ACMPX_TRIPPED_STATE] when {ACMPX_TRIPPED_STATE} value is different from the value already stored in NVM.\nWith ACMPX = ACMP3A or ACMP1B (for ACLog2) or ACMP3B (for ACLog1)', 'additional': u'Improve lifetime of NVM device by not writing the same value several time.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.1', 'refer': u'[SSCS_ACLog_1275]'}, u'SWRD_GLOBAL-ACENM_0251': {'status': u'MATURE', 'body': u'ACLog CAN bus communication shall be compliant with the ARINC-825 standard and with ISO 11898-2, ISO 11898-1 and BOSCH rev2.0B.', 'additional': u'Hardware component used is compliant with the ARINC-825 standard.', 'derived': u'NO', 'terminal': u'YES', 'safety': u'NO', 'rationale': u'Hardware component used is compliant with the ARINC-825 standard.', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_1044],[CAN-IRD-312]'}, u'SWRD_GLOBAL-ACENM_0250': {'status': u'MATURE', 'body': u'ACENM CSCI shall not initiate overload frame due to its incapacity to treat all incoming frames.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[CAN-IRD-324],[SSCS_ACLog_706]'}, u'SWRD_GLOBAL-ACENM_0253': {'status': u'MATURE', 'body': u'When software mode {SW_MODE} is equal to FAILED, ACENM shall set all DSO\xa0to the following value:\nDSO name\nValue\n[DSO_AC_BUS_AVAIL]\nINACTIVE\n[DSO_AC_BUS_OPP_AVAIL]\nINACTIVE\n[DSO_AC_CB_CY] with Y=1 to 5\nINACTIVE\n[DSO_AC_CB_TEST]\nINACTIVE\n[DSO_ACLOG_VALID]\nINACTIVE\n[DSO_PR_AC_EP]\nINACTIVE\n[DSO_NPR_AC_EP]\nINACTIVE\n[DSO_AC_EP_PINF]\nINACTIVE\n[DSO_ACEP_AVAIL]\nINACTIVE\n[DSO_ACEP_ON]\nINACTIVE\n[DSO_ACEP_PB_SUPPLY]\nINACTIVE\n[DSO_BUS_ACKN_GEN]\nINACTIVE\n[DSO_BUS_NACKN_GEN]\nINACTIVE\n[DSO_BUS_ACKN_APU]\nINACTIVE\n[DSO_BUS_NACKN_APU]\nINACTIVE\n[DSO_CDE_AC_CTC1]\nOPEN\n[DSO_CDE_AC_CTC2]\nOPEN\n[DSO_CDE_AC_CTC3]\nOPEN\n[DSO_CDE_RCCB1]\nOPEN\n[DSO_CDE_RCCB2]\nOPEN\n[DSO_ELC_OPEN_REQ]\nINACTIVE\n[DSO_ELC_CMD]\nINACTIVE\n[HEALTH_LED]\nRED\n[DSO_GS_MODE]\nINACTIVE\n[DSO_GS_ON]\nINACTIVE\n[DSO_NBPT]\nINACTIVE\n[DSO_NOL_AC_EP]\nINACTIVE\n[DSO_OL_AC_EP]\nINACTIVE\n[DSO_XXX_SPARE_XX]\nINACTIVE\nTable 5 : DSO values during FAILED mode', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1530]'}, u'SWRD_GLOBAL-ACENM_0252': {'status': u'TBC', 'body': u'ACENM CSCI shall set {SW_MODE} to FAILED if:\n{PRELIMINARY_TEST_RESULT} is equal to FAILED and {SW_MODE} is equal to INIT\nOR\n({ASI_TEST_RESULT} or {DSI_TEST_RESULT} or {HW_SW_COMPATIBILITY_TEST_RESULT} or {WATCHDOG_TEST_RESULT} or {NVM_CHECK_TEST_RESULT} or {HW_OVERVOLTAGE_PROT_TEST_RESULT} is equal to FAILED) AND (PBIT has been executed and {SW_MODE} is equal to INIT) \nOR\n({ASI_TEST_RESULT} or {DSI_TEST_RESULT} or {HW_SW_COMPATIBILITY_TEST_RESULT} or {WATCHDOG_TEST_RESULT} or {NVM_CHECK_TEST_RESULT} or {HW_OVERVOLTAGE_PROT_TEST_RESULT} is equal to FAILED) AND (IBIT has been executed and {SW_MODE} is equal to INIT) \nOR\n{CRITICAL_SW_ERROR} is set to PRESENT and {SW_MODE} is equal to OPERATIONAL', 'additional': u'CT test is an external failure, it does not impact  the SW mode.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Defined in the next SSCS revision (current transformer failure is not an internal failure).', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1363]'}, u'SWRD_GLOBAL-ACENM_0255': {'status': u'MATURE', 'body': u'ACENM CSCI shall set GLCX failed open failure {GLCX_FAILED_OPEN_FAILURE} according to the following logic:\nLatched to FAILED when {GLCX_CTC_STATUS} is equal to OPEN and {GLCX_CTC_FAILURE} is equal to COMMAND during more than 2s\xb1500ms AND {GLCX_FAILED_CLOSED_FAILURE} is not equal to FAILED\nWith GLCX = GLC1 (for ACLog1) or GLC2 (for ACLog2)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_585],[SSCS_ACLog_1216],[SSCS_ACLog_1217],[SSCS_ACLog_919],[SSCS_ACLog_1196]'}, u'SWRD_GLOBAL-ACENM_0254': {'status': u'TBC', 'body': u'ACENM CSCI shall set {SW_MODE} to OPERATIONAL if {PRELIMINARY_TEST_RESULT} is equal to OK AND \n{ASI_TEST_RESULT} and {DSI_TEST_RESULT} and {HW_SW_COMPATIBILITY_TEST_RESULT} and {WATCHDOG_TEST_RESULT} and {NVM_CHECK_TEST_RESULT} and {HW_OVERVOLTAGE_PROT_TEST_RESULT} are equal to OK (if the PBIT or IBIT has been executed) \nAND \n{SW_MODE} is equal to INIT', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'Defined in the next SSCS revision (current transformer failure is not an internal failure).', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1363],[SSCS_ACLog_892]'}, u'SWRD_GLOBAL-ACENM_0257': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set ALC failed open failure {ALC_FAILED_OPEN_FAILURE} according to the following logic:\nLatched to FAILED when {ALC_CTC_STATUS} is equal to OPEN and {ALC_CTC_FAILURE} is equal to COMMAND during more than 2s\xb1500ms AND {ALC_FAILED_CLOSED_FAILURE} is not equal to FAILED', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_585],[SSCS_ACLog_1221],[SSCS_ACLog_919],[SSCS_ACLog_1196]'}, u'SWRD_GLOBAL-ACENM_0256': {'status': u'MATURE', 'body': u'ACENM CSCI shall set GLCX failed closed failure {GLCX_FAILED_CLOSED_FAILURE} according to the following logic:\n(Latched to FAILED when {GLCX_CTC_STATUS} is equal to CLOSED and {GLCX_CTC_FAILURE} is equal to COMMAND during more than 2s\xb1500ms AND {GLCX_FAILED_OPEN_FAILURE} is not equal to FAILED) ORwhen  {GLCX_CTC_FAILURE}  is equal to FAILED_CLOSED_OPP during more than 2s\xb1500ms \nWith GLCX = GLC1 (for ACLog1) or GLC2 (for ACLog2)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_563],[SSCS_ACLog_589],[SSCS_ACLog_591],[SSCS_ACLog_920],[SSCS_ACLog_1196]'}, u'SWRD_GLOBAL-ACENM_0004': {'status': u'MATURE', 'body': u'ACENM CSCI shall refresh all DSO every 1ms', 'additional': u'To be compliant with the protection timing constraint', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_695]'}, u'SWRD_GLOBAL-ACENM_0005': {'status': u'MATURE', 'body': u'ACENM CSCI shall use the following CAN characteristics:\nThe CAN refresh rate  is 500kbit/s\nTime Quantum \u201cTQ\u201d = 125ns.\nNumber of TQ / bit = 16\nRe-synchronization jump width = 1TQ\nLocalization of sample point at 75% with:\nPropagation segment + Phase 1 segment = 11TQ\nPhase 2 segment = 4TQ', 'additional': u'Maximum processing time are dedicated to HW. The \u201cTbit\u201d data is computed from CAN refresh rate (1/500).', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_657],[CAN-IRD-314]'}, u'SWRD_GLOBAL-ACENM_0006': {'status': u'MATURE', 'body': u'ACENM CSCI shall send CAN extended identifier to EDMU with the following format:\nACLog CAN Frame ID\n28\n27\n26\n25\n24\n23\n22\n21\n20\n19\n18\n17\n16\n15\n14\n13\n12\n11\n10\n9\n8\n7\n6\n5\n4\n3\n2\n1\n0\nLRU type ID\nControl Bus ID\nSide ID\nLRU ID\nof the emitter\nMessage Number ID\nSystem ID', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[CAN-IRD-345],[CAN-IRD-313]'}, u'SWRD_GLOBAL-ACENM_0007': {'status': u'MATURE', 'body': u'ACENM CSCI shall receive CAN extended identifier from EDMU with the following format:\nEDMU CAN Frame ID\n28\n27\n26\n25\n24\n23\n22\n21\n20\n19\n18\n17\n16\n15\n14\n13\n12\n11\n10\n9\n8\n7\n6\n5\n4\n3\n2\n1\n0\nLRU type ID\nControl Bus ID\nSide ID\nLRU type ID of the receiver LRU(s)\nLRU ID\nof the receiver LRU(s)\nMessage number ID\nTime Slot Start\nSystem ID', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[CAN-IRD-344],[CAN-IRD-313],[CAN-IRD-331],[CAN-IRD-332]'}, u'SWRD_GLOBAL-ACENM_0001': {'status': u'MATURE', 'body': u'ACENM CSCI shall acquire all ASI at least every 500us', 'additional': u'Acquisition frequency should be twice higher than maximum ASI frequency to measure (650Hz x 2)  ', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A  ', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_695]'}, u'SWRD_GLOBAL-ACENM_0002': {'status': u'MATURE', 'body': u'ACENM CSCI shall acquire all ASI at least with 12 bits resolution.', 'additional': u'N/A', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'To be compliant with the protection measurement accuracy constraint', 'issue': u'1.0', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0003': {'status': u'MATURE', 'body': u'ACENM CSCI shall acquire all DSI at least every 1ms', 'additional': u'To be compliant with the protection timing constraint', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_695]'}, u'SWRD_GLOBAL-ACENM_0417': {'status': u'MATURE', 'body': u'The max time between the last frame of command sent by the EDMU and the first frame of the answer transmitted by the ACENM CSCI shall be less than 3 ms.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.1', 'refer': u'[CAN-IRD-338]'}, u'SWRD_GLOBAL-ACENM_0416': {'status': u'MATURE', 'body': u'If one message cannot be sent in the dedicated time slot, ACENM CSCI shall removed this message from the CAN queue.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.1', 'refer': u'[CAN-IRD-336]'}, u'SWRD_GLOBAL-ACENM_0415': {'status': u'MATURE', 'body': u'ACENM CSCI shall transmit all requested frames during the dedicated time slot of 25ms.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.1', 'refer': u'[CAN-IRD-335],[CAN-IRD-364]'}, u'SWRD_GLOBAL-ACENM_0414': {'status': u'MATURE', 'body': u'ACENM CSCI shall stay silent if no communication is requested by EDMU.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.1', 'refer': u'[CAN-IRD-334]'}, u'SWRD_GLOBAL-ACENM_0413': {'status': u'MATURE', 'body': u'As soon as ACENM CSCI receive a request command on one CAN bus it shall answer with the requested data on this CAN Bus.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.1', 'refer': u'[CAN-IRD-333],[CAN-IRD-107],[CAN-IRD-108],[CAN-IRD-109],[CAN-IRD-110]'}, u'SWRD_GLOBAL-ACENM_0412': {'status': u'MATURE', 'body': u'BNR data used in CAN frames shall be encoded as two\u2019s complement fractional binary.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.1', 'refer': u'[CAN-IRD-727]'}, u'SWRD_GLOBAL-ACENM_0411': {'status': u'MATURE', 'body': u'The structure of a CAN payload and the associated bit numbering convention shall be compliant with the following table:\nByte1Byte2Byte3Byte4Byte5Byte6Byte0Byte7Progress of transmissionBit7Bit0Bit7Bit0Bit7Bit0Bit7Bit0Bit7Bit0Bit7Bit0Bit7Bit0Bit7Bit0Bit NumberPer byteConvention for bit numbering in messagesMSBLSBBit63Bit56Bit55Bit48Bit47Bit40Bit39Bit32Bit31Bit24Bit23Bit16Bit15Bit8Bit7Bit0\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026Byte1Byte2Byte3Byte4Byte5Byte6Byte0Byte7Progress of transmissionBit7Bit0Bit7Bit0Bit7Bit0Bit7Bit0Bit7Bit0Bit7Bit0Bit7Bit0Bit7Bit0Bit NumberPer byteConvention for bit numbering in messagesMSBLSBBit63Bit56Bit55Bit48Bit47Bit40Bit39Bit32Bit31Bit24Bit23Bit16Bit15Bit8Bit7Bit0\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\nByte1\nByte2\nByte3\nByte4\nByte5\nByte6\nByte0\nByte7\nProgress of transmission\nBit7\nBit0\nBit7\nBit0\nBit7\nBit0\nBit7\nBit0\nBit7\nBit0\nBit7\nBit0\nBit7\nBit0\nBit7\nBit0\nBit Number\nPer byte\nConvention for bit numbering in messages\nMSB\nLSB\nBit63\nBit56\nBit55\nBit48\nBit47\nBit40\nBit39\nBit32\nBit31\nBit24\nBit23\nBit16\nBit15\nBit8\nBit7\nBit0\n\u2026\n\u2026\n\u2026\n\u2026\n\u2026\n\u2026\n\u2026\n\u2026\nByte1\nByte2\nByte3\nByte4\nByte5\nByte6\nByte0\nByte7\nProgress of transmission\nBit7\nBit0\nBit7\nBit0\nBit7\nBit0\nBit7\nBit0\nBit7\nBit0\nBit7\nBit0\nBit7\nBit0\nBit7\nBit0\nBit Number\nPer byte\nConvention for bit numbering in messages\nMSB\nLSB\nBit63\nBit56\nBit55\nBit48\nBit47\nBit40\nBit39\nBit32\nBit31\nBit24\nBit23\nBit16\nBit15\nBit8\nBit7\nBit0\n\u2026\n\u2026\n\u2026\n\u2026\n\u2026\n\u2026\n\u2026\n\u2026', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.1', 'refer': u'[CAN-IRD-317]'}, u'SWRD_GLOBAL-ACENM_0410': {'status': u'MATURE', 'body': u'Big Endian representation shall be used exclusively.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.1', 'refer': u'[CAN-IRD-316]'}, u'SWRD_GLOBAL-ACENM_0529': {'status': u'MATURE', 'body': u'ACENM shall set internal power supply failure {INTERNAL_POWER_SPLY_FAILURE} to FAILED if at least one of the following conditions is true:\n{CONVERTER_28V_5V_FAILURE} is equal to FAILED.\n{CONVERTER_28V_12V_FAILURE} is equal to FAILED.\n{CONVERTER_28V_MINUS_12V_FAILURE} is equal to FAILED.\n{28V_DC_BUS1_FUSE_FAILURE} is equal to FAILED.\n{28V_DC_ESS_BUS2_FUSE_FAILURE} is equal to FAILED.\n{28V_AC_EP_TR_FUSE_FAILURE} is equal to FAILED.\nOtherwise, {INTERNAL_POWER_SPLY_FAILURE} is set to NOT_FAILED.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1455]'}, u'SWRD_GLOBAL-ACENM_0528': {'status': u'MATURE', 'body': u'ACENM CSCI shall set TCB matrix failure status {TCB_MATRIX_FAILURE} to:\nNOT_FAILED, when {TCB_MATRIX_PRECOMPUTED_FAILURE} is equal to NOT_FAILED during 2.5s\xb1250ms\nFAILED, when  {TCB_MATRIX_PRECOMPUTED_FAILURE} is equal to FAILED during 5s\xb10.5s\nOtherwise {TCB_MATRIX_FAILURE} keeps its previous value.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1041]'}, u'SWRD_GLOBAL-ACENM_0144': {'status': u'DELETED', 'body': u'DELETED', 'additional': 'EMPTY', 'derived': 'EMPTY', 'terminal': 'EMPTY', 'safety': 'EMPTY', 'rationale': u'Redundant with requirement SWRD_GLOBAL-ACENM_0143', 'issue': u'1.4', 'refer': 'EMPTY'}, u'SWRD_GLOBAL-ACENM_0426': {'status': u'MATURE', 'body': u'The ACENM CSCI shall utilize less than 70% of the microcontroller CPU capability.', 'additional': u'N/A', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'CPU margin is defined in order to keep resource for future evolutions.', 'issue': u'1.1', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0355': {'status': u'MATURE', 'body': u'ACENM CSCI shall set the global CAN communication status {GLOBAL_CAN_COMMUNICATION_STATUS} according to the following conditions:\nNO_CAN_COMMUNICATION if CAN 1 communication failure status {CAN_1_COMMUNICATION_FAILURE} or CAN 1 interface version failure status {CAN_1_INTERFACE_VERSION_FAILURE} are equal to FAILED AND CAN 2 communication failure status {CAN_2_COMMUNICATION_FAILURE} or CAN 2 interface version failure status {CAN_2_INTERFACE_VERSION_FAILURE} are equal to FAILED.\nCAN_PRESENT otherwise.', 'additional': u'This alias is used to check if there is no communication on the two CAN busses.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.1', 'refer': u'[SSCS_ACLog_701]'}, u'SWRD_GLOBAL-ACENM_0356': {'status': u'MATURE', 'body': u'When {SW_MODE} is equal to INIT and {BOARD_CONFIG} is equal to ACLog1, ACENM CSCI shall set contactor commands {AEC_CTC_CMD}, {GLC1_CTC_GCU_ACK}, {ALC_CTC_GCU_ACK}, {ATC1_CTC_CMD} and {ATC3_CTC_CMD} to OPEN. ', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_663]'}, u'SWRD_GLOBAL-ACENM_0425': {'status': u'MATURE', 'body': u'The ACENM CSCI shall utilize less than 70% of the NVM', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.1', 'refer': u'[SSCS_ACLog_1087]'}, u'SWRD_GLOBAL-ACENM_0422': {'status': u'MATURE', 'body': u'ACENM CSCI shall set the following failed closed/open failure status to NOT_FAILED: \n{GLCX_FAILED_CLOSED_FAILURE}\n{ALC_FAILED_CLOSED_FAILURE}\n{ELC_FAILED_CLOSED_FAILURE}\n{ATCX_FAILED_CLOSED_FAILURE}\n{AEC_FAILED_CLOSED_FAILURE}\n{GLCX_FAILED_OPEN_FAILURE}\n{ALC_FAILED_OPEN_FAILURE}\n{ELC_FAILED_OPEN_FAILURE}\n{ATCX_FAILED_OPEN_FAILURE}\n{AEC_FAILED_OPEN_FAILURE}\nwhen at least one of the following conditions is true:\n{SW_MODE} is equal to INIT and [STATIC_IBIT_COMMAND] is equal to ACTIVE\n{SW_MODE} is equal to INIT and {START_MODE} is equal to COLD and {WOW_STATUS} is equal to ON_GROUND\n{SW_MODE} is equal to INIT and board position in NVM [NVM_BOARD_CONFIG] has changed \nWith ATCX = ATC1 or ATC3 (for ACLog1) or ATC2 (for ACLog2)\t\t for FAILED_OPEN_FAILURE\nWith GLCX = GLC1 (for ACLog1) or GLC2 (for ACLog2) \t\t\t for FAILED_OPEN_FAILURE\nWith ATCX = ATC1 or ATC3 (for ACLog1) or ATC2 (for ACLog2)\t\t for FAILED_CLOSED_FAILURE\nWith GLCX = GLC1, GLC2 and GLC3 (for ACLog1 and ACLog2)\t\t for FAILED_CLOSED_FAILURE\nAEC and ALC are only managed by ACLog1\nELC is only managed by ACLog2', 'additional': u'At start-up these data are initialized first with values from NVM.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1119]'}, u'SWRD_GLOBAL-ACENM_0423': {'status': u'MATURE', 'body': u'ACENM CSCI shall set the following failed closed/open failure status to NOT_FAILED: \n{ACMPX_FAILED_CLOSED_FAILURE}\n{ACMPX_FAILED_OPEN_FAILURE}\nwhen at least one of the following conditions is true:\n{SW_MODE} is equal to INIT and [STATIC_IBIT_COMMAND] is equal to ACTIVE\n{SW_MODE} is equal to INIT and {START_MODE} is equal to COLD and {WOW_STATUS} is equal to ON_GROUND\n{SW_MODE} is equal to INIT and board position in NVM [NVM_BOARD_CONFIG] has changed \nWith ACMPX = ACMP3A, ACMP1B (for ACLog2) or ACMP3B (for ACLog1)', 'additional': u'At start-up these data are initialized first with values from NVM.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1119]'}, u'SWRD_GLOBAL-ACENM_0259': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 or AcLog2 configuration, ACENM CSCI shall set ELC failed open failure {ELC_FAILED_OPEN_FAILURE} according to the following logic:\nLatched to FAILED when {ELC_CTC_STATUS} is equal to OPEN and {ELC_CTC_FAILURE} is equal to COMMAND during more than 2s\xb1500ms AND {ELC_FAILED_CLOSED_FAILURE} is not equal to FAILED', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_585],[SSCS_ACLog_919],[SSCS_ACLog_1196]'}, u'SWRD_GLOBAL-ACENM_0352': {'status': u'TBD', 'body': u'When a new FAULT is detected (not already present in NVM), ACENM CSCI shall store in NVM the new fault according to the following condition:\nData to copy in NVM\nNVM Fault data \nNew fault code\n[NVM_FAULT_CODE]\n{CURRENT_LEG_NB_FAULT}\n[NVM_FAULT_INDEX_FOR_THIS_LEG]\n1\n[NVM_FAULT_OCCURRENCE]\n{EDMU_DATE}\n[NVM_DATE_FIRST_OCCURRENCE]\n{EDMU_TIME}\n[NVM_TIME_FIRST_OCCURRENCE]\n{EDMU_DATE}\n[NVM_DATE_LAST_OCCURRENCE]\n{EDMU_TIME}\n[NVM_TIME_LAST_OCCURRENCE]\n{CURRENT_LEG}\n[NVM_FLIGHT_LEG]\n{EDMU_FLIGHT_PHASE}\n[NVM_FLIGHT_PHASE]\n{EDMU_AIRCRAFT_TAIL}\n[NVM_AC_TAIL]\nFault header checksum\n[NVM_FAULT_HEADER_CHECKSUM]\n{BITE_ED_X} TBD\nWith X = 1 to 32\n[NVM_ED]\nEngineering data checksum\n[NVM_ED_CHECKSUM]', 'additional': u'Checksum computation will be defined at design level.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Engineering data are not defined in SSCS.', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1079],[SSCS_ACLog_1384],[SSCS_ACLog_1385],[SSCS_ACLog_1388],[SSCS_ACLog_1389],[SSCS_ACLog_1390],[SSCS_ACLog_1391]'}, u'SWRD_GLOBAL-ACENM_0258': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set ALC failed closed failure {ALC_FAILED_CLOSED_FAILURE} according to the following logic:\nLatched to FAILED when {ALC_CTC_STATUS} is equal to CLOSED and {ALC_CTC_FAILURE} is equal to COMMAND during more than 2s\xb1500ms AND {ALC_FAILED_OPEN_FAILURE} is not equal to FAILED', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_563],[SSCS_ACLog_1219],[SSCS_ACLog_920],SSCS_ACLog_1196]'}, u'SWRD_GLOBAL-ACENM_0353': {'status': u'TBD', 'body': u'When a FAULT to update is detected (already present in NVM), ACENM CSCI shall update in NVM the fault according to the following condition:\nData to copy in NVM\nNVM Fault data \n[NVM_FAULT_OCCURRENCE] + 1\n[NVM_FAULT_OCCURRENCE]\n{EDMU_DATE}\n[NVM_DATE_LAST_OCCURRENCE]\n{EDMU_TIME}\n[NVM_TIME_LAST_OCCURRENCE]\n{EDMU_FLIGHT_PHASE}\n[NVM_FLIGHT_PHASE]\n{EDMU_AIRCRAFT_TAIL}\n[NVM_AC_TAIL]\nFault header checksum\n[NVM_FAULT_HEADER_CHECKSUM]\nSnapshot TBD\n[NVM_ED]\nEngineering data checksum\n[NVM_ED_CHECKSUM]', 'additional': u'Checksum computation will be defined at design level.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Engineering data are not defined in SSCS.', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1079],[SSCS_ACLog_1383],[SSCS_ACLog_1386],[SSCS_ACLog_1387],[SSCS_ACLog_1389],[SSCS_ACLog_1390],[SSCS_ACLog_1391]'}, u'SWRD_GLOBAL-ACENM_0419': {'status': u'DELETED', 'body': u'DELETED', 'additional': 'EMPTY', 'derived': 'EMPTY', 'terminal': 'EMPTY', 'safety': 'EMPTY', 'rationale': u'Merged in SWRD_GLOBAL-ACENM_0013', 'issue': u'1.4', 'refer': 'EMPTY'}, u'SWRD_GLOBAL-ACENM_0178': {'status': u'MATURE', 'body': u'ACENM CSCI shall set to OPEN the applied open contactor command according to the following logic:\n{BOARD_CONFIG}\nComputed Open Command\nApplied Open Command\nACLog1\nIf {ATC1_CTC_CMD_TO_APPLY} = OPEN\n{ATC1_CTC_CMD} is set to OPEN\nACLog2\nIf {ATC2_CTC_CMD_TO_APPLY} = OPEN\n{ATC2_CTC_CMD} is set to OPEN\nACLog1\nIf {ATC3_CTC_CMD_TO_APPLY} = OPEN\n{ATC3_CTC_CMD} is set to OPEN\nACLog2\nIf {ELC_CTC_CMD_TO_APPLY} = OPEN\n{ELC_CTC_CMD} is set to OPEN\nACLog1\nIf {GLC1_CTC_GCU_ACK_TO_APPLY} = OPEN\n{GLC1_CTC_GCU_ACK} is set to OPEN\nACLog2\nIf {GLC2_CTC_GCU_ACK_TO_APPLY} = OPEN\n{GLC2_CTC_GCU_ACK} is set to OPEN\nACLog1\nIf {ALC_CTC_GCU_ACK_TO_APPLY} = OPEN\n{ALC_CTC_GCU_ACK} is set to OPEN\nFigure 29 : Applied open command management', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_559]'}, u'SWRD_GLOBAL-ACENM_0179': {'status': u'MATURE', 'body': u'ACENM CSCI shall check if contactors (not declared as failed) which are commanded to open are OPEN {AC_NTW_GLOBAL_OPEN_CHECK} according to the following logic:\n{BOARD_CONFIG}\nContactor Open condition\nGlobal Contactor Open check\n{AC_NTW_GLOBAL_OPEN_CHECK}\nACLog1\n{ATC1_CTC_CMD} = OPEN and{ATC1_CTC_STATUS} = OPENOR {ATC1_FAILED_CLOSED_FAILURE} = FAILED or{ATC1_FAILED_OPEN_FAILURE} = FAILED\nYES if all the contactor open conditions are TRUE\nNO otherwise\nACLog2\n{ATC2_CTC_CMD} = OPEN and {ATC2_CTC_STATUS } = OPEN OR{ATC2_FAILED_CLOSED_FAILURE} = FAILED or{ATC2_FAILED_OPEN_FAILURE} = FAILED\nACLog1\n{ATC3_CTC_CMD} = OPEN and {ATC3_CTC_STATUS} = OPEN OR {ATC3_FAILED_CLOSED_FAILURE} = FAILED or{ATC3_FAILED_OPEN_FAILURE} = FAILED\nACLog2\n{ELC_CTC_CMD} = OPEN and {ELC_CTC_STATUS} = OPEN OR {ELC_FAILED_CLOSED_FAILURE} = FAILED or{ELC_FAILED_OPEN_FAILURE} = FAILED\nACLog1\n{GLC1_CTC_GCU_ACK} = OPEN and {GLC1_CTC_STATUS} = OPEN OR{GLC1_FAILED_CLOSED_FAILURE} = FAILED or{GLC1_FAILED_OPEN_FAILURE} = FAILED\nACLog2\n{GLC2_CTC_GCU_ACK} = OPEN and {GLC2_CTC_STATUS} = OPEN OR{GLC2_FAILED_CLOSED_FAILURE} = FAILED or{GLC2_FAILED_OPEN_FAILURE} = FAILED\nACLog1\n{ALC_CTC_GCU_ACK} = OPEN and {ALC_CTC_STATUS} = OPEN OR{ALC_FAILED_CLOSED_FAILURE} = FAILED or{ALC_FAILED_OPEN_FAILURE} = FAILED\nFigure 30 : Open contactor status check ', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_561]'}, u'SWRD_GLOBAL-ACENM_0174': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall start/restart a network configuration when one at least of the following conditions is true:\nATC1 command to apply on contactor {ATC1_CTC_CMD_TO_APPLY} has changed\nATC3 command to apply on contactor {ATC3_CTC_CMD_TO_APPLY} has changed\nGLC1 command to apply on contactor {GLC1_CTC_GCU_ACK_TO_APPLY} has changed\nALC command to apply on contactor {ALC_CTC_GCU_ACK_TO_APPLY} has changed', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_559],[SSCS_ACLog_585],[SSCS_ACLog_565],[SSCS_ACLog_1462]'}, u'SWRD_GLOBAL-ACENM_0175': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall start/restart a network configuration when one at least of the following conditions is true:\nATC2 command to apply on contactor {ATC2_CTC_CMD_TO_APPLY} has changed\nGLC2 command to apply on contactor {GLC2_CTC_GCU_ACK_TO_APPLY} has changed\nELC command to apply on contactor {ELC_CTC_CMD_TO_APPLY} has changed', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_559],[SSCS_ACLog_585],[SSCS_ACLog_565],[SSCS_ACLog_1462]'}, u'SWRD_GLOBAL-ACENM_0176': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set AC EP voltage yellow synoptic message [EXT_AC_VOLTAGE_YELLOW] according to the following logic:\nTRUE when [ASI_ACEP_VOLTAGE_PHA] , [ASI_ACEP_VOLTAGE_PHB] or [ASI_ACEP_VOLTAGE_PHC]  is lower or equal to 97V OR[ASI_ACEP_VOLTAGE_PHA] , [ASI_ACEP_VOLTAGE_PHB] or [ASI_ACEP_VOLTAGE_PHC]   is greater or equal to 134V\nFALSE otherwise', 'additional': u'The computation is done on the same voltage sent on CAN busses [EXT_AC_PHX_VOLTAGE]. That\u2019s why there is no tolerance.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.1', 'refer': u'[SSCS_ACLog_1352],[SSCS_ACLog_1353],[CAN-IRD-792]'}, u'SWRD_GLOBAL-ACENM_0177': {'status': u'MATURE', 'body': u'At the start/restart of network configuration, ACENM CSCI shall apply opening contactor sequence according to the following algorithm: \nFigure 28 : Contactor Opening Sequence', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_559],[SSCS_ACLog_585],[SSCS_ACLog_561]'}, u'SWRD_GLOBAL-ACENM_0170': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set ACMP3A contactor command {ACMP3A_RCCB_CMD_TO_APPLY} according to the following logic (close conditions are evaluated first):\nFigure 25 : ACMP3A RCCB equation (close command)\nOtherwise {ACMP3A_RCCB_CMD_TO_APPLY} is set to OPEN.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1068],[SSCS_ACLog_1121],[SSCS_ACLog_721],[SSCS_ACLog_661],[SSCS_ACLog_466],[SSCS_ACLog_483],[SSCS_ACLog_869],[SSCS_ACLog_1122],[SSCS_ACLog_1320],[SSCS_ACLog_1321]'}, u'SWRD_GLOBAL-ACENM_0171': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set ACMP3B contactor command {ACMP3B_RCCB_CMD_TO_APPLY} according to the following logic (close conditions are evaluated first):\nFigure 26 : ACMP3B RCCB equation (close command)\nOtherwise {ACMP3B_RCCB_CMD_TO_APPLY} is set to OPEN.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1068],[SSCS_ACLog_1121],[SSCS_ACLog_721],[SSCS_ACLog_661],[SSCS_ACLog_463],[SSCS_ACLog_481],[SSCS_ACLog_868],[SSCS_ACLog_1122],[SSCS_ACLog_1320],[SSCS_ACLog_1321]'}, u'SWRD_GLOBAL-ACENM_0172': {'status': u'MATURE', 'body': u'When {SW_MODE} is equal to INIT and {BOARD_CONFIG} is equal to ACLog1, ACENM CSCI shall set contactor commands to apply {AEC_CTC_CMD_TO_APPLY}, {GLC1_CTC_GCU_ACK_TO_APPLY}, {ALC_CTC_GCU_ACK_TO_APPLY}, {ATC1_CTC_CMD_TO_APPLY} and {ATC3_CTC_CMD_TO_APPLY} to OPEN. ', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_663]'}, u'SWRD_GLOBAL-ACENM_0173': {'status': u'MATURE', 'body': u'When {SW_MODE} is equal to INIT and {BOARD_CONFIG} is equal to ACLog2, ACENM CSCI shall set contactor commands to apply {GLC2_CTC_GCU_ACK_TO_APPLY}, {ATC2_CTC_CMD_TO_APPLY} and {ELC_CTC_CMD_TO_APPLY} to OPEN. ', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_663]'}, u'SWRD_GLOBAL-ACENM_0358': {'status': u'MATURE', 'body': u'ACENM CSCI shall set the AC network reconfiguration state {AC_NETWORK_RECONF} to:\nSTART during one software cycle when a start/restart of the AC network configuration occurs.\nIN_PROGRESS after one software cycle from a start/restart of the AC network configuration.\nFINISHED when all AC network configuration sequences are finished or when {SW_MODE} is INIT', 'additional': u'N/A', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Used in order to ignore a IBIT command when the network reconfiguration is in progress.', 'issue': u'1.0', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0418': {'status': u'MATURE', 'body': u'ACENM CSCI shall send specific messages according to the dedicated request from EDMU as defined in the following table only if \u201cTime Slot Start\u201d of EDMU message request is equal to \u201cYes\u201d:\nEDMU CAN message request\nACLog CAN message answer\nEDMU_XLOG_NETWORK_STATUS\nACLOG[1/2]_EDMU_NETWORK_STATUS_1\nACLOG[1/2]_EDMU_NETWORK_STATUS_2\nACLOG[1/2]_EDMU_CNTOR_STATUS\nACLOG[1/2]_EDMU_PROTEC_STATUS\nACLOG[1/2]_EDMU_ALARM_STATUS\nACLOG[1/2]_EDMU_RCCB_STATUS_1\nACLOG[1/2]_EDMU_RCCB_STATUS_2\nEDMU_XLOG_CB_STATUS\nACLOG[1/2]_EDMU_CB_STATUS_1\nACLOG[1/2]_EDMU_CB_STATUS_2\nACLOG[1/2]_EDMU_CB_STATUS_3\nACLOG[1/2]_EDMU_CB_STATUS_4\nACLOG[1/2]_EDMU_IO_STATE_1\nACLOG[1/2]_EDMU_IO_STATE_2\nACLOG[1/2]_EDMU_IO_STATE_3\nACLOG[1/2]_EDMU_IO_STATE_4\nACLOG[1/2]_EDMU_IO_STATE_5\nACLOG[1/2]_EDMU_IO_STATE_6\nACLOG[1/2]_EDMU_FUSE_STATUS_1\nEDMU_XLOG_ANALOG\nACLOG[1/2]_EDMU_ANALOG_1\nACLOG[1/2]_EDMU_ANALOG_2\nACLOG[1/2]_EDMU_ANALOG_3\nACLOG[1/2]_EDMU_RCCB_CURRENT_1\nACLOG[1/2]_EDMU_RCCB_CURRENT_2\nACLOG[1/2]_EDMU_RCCB_CURRENT_3\nACLOG[1/2]_EDMU_RCCB_CURRENT_4\nEDMU_XLOG_IDENT\nACLOG[1/2]_EDMU_IDENT_1\nACLOG[1/2]_EDMU_IDENT_2\nACLOG[1/2]_EDMU_IDENT_3\nACLOG[1/2]_EDMU_IDENT_4\nACLOG[1/2]_EDMU_IDENT_5\nACLOG[1/2]_EDMU_IDENT_6\nACLOG[1/2]_EDMU_IDENT_7\nEDMU_XLOG_BITE\nACLOG[1/2]_EDMU_MODULE_STATUS\nACLOG[1/2]_EDMU_BITE_1\nACLOG[1/2]_EDMU_BITE_2\nACLOG[1/2]_EDMU_BITE_3\nACLOG[1/2]_EDMU_SNPTC_COLOR_1\nEDMU_XLOG_ENG_DATA\nACLOG[1/2]_EDMU_ENG_DATA_1\nACLOG[1/2]_EDMU_ENG_DATA_2\nACLOG[1/2]_EDMU_ENG_DATA_3\nACLOG[1/2]_EDMU_ENG_DATA_4\nEDMU_XLOG_NVM_DL\nACLOG[1/2]_EDMU_NVM_DL_STATUS\nACLOG[1/2]_EDMU_NVM_PACKET_n\nWith n = [1,42]\nTable 3: Correspondence table between EDMU message request and ACLOG message answer', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[CAN-IRD-365],[CAN-IRD-525],[CAN-IRD-466],[CAN-IRD-366],[CAN-IRD-526],[CAN-IRD-367],[CAN-IRD-671],[CAN-IRD-331],[CAN-IRD-858]'}, u'SWRD_GLOBAL-ACENM_0186': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall start/restart an ACMP network configuration when one at least of the following conditions is true:\nACMP3B command to apply {ACMP3B_RCCB_CMD_TO_APPLY} has changed\nAC Network configuration state{AC_NETWORK_RECONF} is equal to START', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.2', 'refer': u'[SSCS_ACLog_1056],[SSCS_ACLog_1058],[SSCS_ACLog_1206]'}, u'SWRD_GLOBAL-ACENM_0359': {'status': u'MATURE', 'body': u'If {SW_MODE} is equal to INIT, ACENM CSCI shall set the CAN X interface version failure status {CAN_X_INTERFACE_VERSION_FAILURE} to FAILED.\nWith X = 1 or 2', 'additional': u'N/A', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Initial value is provided at start-up.', 'issue': u'1.1', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0196': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall perform EDMU CLOSURE SEQUENCE according to the following algorithm: \nFigure 41 : ACLog1 EDMU closure sequence\n(1): To check the ACMP commands of the opposite side, the ACLog1 checks only the EDMU computed command {EDMU_ACMPX_COMPUTED_RCCB_CMD} received by CAN (with ACMPX = ACMP1B or ACMP3A).\n(2): {ACMP3B_RCCB_CMD} is set to CLOSE', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1058],[SSCS_ACLog_1098]'}, u'SWRD_GLOBAL-ACENM_0318': {'status': u'MATURE', 'body': u'ACENM CSCI shall copy and store ACMPX open locked state {ACMPX_OPEN_LOCKED_STATE} in NVM [NVM_ACMPX_OPEN_LOCKED_STATE] when {ACMPX_OPEN_LOCKED_STATE} value is different from the value already stored in NVM.\nWith ACMPX = ACMP3A or ACMP1B (for ACLog2) or ACMP3B (for ACLog1)', 'additional': u'Improve lifetime of NVM device by not writing the same value several time.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_1275]'}, u'SWRD_GLOBAL-ACENM_0194': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall perform AC NETWORK CLOSURE SEQUENCE according to the following algorithm: \nFigure 38 : ACLog1 AC Network closure sequence\n(1): {ACMP3B_RCCB_CMD} is set to OPEN\n(2): {ACMP3B_RCCB_CMD} is set to CLOSE', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1056],[SSCS_ACLog_1098]'}, u'SWRD_GLOBAL-ACENM_0195': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall perform AC NETWORK CLOSURE SEQUENCE according to the following algorithm: \nFigure 39 : ACLog2 AC Network closure sequence\n(1): {ACMP1B_RCCB_CMD} and {ACMP3A_RCCB_CMD} are set to OPEN\n(2): {ACMP3A_RCCB_CMD} is set to CLOSE\n(3): {ACMP1B_RCCB_CMD} is set to CLOSE\n(4): {ACMP3A_RCCB_CMD} is set to OPEN\n(5): {ACMP1B_RCCB_CMD} is set to OPEN', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1056],[SSCS_ACLog_1098]'}, u'SWRD_GLOBAL-ACENM_0192': {'status': u'MATURE', 'body': u'ACENM CSCI shall perform the \u201cCLOSE CHECK STEP\u201d (check if ACMP not declared as failed which are commanded to close are CLOSED {ACMP_NTW_GLOBAL_AC_CLOSE_CHECK}) according to the following logic:\n{BOARD_CONFIG}\nContactor Close condition\nGlobal Contactor Close check\n{ACMP_NTW_GLOBAL_AC_CLOSE_CHECK}\nACLog1\n{ACMP3B_RCCB_CMD} = CLOSE and {ACMP3B_RCCB_STATUS} = CLOSEDOR {ACMP3B_FAILED_CLOSED_FAILURE} = FAILED or{ACMP3B_FAILED_OPEN_FAILURE} = FAILED\nYES if all the contactor close conditions are TRUE\nNO otherwise\nACLog2\nIf { ACMP1B_RCCB_CMD} = CLOSE and {ACMP3B_RCCB_STATUS} = CLOSEDOR{ACMP1B_FAILED_CLOSED_FAILURE} = FAILED or{ACMP1B_FAILED_OPEN_FAILURE} = FAILED\nACLog2\nIf { ACMP3A_RCCB_CMD} = CLOSE and {ACMP3B_RCCB_STATUS} = CLOSEDOR{ACMP3A_FAILED_CLOSED_FAILURE} = FAILED or{ACMP3A_FAILED_OPEN_FAILURE} = FAILED\nFigure 40 : Close contactor status check ', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1058],[SSCS_ACLog_1206]'}, u'SWRD_GLOBAL-ACENM_0428': {'status': u'TBC', 'body': u'ACENM shall set the NVM check test result {NVM_CHECK_TEST_RESULT} to OK if all the following steps are correctly performed (FAILED otherwise):\nStep1: write a pattern in an unused cell of NVM.\nStep2: read the pattern in NVM.\nStep3: check that the pattern read is equal to the pattern previously written.\nStep4: write a complement pattern in the same unused cell of NVM.\nStep5: read the complement pattern in NVM.\nStep6: check that the complement pattern read is equal to the complement pattern previously written.', 'additional': u'NO', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'NVM check is not really defined in SSCS.', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_1176]'}, u'SWRD_GLOBAL-ACENM_0059': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set ELC contactor status validity {ELC_CTC_STATUS_VALIDITY} according to the following logic:\n[DSI_ELC_CMD]\n[DSI_AC_CTC1_OPP_NO]\n[DSI_AC_CTC1_OPP_NC]\n{ELC_CTC_STATUS_VALIDITY}\nOPEN\nOPEN\nCLOSED\nVALID\nOPEN\nOPEN\nOPEN\nINVALID\nOPEN\nCLOSED\nCLOSED\nINVALID\nOPEN\nCLOSED\nOPEN\nINVALID\nCLOSE\nOPEN\nCLOSED\nINVALID\nCLOSE\nOPEN\nOPEN\nINVALID\nCLOSE\nCLOSED\nCLOSED\nINVALID\nCLOSE\nCLOSED\nOPEN\nVALID\nTable 22 : ELC contactor status validity management (for ACLog1)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_598],[SSCS_ACLog_596],[SSCS_ACLog_1517]'}, u'SWRD_GLOBAL-ACENM_0058': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set ELC contactor status {ELC_CTC_STATUS} according to the following logic:\n{ELC_CTC_CMD} \n[DSI_AC_CTC1_NO]\n[DSI_AC_CTC1_NC]\n{ELC_CTC_STATUS}\nOPEN\nOPEN\nCLOSED\nOPEN\nOPEN\nOPEN\nOPEN\nOPEN\nOPEN\nCLOSED\nCLOSED\nOPEN\n\tOPEN\nCLOSED\nOPEN\nCLOSED\nCLOSE\nOPEN\nCLOSED\nOPEN\nCLOSE\nOPEN\nOPEN\nCLOSED\nCLOSE\nCLOSED\nCLOSED\nCLOSED\nCLOSE\nCLOSED\nOPEN\nCLOSED\nTable 21 : ELC contactor status management (for ACLog2)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_596],[SSCS_ACLog_595]'}, u'SWRD_GLOBAL-ACENM_0057': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set ELC contactor status {ELC_CTC_STATUS} according to the following logic:\n[DSI_ELC_CMD] \n[DSI_AC_CTC1_OPP_NO]\n[DSI_AC_CTC1_OPP_NC]\n{ELC_CTC_STATUS}\nOPEN\nOPEN\nCLOSED\nOPEN\nOPEN\nOPEN\nOPEN\nOPEN\nOPEN\nCLOSED\nCLOSED\nOPEN\n\tOPEN\nCLOSED\nOPEN\nCLOSED\nCLOSE\nOPEN\nCLOSED\nOPEN\nCLOSE\nOPEN\nOPEN\nCLOSED\nCLOSE\nCLOSED\nCLOSED\nCLOSED\nCLOSE\nCLOSED\nOPEN\nCLOSED\nTable 20 : ELC contactor status management (for ACLog1)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_598],[SSCS_ACLog_596],[SSCS_ACLog_1517]'}, u'SWRD_GLOBAL-ACENM_0056': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set ALC contactor failure {ALC_CTC_FAILURE} according to the following logic:\n{ALC_CTC_GCU_ACK} \n[DSI_AGLC_NO]\n[DSI_AGLC_NC]\n{ALC_CTC_FAILURE}\nOPEN\nOPEN\nCLOSED\nNONE\nOPEN\nOPEN\nOPEN\nAUX\nOPEN\nCLOSED\nCLOSED\nAUX\nOPEN\nCLOSED\nOPEN\nCOMMAND\nCLOSE\nOPEN\nCLOSED\nCOMMAND\nCLOSE\nOPEN\nOPEN\nAUX\nCLOSE\nCLOSED\nCLOSED\nAUX\nCLOSE\nCLOSED\nOPEN\nNONE\nTable 19 : ALC contactor failure management (for ACLog1)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_583]'}, u'SWRD_GLOBAL-ACENM_0055': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set GLC2 contactor failure {GLC2_CTC_FAILURE} according to the following logic:\n{GLC2_CTC_GCU_ACK} \n[DSI_GLC2_NO]\n[DSI_GLC2_NC]\n{GLC2_CTC_FAILURE}\nOPEN\nOPEN\nCLOSED\nNONE\nOPEN\nOPEN\nOPEN\nAUX\nOPEN\nCLOSED\nCLOSED\nAUX\nOPEN\nCLOSED\nOPEN\nCOMMAND\nCLOSE\nOPEN\nCLOSED\nCOMMAND\nCLOSE\nOPEN\nOPEN\nAUX\nCLOSE\nCLOSED\nCLOSED\nAUX\nCLOSE\nCLOSED\nOPEN\nNONE\nTable 18 : GLC2 contactor failure management (for ACLog2)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1518]'}, u'SWRD_GLOBAL-ACENM_0054': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set GLC1 contactor failure {GLC1_CTC_FAILURE} according to the following logic:\n{GLC1_CTC_GCU_ACK} \n[DSI_GLC1_NO]\n[DSI_GLC1_NC]\n{GLC1_CTC_FAILURE}\nOPEN\nOPEN\nCLOSED\nNONE\nOPEN\nOPEN\nOPEN\nAUX\nOPEN\nCLOSED\nCLOSED\nAUX\nOPEN\nCLOSED\nOPEN\nCOMMAND\nCLOSE\nOPEN\nCLOSED\nCOMMAND\nCLOSE\nOPEN\nOPEN\nAUX\nCLOSE\nCLOSED\nCLOSED\nAUX\nCLOSE\nCLOSED\nOPEN\nNONE\nTable 17 : GLC1 contactor failure management (for ACLog1)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_583]'}, u'SWRD_GLOBAL-ACENM_0053': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set ALC contactor status {ALC_CTC_STATUS} according to the following logic:\n{ALC_CTC_GCU_ACK} \n[DSI_AGLC_NO]\n[DSI_AGLC_NC]\n{ALC_CTC_STATUS}\nOPEN\nOPEN\nCLOSED\nOPEN\nOPEN\nOPEN\nOPEN\nOPEN\nOPEN\nCLOSED\nCLOSED\nOPEN\nOPEN\nCLOSED\nOPEN\nCLOSED\nCLOSE\nOPEN\nCLOSED\nOPEN\nCLOSE\nOPEN\nOPEN\nCLOSED\nCLOSE\nCLOSED\nCLOSED\nCLOSED\nCLOSE\nCLOSED\nOPEN\nCLOSED\nTable 16 : ALC contactor status management', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_583]'}, u'SWRD_GLOBAL-ACENM_0052': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set GLC2 contactor status {GLC2_CTC_STATUS} according to the following logic:\n{GLC2_CTC_GCU_ACK} \n[DSI_GLC2_NO]\n[DSI_GLC2_NC]\n{GLC2_CTC_STATUS}\nOPEN\nOPEN\nCLOSED\nOPEN\nOPEN\nOPEN\nOPEN\nOPEN\nOPEN\nCLOSED\nCLOSED\nOPEN\nOPEN\nCLOSED\nOPEN\nCLOSED\nCLOSE\nOPEN\nCLOSED\nOPEN\nCLOSE\nOPEN\nOPEN\nCLOSED\nCLOSE\nCLOSED\nCLOSED\nCLOSED\nCLOSE\nCLOSED\nOPEN\nCLOSED\nTable 15 : GLC2 contactor status management', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1518]'}, u'SWRD_GLOBAL-ACENM_0198': {'status': u'MATURE', 'body': u'When software mode {SW_MODE} is equal to OPERATIONAL, ACENM shall set each contactor DSO failure (fourth column) according to the following logic:\nNOT_FAILED, when each contactor DSO command (second column) is equal to its command feedback (third column) during 1s\xb1250ms\nFAILED, when each contactor DSO command (second column)  is not equal to its command feedback (third column) during 2s\xb10.5s\nOtherwise contactor DSO failure keeps its previous value.\nBoard configuration\n{BOARD_CONFIG} \ncontactor DSO Signal Name\ncontactor DSO Feedback Signal Name\ncontactor DSO Failure\nAClog1\n{ATC1_CTC_CMD}\n[DSI_CTC1_FEEDBACK]\n{DSO_CTC1_FAILURE}\nACLog2\n{ATC2_CTC_CMD}\n[DSI_CTC2_FEEDBACK]\n{DSO_CTC2_FAILURE}\nAClog1\n{ATC3_CTC_CMD}\n[DSI_CTC2_FEEDBACK]\n{DSO_CTC2_FAILURE}\nAClog1\n{AEC_CTC_CMD}\n[DSI_CTC3_FEEDBACK]\n{DSO_CTC3_FAILURE}\nACLog2\n{ELC_CTC_CMD}\n[DSI_CTC1_FEEDBACK]\n{DSO_CTC1_FAILURE}\nAClog1\n{ACMP3B_RCCB_CMD}\n[DSI_CDE_RCCB1_FEEDBACK]\n{DSO_CDE_RCCB1_FAILURE}\nACLog2\n{ACMP3A_RCCB_CMD}\n[DSI_CDE_RCCB1_FEEDBACK]\n{DSO_CDE_RCCB1_FAILURE}\nACLog2\n{ACMP1B_RCCB_CMD}\n[DSI_CDE_RCCB2_FEEDBACK]\n{DSO_CDE_RCCB2_FAILURE}\nTable 73 : Contactor DSO list to monitor during CBIT', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.1', 'refer': u'[SSCS_ACLog_912],[SSCS_ACLog_1181],[SSCS_ACLog_1195]'}, u'SWRD_GLOBAL-ACENM_0050': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set the AC external power voltage presence {AC_EP_PRESENCE} according following logic:\nCONNECTED when [ASI_DC_ACEP_PINE] is higher than 18V\xb110%\nNOT_CONNECTED otherwise', 'additional': u'NO', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A ', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1111],[SSCS_ACLog_1126],[SSCS_ACLog_1466]'}, u'SWRD_GLOBAL-ACENM_0518': {'status': u'MATURE', 'body': u'ACENM CSCI shall set WOW failure {WOW_FAILURE} according to the following logic:\nNOT_FAILED, when {WOW_STATUS_VALIDITY} is equal to VALID during 7.5s\xb1250ms\nFAILED, when  {WOW_STATUS_VALIDITY} is equal to INVALID during 15s\xb10.5s\nOtherwise {WOW_FAILURE} keeps its previous value.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1449]'}, u'SWRD_GLOBAL-ACENM_0519': {'status': u'MATURE', 'body': u'If software mode {SW_MODE} is equal to OPERATIONAL, ACENM CSCI shall set ATCX auxiliary failure {ATCX_LOCKOUT_STS_FAILURE} according to the following logic:\nNOT_FAILED, when {ATCX_LOCKOUT_STS_PRECOMPUTED_FAILURE} is equal to NOT_FAILED during 1.5s\xb1250ms\nFAILED, when  {ATCX_LOCKOUT_STS_PRECOMPUTED_FAILURE} is equal to FAILED during 3s\xb10.5s\nOtherwise {ATCX_LOCKOUT_STS_FAILURE} keeps its previous value.\nWith ATCX = ATC1, ATC3 (for ACLog1) or ATC2 (for ACLog2)', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1452]'}, u'SWRD_GLOBAL-ACENM_0512': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog1 configuration, ACENM CSCI shall set AC External overload status [EXT_AC_OVLD] according to the following logic:\nOVERLOAD when {AC_EP_OVL_NOVL_FAILURE} is equal to FAILED \nNOT_OVERLOAD otherwise', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[CAN-IRD-180]'}, u'SWRD_GLOBAL-ACENM_0513': {'status': u'MATURE', 'body': u'ACENM CSCI shall set the CAN signal values in the third column according to the following logic:\nFAILED, when corresponding protection (first column) is equal to ACTIVE.\nNOT_FAILED, in all others cases.\n{BOARD_CONFIG}\nSignal Name\nCAN Signal Name\nAClog1\n{DIFFERENTIAL_PROT}\n[ACLOG1_AC_TIE_DP_TRIP]\nAClog2\n{DIFFERENTIAL_PROT}\n[ACLOG2_AC_TIE_DP_TRIP]\nACLog1\n{ANTI_PARALLELING_ATC3_CALC_PROT}\n[ATC3_ANTIPARALLELING_PROT_ACT]\nACLog1\n{ANTI_PARALLELING_ATC1_CALC_PROT}\n[ATC1_ANTIPARALLELING_PROT_ACT]\nACLog2\n{ANTI_PARALLELING_ATC2_CALC_PROT}\n[ATC2_ANTIPARALLELING_PROT_ACT]\nACLog2\n{ANTI_PARALLELING_ELC_CALC_PROT}\n[ELC_ANTIPARALLELING_PROT_ACT]\nAClog2\n{AC_EP_UNDERVOLTAGE_PROT}\n[ACLOG2_AC_EP_UV_PROT_ACT]\nAClog2\n{AC_EP_OVERVOLTAGE_PROT} or {AC_EP_PINE_OVERVOLTAGE_PROT}\n[ACLOG2_AC_EP_OV_PROT_ACT]\nAClog2\n{AC_EP_OVERLOAD_PROT}\n[ACLOG2_AC_EP_OC_PROT_ACT]\nAClog2\n{AC_EP_PHASE_ORDER_PROT}\n[ACLOG2_AC_EP_PO_PROT_ACT]\nAClog2\n{AC_EP_UNDERFREQUENCY_PROT}\n[ACLOG2_AC_EP_UF_PROT_ACT]\nAClog2\n{AC_EP_OVERFREQUENCY_PROT}\n[ACLOG2_AC_EP_OF_PROT_ACT]\nAClog2\n{ACMP_ACBUS2_OVERVOLTAGE_PROT}\n[ACLOG2_AC_BUS2_OV]\nAClog1\n{ACMP_ACBUS1_OVERVOLTAGE_PROT}\n[ACLOG1_AC_BUS1_OV]\nTable 111 : Correspondence table between internal signal and CAN signal', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_829],[SSCS_ACLog_1062],[SSCS_ACLog_933],[SSCS_ACLog_1192],[SSCS_ACLog_1193],[SSCS_ACLog_449],[SSCS_ACLog_943],[SSCS_ACLog_484],[SSCS_ACLog_1118],[SSCS_ACLog_1116],[SSCS_ACLog_1256],[SSCS_ACLog_1458],[SSCS_ACLog_1545],[CAN-IRD-216]'}, u'SWRD_GLOBAL-ACENM_0510': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG[1/2]_EDMU_NVM_PACKET_nn (nn = [01-42])\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n[ACLOGX_NVM_nn_PACKET_NUMBER]\nByte 1\n[ACLOGX_NVM_nn_PACKET_NUMBER]\nByte 2\n[ACLOGX_NVM_nn_PACKET_BYTE_1]\nByte 3\n[ACLOGX_NVM_nn_PACKET_BYTE_2]\nByte 4\n[ACLOGX_NVM_nn_PACKET_BYTE_3]\nByte 5\n[ACLOGX_NVM_nn_PACKET_BYTE_4]\nByte 6\n[ACLOGX_NVM_nn_PACKET_BYTE_5]\nByte 7\n[ACLOGX_NVM_nn_PACKET_BYTE_6]\nWith ACLOGX = ACLOG1 or ACLOG2', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0511': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set AC External overload status [EXT_AC_OVLD] according to the following logic:\nOVERLOAD when {AC_EP_OVERLOAD_PROT} is equal to ACTIVE \nNOT_OVERLOAD otherwise', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-180]'}, u'SWRD_GLOBAL-ACENM_0516': {'status': u'MATURE', 'body': u'When software mode {SW_MODE} is equal to INIT and if a fault header checksum [NVM_FAULT_HEADER_CHECKSUM] of a fault which has to be restored is found corrupted, ACENM CSCI shall not restore this fault.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_1261]'}, u'SWRD_GLOBAL-ACENM_0517': {'status': u'MATURE', 'body': u'ACENM CSCI shall set AC External Power mode status {AC_EP_MODE} according to the following logic:\nACTIVE when AC External Power request status {AC_EP_REQUEST} is equal to CLOSE AND when ELC contactor status {ELC_CTC_STATUS} is equal to CLOSED\nNOT_ACTIVE otherwise', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1477],[SSCS_ACLog_1478]'}, u'SWRD_GLOBAL-ACENM_0514': {'status': u'MATURE', 'body': u'When software mode {SW_MODE} is equal to OPERATIONAL, ACENM CSCI shall set the NVM fault counter of the last flight leg [NVM_LAST_FLIGHT_LEG_FAULT_COUNTER] with the number of fault on current leg {CURRENT_LEG_NB_FAULT} when [NVM_LAST_FLIGHT_LEG_FAULT_COUNTER] is different from {CURRENT_LEG_NB_FAULT}.', 'additional': u'N/A', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'A flight leg fault counter is defined to manage the storage management of the failure.', 'issue': u'1.4', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0515': {'status': u'MATURE', 'body': u'When software mode {SW_MODE} is equal to INIT and if the BITE header checksum [NVM_BITE_HEADER_CHECKSUM] is found corrupted, ACENM CSCI shall force:\n {FIRST_FAULT_INDEX}, {CURRENT_LEG_NB_FAULT} and {CURRENT_LEG} to 0 \n{FAULTS_SNAPSHOT} to NO_FAULT', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_1261]'}, u'SWRD_GLOBAL-ACENM_0453': {'status': u'MATURE', 'body': u'ACENM CSCI shall download NVM in 5 minutes maximum.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1494],[CAN-IRD-848]'}, u'SWRD_GLOBAL-ACENM_0452': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cEDMU_XLOG_BITE\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\nX\nX\nX\nX\nX\nX\nX\nX\nByte 1\nX\nX\nX\nX\nX\nX\nX\n[ACLOG_IBIT_REQUEST]\nByte 2\nX\nX\nX\nX\nX\nX\nX\nX\nByte 3\nX\nX\nX\nX\nX\nX\nX\nX\nByte 4\nX\nX\nX\nX\nX\nX\nX\nX\nByte 5\nX\nX\nX\nX\nX\nX\nX\nX\nByte 6\nX\nX\nX\nX\nX\nX\nX\nX\nByte 7\nX\nX\nX\nX\nX\nX\nX\nX\nX: Don\u2019t care', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0451': {'status': u'MATURE', 'body': u'If {BOARD_CONFIG} is equal to ACLog2 configuration, ACENM CSCI shall set {AC_EP_OVERVOLTAGE_CALC_PROT} to:\nACTIVE when {AC_EP_HW_OVERVOLTAGE_CALC_PROT} or {AC_EP_SW_OVERVOLTAGE_CALC_PROT} are equal to ACTIVE\nINACTIVE otherwise', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1506]'}, u'SWRD_GLOBAL-ACENM_0450': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cEDMU_XLOG_FLIGHTINFO_4\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n[AC_TAIL_NDO_VALID]\nX\nX\nX\nX\nX\nX\nX\nByte 1\nX\nX\nX\nX\nX\nByte 2\n[AC_TAIL]\nByte 3\nByte 4\nX\nX\nX\nX\nX\nX\nX\nX\nByte 5\nX\nX\nX\nX\nX\nX\nX\nX\nByte 6\nX\nX\nX\nX\nX\nX\nX\nX\nByte 7\nX\nX\nX\nX\nX\nX\nX\nX\nX: Don\u2019t care', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0457': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cEDMU_ACLOG_RCCB_CMD_2\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n[ACMP3B_CLOSED_CMD]\n[ACMP3B_TRIPPED_CMD]\nX\nX\n[ACMP3B_OPEN_LOCKED_CMD]\nByte 1\nX\nX\nX\nX\nX\n[ACMP3B_TRIP_CAUSE_PHA]\nByte 2\nX\nX\nX\nX\nX\nX\nByte 3\nX\nX\nX\nX\nX\nX\nByte 4\nX\nX\nX\nX\nX\nX\nX\nX\nByte 5\nX\nX\nX\nX\nX\nX\nX\nX\nByte 6\nX\nX\nX\nX\nX\nX\nX\nX\nByte 7\nX\nX\nX\nX\nX\nX\nX\nX\nX: Don\u2019t care', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0456': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cEDMU_ACLOG_RCCB_CMD_1\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n[ACMP1B_CLOSED_CMD]\n[ACMP1B_TRIPPED_CMD]\nX\nX\n[ACMP1B_OPEN_LOCKED_CMD]\nByte 1\nX\nX\nX\nX\nX\n[ACMP1B_TRIP_CAUSE_PHA]\nByte 2\nX\nX\nX\nX\nX\nX\nByte 3\nX\nX\nX\nX\nX\nX\nByte 4\n[ACMP3A_CLOSED_CMD]\n[ACMP3A_TRIPPED_CMD]\nX\nX\n[ACMP3A_OPEN_LOCKED_CMD]\nByte 5\nX\nX\nX\nX\nX\n[ACMP3A_TRIP_CAUSE_PHA]\nByte 6\nX\nX\nX\nX\nX\nX\nByte 7\nX\nX\nX\nX\nX\nX\nX: Don\u2019t care', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0455': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cEDMU_XLOG_DISC_1\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n[EMERLOG_DSI_XFR_NORM_VALID]\n[EMERLOG_DSI_XFR_NORM]\n[EMERLOG_DSI_XFR_LEFT_VALID]\n[EMERLOG_DSI_XFR_LEFT]\n[EMERLOG_DSI_XFR_RIGHT_VALID]\n[EMERLOG_DSI_XFR_RIGHT]\n[EMERLOG_DSI_XFR_ESS_VALID]\n[EMERLOG_DSI_XFR_ESS]\nByte 1\nX\nX\nX\nX\nX\nX\nX\nX\nByte 2\nX\nX\nX\nX\nX\nX\nX\nX\nByte 3\nX\nX\nX\nX\nX\nX\nX\nX\nByte 4\nX\nX\nX\nX\nX\nX\nX\nX\nByte 5\nX\nX\nX\nX\nX\nX\nX\nX\nByte 6\nX\nX\nX\nX\nX\nX\nX\nX\nByte 7\nX\nX\nX\nX\nX\nX\nX\nX\nX: Don\u2019t care', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0454': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cEDMU_XLOG_NVM_DL\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\nX\nX\nX\nX\nX\nX\nX\nX\nByte 1\nX\nX\nX\nX\nX\nX\n[ACLOG_NVM_RESET_REQUEST]\n[ACLOG_NVM_DL_REQUEST]\nByte 2\nX\nX\nX\nX\nX\nX\nX\nX\nByte 3\nX\nX\nX\nX\nX\nX\nX\nX\nByte 4\nX\nX\nX\nX\nX\nX\nX\nX\nByte 5\nX\nX\nX\nX\nX\nX\nX\nX\nByte 6\nX\nX\nX\nX\nX\nX\nX\nX\nByte 7\nX\nX\nX\nX\nX\nX\nX\nX\nX: Don\u2019t care', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0459': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG[1/2]_EDMU_NETWORK_STATUS_2\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n0\n0\n0\n0\n0\n0\n0\n[GROUND_SERVICING_ACT]\n(only for ACLog2, 0 for ACLog1)\nByte 1\n0\n0\n0\n0\n0\n0\n0\n0\nByte 2\n0\n0\n0\n0\n0\n0\n0\n0\nByte 3\n0\n0\n0\n0\n0\n0\n0\n0\nByte 4\n0\n0\n0\n0\n0\n0\n0\n0\nByte 5\n0\n0\n0\n0\n0\n0\n0\n0\nByte 6\n0\n0\n0\n0\n0\n0\n0\n0\nByte 7\n0\n0\n0\n0\n0\n0\n0\n0', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.4', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394]'}, u'SWRD_GLOBAL-ACENM_0458': {'status': u'MATURE', 'body': u'CAN data field for message ID \u201cACLOG[1/2]_EDMU_NETWORK_STATUS_1\u201d shall have the following format:\nCAN Byte\nCAN Bit\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\nByte 0\n0\n0\n0\n[EXT_AC_AVAIL]\n[EXT_AC_ONLINE]\n[EXT_AC_CONNECTED]\n0\n[RECONF_IN_PROGRESS]\nByte 1\n[NETWORK_SIGNAL_VALID]\n0\n0\n[EXT_AC_OVLD]\n0\n[EXT_AC_PR]\n0\n0\nByte 2\n0\n0\n0\n0\n0\n0\n[AC2_BUSBAR_AVAIL]\n[AC1_BUSBAR_AVAIL]\nByte 3\n0\n0\n0\n0\n0\n0\n[AC2_BUSBAR_AVAIL_VALID]\n[AC1_BUSBAR_AVAIL_VALID]\nByte 4\n[AC2_BUSBAR_SPLY_SRC]\n[AC1_BUSBAR_SPLY_SRC]\nByte 5\n0\n0\n0\n0\n[AEC_SPLY_SRC]\nByte 6\n0\n0\n0\n0\n0\n0\n0\n0\nByte 7\n0\n0\n0\n0\n0\n0\n0\n0', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[CAN-IRD-315],[CAN-IRD-392],[CAN-IRD-394],[CAN-IRD-845]'}, u'SWRD_GLOBAL-ACENM_0429': {'status': u'MATURE', 'body': u'ACENM CSCI shall periodically refresh the watchdog [DSO_WDG_REFRESH_CMD] before its timeout.', 'additional': u'Timeout is defined in HSID.', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Watchdog needs to be periodically refreshed in order to avoid a CPU reset.', 'issue': u'1.1', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0220': {'status': u'MATURE', 'body': u'ACENM CSCI shall compute communication led output signal [DSO_COM_LED] according to the following logic:\nSignal with frequency of 4Hz and duty cycle 50% when {COMMUNICATION_LED_CMD} is equal to BLINK_GREEN.\nSignal  always INACTIVE otherwise', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_701]'}, u'SWRD_GLOBAL-ACENM_0221': {'status': u'MATURE', 'body': u'ACENM CSCI shall set the CAN signal values in the second column with the value of the signal in the first column:\nBoard Configuration\nSignal Name\nCAN Signal Name\nAClog1 or AClog2\nINACTIVE\n[PROTEC_nn_ACTIVATED]\nTable 101 : Right generator source availability management\nWith nn = 1 to 32', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_677],[CAN-IRD-194],[CAN-IRD-767],[CAN-IRD-195],[CAN-IRD-422],[CAN-IRD-423],[CAN-IRD-198]'}, u'SWRD_GLOBAL-ACENM_0222': {'status': u'MATURE', 'body': u'ACENM CSCI shall set the CAN signal values in the third column with the value of the signal in the second column according to the board configuration {BOARD_CONFIG}:\n{BOARD_CONFIG}\nSignal Name\nCAN Signal Name\nAClog1 or ACLog2\n{ELC_CTC_STATUS}\n[ELC_CNTOR_CLOSED]\nAClog1 or ACLog2\n{ELC_CTC_STATUS_VALIDITY}\n[ELC_CNTOR_CLOSED_VALID]\nAClog1 or ACLog2\n{ATC1_CTC_STATUS}\n[ATC1_CNTOR_CLOSED]\nAClog1 or ACLog2\n{ATC1_CTC_STATUS_VALIDITY}\n[ATC1_CNTOR_CLOSED_VALID]\nAClog1 or ACLog2\n{ATC2_CTC_STATUS}\n[ATC2_CNTOR_CLOSED]\nAClog1 or ACLog2\n{ATC2_CTC_STATUS_VALIDITY}\n[ATC2_CNTOR_CLOSED_VALID]\nAClog1 or ACLog2\n{ATC3_CTC_STATUS}\n[ATC3_CNTOR_CLOSED]\nAClog1 or ACLog2\n{ATC3_CTC_STATUS_VALIDITY}\n[ATC3_CNTOR_CLOSED_VALID]\nAClog1 or ACLog2\n{AEC_CTC_STATUS}\n[AEC_CNTOR_CLOSED]\nAClog1 or ACLog2\n{AEC_CTC_STATUS_VALIDITY}\n[AEC_CNTOR_CLOSED_VALID]\nTable 102 : Correspondence table between internal signal and CAN signal', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_597],[SSCS_ACLog_615],[SSCS_ACLog_879],[SSCS_ACLog_1226],[CAN-IRD-185],[CAN-IRD-186]'}, u'SWRD_GLOBAL-ACENM_0223': {'status': u'MATURE', 'body': u'ACENM CSCI shall set the CAN signal values in the third column with the value of the signal in the second column according to the board configuration {BOARD_CONFIG}:\n{BOARD_CONFIG}\nSignal Name\nCAN Signal Name\nAClog1\n{ACMP3B_CLOSED_STATE_STATUS}\n[ACMP3B_CLOSED_STATE]\nAClog2\n{ACMP1B_CLOSED_STATE_STATUS}\n[ACMP1B_CLOSED_STATE]\nAClog2\n{ACMP3A_CLOSED_STATE_STATUS}\n[ACMP3A_CLOSED_STATE]\nAClog1\n{ACMP3B_TRIPPED_STATE}\n[ACMP3B_TRIPPED_STATE]\nAClog2\n{ACMP1B_TRIPPED_STATE}\n[ACMP1B_TRIPPED_STATE]\nAClog2\n{ACMP3A_TRIPPED_STATE}\n[ACMP3A_TRIPPED_STATE]\nAClog1\n{ACMP3B_OPEN_LOCKED_STATE}\n[ACMP3B_OPEN_LOCKED_STATE]\nAClog2\n{ACMP1B_OPEN_LOCKED_STATE}\n[ACMP1B_OPEN_LOCKED_STATE]\nAClog2\n{ACMP3A_OPEN_LOCKED_STATE}\n[ACMP3A_OPEN_LOCKED_STATE]\nAClog1\n{ACMP3B_TRIP_CAUSE}\n[ACMP3B_TRIP_CAUSE_PHA] \nAClog1\n{ACMP3B_TRIP_CAUSE}\n[ACMP3B_TRIP_CAUSE_PHB] \nAClog1\n{ACMP3B_TRIP_CAUSE}\n[ACMP3B_TRIP_CAUSE_PHC] \nAClog2\n{ACMP1B_TRIP_CAUSE}\n[ACMP1B_TRIP_CAUSE_PHA] \nAClog2\n{ACMP1B_TRIP_CAUSE}\n[ACMP1B_TRIP_CAUSE_PHB] \nAClog2\n{ACMP1B_TRIP_CAUSE}\n[ACMP1B_TRIP_CAUSE_PHC] \nAClog2\n{ACMP3A_TRIP_CAUSE}\n[ACMP3A_TRIP_CAUSE_PHA]\nAClog2\n{ACMP3A_TRIP_CAUSE}\n[ACMP3A_TRIP_CAUSE_PHB]\nAClog2\n{ACMP3A_TRIP_CAUSE}\n[ACMP3A_TRIP_CAUSE_PHC]\nTable 115 : Correspondence table between internal signal and CAN signal', 'additional': u'Trip cause is the same for each phase (protections are not computed by phase).', 'derived': u'NO\t', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_718],[SSCS_ACLog_719],[SSCS_ACLog_1123],[SSCS_ACLog_1277],[CAN-IRD-194],[CAN-IRD-767],[CAN-IRD-195]'}, u'SWRD_GLOBAL-ACENM_0224': {'status': u'MATURE', 'body': u'ACENM CSCI shall set the CAN signal values in the third column with the value of the signal in the second column according to the board configuration {BOARD_CONFIG}:\n{BOARD_CONFIG}\nSignal Name\nCAN Signal Name\nAClog1\n[DSI_AC_CTC1_NC]\n[ACLOG1_DSI_AC_CTC1_NC]\nAClog2\n[DSI_AC_CTC1_NC]\n[ACLOG2_DSI_AC_CTC1_NC]\nAClog1\nVALID\n[ACLOG1_DSI_AC_CTC1_NC_VALID]\nAClog2\nVALID\n[ACLOG2_DSI_AC_CTC1_NC_VALID]\nAClog1\n[DSI_AC_CTC1_NO]\n[ACLOG1_DSI_AC_CTC1_NO]\nAClog2\n[DSI_AC_CTC1_NO]\n[ACLOG2_DSI_AC_CTC1_NO]\nAClog1\nVALID\n[ACLOG1_DSI_AC_CTC1_NO_VALID]\nAClog2\nVALID\n[ACLOG2_DSI_AC_CTC1_NO_VALID]\nAClog1\n[DSI_AC_CTC1_OPP_NC]\n[ACLOG1_DSI_AC_CTC1_OPP_NC]\nAClog2\n[DSI_AC_CTC1_OPP_NC]\n[ACLOG2_DSI_AC_CTC1_OPP_NC]\nAClog1\nVALID\n[ACLOG1_DSI_AC_CTC1_OPP_NC_VALID]\nAClog2\nVALID\n[ACLOG2_DSI_AC_CTC1_OPP_NC_VALID]\nAClog1\n[DSI_AC_CTC1_OPP_NO]\n[ACLOG1_DSI_AC_CTC1_OPP_NO]\nAClog2\n[DSI_AC_CTC1_OPP_NO]\n[ACLOG2_DSI_AC_CTC1_OPP_NO]\nAClog1\nVALID\n[ACLOG1_DSI_AC_CTC1_OPP_NO_VALID]\nAClog2\nVALID\n[ACLOG2_DSI_AC_CTC1_OPP_NO_VALID]\nAClog1\n[DSI_AC_CTC2_NC]\n[ACLOG1_DSI_AC_CTC2_NC]\nAClog2\n[DSI_AC_CTC2_NC]\n[ACLOG2_DSI_AC_CTC2_NC]\nAClog1\nVALID\n[ACLOG1_DSI_AC_CTC2_NC_VALID]\nAClog2\nVALID\n[ACLOG2_DSI_AC_CTC2_NC_VALID]\nAClog2\n[DSI_AC_CTC2_NO ]\n[ACLOG2_DSI_AC_CTC2_NO]\nAClog1\n[DSI_AC_CTC2_NO]\n[ACLOG1_DSI_AC_CTC2_NO]\nAClog1\nVALID\n[ACLOG2_DSI_AC_CTC2_NO_VALID]\nAClog2\nVALID\n[ACLOG1_DSI_AC_CTC2_NO_VALID]\nAClog1\n[DSI_AC_CTC2_OPP_NC]\n[ACLOG1_DSI_AC_CTC2_OPP_NC]\nAClog2\n[DSI_AC_CTC2_OPP_NC]\n[ACLOG2_DSI_AC_CTC2_OPP_NC]\nAClog1\nVALID\n[ACLOG1_DSI_AC_CTC2_OPP_NC_VALID]\nAClog2\nVALID\n[ACLOG2_DSI_AC_CTC2_OPP_NC_VALID]\nAClog1\n[DSI_AC_CTC2_OPP_NO]\n[ACLOG1_DSI_AC_CTC2_OPP_NO]\nAClog2\n[DSI_AC_CTC2_OPP_NO]\n[ACLOG2_DSI_AC_CTC2_OPP_NO]\nAClog1\nVALID\n[ACLOG1_DSI_AC_CTC2_OPP_NO_VALID]\nAClog2\nVALID\n[ACLOG2_DSI_AC_CTC2_OPP_NO_VALID]\nAClog1\n[DSI_AC_CTC3_NC]\n[ACLOG1_DSI_AC_CTC3_NC]\nAClog1\n[DSI_AC_CTC3_NO]\n[ACLOG1_DSI_AC_CTC3_NO]\nAClog1\nVALID\n[ACLOG1_DSI_AC_CTC3_NC_VALID]\nAClog1\nVALID\n[ACLOG1_DSI_AC_CTC3_NO_VALID]\nAClog2\n[DSI_AC_CTC3_OPP_NC]\n[ACLOG2_DSI_AC_CTC3_OPP_NC]\nAClog2\n[DSI_AC_CTC3_OPP_NO]\n[ACLOG2_DSI_AC_CTC3_OPP_NO]\nAClog2\nVALID\n[ACLOG2_DSI_AC_CTC3_OPP_NC_VALID]\nAClog2\nVALID\n[ACLOG2_DSI_AC_CTC3_OPP_NO_VALID]\nAClog1 or ACLog2\n[DSI_ACEP_PB]\n[ACLOGX_DSI_ACEP_PB]\nAClog1 or ACLog2\nVALID\n[ACLOGX_DSI_ACEP_PB_VALID]\nAClog1 or ACLog2\n[DSI_AGLC_NC]\n[ACLOGX_DSI_AGLC_NC]\nAClog1 or ACLog2\nVALID\n[ACLOGX_DSI_AGLC_NC_VALID]\nAClog1 or ACLog2\n[DSI_AGLC_NO]\n[ACLOGX_DSI_AGLC_NO]\nAClog1 or ACLog2\nVALID\n[ACLOGX_DSI_AGLC_NO_VALID]\nAClog1\n[DSI_ATC_LCKOUT1]\n[ACLOG1_DSI_ATC_LCKOUT1]\nAClog2\n[DSI_ATC_LCKOUT1]\n[ACLOG2_DSI_ATC_LCKOUT1]\nAClog1\nVALID\n[ACLOG1_DSI_ATC_LCKOUT1_VALID]\nAClog2\nVALID\n[ACLOG2_DSI_ATC_LCKOUT1_VALID]\nAClog1\n[DSI_ATC_LCKOUT2]\n[ACLOG1_DSI_ATC_LCKOUT2]\nAClog1\nVALID\n[ACLOG1_DSI_ATC_LCKOUT2_VALID]\nAClog1\n[DSI_ATC_NLCKOUT1]\n[ACLOG1_DSI_ATC_NLCKOUT1]\nAClog1\nVALID\n[ACLOG1_DSI_ATC_NLCKOUT1_VALID]\nAClog1\n[DSI_ATC_NLCKOUT2]\n[ACLOG1_DSI_ATC_NLCKOUT2]\nAClog1\nVALID\n[ACLOG1_DSI_ATC_NLCKOUT2_VALID]\nAClog2\n[DSI_ATC_NLCKOUT1]\n[ACLOG2_DSI_ATC_NLCKOUT1]\nAClog2\nVALID\n[ACLOG2_DSI_ATC_NLCKOUT1_VALID]\nAClog1 or ACLog2\n[DSI_GLC1_NC]\n[ACLOGX_DSI_GLC1_NC]\nAClog1 or ACLog2\nVALID\n[ACLOGX_DSI_GLC1_NC_VALID]\nAClog1 or ACLog2\n[DSI_GLC1_NO]\n[ACLOGX_DSI_GLC1_NO]\nAClog1 or ACLog2\nVALID\n[ACLOGX_DSI_GLC1_NO_VALID]\nAClog1 or ACLog2\n[DSI_GLC2_NC]\n[ACLOGX_DSI_GLC2_NC]\nAClog1 or ACLog2\nVALID\n[ACLOGX_DSI_GLC2_NC_VALID]\nAClog1 or ACLog2\n[DSI_GLC2_NO]\n[ACLOGX_DSI_GLC2_NO]\nAClog1 or ACLog2\nVALID\n[ACLOGX_DSI_GLC2_NO_VALID]\nAClog1 or ACLog2\n[DSI_GS_PB]\n[ACLOGX_DSI_GS_PB]\nAClog1 or ACLog2\nVALID\n[ACLOGX_DSI_GS_PB_VALID]\nAClog1\n[DSI_NOL_AC_EP]\n[ACLOG1_DSI_NOL_AC_EP]\nAClog1\nVALID\n[ACLOG1_DSI_NOL_AC_EP_VALID]\nAClog1 or ACLog2\n[DSI_NOL_APU]\n[ACLOGX_DSI_NOL_APU]\nAClog1 or ACLog2\nVALID\n[ACLOGX_DSI_NOL_APU_VALID]\nAClog1 or ACLog2\n[DSI_NOL_LGEN]\n[ACLOGX_DSI_NOL_LGEN]\nAClog1 or ACLog2\nVALID\n[ACLOGX_DSI_NOL_LGEN_VALID]\nAClog1 or ACLog2\n[DSI_NOL_RGEN]\n[ACLOGX_DSI_NOL_RGEN]\nAClog1 or ACLog2\nVALID\n[ACLOGX_DSI_NOL_RGEN_VALID]\nAClog1\n[DSI_NPR_AC_EP]\n[ACLOG1_DSI_NPR_AC_EP]\nAClog1\nVALID\n[ACLOG1_DSI_NPR_AC_EP_VALID]\nAClog1 or ACLog2\n[DSI_NPR_APU]\n[ACLOGX_DSI_NPR_APU]\nAClog1 or ACLog2\nVALID\n[ACLOGX_DSI_NPR_APU_VALID]\nAClog1 or ACLog2\n[DSI_NPR_LGEN]\n[ACLOGX_DSI_NPR_LGEN]\nAClog1 or ACLog2\nVALID\n[ACLOGX_DSI_NPR_LGEN_VALID]\nAClog1 or ACLog2\n[DSI_NPR_RGEN]\n[ACLOGX_DSI_NPR_RGEN]\nAClog1 or ACLog2\nVALID\n[ACLOGX_DSI_NPR_RGEN_VALID]\nAClog1\n[DSI_OL_AC_EP]\n[ACLOG1_DSI_OL_AC_EP]\nAClog1\nVALID\n[ACLOG1_DSI_OL_AC_EP_VALID]\nAClog1 or ACLog2\n[DSI_OL_APU]\n[ACLOGX_DSI_OL_APU]\nAClog1 or ACLog2\nVALID\n[ACLOGX_DSI_OL_APU_VALID]\nAClog1 or ACLog2\n[DSI_OL_LGEN]\n[ACLOGX_DSI_OL_LGEN]\nAClog1 or ACLog2\nVALID\n[ACLOGX_DSI_OL_LGEN_VALID]\nAClog1 or ACLog2\n[DSI_OL_RGEN]\n[ACLOGX_DSI_OL_RGEN]\nAClog1 or ACLog2\nVALID\n[ACLOGX_DSI_OL_RGEN_VALID]\nAClog1 or ACLog2\n[DSI_PINPROG1]\n[ACLOGX_DSI_PINPROG1]\nAClog1 or ACLog2\nVALID\n[ACLOGX_DSI_PINPROG1_VALID]\nAClog1 or ACLog2\n[DSI_PINPROG2]\n[ACLOGX_DSI_PINPROG2]\nAClog1 or ACLog2\nVALID\n[ACLOGX_DSI_PINPROG2_VALID]\nAClog1 or ACLog2\n[DSI_PINPROG3]\n[ACLOGX_DSI_PINPROG3]\nAClog1 or ACLog2\nVALID\n[ACLOGX_DSI_PINPROG3_VALID]\nAClog1 or ACLog2\n[DSI_PINPROG4]\n[ACLOGX_DSI_PINPROG4]\nAClog1 or ACLog2\nVALID\n[ACLOGX_DSI_PINPROG4_VALID]\nAClog1 or ACLog2\n[DSI_PINPROG5]\n[ACLOGX_DSI_PINPROG5]\nAClog1 or ACLog2\nVALID\n[ACLOGX_DSI_PINPROG5_VALID]\nAClog1\n[DSI_PR_AC_EP]\n[ACLOG1_DSI_PR_AC_EP]\nAClog1\nVALID\n[ACLOG1_DSI_PR_AC_EP_VALID]\nAClog1 or ACLog2\n[DSI_PR_APU]\n[ACLOGX_DSI_PR_APU]\nAClog1 or ACLog2\nVALID\n[ACLOGX_DSI_PR_APU_VALID]\nAClog1 or ACLog2\n[DSI_PR_LGEN]\n[ACLOGX_DSI_PR_LGEN]\nAClog1 or ACLog2\nVALID\n[ACLOGX_DSI_PR_LGEN_VALID]\nAClog1 or ACLog2\n[DSI_PR_RGEN]\n[ACLOGX_DSI_PR_RGEN]\nAClog1 or ACLog2\nVALID\n[ACLOGX_DSI_PR_RGEN_VALID]\nAClog1\n[DSI_RCCB1_NC]\n[ACLOG1_DSI_RCCB1_NC]\nAClog2\n[DSI_RCCB1_NC]\n[ACLOG2_DSI_RCCB1_NC]\nAClog1\nVALID\n[ACLOG1_DSI_RCCB1_NC_VALID]\nAClog2\nVALID\n[ACLOG2_DSI_RCCB1_NC_VALID]\nAClog1\n[DSI_RCCB1_NO]\n[ACLOG1_DSI_RCCB1_NO]\nAClog2\n[DSI_RCCB1_NO]\n[ACLOG2_DSI_RCCB1_NO]\nAClog1\nVALID\n[ACLOG1_DSI_RCCB1_NO_VALID]\nAClog2\nVALID\n[ACLOG2_DSI_RCCB1_NO_VALID]\nAClog1\n[DSI_RCCB1_OPP_NC]\n[ACLOG1_DSI_RCCB1_OPP_NC]\nAClog2\n[DSI_RCCB1_OPP_NC]\n[ACLOG2_DSI_RCCB1_OPP_NC]\nAClog1\nVALID\n[ACLOG1_DSI_RCCB1_OPP_NC_VALID]\nAClog2\nVALID\n[ACLOG2_DSI_RCCB1_OPP_NC_VALID]\nAClog1\n[DSI_RCCB1_OPP_NO]\n[ACLOG1_DSI_RCCB1_OPP_NO]\nAClog2\n[DSI_RCCB1_OPP_NO]\n[ACLOG2_DSI_RCCB1_OPP_NO]\nAClog1\nVALID\n[ACLOG1_DSI_RCCB1_OPP_NO_VALID]\nAClog2\nVALID\n[ACLOG2_DSI_RCCB1_OPP_NO_VALID]\nAClog2\n[DSI_RCCB2_NC]\n[ACLOG2_DSI_RCCB2_NC]\nAClog2\nVALID\n[ACLOG2_DSI_RCCB2_NC_VALID]\nAClog2\n[DSI_RCCB2_NO]\n[ACLOG2_DSI_RCCB2_NO]\nAClog2\nVALID\n[ACLOG2_DSI_RCCB2_NO_VALID]\nAClog1\n[DSI_RCCB2_OPP_NC]\n[ACLOG1_DSI_RCCB2_OPP_NC]\nAClog1\nVALID\n[ACLOG1_DSI_RCCB2_OPP_NC_VALID]\nAClog1\n[DSI_RCCB2_OPP_NO]\n[ACLOG1_DSI_RCCB2_OPP_NO]\nAClog1\nVALID\n[ACLOG1_DSI_RCCB2_OPP_NO_VALID]\nAClog1 or ACLog2\n[DSI_WOW_IN_FLIGHT]\n[ACLOGX_DSI_WOW_IN_FLIGHT]\nAClog1 or ACLog2\nVALID\n[ACLOGX_DSI_WOW_IN_FLIGHT_VALID]\nAClog1 or ACLog2\n[DSI_WOW_ON_GROUND]\n[ACLOGX_DSI_WOW_ON_GROUND]\nAClog1 or ACLog2\nVALID\n[ACLOGX_DSI_WOW_ON_GROUND_VALID]\nAClog1 or ACLog2\n[DSI_ACLOG_OPP_VALID]\n[ACLOGX_DSI_ACLOG_OPP_VALID]\nAClog1 or ACLog2\nVALID\n[ACLOGX_DSI_ACLOG_OPP_VALID_VALID]\nAClog1\n[DSI_ELC_CMD]\n[ACLOG1_DSI_ELC_CMD]\nAClog1\nVALID\n[ACLOG1_DSI_ELC_CMD_VALID]\nAClog2\n[DSI_ELC_OPEN_REQ]\n[ACLOG2_DSI_ELC_OPEN_REQ]\nAClog2\nVALID\n[ACLOG2_DSI_ELC_OPEN_REQ_VALID]\nAClog1 or ACLog2\n[DSI_AC_CB_L1]\n[ACLOGX_DSI_AC_CB_L1]\nAClog1 or ACLog2\nVALID\n[ACLOGX_DSI_AC_CB_L1_VALID]\nAClog1 or ACLog2\n[DSI_AC_CB_L2]\n[ACLOGX_DSI_AC_CB_L2]\nAClog1 or ACLog2\nVALID\n[ACLOGX_DSI_AC_CB_L2_VALID]\nAClog1 or ACLog2\n[DSI_AC_CB_L3]\n[ACLOGX_DSI_AC_CB_L3]\nAClog1 or ACLog2\nVALID\n[ACLOGX_DSI_AC_CB_L3_VALID]\nAClog1 or ACLog2\n[DSI_AC_CB_L4]\n[ACLOGX_DSI_AC_CB_L4]\nAClog1 or ACLog2\nVALID\n[ACLOGX_DSI_AC_CB_L4_VALID]\nAClog1 or ACLog2\n[DSI_AC_CB_L5]\n[ACLOGX_DSI_AC_CB_L5]\nAClog1 or ACLog2\nVALID\n[ACLOGX_DSI_AC_CB_L5_VALID]\nAClog1 or ACLog2\n[DSI_AC_CB_TEST]\n[ACLOGX_DSI_AC_CB_TEST]\nAClog1 or ACLog2\nVALID\n[ACLOGX_DSI_AC_CB_TEST_VALID]\nAClog1\n[DSI_AEC_OPEN]\n[ACLOG1_DSI_AEC_OPEN]\nAClog1\nVALID\n[ACLOG1_DSI_AEC_OPEN_VALID]\nTable 103 : Correspondence table between internal signal and CAN signal\nWith X = 1 for ACLog1 and X = 2 for ACLog2\nFor correspondence between signal and CAN signal:\nCLOSED = ACTIVE\nOPEN = INACTIVE\nOVERLOAD = ACTIVE\nNOT_OVERLOAD = INACTIVE\nREADY = ACTIVE\nNOT_READY = INACTIVE ', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[CAN-IRD-731],[SSCS_ACLog_1460],[SSCS_ACLog_1542]'}, u'SWRD_GLOBAL-ACENM_0225': {'status': u'MATURE', 'body': u'ACENM CSCI shall set the CAN signal values in the third column with the value of the signal in the second column according to the board configuration {BOARD_CONFIG}:\n{BOARD_CONFIG}\nSignal Name\nCAN Signal Name\nAClog2\n[DSO_AC_EP_PINF]\n[ACLOG2_DSO_AC_EP_PINF]\nAClog2\n{DSO_AC_EP_PINF_FAILURE}\n[ACLOG2_DSO_AC_EP_PINF_VALID]\nAClog2\n[DSO_ACEP_AVAIL]\n[ACLOG2_DSO_ACEP_AVAIL]\nAClog2\n{DSO_ACEP_AVAIL_FAILURE}\n[ACLOG2_DSO_ACEP_AVAIL_VALID]\nAClog2\n[DSO_ACEP_ON]\n[ACLOG2_DSO_ACEP_ON]\nAClog2\n{DSO_ACEP_ON_FAILURE}\n[ACLOG2_DSO_ACEP_ON_VALID]\nAClog1\n[DSO_BUS_ACKN_APU]\n[ACLOG1_DSO_BUS_ACKN_APU]\nAClog1\n{DSO_BUS_ACKN_APU_FAILURE}\n[ACLOG1_DSO_BUS_ACKN_APU_VALID]\nAClog1 or AClog2\n[DSO_BUS_ACKN_GEN]\n[ACLOGX_DSO_BUS_ACKN_GEN]\nAClog1 or AClog2\n{DSO_BUS_ACKN_GEN_FAILURE}\n[ACLOGX_DSO_BUS_ACKN_GEN_VALID]\nAClog1\n[DSO_BUS_NACKN_APU]\n[ACLOG1_DSO_BUS_NACKN_APU]\nAClog1\n{DSO_BUS_NACKN_APU_FAILURE}\n[ACLOG1_DSO_BUS_NOTACKN_APU_VALID]\nAClog1 or AClog2\n[DSO_BUS_NACKN_GEN]\n[ACLOGX_DSO_BUS_NACKN_GEN]\nAClog1 or AClog2\n{DSO_BUS_NACKN_GEN_FAILURE}\n[ACLOGX_DSO_BUS_NACKN_GEN_VALID]\nAClog1 or AClog2\n[DSO_CDE_AC_CTC1]\n[ACLOGX_DSO_CDE_AC_CTC1]\nAClog1 or AClog2\n{DSO_CTC1_FAILURE}\n[ACLOGX_DSO_CDE_AC_CTC1_VALID]\nAClog1 or AClog2\n[DSO_CDE_AC_CTC2]\n[ACLOGX_DSO_CDE_AC_CTC2]\nAClog1 or AClog2\n{DSO_CTC2_FAILURE}\n[ACLOGX_DSO_CDE_AC_CTC2_VALID]\nAClog1\n[DSO_CDE_AC_CTC3]\n[ACLOG1_DSO_CDE_AC_CTC3]\nAClog1\n{DSO_CTC3_FAILURE}\n[ACLOG1_DSO_CDE_AC_CTC3_VALID]\nAClog1 or AClog2\n[DSO_CDE_RCCB1]\n[ACLOGX_DSO_CDE_RCCB1]\nAClog1 or AClog2\n{DSO_CDE_RCCB1_FAILURE}\n[ACLOGX_DSO_CDE_RCCB1_VALID]\nAClog2\n[DSO_CDE_RCCB2]\n[ACLOG2_DSO_CDE_RCCB2]\nAClog2\n{DSO_CDE_RCCB2_FAILURE}\n[ACLOG2_DSO_CDE_RCCB2_VALID]\nAClog2\n[DSO_GS_MODE]\n[ACLOG2_DSO_GS_MODE]\nAClog2\n{DSO_GS_MODE_FAILURE}\n[ACLOG2_DSO_GS_MODE_VALID]\nAClog2\n[DSO_GS_ON]\n[ACLOG2_DSO_GS_ON]\nAClog2\n{DSO_GS_ON_FAILURE}\n[ACLOG2_DSO_GS_ON_VALID]\nAClog1 or AClog2\n[DSO_NBPT]\n[ACLOGX_DSO_NBPT]\nAClog1 or AClog2\n{DSO_NBPT_FAILURE}\n[ACLOGX_DSO_NBPT_VALID]\nAClog2\n[DSO_NOL_AC_EP]\n[ACLOG2_DSO_NOL_AC_EP]\nAClog2\n{DSO_NOL_AC_EP_FAILURE}\n[ACLOG2_DSO_NOL_AC_EP_VALID]\nAClog2\n[DSO_NPR_AC_EP]\n[ACLOG2_DSO_NPR_AC_EP]\nAClog2\n{DSO_NPR_AC_EP_FAILURE}\n[ACLOG2_DSO_NPR_AC_EP_VALID]\nAClog2\n[DSO_OL_AC_EP]\n[ACLOG2_DSO_OL_AC_EP]\nAClog2\n{DSO_OL_AC_EP_FAILURE}\n[ACLOG2_DSO_OL_AC_EP_VALID]\nAClog2\n[DSO_PR_AC_EP]\n[ACLOG2_DSO_PR_AC_EP]\nAClog2\n{DSO_PR_AC_EP_FAILURE}\n[ACLOG2_DSO_PR_AC_EP_VALID]\nAClog1 or AClog2\n[DSO_ACLOG_VALID]\n[ACLOGX_DSO_ACLOG_VALID]\nAClog1 or AClog2\n{DSO_ACLOG_VALID_FAILURE}\n[ACLOGX_DSO_ACLOG_VALID_VALID]\nAClog1\n[DSO_ELC_OPEN_REQ]\n[ACLOG1_DSO_ELC_OPEN_REQ]\nAClog1\n{DSO_ELC_OPEN_REQ_FAILURE}\n[ACLOG1_DSO_ELC_OPEN_REQ_VALID]\nAClog2\n[DSO_ELC_CMD]\n[ACLOG2_DSO_ELC_CMD]\nAClog2\n{DSO_ELC_CMD_FAILURE}\n[ACLOG2_DSO_ELC_CMD_VALID]\nAClog2\n[DSO_ACEP_PB_SUPPLY]\n[ACLOG2_DSO_ACEP_PB_SUPPLY]\nAClog2\n{DSO_ACEP_PB_SUPPLY_FAILURE}\n[ACLOG2_DSO_ACEP_PB_SUPPLY_VALID]\nAClog1 or ACLog2\n[DSO_AC_BUS_AVAIL]\n[ACLOGX_DSO_AC_BUS_AVAIL]\nAClog1 or ACLog2\n{DSO_AC_BUS_AVAIL_FAILURE}\n[ACLOGX_DSO_AC_BUS_AVAIL_VALID]\nAClog1 or ACLog2\n[DSO_AC_BUS_OPP_AVAIL]\n[ACLOGX_DSO_AC_BUS_OPP_AVAIL]\nAClog1 or ACLog2\n{DSO_AC_BUS_OPP_AVAIL_FAILURE}\n[ACLOGX_DSO_AC_BUS_OPP_AVAIL_VALID]\nTable 104 : Correspondence table between internal signal and CAN signal\nWith X = 1 for ACLog1 and X = 2 for ACLog2\nFor correspondence between signal and CAN signal:\nFAILED = ACTIVE\nNOT_FAILED = INACTIVE ', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_506],[CAN-IRD-731],[SSCS_ACLog_1460]'}, u'SWRD_GLOBAL-ACENM_0226': {'status': u'MATURE', 'body': u'ACENM CSCI shall set the CAN signal values in the third column with the value of the signal in the second column according to the board configuration {BOARD_CONFIG}:\n{BOARD_CONFIG}\nSignal Name\nCAN Signal Name\nACLog1\n[ASI_RCCB1_CURRENT_PHA]\n[ACMP3B_PHA_CURRENT]\nACLog1\n[ASI_RCCB1_CURRENT_PHB]\n[ACMP3B_PHB_CURRENT]\nACLog1\n[ASI_RCCB1_CURRENT_PHC]\n[ACMP3B_PHC_CURRENT]\nACLog2\n[ASI_RCCB1_CURRENT_PHA]\n[ACMP3A_PHA_CURRENT]\nACLog2\n[ASI_RCCB1_CURRENT_PHB]\n[ACMP3A_PHB_CURRENT]\nACLog2\n[ASI_RCCB1_CURRENT_PHC]\n[ACMP3A_PHC_CURRENT]\nACLog2\n[ASI_RCCB2_CURRENT_PHA]\n[ACMP1B_PHA_CURRENT]\nACLog2\n[ASI_RCCB2_CURRENT_PHB]\n[ACMP1B_PHB_CURRENT]\nACLog2\n[ASI_RCCB2_CURRENT_PHC]\n[ACMP1B_PHC_CURRENT]\nACLog1\nVALID\n[ACMP3B_PHA_CURRENT_VALID]\nACLog1\nVALID \n[ACMP3B_PHB_CURRENT_VALID]\nACLog1\nVALID \n[ACMP3B_PHC_CURRENT_VALID]\nACLog2\nVALID \n[ACMP3A_PHA_CURRENT_VALID]\nACLog2\nVALID \n[ACMP3A_PHB_CURRENT_VALID]\nACLog2\nVALID \n[ACMP3A_PHC_CURRENT_VALID]\nACLog2\nVALID \n[ACMP1B_PHA_CURRENT_VALID]\nACLog2\nVALID \n[ACMP1B_PHB_CURRENT_VALID]\nACLog2\nVALID \n[ACMP1B_PHC_CURRENT_VALID]\nACLog2\n[ASI_ACEP_VOLTAGE_PHA]\n[EXT_AC_PHA_VOLTAGE]\nACLog2\n[ASI_ACEP_VOLTAGE_PHB]\n[EXT_AC_PHB_VOLTAGE]\nACLog2\n[ASI_ACEP_VOLTAGE_PHC]\n[EXT_AC_PHC_VOLTAGE]\nACLog2\nVALID\n[EXT_AC_PHA_VOLTAGE_VALID]\nACLog2\nVALID\n[EXT_AC_PHB_VOLTAGE_VALID]\nACLog2\nVALID\n[EXT_AC_PHC_VOLTAGE_VALID]\nACLog2\n{AC_EP_PHASEA_FREQ}  \n[EXT_AC_FREQUENCY]\nACLog2\n{AC_EP_PHASEA_FREQ_VDY}\n[EXT_AC_FREQUENCY_VALID]\nACLog2\n[ASI_ACEP_VOLTAGE_PHA] x\n[ASI_ACEP_CURRENT_PHA]\n(Phase A power computation)\n[EXT_AC_PHA_POWER]\nACLog2\n[ASI_ACEP_VOLTAGE_PHB] x [ASI_ACEP_CURRENT_PHB]\n(Phase B power computation)\n[EXT_AC_PHB_POWER]\nACLog2\n[ASI_ACEP_VOLTAGE_PHC] x [ASI_ACEP_CURRENT_PHC]\n(Phase C power computation)\n[EXT_AC_PHC_POWER]\nACLog2\nVALID\n[EXT_AC_PHA_POWER_VALID]\nACLog2\nVALID\n[EXT_AC_PHB_POWER_VALID]\nACLog2\nVALID\n[EXT_AC_PHC_POWER_VALID]\nACLog2\n[ASI_ACEP_VOLTAGE_PHA] x [ASI_ACEP_CURRENT_PHA] + \n[ASI_ACEP_VOLTAGE_PHB] x [ASI_ACEP_CURRENT_PHB] +\n[ASI_ACEP_VOLTAGE_PHC] x [ASI_ACEP_CURRENT_PHC]\n(Global AC EP power computation)\n[EXT_AC_LOAD]\nACLog2\nVALID\n[EXT_AC_LOAD_VALID]\nTable 105 : Correspondence table between internal signal and CAN signal', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1073],[SSCS_ACLog_1074],[CAN-IRD-464],[CAN-IRD-688],[CAN-IRD-689],[CAN-IRD-205],[CAN-IRD-207],[SSCS_ACLog_1360],[SSCS_ACLog_1362],[SSCS_ACLog_1393]'}, u'SWRD_GLOBAL-ACENM_0227': {'status': u'MATURE', 'body': u'ACENM CSCI shall set the CAN signal values in the third column with the value of the signal in the second column according to the board configuration {BOARD_CONFIG}:\n{BOARD_CONFIG}\nSignal Name\nCAN Signal Name\nAClog1 or ACLog2\n{WOW_STATUS}\n[ACLOGX_IS_IN_FLIGHT]\nAClog1 or ACLog2\n{WOW_STATUS_VALIDITY}\n[ACLOGX_FLIGHT_STATE_VALID]\nTable 106 : Correspondence table between internal signal and CAN signal\nWith X = 1 for ACLog1 and X = 2 for ACLog2', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.3', 'refer': u'[SSCS_ACLog_550],[CAN-IRD-215]'}, u'SWRD_GLOBAL-ACENM_0228': {'status': u'TBC', 'body': u'ACENM CSCI shall set the CAN signal values in the third column with the value of the signal in the second column according to the following logic:\nCB status\nCLOSED if the corresponding signal (second  column) is equal to ACTIVE\nOPEN if the corresponding signal (second  column) is equal to INACTIVE\nCB validities\nVALID if the corresponding signal (second  column) is equal to NOT_FAILED\nINVALID if the corresponding signal (second  column) is equal to FAILED\n{BOARD_CONFIG}\nSignal Name\nCAN Signal Name\nAClog1\n{TCB_LYCX_STATUS}\n[ACLOG1_CB_0XY_CLOSED]\nACLog2\n{TCB_LYCX_STATUS}\n[ACLOG2_CB_0XY_CLOSED]\nAClog1\n{TCB_MATRIX_FAILURE} TBC\n[ACLOG1_CB_0XY_CLOSED_VALID]\nACLog2\n{TCB_MATRIX_FAILURE} TBC\n[ACLOG2_CB_0XY_CLOSED_VALID]\nTable 107 : Correspondence table between internal signal and CAN signal\nWith Y = 1 to 5 and X = 1 to 5', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Validity is not defined in SSCS.', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_686],[CAN-IRD-201]'}, u'SWRD_GLOBAL-ACENM_0229': {'status': u'MATURE', 'body': u'ACENM CSCI shall set the CAN signal values in the third column with the value of the signal in the second column according to the board configuration {BOARD_CONFIG}:\n{BOARD_CONFIG}\nSignal Name\nCAN Signal Name\nAClog1 or AClog2\n{AC_BUSBAR1_SUPPLY_SOURCE}\n[AC1_BUSBAR_SPLY_SRC]\nAClog1 or ACLog2\n{AEC_BUSBAR_SUPPLY_SOURCE}\n[AEC_SPLY_SRC]\nAClog1 or ACLog2\n{AC_BUSBAR2_SUPPLY_SOURCE}\n[AC2_BUSBAR_SPLY_SRC]\nAClog1\n{AC1_BUS_AVAIL}\n[AC1_BUSBAR_AVAIL]\nAClog2\n{AC2_BUS_AVAIL}\n[AC2_BUSBAR_AVAIL]\nAClog1\n{AC2_OPP_BUS_AVAIL}\n[AC2_BUSBAR_AVAIL]\nAClog2\n{AC1_OPP_BUS_AVAIL}\n[AC1_BUSBAR_AVAIL]\nAClog1\nVALID\n[AC1_BUSBAR_AVAIL_VALID]\nAClog2\nVALID\n[AC2_BUSBAR_AVAIL_VALID]\nAClog1\nVALID\n[AC2_BUSBAR_AVAIL_VALID]\nAClog2\nVALID\n[AC1_BUSBAR_AVAIL_VALID]\nAClog1 or ACLog2\nVALID\n[NETWORK_SIGNAL_VALID]\nAClog1 or ACLog2\n{AC_NETWORK_RECONF_FOR_CAN}\n[RECONF_IN_PROGRESS]\nTable 109 : Correspondence table between internal signal and CAN signal', 'additional': u'Network is always considered as valid.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1127],[SSCS_ACLog_1128],[SSCS_ACLog_1226],[SSCS_ACLog_1227],[SSCS_ACLog_1228],[CAN-IRD-180],[CAN-IRD-181]'}, u'SWRD_GLOBAL-ACENM_0354': {'status': u'TBD', 'body': u'ACENM CSCI shall set data X received on CAN bus with a default value when at least one of the following conditions is true:\n{SW_MODE} is equal to INIT\nData X is not available or not valid on the two CAN busses  ({CAN_DATAX_FAILURE_STS} is equal to FAILED) \nDefault Value\nDATAX\nSignal Name\n[NVM_LAST_FLIGHT_LEG]\nFLIGHT_LEG\n{EDMU_FLIGHT_LEG}\n0\nAC_TAIL\n{EDMU_AIRCRAFT_TAIL}\n0\nFLIGHT_PHASE\n{EDMU_FLIGHT_PHASE}\nNOT_VALID\nXFR\n{XFR_POSITION}\n0xF\nDATE_TIME\n{EDMU_DATE}\n0xF\n{EDMU_TIME}\nNOT_OPEN_LOCKED\nACMP3B_CMD \n{EDMU_ACMP3B_OPEN_LOCKED_CMD}\nINVALID\n{EDMU_ACMP3B_CLOSED_CMD}\nNO_CHANGE\n{EDMU_ACMP3B_TRIPPED_CMD}\nNONE\n{EDMU_ACMP3B_TRIP_CAUSE_CMD}\nNOT_OPEN_LOCKED\nACMP1B_CMD \n{ EDMU_ACMP1B_OPEN_LOCKED_CMD}\nINVALID\n{EDMU_ACMP1B_CLOSED_CMD}\nNO_CHANGE\n{EDMU_ACMP1B_TRIPPED_CMD}\nNONE\n{EDMU_ACMP1B_TRIP_CAUSE_CMD}\nNOT_OPEN_LOCKED\nACMP3A_CMD \n{EDMU_ACMP3A_OPEN_LOCKED_CMD}\nINVALID\n{EDMU_ACMP3A_CLOSED_CMD}\nNO_CHANGE\n{EDMU_ACMP3A_TRIPPED_CMD}\nNONE\n{EDMU_ACMP3A_TRIP_CAUSE_CMD}\nINACTIVE\nIBIT_REQUEST\n{IBIT_COMMAND}\nINACTIVE\nNVM_DL_REQUEST\n{NVM_DATA_LOAD_COMMAND}', 'additional': u'Default values are specified for data which are extracted from CAN bus when data are not available or not valid on the two CAN busses or when software is in INIT mode.', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Several default values are TBD', 'issue': u'1.4', 'refer': u'[SSCS_ACLog_1068],[SSCS_ACLog_1325]'}, u'SWRD_GLOBAL-ACENM_0040': {'status': u'MATURE', 'body': u'ACENM CSCI shall set right generator source availability {RIGHT_GEN_AVAIL} according to the following logic:\n[DSI_PR_RGEN]\n[DSI_NPR_RGEN]\n{RIGHT_GEN_AVAIL}\nREADY\nNOT_READY\nAVAILABLE\nREADY\nREADY\nNOT_AVAILABLE\nNOT_READY\nNOT_READY\nNOT_AVAILABLE\nNOT_READY\nREADY\nNOT_AVAILABLE\nTable 10 : Right generator source availability management', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_571]'}, u'SWRD_GLOBAL-ACENM_0424': {'status': u'MATURE', 'body': u'ACENM CSCI shall set the ACMPX tripped state {ACMPX_TRIPPED_STATE} to NOT_TRIPPED if at least one of the following conditions is TRUE:\n{SW_MODE} is equal to INIT and {START_MODE} is equal to COLD and {WOW_STATUS} is equal to ON_GROUND\n{SW_MODE} is equal to INIT and board position in NVM [NVM_BOARD_CONFIG] has changed \n{EDMU_ACMPX_TRIPPED_CMD} has switched from NO_CHANGE or TRIP_SET to TRIP_RESET\nOtherwise, {ACMPX_TRIPPED_STATE} is set to TRIPPED if at least one of the following conditions is TRUE:\n{ACMPX_PROT} is equal to ACTIVE and {ACMPX_RCCB_STATUS} is equal to OPEN\n{EDMU_ACMPX_TRIPPED_CMD} is equal to TRIP_SET and {ACMPX_RCCB_STATUS} is equal to OPEN\nOtherwise, {ACMPX_TRIPPED_STATE} keeps its previous value.\nWith ACMPX = ACMP3A or ACMPX = ACMP1B (for ACLog2) or\nACMPX = ACMP3B (for ACLog1)', 'additional': u'Each EDMU_ACMPX_TRIPPED_CMD is associated with one ACMP. An ACMP can receive a TRIP reset independently from other ACMPs.  ', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1123],[SSCS_ACLog_1121],[SSCS_ACLog_721],[SSCS_ACLog_1142],[SSCS_ACLog_1119],[SSCS_ACLog_1278],[SSCS_ACLog_1280]'}, u'SWRD_GLOBAL-ACENM_0357': {'status': u'MATURE', 'body': u'When {SW_MODE} is equal to INIT and {BOARD_CONFIG} is equal to ACLog2, ACENM CSCI shall set contactor commands {GLC2_CTC_GCU_ACK}, {ATC2_CTC_CMD} and {ELC_CTC_CMD} to OPEN. ', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'YES', 'rationale': u'N/A', 'issue': u'1.0', 'refer': u'[SSCS_ACLog_663]'}, u'SWRD_GLOBAL-ACENM_0299': {'status': u'MATURE', 'body': u'When software mode {SW_MODE} is equal to INIT, ACENM shall set 28V DC bus 1 fuse failure {28V_DC_BUS1_FUSE_FAILURE} to NOT_FAILED.', 'additional': u'N/A', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Default value NOT_FAILED is specified during SW initialization phase.', 'issue': u'1.0', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0298': {'status': u'DELETED', 'body': u'DELETED', 'additional': 'EMPTY', 'derived': 'EMPTY', 'terminal': 'EMPTY', 'safety': 'EMPTY', 'rationale': u'Fuse failure has no impact on power supply monitoring.', 'issue': u'1.4', 'refer': 'EMPTY'}, u'SWRD_GLOBAL-ACENM_0420': {'status': u'DELETED', 'body': u'DELETED', 'additional': 'EMPTY', 'derived': 'EMPTY', 'terminal': 'EMPTY', 'safety': 'EMPTY', 'rationale': u'Merged in SWRD_GLOBAL-ACENM_0012', 'issue': u'1.4', 'refer': 'EMPTY'}, u'SWRD_GLOBAL-ACENM_0421': {'status': u'MATURE', 'body': u'AC Ground servicing mode status {AC_GS_MODE} is equal to ACTIVE, ACENM CSCI shall force:\nAC Bus 1 supply source {AC_BUSBAR1_SUPPLY_SOURCE} to EXT_AC\nAC Bus 2 supply source {AC_BUSBAR2_SUPPLY_SOURCE} to EXT_AC\nAEC Bus supply source {AEC_BUSBAR_SUPPLY_SOURCE} to DISCONNECTED', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1486],[CAN-IRD-182]'}, u'SWRD_GLOBAL-ACENM_0295': {'status': u'DELETED', 'body': u'DELETED', 'additional': 'EMPTY', 'derived': 'EMPTY', 'terminal': 'EMPTY', 'safety': 'EMPTY', 'rationale': u'Fuse failure has no impact on power supply monitoring.', 'issue': u'1.4', 'refer': 'EMPTY'}, u'SWRD_GLOBAL-ACENM_0294': {'status': u'MATURE', 'body': u'When software mode {SW_MODE} is equal to OPERATIONAL, ACENM shall set 28V DC Essential Bus2 presence failure {28V_DC_ESS_BUS2_FAILURE} according to the following logic:\nNOT_FAILED, when 28V DC Essential Bus2 status [DSI_28V_DC_BUS2_FUSE_UP_STS] is equal to ACTIVE.\nFAILED, when 28V DC Essential Bus 2 status [DSI_28V_DC_BUS2_FUSE_UP_STS] is equal to INACTIVE during 5s\xb10.5s.\nOtherwise {28V_DC_ESS_BUS2_FAILURE} keeps its previous value.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1183],[SSCS_ACLog_1181]'}, u'SWRD_GLOBAL-ACENM_0297': {'status': u'MATURE', 'body': u'When software mode {SW_MODE} is equal to OPERATIONAL, ACENM shall set 28V AC EP TR presence failure {28V_AC_EP_TR_FAILURE} according to the following logic:\nNOT_FAILED, when 28V DC AC EP TR status [DSI_28V_AC_EP_TR_FUSE_UP_STS] is equal to ACTIVE.\nFAILED, when 28V DC AC EP TR status [DSI_28V_AC_EP_TR_FUSE_UP_STS] is equal to INACTIVE during 5s\xb10.5s.\nOtherwise {28V_AC_EP_TR_FAILURE} keeps its previous value.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1183],[SSCS_ACLog_1181]'}, u'SWRD_GLOBAL-ACENM_0296': {'status': u'MATURE', 'body': u'When software mode {SW_MODE} is equal to INIT, ACENM shall set 28V AC EP TR presence failure {28V_AC_EP_TR_FAILURE} to NOT_FAILED.', 'additional': u'N/A', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Default value NOT_FAILED is specified during SW initialization phase.', 'issue': u'1.0', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0291': {'status': u'MATURE', 'body': u'When software mode {SW_MODE} is equal to OPERATIONAL, ACENM shall set 28V DC Bus1 presence failure {28V_DC_BUS1_FAILURE} according to the following logic:\nNOT_FAILED, when 28V DC Bus1 status [DSI_28V_DC_BUS1_FUSE_UP_STS] is equal to ACTIVE\nFAILED, when 28V DC Bus 1 status [DSI_28V_DC_BUS1_FUSE_UP_STS] is equal to INACTIVE during 5s\xb10.5s.\nOtherwise {28V_DC_BUS1_FAILURE} keeps its previous value.', 'additional': u'N/A', 'derived': u'NO', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'N/A', 'issue': u'1.5', 'refer': u'[SSCS_ACLog_1183],[SSCS_ACLog_1181]'}, u'SWRD_GLOBAL-ACENM_0290': {'status': u'MATURE', 'body': u'When software mode {SW_MODE} is equal to INIT, ACENM shall set 28V DC Bus1 presence failure {28V_DC_BUS1_FAILURE} to NOT_FAILED.', 'additional': u'N/A', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Default value NOT_FAILED is specified during SW initialization phase.', 'issue': u'1.0', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0293': {'status': u'MATURE', 'body': u'When software mode {SW_MODE} is equal to INIT, ACENM shall set 28V DC Essential Bus2 presence failure {28V_DC_ESS_BUS2_FAILURE} to NOT_FAILED.', 'additional': u'N/A', 'derived': u'YES', 'terminal': u'NO', 'safety': u'NO', 'rationale': u'Default value NOT_FAILED is specified during SW initialization phase.', 'issue': u'1.0', 'refer': u'N/A'}, u'SWRD_GLOBAL-ACENM_0292': {'status': u'DELETED', 'body': u'DELETED', 'additional': 'EMPTY', 'derived': 'EMPTY', 'terminal': 'EMPTY', 'safety': 'EMPTY', 'rationale': u'Fuse failure has no impact on power supply monitoring.', 'issue': u'1.4', 'refer': 'EMPTY'}, u'SWRD_GLOBAL-ACENM_0043': {'status': u'DELETED', 'body': u'DELETED', 'additional': 'EMPTY', 'derived': 'EMPTY', 'terminal': 'EMPTY', 'safety': 'EMPTY', 'rationale': u'Source availability is no more impacted by failed open/closed states.', 'issue': u'1.5', 'refer': 'EMPTY'}}
        doc_upper = {u'SSCS_ACLog_790': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall meet the Power Input requirements defined in section 16 of RTCA/DO-160G Category A(NF) with the exceptions described in Power Quality document RAE-BA700-103 rev C.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-292]'}, u'SSCS_ACLog_791': {'status': u'TBC', 'terminal': 'EMPTY', 'additional': u'waiting for system update', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall meet Lightning Indirect Effects (Mutli-Burst) requirements with the following levels (as per RAE-D700-211 Section 7.4) : TBC\nPower feeders (worst case):\n- WF3: 3000V/150A\nCables between AC EPC and TRU (worst case):\n- WF3: 300V/12A\nOther cables:\n- WF3: 300V/12A', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-182]'}, u'SSCS_ACLog_1389': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Flight Phase shall be filled by the Flight phase provided by the Avionics at the moment the fault occurs.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1369]'}, u'SSCS_ACLog_793': {'status': u'TBC', 'terminal': 'EMPTY', 'additional': u'waiting for system update', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall meet Lightning  Indirect Effects (Pin Injection) requirements with the following levels (as per RAE-D700-211 Section 7.4): TBC\nPower feeders (unshielded):\nLevels expected by BA at AC buses: \n- WF 3: 600V/24A\n- WF 4: 300V/60A\nOthers (unshielded):\n- WF 3: 600V/24A (power cables and cables routed within)\n- WF 4: 300V/60A (cables routed within and power cables)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-178]'}, u'SSCS_ACLog_765': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall meet the Altitude requirements defined in section 4 of RTCA/DO-160G Category A2.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-138]'}, u'SSCS_ACLog_795': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall meet the Audio Frequency Susceptibility requirements defined in section 18 of RTCA/DO-160G Category R(WF).', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-173]'}, u'SSCS_ACLog_796': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall meet the Electrostatic Discharge Susceptibility requirements defined in section 25 of RTCA/DO-160G Category A.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-170]'}, u'SSCS_ACLog_798': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall meet the combined Temperature, Altitude as per the graph below, considering the maximum altitude at 14,000 feet:\n \n \nFigure 36:  combined Temperature, Altitude', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-174]'}, u'SSCS_ACLog_840': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog shall monitor its own antiparalleling protection activation during CBIT', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2572],[SPE-BITE-622]'}, u'SSCS_ACLog_792': {'status': u'TBC', 'terminal': 'EMPTY', 'additional': u'waiting for system update', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall meet Lightning  Indirect Effects (Mutli-Stroke) requirements with the following levels (as per RAE-D700-211 Section 7.4) : TBC\n- WF 3: 3000V/120A\n- WF 5A: 2000V/4500A\nCables between AC EPC and TRU (shielded) (worst case):\n- WF2: 300V/600A\n- WF3: 750V/150A\n- WF4: 300V/600A\nOthers:\n- WF 2: 300V/600A\n- WF 3: 600V/120A\n- WF 4: 300V/600A', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-180]'}, u'SSCS_ACLog_1542': {'status': u'TBD', 'terminal': 'EMPTY', 'additional': u'To inform the other ACLog that this ACLog has a problem', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'The ACLog shall receive one DSI Ground/Open (ground active) "DSI_ACLOG_OPP_VALID", grounded when the opposite ACLog is VALID, OPEN otherwise.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To inform the other ACLog that this ACLog has a problem', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_794': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall meet the Radio Frequency Susceptibility requirements defined in RAE-D700-211 revA, section 7.2 (HIRF), tables 2 and 7.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-171]'}, u'SSCS_ACLog_1363': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall not enter in functional mode when at least one of this failure is declared during PBIT (internal failure):\n- hardware / Software are incompatible\n- on DSI\n- on ASI\n- on hardware AC external power overvoltage protection function\n- current transformer function\n- NVM check\n- watchdog test', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1551],[SPE-BITE-1577]'}, u'SSCS_ACLog_1362': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'The ACLog2 shall compute the EXT_AC_LOAD signal and send if through the CAN busses:\nEXT_AC_LOAD = EXT_AC_PHA_POWER + EXT_AC_PHB_POWER + EXT_AC_PHC_POWER', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To define AC Ext load', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_764': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall meet the Decompression requirements defined in section 4 of RTCA/DO-160G Category A2.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-140]'}, u'SSCS_ACLog_1360': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'The ACLog2 shall compute the EXT_AC_PHx_POWER signals and send if through the CAN busses:\n EXT_AC_PHA_POWER = ASI_ACEP_VOLTAGE_PHA * ASI_ACEP_CURRENT_PHA\n EXT_AC_PHB_POWER = ASI_ACEP_VOLTAGE_PHB * ASI_ACEP_CURRENT_PHB\n EXT_AC_PHC_POWER = ASI_ACEP_VOLTAGE_PHC * ASI_ACEP_CURRENT_PHC', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To define phases power', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1367': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Confirmation time for GCU Overload indication discrepancy failure shall be 3 seconds +/- 0,5 s', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1373]'}, u'SSCS_ACLog_1366': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Confirmation time for GCU Power Ready indication discrepancy failure shall be 3 seconds +/- 0,5 s.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1372]'}, u'SSCS_ACLog_1364': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog functionning shall not be degraded during BITE NVM download and reset', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'2', 'refer': u'[SIRD-EPGDS-749]'}, u'SSCS_ACLog_1244': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1369': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Confirmation time for AC EP Overload signals indication discrepancy failure shall be 3 seconds +/- 0,5 s.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1375]'}, u'SSCS_ACLog_1247': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The Phase order AC external protection shall be activated when the hardaware phase order function (PHASE_ORDER_RESULT signal) is activated during 100ms+/-10ms', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-457]'}, u'SSCS_ACLog_1240': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'electronic command (include microcontroller) cannot be conform to this req', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The loss or erroneous command of RCCB ACMPx  shall be less than 1e-6 per flight hour', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-923],[SES-ACEPC-924],[SES-ACEPC-925],[SES-ACEPC-926]'}, u'SSCS_ACLog_1243': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'The watchdog shall be inhibited when debugging (Nexus) or programming (J1) connectors are plugged', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'Design impact, to not increase the wtachdog counter during debugging', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_484': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The GFI protection status shall be communicated through the CAN busses.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-397],[SPE-BITE-876]'}, u'SSCS_ACLog_485': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'When the GFI protection is activated, the default shall be latched and sent into NVM.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-400]'}, u'SSCS_ACLog_1534': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'ACLog shall provide a low power DSO GND/OPEN "DSO_ELC_OPEN_REQ"', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'waiting for SES ACEPC DSO_ELC_OPEN_REQ declaration', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1535': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'compatibility check is performed in order to ensure that all interfaces and functionalities performed by the micro-processing are compatible with the rest of the system, due to the fact that parts of the EPGDS can be replaced by a maintenance team and not under Zodiac Aero Electric responsibilities.', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'During PBIT, ACLog shall check hardware / Software compatibility.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-114]'}, u'SSCS_ACLog_1532': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'ACLog shall provide a DSI GND/OPEN 1mA "DSI_ELC_OPEN_REQ"', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'waiting for SES ACEPC DSI_ELC_OPEN_REQ declaration', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1533': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW, SW', 'body': u'ACLOG2 shall provide a DSO 28V medium power "DSO_ACEP_PB_SUPPLY" to supply AC external push button (always active).', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'waiting for SES ACEPC update', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_482': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'When a GFI protection is activated for ACMP 1B RCCB, the ACLog2 shall proceed to the ACMP 1B RCCB opening.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-393],[SIRD-EPGDS-2460]'}, u'SSCS_ACLog_483': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'When a GFI protection is activated for ACMP 3A RCCB, the ACLog2 shall proceed to the ACMP 3A RCCB opening.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-393],[SIRD-EPGDS-2460]'}, u'SSCS_ACLog_1437': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'AC External is NOT available = OPEN circuitAC External is NOT Power Ready = OPEN circuit', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall provide 2 DSO Ground/Open medium power Interfaces :\n- "DSO_ACEP_AVAIL"\n- "DSO_ACEP_ON"', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-530]'}, u'SSCS_ACLog_1436': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall provide 2 DSO Ground/Open low power Interfaces ("AC EP power ready" information from ACLog2 to ACLog 1) :\n- "DSO_PR_AC_EP"\n- "DSO_NPR_AC_EP"', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-658]'}, u'SSCS_ACLog_1435': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'The ACLog microcontroller shall be a Freescale MPC5566MVR132', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'As required in the EMP document', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_582': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall provide 6 DSI Ground/Open 5mA to read the contactors GLC1, GLC2 and ALC auxiliaries contacts:\n- DSI_GLC1_NO for Normally Opened aux contact: DSI Open = CTC Open\n- DSI_GLC2_NO for Normally Opened aux contact : DSI Open = CTC Open\n- DSI_AGLC_NO for Normally Opened aux contact : DSI Open = CTC Open\n- DSI_GLC1_NC for Normally Closed aux contact : DSI Grounded = CTC Open\n- DSI_GLC2_NC for Normally Closed aux contact : DSI Grounded= CTC Open\n- DSI_AGLC_NC for Normally Closed aux contact : DSI Grounded= CTC Open', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-402],[SES-ACEPC-407],[SES-ACEPC-413]'}, u'SSCS_ACLog_523': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_522': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_521': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-748': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the EDMU_GCU_LG_COM_message every 100 ms', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_668': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog shall perform PBIT only\n\tafter a Cold start\nAND\n\ton ground.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-112],[SPE-BITE-113],[SPE-BITE-193]'}, u'SSCS_ACLog_669': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog shall perform its Preliminary Tests and PBIT in less than 1 seconds (including 60ms of HW power up time) before to be fully operational (cold start mode on ground).', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-992]'}, u'SSCS_ACLog_664': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'On ground condition added', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall perform cold start power-up following a power interrupt greater than 5s +/-1s (Loss 5s function) on Ground otherwise a warm start\n \n \nTable 34: ACLOG PBIT conditions', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-690],[SIRD-EPGDS-6762]'}, u'SSCS_ACLog_1282': {'status': u'TBC', 'terminal': 'EMPTY', 'additional': u'tolerance added', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The maximum time between the reception of a reset/set of "trip" or "Open-Locked" command from the EDMU and the ability to send back this new state memorized in the AClog NVM shall be less than 190ms +/-10 ms.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2199]'}, u'SSCS_ACLog_667': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall perform Preliminary Tests after a warm or cold start before PBIT and/or CBIT :\n- Pin-programming consistency\n- RAM integrity\n- ROM integrity', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-108],[SPE-BITE-109],[SPE-BITE-119],[SPE-BITE-875],[SPE-BITE-928],[SPE-BITE-933]'}, u'SSCS_ACLog_660': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The CAN interface shall not be damage after being exposed to the following levels:\n- Pin injection: WF3(1Mhz) 600V/24A; WF4 300V/60A,\n- Multi stroke: WF2 300V600A; WF1:600A, WF3:600V/120A; WF4:300V/600A,\n- Multi burst: WF3 (1Mhz, 10Mhz) 300V/12A.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2107]'}, u'SSCS_ACLog_661': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The loss of communication bus shall not affect the network management.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2266]'}, u'SSCS_ACLog_662': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_663': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'At power up, the ACLog shall start with contactors (included ACMP) in open state', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2303]'}, u'CAN-IRD-671': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS', 'body': u'The messages between EDMU and XLOG shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_706': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall not initiate overload frame due to its incapacity to treat all incoming frames.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2256]'}, u'SSCS_ACLog_705': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall be labeled with marking Designation, Part Number, Serial Number, MFR (manufacturer) and DMF (date of manufacturing).', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-667]'}, u'CAN-IRD-672': {'allocation': u'EDMU SSCS', 'body': u'The messages between EDMU and GCU shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_442': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The Phase order function shall be activated when phases order is different than ABC:\n- BAC detected\n- ACB detected\n- CBA detected\n- CAB not detected\n- BCA not detected', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-457]'}, u'CAN-IRD-679': {'allocation': u'EDMU SSCS', 'body': u'CAN IDs of LGCU to EDMU frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-173': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to SSPCM through EDMU_SSPCM_FLIGHTINFO message:\n\uf0a7\tDate : Digital values of Year, Month and Day\n\uf0a7\tValidity of Date : Date is valid or not\n\uf0a7\tTime : Digital values of Hour and Minute\n\uf0a7\tGND/Flight status : A/C is on Ground or in Flight\n\uf0a7\tValidity of the GND/Flight status signal: the signal is valid or not.\n\uf0a7\tFlight phases\n\uf0a7\tValidity of Flight phase : Flight phase is valid or not\n\uf0a7\tAircraft tail\n\uf0a7\tValidity of Aircraft tail : Aircraft tail is valid or not\n\uf0a7\tFlight leg\n\uf0a7\tValidity of Flight leg : Flight leg is valid or not', 'derived': u'True', 'rationale': u'Provision'}, u'CAN-IRD-170': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data through to EDMU_SSPCM_IBITE message:\n\uf0a7\tPUT request: Power-Up test is requested or not.', 'refer': u'[SPE-BITE-202]'}, u'CAN-IRD-171': {'allocation': u'SSPCM SSCS', 'body': u'SSPCM shall inform of the following conditions through to SSPCM_EDMU_IBITE message:\n\uf0a7\tPUT acceptance: LRU is in condition for Power-Up test or not.', 'refer': u'[SPE-BITE-202]'}, u'SSCS_ACLog_715': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_463': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'When I\xb2t  RCCB protection is detected for ACMP 3B RCCB, the ACLog1 shall proceed to the ACMP 3B RCCB opening.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1759],[SIRD-EPGDS-2460]'}, u'CAN-IRD-174': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send EDMU_SSPCM_FLIGHTINFO every 1 second to SSPCM.', 'derived': u'True', 'rationale': u'Provision', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1027': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'ASI 115V AC and ASI Current measure shall have a precision of +/-5% on full scale (without taking account AC EPC resistors tolerances)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'ASI 115V specification', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_520': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_868': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'When the AC Bus 1 overvoltage protection is activated, ACLog1 shall open the ACMP3B RCCB', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2460]'}, u'SSCS_ACLog_1438': {'status': u'TBD', 'terminal': 'EMPTY', 'additional': u'should be added in AC EPC document', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'The ACLog shall take into account the limitation current resistance of 49.9kOhms (1%) between the point of measurement and the electronic boards for every 28V DC voltage monitoring.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'should be added in AC EPC document', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_812': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall meet the Conducted Emissions requirements defined in MIL-STD-461F, Section CE101 (DO160F LISN + capacitor). ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-172]'}, u'SSCS_ACLog_769': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall meet the "Short Time Low Operating Temperature" requirements defined in section 4 of RTCA/DO-160G Category A2.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-135],[SES-ACEPC-291]'}, u'SSCS_ACLog_1331': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog1 shall compute the "ATC3_FAILED_OPEN_CAS" CAS message according the following logic : \nTRUE\nATC3 is declared failed Open\nFALSE otherwise', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1204]'}, u'CAN-IRD-824': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to DCLOG through EDMU_XLOG_DISC_1 :\n- XFR_LEFT DSI status from EMERLOG : DSI is set or not\n- Validity of XFR_LEFT : DSI is valid or not\n- XFR_NORM DSI status from EMERLOG : DSI is set or not\n- Validity of XFR_NORM : DSI is valid or not\n- XFR_RIGHT DSI status from EMERLOG : DSI is set or not\n- Validity of XFR_RIGHT : DSI is valid or not\n- XFR_ESS DSI status from EMERLOG : DSI is set or not\n- Validity of XFR_ESS : DSI is valid or not\n- TRU[1;2] Overheat DSI status from DCLOG[1;2] : DSI is set or not\n- Validity of TRU[1;2] Overheat : DSI is valid or not.s\t', 'refer': u'[SIRD-EPGDS-3073],[SIRD-EPGDS-6769]'}, u'CAN-IRD-825': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send EDMU_XLOG_DISC_1 every 250 ms to DCLOG.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_846': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'The reference voltage will be ASI_RCCB1_CURRENT_RET', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog1 shall read, through current transformers, the three RCCB phases currents of ACMP3B thanks to the following ASI:\n- ACMP3B phase A: ASI_RCCB1_CURRENT_PHA\n- ACMP3B phase B: ASI_RCCB1_CURRENT_PHB\n- ACMP3B phase C: ASI_RCCB1_CURRENT_PHC', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2453],[SES-ACEPC-347],[SES-ACEPC-487]'}, u'SSCS_ACLog_888': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'The reference voltage will be ASI_ACEP_CURRENT_RET', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog2 shall read, through current tranformers, the AC external power phases currents thanks to the following ASI:\n- Phase A: ASI_ACEP_CURRENT_PHA\n- Phase B: ASI_ACEP_CURRENT_PHB\n- Phase C: ASI_ACEP_CURRENT_PHC', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SES-ACEPC-844]'}, u'CAN-IRD-820': {'allocation': u'HS', 'body': u'LGCU shall send the following data through RGCU_EDMU_ANALOG_x messages :\n- LGCU_PHA_VOLTAGE\n- Validity attached to LGCU_PHA_VOLTAGE\n- LGCU_PHB_VOLTAGE\n- Validity attached to LGCU_PHB_VOLTAGE\n- LGCU_PHC_VOLTAGE\n- Validity attached to LGCU_PHC_VOLTAGE\n- RGCU_PHA_CURRENT\n- Validity attached to LGCU_PHA_CURRENT\n- LGCU_PHB_CURRENT\n- Validity attached to LGCU_PHB_CURRENT\n- LGCU_PHC_CURRENT\n- Validity attached to LGCU_PHC_CURRENT', 'refer': u'[SIRD-EPGDS-2975]'}, u'CAN-IRD-821': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request LGCU_EDMU_ANALOG_x every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_842': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_843': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_967': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'tolerance added', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog weight shall be less than 0.755kg/1.66 lbs +/- 20g', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-705]'}, u'SSCS_ACLog_965': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'J1 : connector reference:Positronic ODD26S5R00X/AA-', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall implement the following connectors:\n- Two DIN 41612 rear connectors, 5 rows per 32 pin (P1 and P2)\n- One female SUBD 26 high density front connector (J1) for on board data loading', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-714]'}, u'SSCS_ACLog_964': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall be compliant to the mechanical specification F0214-CE0003100Yxx\n  ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-704]'}, u'CAN-IRD-828': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to ACLOG through EDMU_XLOG_DISC_1 :\n- XFR_LEFT DSI status from EMERLOG : DSI is set or not\n- Validity of XFR_LEFT : DSI is valid or not\n- XFR_NORM DSI status from EMERLOG : DSI is set or not\n- Validity of XFR_NORM : DSI is valid or not\n- XFR_RIGHT DSI status from EMERLOG : DSI is set or not\n- Validity of XFR_RIGHT : DSI is valid or not\n- XFR_ESS DSI status from EMERLOG : DSI is set or not\n- Validity of XFR_ESS : DSI is valid or not', 'refer': u'[SIRD-EPGDS-3073]'}, u'CAN-IRD-829': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send EDMU_XLOG_DISC_1 every 250 ms to ACLOG.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_961': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall be capable of being installed, removed, or replaced without alterations, misalignment, rigging, or damage to the items being installed, or damage or alteration to adjoining items or structure.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-200]'}, u'SSCS_ACLog_1183': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'voltage presence treshold is 15V +/-1V', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall monitor power supplies inputs ("28V_DC_BUS1", "28V_DC_ESS_BUS2", "28V_AC_EP_TR") presence during CBIT:\n\t- The voltage is present = active statewithout confirmation time\n\t- The voltage is not present = not active state during 5s +/-0.5s', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1011],[SPE-BITE-1012],[SPE-BITE-1013],[SPE-BITE-1014]'}, u'SSCS_ACLog_1098': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'ACLog1 and ACLog2 are not synchronizedtolerance has to be confirmed', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACMP sequencing command of the ACMP shall be made by the two ACLogs by following the table here below:\n   \nWith +/-20ms of time tolerance', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2552]'}, u'SSCS_ACLog_1182': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'an hysteresis is added to avoid flickering.', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall provide internal DSI for power supplies inputs ("28V_DC_BUS1", "28V_DC_ESS_BUS2", "28V_AC_EP_TR") to detect:\n\t- Upper 17V +/-1V the voltage is present (active state)\n\t- Under 15V +/-1V the voltage is not present (not active state)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1012],[SPE-BITE-1013],[SPE-BITE-1014]'}, u'SSCS_ACLog_1095': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_866': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'The references voltages will be ASI_AC_BUSBAR_VOLT_RET for AC Bus 2 and ASI_AC_OPP_BUSBAR_VOLT_RET for AC Bus 1', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog2 shall read the three AC Bus 2 voltages phases and the AC Bus 1 phase A voltage thanks to the following ASI:\n- AC Bus 1 phase A: ASI_AC_OPP_BUSBAR_VOLT_PHA\n- AC Bus 2 phase A: ASI_AC_BUSBAR_VOLT_PHA\n- AC Bus 2 phase B: ASI_AC_BUSBAR_VOLT_PHB\n- AC Bus 2 phase C: ASI_AC_BUSBAR_VOLT_PHC', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SES-ACEPC-641],[SES-ACEPC-775]'}, u'SSCS_ACLog_1097': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'I\xb2t protection functions shall include a thermal memory to avoid wire damage in case of cyclic overload conditions.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SES-ACEPC-931]'}, u'SSCS_ACLog_1096': {'status': u'TBC', 'terminal': 'EMPTY', 'additional': u'the relation between the current (I) and the ASI input voltage (V) is given by the following formula: V=(Rct)xI/1000Rct: Current transformer burden resistor (two 16 Ohms resistors in parrallel)1000: Current tranformer nominal current ratio (1/1000)This curve is different from the SES definition : TBC', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Phase overcurrent due to a short-circuit between 2 phases or 1 phase and neutral shall be detected by ACLog2 when difference between any of the three phase currents of the External Power (i.e. (Current phase 1 - Current phase 2) or (Current phase 1 - Current phase 3) or (Current phase 2 - Current phase 3)) is too high according to the following current-time delays :\n   \n   \nFigure 21: unbalance protection definition', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-854]'}, u'SSCS_ACLog_1158': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'CAN shield connection to the ground shall be made at EPC Level, not at the ACLog level.\n   \nFigure 32: CAN Shield connection', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-701]'}, u'SSCS_ACLog_1092': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'The zero detectors outputs and phase order result shall be wired to the microcontroller', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To compute the input frequency', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-186': {'allocation': u'AC Log SSCS', 'body': u'AC contactors shall include the following contactors for ACLOG1 and ACLOG2\n\uf0a7\tATC1\n\uf0a7\tATC2\n\uf0a7\tATC3\n\uf0a7\tELC\n\uf0a7\tAEC', 'refer': u'[SIRD-EPGDS-180],[SIRD-EPGDS-1050],[SIRD-EPGDS-1668]'}, u'CAN-IRD-185': {'allocation': u'AC Log SSCS', 'body': u'ACLOG[1/2] shall send the following data to EDMU through ACLOG[1/2]_EDMU_CNTOR_STATUS message:\n\uf0a7\tState of AC contactors: contactor is open or closed.\n\uf0a7\tValidity of the state of AC contactor: the state signal is valid or not.', 'refer': u'[SIRD-EPGDS-180],[SIRD-EPGDS-1050],[SIRD-EPGDS-1668]'}, u'SSCS_ACLog_1180': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog network management and protections shall not be affected by a failure or loss of CBIT functionalities', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-952]'}, u'CAN-IRD-183': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request ACLOG[1/2]_EDMU_NETWORK_STATUS_x every 50 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-182': {'allocation': u'AC Log SSCS', 'body': u'Supplying sources shall include the following sources or disconnected or invalid:\n\uf0a7\tR_GEN;\n\uf0a7\tL_GEN;\n\uf0a7\tAPU_GEN;\n\uf0a7\tEXT_AC;\n\uf0a7\tMAIN_BATT;\n\uf0a7\tAPU_BATT;\n\uf0a7\tRAT_GEN;\n\uf0a7\tTRU1;\n\uf0a7\tTRU2;\n\uf0a7\tESS_TRU;', 'refer': u'[SIRD-EPGDS-180],[SIRD-EPGDS-1050],[SIRD-EPGDS-1896],[SIRD-EPGDS-6774]'}, u'CAN-IRD-181': {'allocation': u'AC Log SSCS', 'body': u'AC busbars shall include the following busbars for ACLOG1 and ACLOG2:\n\uf0a7\tAC1_BUSBAR\n\uf0a7\tAC2_BUSBAR', 'refer': u'[SIRD-EPGDS-180],[SIRD-EPGDS-1050],[SIRD-EPGDS-1896],[SIRD-EPGDS-6774]'}, u'CAN-IRD-180': {'allocation': u'AC Log SSCS', 'body': u'ACLOG[1/2] shall send the following data to EDMU through ACLOG[1/2]_EDMU_NETWORK_STATUS_1 message:\n\uf0a7\tAvailability of the AC busbars: Busbar is powered or not.\n\uf0a7\tValidity of the availability of the AC busbars: the availability signal is valid or not.\n\uf0a7\tSupplying source of the AC busbars: the source which supplies the busbar or Invalid\n\uf0a7\tSupplying source of the AC Essencial Contactor: the source which supplies the busbar or Invalid\n\uf0a7\tReconfiguration in Progress signal : network is in reconfiguration or network is stable\n\uf0a7\tAC EXT POWER connected signal : EP is connected or not\n\uf0a7\tAC EXT POWER Available signal : EP is available or not\n\uf0a7\tAC EXT POWER Online signal : EP is online or not\n\uf0a7\tAC EXT POWER Power Ready signal : EP is Power ready or not\n\uf0a7\tAC EXT POWER Overload signal : EP is Overloaded or not\n\uf0a7\tValidity of those signal : signals are valid or not', 'refer': u'[SIRD-EPGDS-180],[SIRD-EPGDS-1050],[SIRD-EPGDS-1896],[SIRD-EPGDS-3381],[SPE-BITE-1343],[SPE-BITE-1344]'}, u'SSCS_ACLog_1187': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of 28V Board supply not present failure, the ACLOG shall declare the corresponding failure to the EDMU using CAN busses', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1016]'}, u'SSCS_ACLog_865': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'The references voltages will be ASI_AC_BUSBAR_VOLT_RET for AC Bus 1 and ASI_AC_OPP_BUSBAR_VOLT_RET for AC Bus 2', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog1 shall read the three AC Bus 1 voltages phases and the AC Bus 2 phase A voltage thanks to the following ASI:\n- AC Bus 1 phase A: ASI_AC_BUSBAR_VOLT_PHA\n- AC Bus 1 phase B: ASI_AC_BUSBAR_VOLT_PHB\n- AC Bus 1 phase C: ASI_AC_BUSBAR_VOLT_PHC\n- AC Bus 2 phase A: ASI_AC_OPP_BUSBAR_VOLT_PHA', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SES-ACEPC-479],[SES-ACEPC-774]'}, u'CAN-IRD-188': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request ACLOG[1/2]_EDMU_CNTOR_STATUS every 50 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1286': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1298': {'status': u'TBC', 'terminal': 'EMPTY', 'additional': u'waiting for system definition', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The procedures proposed by RTCA DO-160F (section 22) and RAE-D700-211 (section 4) shall be used as a basic reference.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-959]'}, u'SSCS_ACLog_944': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall monitor I\xb2t protection activation on each controlled RCCB during CBIT', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-877],[SPE-BITE-999]'}, u'SSCS_ACLog_1293': {'status': u'TBC', 'terminal': 'EMPTY', 'additional': u'waiting for system update', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The loss of AC load shedding capability when normal power is available shall be less than 1E-7 /FH (TBC) ', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-955]'}, u'SSCS_ACLog_1292': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'Total loss of data communication within Electrical System and to Member Systems shall be less than 1E-6 per flight hour.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SES-ACEPC-927]'}, u'SSCS_ACLog_1291': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'Inadvertent closure of a locked open ACMP shall be less than 1E-7 per flight hour.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SES-ACEPC-922]'}, u'SSCS_ACLog_1290': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The loss of AClog GFI protection shall be less than 7,0E-7 per flight hour.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SES-ACEPC-919]'}, u'SSCS_ACLog_1295': {'status': u'TBC', 'terminal': 'EMPTY', 'additional': u'waiting for system update', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The loss of load shedding capability when needed, during Electrical Emergency operation shall be less than 1E-9 /FH (TBC)', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-961]'}, u'SSCS_ACLog_1294': {'status': u'TBC', 'terminal': 'EMPTY', 'additional': u'waiting for system update', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The loss of Essential load shedding capability when normal power is available shall be less than 1E-7 /FH (TBC) ', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-958]'}, u'CAN-IRD-384': {'body': u'The following table is the bus load analysis based on a maximum fully loaded bus: \n1 bus with RGCU', 'refer': u'[SIRD-EPGDS-114],End: \tTrue'}, u'CAN-IRD-387': {'body': u'The following table is the bus load analysis based on a maximum fully loaded bus: \n1 bus with LGCU and AGCU', 'refer': u'[SIRD-EPGDS-114],End: \tTrue'}, u'CAN-IRD-381': {'body': u'The following table is the bus load analysis based on a maximum fully loaded bus: \n1 bus with ACLOG1 and DCLOG1', 'refer': u'[SIRD-EPGDS-114],End: \tTrue'}, u'SSCS_ACLog_1493': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-229': {'allocation': u'DC Log SSCS', 'body': u'DCLOG[1/2] shall send the following data to EDMU through DCLOG[1/2]_EDMU_NETWORK_STATUS_1 message:\n\uf0a7\tAvailability of the DC busbars : Busbar is powered or not.\n\uf0a7\tValidity of the availability of the DC busbars: the availability signal is valid or not.\n\uf0a7\tSupplying source of the DC busbars: the source which supplies the busbar or Invalid.\n\uf0a7\tReconfiguration in Progress signal : network is in reconfiguration or network is stable\n\uf0a7\tValidity of those signal : signals are valid or not', 'refer': u'[SIRD-EPGDS-1020],[SIRD-EPGDS-1055],[SIRD-EPGDS-1896]'}, u'SSCS_ACLog_1486': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'For the Ground Servicing, the ACLog shall compute the supply sources as bellow:\nAC Bus 1 bus bar: EXT_AC\nAC Bus 2 bus bar: EXT_AC\nAEC: Disconnected', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1752]'}, u'SSCS_ACLog_1487': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If a fault condition disappears before the timeout is reached, ACLog2 shall memorize during 5sec +/- 0,2sec the unexpired time of the timeout in order to retrieve it if the fault condition comes back (thermal memory, also called cooling down time).', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-3315]'}, u'SSCS_ACLog_1485': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'SIRD should be updated', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'When Ground Servicing Mode is NOT ACTIVE, ACLog2 shall set:\n- "DSO_GS_MODE" to NOT Active\n- "DSO_GS_ON" to NOT Active', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-6845]'}, u'CAN-IRD-222': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to ACLOG[1/2] through EDMU_XLOG_FLIGHTINFO_x messages:\n\uf0a7\tDate : Digital values of Year, Month and Day\n\uf0a7\tValidity of Date and time : Date and time is valid or not\n\uf0a7\tTime : Digital values of Hour and Minute\n\uf0a7\tFlight phases\n\uf0a7\tValidity of Flight phase : Flight phase is valid or not\n\uf0a7\tAircraft tail\n\uf0a7\tValidity of Aircraft tail : Aircraft tail is valid or not\n\uf0a7\tFlight leg\n\uf0a7\tValidity of Flight leg : Flight leg is valid or not', 'refer': u'[SIRD-EPGDS-1898],[SPE-BITE-996]'}, u'CAN-IRD-223': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send EDMU_XLOG_FLIGHTINFO_x every 1 second to ACLOG.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-220': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request ACLOG[1/2]_EDMU_ENG_DATA_x every 1 second.', 'derived': u'True', 'rationale': u'Provision', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1481': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Label (13)waiting for SIRD update (ACLOG2 --> ACLOG)', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall switch from ELC Ground Servicing OPEN Request to ELC Ground Servicing CLOSE Request when:\n- ELC ACEP OPEN Request\nAND\n- AC External Power is POWER READY\nAND\n- 28V_AC_EP_TR is present\nAND\n- "DSI_GS_PB" falling edge is detected\nAND\n- No GCU or APU is Power Ready', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1469]'}, u'CAN-IRD-592': {'allocation': u'HS', 'body': u'AGCU shall send the following EICAS data to EDMU through AGCU_EDMU_EICAS_1 message :\n- APU Generator good / Fail  Status\n- APU Generator Oil Over temperature status\n- APU Generator ON/OFF status\n- APU GCU Communication fault status\n- Validity attached to these data', 'refer': u'[SIRD-EPGDS-1052],[SIRD-EPGDS-1641],[SPE-BITE-1333]'}, u'CAN-IRD-593': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request AGCU_EDMU_EICAS_x every 500 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-595': {'allocation': u'HS', 'body': u'AGCU shall send the following Synoptic data to EDMU through AGCU_EDMU_SYNOPTIC_1 message: \n- Average digital value of the Generator Point Of Regulation voltage \n- Generator Line Contactor , auxilliary contactor status \n- Excitation status of APU  generator\n- APU ready to load signal\n- Validity attached to these data (data mentioned above)\n- APU Generator Point Of Regulation Frequency\n- Validity attached to this piece of data (Point Of Regulation Frequency)', 'refer': u'[SIRD-EPGDS-1052]'}, u'CAN-IRD-596': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request AGCU_EDMU_SYNOPTIC_x every 100 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-598': {'allocation': u'HS', 'body': u'AGCU shall send the following OMS data to EDMU through AGCU_EDMU_OMS_x messages :\n- Digtal value of the  APU generator oil temperature\n- Status of ATC Lockout request wire failure\n- Validity attached to this piece of data', 'refer': u'[SIRD-EPGDS-2975]'}, u'CAN-IRD-599': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request AGCU_EDMU_OMS_x every 500 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_443': {'status': u'TBC', 'terminal': 'EMPTY', 'additional': u'the tolerence on the frequency of +/-5Hz should be not compliant', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The underfrequency AC external protection shall be activated when one phase frequency is lower than 370Hz +/-20Hz during 4s +/-0.5s', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-456]'}, u'CAN-IRD-752': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the EDMU_GCU_REEC_COM message every 100 ms', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1078': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall be able to reset the BITE NVM content on EDMU request by Can bus.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-653]'}, u'CAN-IRD-751': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data through EDMU_GCU_REEC_COM message:\n- Engine_Running  : Right Engine running status\n- Engine_Running_NDO_Valid : Input NDO containing Engine_Running is not received or SSM invalid\n- N2_Selected :  N2 selected in %\n- N2_Selected_NDO_Valid : Input NDO containing N2_Selected is not received or SSM invalid\n- R_Eng_Run_Sw_OFF_Pole_1 : Right Engine Fuel Cut Off switch OFF position\n- R_Eng_Run_Sw_OFF_Pole_1_NDO_Valid : Input NDO containing R_Eng_Run_Sw_OFF_Pole_1 is not received or SSM invalid', 'refer': u'[SIRD-EPGDS-6305]'}, u'SSCS_ACLog_996': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'A diode shall be installed in series with each DSO output. ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-741]'}, u'SSCS_ACLog_997': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'Output drivers of DSO shall be capable of driving a capacitance of at least 1 microF in parallel to the nominal resistive load. ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-742]'}, u'CAN-IRD-754': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data through EDMU_GCU_LG_COM message:\n- NG_WOFFW\n- RG_WOFFW\n- LG_WOFFW\n- NG_WOW\n- RG_WOW\n- LG_WOW\n- LRG_WOW\n- WOFFW\n- MG_WOW\n- WOW\n- WOW_Fail\n- WOW_STATUS_Valid : Input NDO containing WOW signals is not received or SSM invalid', 'refer': u'[SIRD-EPGDS-1563],[SIRD-EPGDS-2564],[SIRD-EPGDS-2565],[SIRD-EPGDS-2579],[SIRD-EPGDS-2762]'}, u'CAN-IRD-755': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the EDMU_GCU_LG_COM message every 100 ms', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-758': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data through EDMU_GCU_APU_COM message:\n- APU_Running \n- APU_Running_Valid : Input NDO containing APU_Running  is not received or SSM invalid\n- APU_Cooldown\n- APU_Cooldown_Valid : Input NDO containing APU_Cooldown  is not received or SSM invalid\n- APU_Ready_To_Load\n- APU_Ready_To_Load_Valid : Input NDO containing APU_Ready_To_Load is not received or SSM invalid', 'refer': u'[SIRD-EPGDS-6307]'}, u'CAN-IRD-759': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the EDMU_GCU_APU_COM message every 100 ms', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_935': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'If an AC external overload protection is activated, ACLog2 shall set:\n- DSO Ground/Open low power "DSO_OL_AC_EP" to ground\n- DSO Ground/Open low power "DSO_NOL_AC_EP" to Open', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SES-ACEPC-789]'}, u'SSCS_ACLog_1111': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall consider a "PIN E voltage presence" when "ASI_DC_ACEP_PINE" is higher than 18V +/-10%', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-6822]'}, u'SSCS_ACLog_514': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1368': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Confirmation time for AC EP Power Ready indication discrepancy failure shall be 3 seconds +/- 0,5 s.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1374]'}, u'SSCS_ACLog_1028': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_518': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_519': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_912': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'The result of the failure when a CLOSURE command is sent and an OPEN feedback is received a command CLOSURE is interpreted, not an OPEN state', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall monitor discrepancy between DSO software command and DSO status thanks to the DSO feedback.\n \n \nTable 35: Discret Output feedback status inconsistency logic', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2738],[SPE-BITE-167],[SPE-BITE-564],[SPE-BITE-567]'}, u'SSCS_ACLog_1353': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall transmitt the following informations to the EDMUs using CAN busses : \nExt_AC_Frequency_Yellow\nExt_AC_Power_Yellow\nExt_AC_Voltage_Yellow', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1184]'}, u'SSCS_ACLog_1112': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u"ACLOG doesn't drives any relay", 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Each contactor command failure shall be latched and sent into NVM', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2308]'}, u'CAN-IRD-312': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS,SSPCM SSCS', 'body': u'CAN equipment shall be fully compliant with ISO 11898-2, ISO 11898-1 and BOSCH rev2.0B.', 'derived': u'True', 'rationale': u'To ensure interoperability', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-313': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS,SSPCM SSCS', 'body': u'Extended Identifier (29bits) shall be used.', 'derived': u'True', 'rationale': u'To ensure interoperability', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-259': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request DCLOG[1/2]_EDMU_MODULE_STATUS and DCLOG[1/2]_EDMU_BITE_x  every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-258': {'allocation': u'DC Log SSCS', 'body': u'DCLOG[1/2] shall send its BITE Monitoring data to EDMU through DCLOG[1/2]_EDMU_BITE_x messages.', 'refer': u'[SIRD-EPGDS-390],[SIRD-EPGDS-482],[SIRD-EPGDS-627],[SIRD-EPGDS-1057],[SIRD-EPGDS-1835],[SIRD-EPGDS-1837],[SIRD-EPGDS-1846],[SIRD-EPGDS-1849],[SIRD-EPGDS-1852],[SIRD-EPGDS-1854],[SIRD-EPGDS-1868],[SIRD-EPGDS-1869],[SIRD-EPGDS-1871],[SIRD-EPGDS-2030],[SIRD-EPGDS-2230],[SIRD-EPGDS-2301],[SIRD-EPGDS-2305],[SIRD-EPGDS-2311],[SIRD-EPGDS-2312],[SIRD-EPGDS-3001],[SIRD-EPGDS-6777],[SPE-BITE-120],[SPE-BITE-126],[SPE-BITE-656],[SPE-BITE-658],[SPE-BITE-662],[SPE-BITE-704],[SPE-BITE-761],[SPE-BITE-763],[SPE-BITE-764],[SPE-BITE-769],[SPE-BITE-771],[SPE-BITE-774],[SPE-BITE-775],[SPE-BITE-778],[SPE-BITE-780],[SPE-BITE-786],[SPE-BITE-804],[SPE-BITE-969],[SPE-BITE-983],[SPE-BITE-1009],[SPE-BITE-1022],[SPE-BITE-1043],[SPE-BITE-1077],[SPE-BITE-1078],[SPE-BITE-1084],[SPE-BITE-1102],[SPE-BITE-1476]'}, u'CAN-IRD-316': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS,SSPCM SSCS', 'body': u'Big Endian representation shall be used exclusively.', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-317': {'body': u'The structure of a CAN payload and the associated bit numbering convention is detailed below:', 'additional': u'Byte 0 is sent first. Bit 7 is sent first.', 'derived': u'True', 'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS,SSPCM SSCS', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-314': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS,SSPCM SSCS', 'body': u'Data rate shall be 500 kbit/s.', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-1059],[SIRD-EPGDS-2106]'}, u'CAN-IRD-315': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS,SSPCM SSCS', 'body': u'Data field of CAN frame shall be 8 bytes long.', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-253': {'allocation': u'DC Log SSCS', 'body': u'DCLOG[1/2] shall send the following data to EDMU through DCLOG[1/2]_EDMU_IDENT_x messages:\n\uf0a7\tSoftware Interface Version: DCLOG to EDMU Software Interface Version associated to this version of specification shall be 0x01.\n\uf0a7\tthe CRC32 of its software (A665 CRC32 calculation shall be used)\n\uf0a7\tits Module type : Module type is DCLOG1 or DCLOG2\n\uf0a7\tits LRU Part Number\n\uf0a7\tits SW Part Number\n\uf0a7\tit Serial Number', 'refer': u'[SIRD-EPGDS-1057],[SPE-BITE-1414]'}, u'CAN-IRD-252': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to DCLOG[1/2] through EDMU_XLOG_IDENT message:\n\uf0a7\tEDMU DCLOG Software Interface Version: EDMU to DCLOG Software Interface Version associated to this version of specification shall be 0x01.', 'refer': u'[SPE-BITE-1414]'}, u'CAN-IRD-251': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request DCLOG[1/2]_EDMU_CNTOR_STATUS every 50 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-257': {'allocation': u'DC Log SSCS', 'body': u'DCLOG[1/2] shall send the following data to EDMU through DCLOG[1/2]_EDMU_MODULE_STATUS message:\n\uf0a7\tIBIT acceptance: LRU is in condition for IBIT test or not.\n\uf0a7\tits Module mode\n\uf0a7\tits Flight/Ground status : LRU is in Flight or on Ground\n\uf0a7\tThe validity of the Flight/Ground status\n\uf0a7\tPower supply voltage presence : voltage is present or not\n\uf0a7\tNVM download acceptance state', 'refer': u'[SIRD-EPGDS-387],[SIRD-EPGDS-481],[SIRD-EPGDS-623],[SIRD-EPGDS-1057],[SIRD-EPGDS-2229],[SPE-BITE-179],[SPE-BITE-202]'}, u'CAN-IRD-256': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to DCLOG[1/2] through EDMU_XLOG_BITE message:\n\uf0a7\tIBIT test request: IBIT test is requested or not.\n\uf0a7\tABF1 and MBF1 fuses failure status from EMERLOG_EDMU_BITE_1 message', 'refer': u'[SIRD-EPGDS-387],[SIRD-EPGDS-481],[SIRD-EPGDS-623],[SIRD-EPGDS-2229],[SPE-BITE-179],[SPE-BITE-202],[SPE-BITE-1547]'}, u'CAN-IRD-254': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request DCLOG[1/2]_EDMU_IDENT_x every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_563': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'At the end of the closure sequence, if contactors that should be closed are still open after 2s +/-0.5s (except for contactors known as failed open), the ACLog shall restart the complete sequence from the beginning by considering the power inputs and the requirements defined in the network management failure mode chapter ', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2840]'}, u'SSCS_ACLog_561': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'At the end of opening sequence, when contactors that should be open are open (except for contactors known as failed closed), the ACLog shall start the closure sequence', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To avoid paralleling', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_560': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Between each step of the closure sequence, the ACLog shall wait a transition time of 30ms +/-5ms', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1801],[SES-ACEPC-245]'}, u'CAN-IRD-529': {'allocation': u'EDMU SSCS', 'body': u'The data of messages sent between EDMU and AGCU & LGCU shall be compliant to the following document:', 'refer': u'[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_566': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ATCx contactors states imposed by the XFR function shall have the highest priority over the states required by the Network Management chapter and ATCs Lockout chapter', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2550]'}, u'SSCS_ACLog_565': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'During a configuration sequence (from opening sequence to closure sequence), if a power inputs event occurs, the ACLog shall stop the current configuration sequence and restart the complete sequence from the beginning by considering the new power inputs', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To converge quickly to a stable state', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1474': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Label (9)', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'The ACLog shall switch from ELC ACEP OPEN Request to ELC ACEP CLOSE Request when:\n- AC External power is POWER READY\nAND\n- A "DSI_ACEP_PB" falling edge is detected', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'should be allocated from SES AC EPC', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-525': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS', 'body': u'The messages between EDMU and XLOG shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'CAN-IRD-524': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'The messages between EDMU and SSPCM shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN Protocol', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_1479': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog2 shall command the Ground/Open "DSO_ACEP_AVAIL" following this table:\n \n \nTable 19: DSO_ACEP_AVAIL commands', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-6838],[SES-ACEPC-530]'}, u'CAN-IRD-526': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS', 'body': u'The messages between EDMU and XLOG shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'CAN-IRD-521': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'CAN IDs of SPDA7 to EDMU frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-520': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'CAN IDs of EDMU to SPDA8 frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-522': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'CAN IDs of SPDA8 to EDMU frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_1161': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_748': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1439': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall provide two GND/Open low power DSO for Bus bar availability:\n"DSO_AC_BUS_AVAIL" (ground active) and \n"DSO_AC_BUS_OPP_AVAIL" (ground active)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-937],[SES-ACEPC-938],[SES-ACEPC-939],[SES-ACEPC-940]'}, u'SSCS_ACLog_1014': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'When high DSO 28V/Open circuit type is set to 28V state, the output voltage shall be >17 V at 4.5A over the whole 28 V variation range', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-756]'}, u'SSCS_ACLog_743': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog1 shall command ACMP3B thanks to DSO_CDE_RCCB1:\n- 28V to closed ACMP3B RCCB\n- Open to open ACMP3B RCCB', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SES-ACEPC-450],[SES-ACEPC-452]'}, u'SSCS_ACLog_742': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall provide 2 DSO 28V/Open high power to command ACMPs RCCBs:\n- DSO_CDE_RCCB1\n- DSO_CDE_RCCB2', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-450],[SES-ACEPC-453],[SES-ACEPC-456]'}, u'SSCS_ACLog_741': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_740': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_747': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_745': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog2 shall command ACMP3A thanks to DSO_CDE_RCCB1:\n- 28V to closed ACMP3A RCCB\n- Open to open ACMP3A RCCB', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SES-ACEPC-453],[SES-ACEPC-455]'}, u'SSCS_ACLog_744': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog2 shall command ACMP1B thanks to DSO_CDE_RCCB2:\n- 28V to closed ACMP1B RCCB\n- Open to open ACMP1B RCCB', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SES-ACEPC-456],[SES-ACEPC-458]'}, u'CAN-IRD-136': {'allocation': u'SSPCM SSCS', 'body': u'SSPCM shall send the following data to EDMU through SSPCM_EDMU_SWITCH_x messages:\n\uf0a7\tOpen/Closed state of each SSPC : SSPC state is open or closed\n\uf0a7\tValidity of the state: the state signal is valid or not.\n\uf0a7\tBusbar voltage availability : Busbar voltage is available or not\n\uf0a7\tState of each SSPCM DSI: DSI is open or closed\n\uf0a7\tValidity of the DSI status : the status signal is valid or not', 'refer': u'[SIRD-EPGDS-253],[SIRD-EPGDS-1079],[SIRD-EPGDS-1711],[SIRD-EPGDS-2995]'}, u'CAN-IRD-137': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send EDMU_SSPCM_SWITCH_x every 50 ms.', 'refer': u'[SIRD-EPGDS-246],[SIRD-EPGDS-1059],[SIRD-EPGDS-3146]'}, u'CAN-IRD-135': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the SSPCM following parameters through EDMU_SSPCM_SWITCH_x messages:\n\uf0a7\tOpen/Closed command of each SSPC : SSPC command is open or closed\n\uf0a7\tValidity of the command: the command signal is valid or not.', 'refer': u'[SIRD-EPGDS-253],[SIRD-EPGDS-607]'}, u'SSCS_ACLog_589': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If GLC1 contactor status is closed and GLC1 failure is "command" (contactor failed closed), then ACLog shall:\n- open ATC1 ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1813]'}, u'CAN-IRD-130': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'One CAN bus named EDMU-2-CAN-SPDA-8 shall connect the following LRUs:\n\uf0a7\tEDMU2\n\uf0a7\t8 x SSPCM of SPDA-8 on control Bus A', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-312],[SIRD-EPGDS-882]'}, u'SSCS_ACLog_526': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Label (3)waiting for SES Deletion of req', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall set the 28V/Open "DSO_AC_EP_PINF" to ACTIVE (28V) in less than 150ms +/-20ms when AC EP 115V is PRESENT', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2120],[SES-ACEPC-690]'}, u'SSCS_ACLog_585': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'At the end of opening sequence, if contactors that should be open are not open after 2s +/-0.5s (contactor failure time confirmation), the ACLog shall stop the current configuration sequence and restart the complete sequence from the beginning by considering the power inputs and the requirements defined in the network management failure mode chapter', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2839],[SPE-BITE-810],[SPE-BITE-811]'}, u'SSCS_ACLog_584': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_647': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The 28V ACLog power supplies shall be protected by dedicated fuse', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-1890]'}, u'SSCS_ACLog_429': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog Power consumption shall be less than 15W at 28Vdc +/-1Vdc', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-536]'}, u'SSCS_ACLog_583': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'DSI NO / NC aux contact :Open = DSI input is OpenClosed = DSI input is grounded', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog1 shall compute the GLC1 and ALC contactors status, status validity and failure according to the following table:\n \nNB: for GLC1 and ALC contactors commands\nOPEN = Not Acknowledged\nCLOSE = Acknowledged\nTable 4: GLC1 and ALC contactors status, status validity and failure', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1765],[SPE-BITE-943]'}, u'CAN-IRD-139': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the SSPCM following parameters through EDMU_SSPCM_TRIPCMD_x messages:\n\uf0a7\tTrip set command of each SSPC: trip command is set or reset or no change.\n\uf0a7\tOpen Locked set command of each SSPC: Open Locked command is set or reset or no change.\n\uf0a7\tEnable command of each SSPC: Enable command is Enable or Not or no change.\n\uf0a7\tTrip Cause of each SSPC : Trip cause command is No trip cause, AFD, GFI or I2t\n\uf0a7\tValidity of the trip command, trip cause command, Enable command, open locked command signals: the signals are valid or not.', 'refer': u'[SIRD-EPGDS-293],[SIRD-EPGDS-296],[SIRD-EPGDS-297],[SIRD-EPGDS-298],[SIRD-EPGDS-300],[SIRD-EPGDS-301],[SIRD-EPGDS-302],[SIRD-EPGDS-306],[SIRD-EPGDS-307],[SIRD-EPGDS-515],[SIRD-EPGDS-519]'}, u'SSCS_ACLog_1118': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACMP overvoltage protection status shall be communicated through CAN busses.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2465]'}, u'SSCS_ACLog_1434': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'The ACLOG microcontroller I/Os shall be expanded using multiplexers testable during CBIT', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'HW requirement needed for design', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1338': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall compute the "ACLOG2_DP_ACT" CAS message according the following Logic : \nTRUE\nDifferential protection is active \nFALSE otherwise', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1209]'}, u'SSCS_ACLog_1339': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall compute the "ATC2_FAILED_CLOSED_CAS" CAS message according the following logic : \nTRUE\nATC2 is declared failed Closed\nFALSE otherwise', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1210]'}, u'SSCS_ACLog_636': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall compute the ATCx Lockout status and status validity thanks to the following table:\n   \nTable 16:  ATCx Lockout status and status validity', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2592]'}, u'SSCS_ACLog_1334': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog1 shall compute the "EXT_AC_PWR_AVAIL" message according the following logic : \nTRUE\nThe ACLog2 indicates that External power AC is available\nFALSE otherwise ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1342]'}, u'SSCS_ACLog_1335': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog1 shall compute the "EXT_AC_Online" message according the following logic : \nTRUE\nThe ACLog2 indicates that External power is available\nAND\nELC contactor is CLOSED\nFALSE otherwise ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1341]'}, u'SSCS_ACLog_1336': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog1 shall send the following CAS messages to the EDMU using CAN busses : \nACLOG1_FAIL\nAC_BUS1_FAIL\nACLOG1_DP_ACT\nATC1_FAILED_CLOSED_CAS\nATC1_FAILED_OPEN_CAS\nATC3_FAILED_CLOSED_CAS\nATC3_FAILED_OPEN_CAS\nAEC_FAILED_CLOSED_CAS\nAEC_FAILED_OPEN_CAS', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1265]'}, u'SSCS_ACLog_1337': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall compute the ACLOG2_FAIL CAS message according the following Logic : \nTRUE\nAt least One of the ACLOG PBIT test is failed \nOR \nAt least one ACLOG Discrete output is failed\nOR \nThe ACLOG anti paralleling function is failed\nOR \nThe ACLOG internal power supply is failed\nFALSE otherwise', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1207]'}, u'SSCS_ACLog_1330': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog1 shall compute the "ATC3_FAILED_CLOSED_CAS" CAS message according the following logic : \nTRUE\nATC3 is declared failed Closed\nFALSE otherwise', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1203]'}, u'SSCS_ACLog_1383': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Occurrence Counter shall be incremented if a fault with the same fault code disapears then reappers during the same flight leg', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1364]'}, u'SSCS_ACLog_1332': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog1 shall compute the "AEC_FAILED_CLOSED_CAS" CAS message according the following logic : \nTRUE\nAEC is declared failed Closed\nFALSE otherwise', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1205]'}, u'SSCS_ACLog_1333': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog1 shall compute the "AEC_FAILED_OPEN_CAS" CAS message according the following logic : \nTRUE\nAEC is declared failed Open\nFALSE otherwise', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1206]'}, u'SSCS_ACLog_1082': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_634': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog2 shall read the ATC2 Lockout sent by respective GCU through the DSIs Ground/Open 1mA  DSI_ATC_LCKOUT1 (Ground: closed, Open: Open) and DSI_ATC_NLCKOUT1 (Ground: Open, Open: closed)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-652]'}, u'SSCS_ACLog_444': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'SIRD deals with 400Hz +/-20Hz but 400Hz is nominal value ', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The overfrequency AC external protection shall be activated when one phase frequency is upper than 420Hz +/-20Hz during 2s +/-0,5s', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-455]'}, u'SSCS_ACLog_1431': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'All 28 Vdc powered components shall be able to withstand without damage a voltage of 500 Vdc between individually isolated terminals and between all terminals and case for 1 minute, without any leakage current in excess of 1.0 mA or evidence of damage due to arcing, flashover or insulation breakdown.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-971]'}, u'SSCS_ACLog_1083': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'28V DC1 fuse,DC ESS2 fuse,AC EP TR fuse.', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall monitor internal fuse failure by comparison between upstream and downstream voltage during CBIT', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2815],[SPE-BITE-790]'}, u'SSCS_ACLog_1507': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If ACLog WOW DSI are in "OPEN" state and if ACLog loose power for more than 5 s (information from Loss 5 function for init information), ACLog shall consider themselves "on GROUND".', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-6762]'}, u'SSCS_ACLog_633': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1504': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'NBPT shall be inhibited in Ground Service mode and ELC Ground Servicing CLOSE Request', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'wiating for SIRD update', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2551]'}, u'SSCS_ACLog_1503': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The anti-paralleling function shall be reset after a cold start if the aircraft is on ground, or through an Initiated test command ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-6757]'}, u'SSCS_ACLog_1502': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall function as designed and not introduce hazards to safety when exposed to a cold soak of at least 10 hours at an average of -40\xba C.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-999]'}, u'SSCS_ACLog_632': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog1 shall read the ATCx Lockout sent by respective GCU through the following DSI Ground/Open 1mA:\n- ATC1 Lockout: DSI_ATC_LCKOUT1 (Ground: closed, Open: Open) and DSI_ATC_NLCKOUT1 (Ground: Open, Open: closed)\n- ATC3 Lockout: DSI_ATC_LCKOUT2 (Ground: closed, Open: Open) and DSI_ATC_NLCKOUT2 (Ground: Open, Open: closed)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-651]'}, u'SSCS_ACLog_1081': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'Ground/Open DSI shall be able to withstand -30Vdc.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1678]'}, u'SSCS_ACLog_925': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog1 shall monitor Power Ready indication discrepancy failure of the external power provided by ACLog2 during CBIT', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-595]'}, u'SSCS_ACLog_1561': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'For all Flight phases, the probability of Loss of Thermal CB Status Indication, classified as a potentially Minor failure condition, shall be equal to or less than 1E-04 per flight hour.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-989]'}, u'SSCS_ACLog_1017': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog ASI 115V AC shall be able to acquire presence of 115V AC voltage signals according to the following schematic:\n   \nFigure 34: AC voltage resistor divider', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-706]'}, u'SSCS_ACLog_630': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If ATC3 contactor status is open and ATC3 failure is "command" (contactor failed open), ACLog shall:\n- open ATC3', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1828]'}, u'SSCS_ACLog_927': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'GCUs are : LGCU, RGCU, APU GCU', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'the ACLog shall monitor GCU Overload indication discrepancy failure during CBIT', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-580]'}, u'SSCS_ACLog_637': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If ATC1 Lockout status is Open, ACLog1 shall open ATC1 contactor', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2592]'}, u'SSCS_ACLog_1119': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Functional information = non BITE information', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'After a cold start, aircraft on ground, ACLog shall reset functional information stored in NVM when the pinprog changed from a valid state to another valid state.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1058]'}, u'SSCS_ACLog_635': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-629': {'allocation': u'EDMU SSCS', 'body': u'Time slot duration on EDMU-GCU interfaces shall be 25 ms.', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-1059]'}, u'CAN-IRD-785': {'allocation': u'DC Log SSCS', 'body': u'DCLOG1 (resp. DCLOG2) shall send the following data to EDMU through DCLOG1_EDMU_NETWORK_STATUS_2 (resp. DCLOG2_EDMU_NETWORK_STATUS_2) message:\n\uf0a7\tTRU1 (resp. TRU2) Overload signal \n\uf0a7\tTRU1 (resp. TRU2) Not Overload signal \n\uf0a7\tTRU1 (resp. TRU2) Fail signal \n\uf0a7\tTRU1 (resp. TRU2) Not Fail signal \n\uf0a7\tSupplying source of the EMER busbars: the source which supplies the busbar or Invalid.\n\uf0a7\tSupplying source of the Batt busbars: the source which supplies the busbar or Invalid.', 'refer': u'[SIRD-EPGDS-1014],[SIRD-EPGDS-1016],[SIRD-EPGDS-1020],[SIRD-EPGDS-1896],[SIRD-EPGDS-2307],[SIRD-EPGDS-2677],[SIRD-EPGDS-6777]'}, u'CAN-IRD-784': {'allocation': u'AC Log SSCS', 'body': u'ACLOG2 shall send the following data to EDMU through ACLOG2_EDMU_NETWORK_STATUS_2 message:\n\uf0a7\tGROUND_SERVICING_ACT : Ground servicing mode is activated or not.', 'refer': u'[SIRD-EPGDS-561],[SIRD-EPGDS-1011],[SIRD-EPGDS-1050],[SIRD-EPGDS-1753],[SIRD-EPGDS-1896]'}, u'SSCS_ACLog_738': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog2 shall command ELC through DSO_CDE_AC_CTC1:\n- 28V to closed ELC contactor\n- Open to open ELC contactor', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-440]'}, u'SSCS_ACLog_739': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Normally closed contactor', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog1 shall command AEC through DSO_CDE_AC_CTC3:\n- 28V to open AEC contactor\n- Open to closed AEC contactor', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-465],[SES-ACEPC-467]'}, u'CAN-IRD-622': {'allocation': u'EDMU SSCS', 'body': u'The messages between EDMU and GCU shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_737': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog1 shall command ATC3 through DSO_CDE_AC_CTC2:\n- 28V to closed ATC3 contactor\n- Open to open ATC3 contactor', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-447],[SES-ACEPC-449]'}, u'CAN-IRD-620': {'allocation': u'EDMU SSCS', 'body': u'The messages between EDMU and GCU shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'CAN-IRD-621': {'allocation': u'EDMU SSCS', 'body': u'The messages between EDMU and GCU shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_1114': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACMP unbalanced phase-phase protections shall be activated when the current difference between two phases (AB, BC, AC) is higher than 12.5A +/-5A during 1000ms +/-50ms', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2454]'}, u'SSCS_ACLog_734': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'- 28Vdc to close contactor- Open to open contactor', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall provide 3 DSO 28V/Open high power to command ATC1, ATC2, ATC3, ELC and AEC contactors:\n- DSO_CDE_AC_CTC1\n- DSO_CDE_AC_CTC2\n- DSO_CDE_AC_CTC3', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-440],[SES-ACEPC-444],[SES-ACEPC-447],[SES-ACEPC-459],[SES-ACEPC-465]'}, u'SSCS_ACLog_639': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If ATC3 Lockout status is Open, ACLog1 shall open ATC3 contactor', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2592]'}, u'SSCS_ACLog_638': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If ATC2 Lockout status is Open, ACLog2 shall open ATC2 contactor', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2592]'}, u'CAN-IRD-143': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request SSPCM_EDMU_PROTEC_x every 250 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-142': {'allocation': u'SSPCM SSCS', 'body': u'SSPCM shall send the following data to EDMU through SSPCM_EDMU_PROTEC_x messages:\n\uf0a7\tTrip state of each SSPC: SSPC is tripped or not\n\uf0a7\tValidity of the trip state: the state signal is valid or not.\n\uf0a7\tOpen Locked state of each SSPC: SSPC is Open Locked or not\n\uf0a7\tValidity of the Open locked state: the state signal is valid or not.\n\uf0a7\tEnable state of each SSPC: SSPC is Enable or not.\n\uf0a7\tValidity of the Enable state: the state signal is valid or not.\n\uf0a7\tCurrent of each SSPC : Digital value of the SSPC current (% of the rating)\n\uf0a7\tValidity of the current: the current signal is valid or not.', 'refer': u'[SIRD-EPGDS-253],[SIRD-EPGDS-497],[SIRD-EPGDS-515],[SIRD-EPGDS-1084],[SIRD-EPGDS-1709],[SIRD-EPGDS-1711]'}, u'CAN-IRD-140': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send EDMU_SSPCM_TRIPCMD_x command every 250 ms.', 'refer': u'[SIRD-EPGDS-299],[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1055': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The AClog 2 shall close the AEC except when Ground Servicing Mode is ACTIVE', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2813],[SIRD-EPGDS-2814]'}, u'CAN-IRD-146': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request SSPCM_EDMU_TEMP every 500 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-145': {'allocation': u'SSPCM SSCS', 'body': u'SSPCM shall send the following data to EDMU through SSPCM_EDMU_TEMP message:\n\uf0a7\tSSPCM measured temperature : digital value of the temperature\n\uf0a7\tValidity of the temperature: temperature signal is valid or not', 'refer': u'[SIRD-EPGDS-1079]'}, u'SSCS_ACLog_1407': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'DSI NO / NC aux contact :Open = DSI input is OpenClosed = DSI input is grounded', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The AClog shall compute contactors status and failure (ATCx) which are in the opposite AC EPC according to the following table:\n   ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-944]'}, u'SSCS_ACLog_1058': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of an EDMU change ACMP (RCCB) command, the ACLog shall simultaneously, open the RCCB(s) which have to be open, and apply the sequencing command table from the step defined by the following table:\n   \n Red (R): Only ACMP1B, ACMP3A commands by ACLog2\n Purple (P): All ACMP command by the two ACLog (Blue and red)\n Grey (G): No sequencing, ACMP closure and opening are simultaneous\n "1" means ACMP closed\n "0" means ACMP open\nFigure 18: ACMP computed commands', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2561]'}, u'CAN-IRD-149': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the configuration parameters of each SSPCx of 1 SSPCM through EDMU_SSPCM_CONFCHECK_x message for configuration check.', 'additional': u'EDMU_SSPCM_CONFCHECK are used to check SSPCM configuration', 'refer': u'[SIRD-EPGDS-678]'}, u'CAN-IRD-148': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the configuration parameters of each SSPCx of 1 SSPCM through EDMU_SSPCM_CONFSET_x message.', 'additional': u'EDMU_SSPCM_CONFSET are used to set SSPCM configuration', 'refer': u'[SIRD-EPGDS-678]'}, u'SSCS_ACLog_576': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The Overload failure of each source (L GCU, R GCU and APU GCU) shall be send through the CAN busses', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-582]'}, u'SSCS_ACLog_1115': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACMP Unbalance protection shall be latched into the NVM.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2464]'}, u'SSCS_ACLog_962': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall be designed to not present an injury hazard to the flight crew or maintenance personnel.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-307]'}, u'SSCS_ACLog_577': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1117': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACMP overvoltage protection shall be latched into the NVM.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2464]'}, u'SSCS_ACLog_730': {'status': u'TBC', 'terminal': 'EMPTY', 'additional': u'The tolerance has been added : TBC', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If RCCB "CLOSED" commands become invalid for 150ms +/- 10ms, the ACLog shall act with the RCCB valid command from the other CAN bus. ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2171]'}, u'SSCS_ACLog_570': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall provide 6 DSI Ground/Open 1mA to receive the Overload (OL) and the Not Overload (NOL) signals from the GCUs:\n- DSI_OL_RGEN (Ground: Overload, Open: Not overload)\n- DSI_NOL_RGEN (Ground: Not overload, Open: Overload)\n- DSI_OL_LGEN (Ground: Overload, Open: Not overload)\n- DSI_NOL_LGEN (Ground: Not overload, Open: Overload)\n- DSI_OL_APU (Ground: Overload, Open: Not overload)\n- DSI_NOL_APU (Ground: Not overload, Open: Overload)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-502],[SES-ACEPC-503]'}, u'SSCS_ACLog_731': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'A RCCB shall be controlled from only one of the CAN busses.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2165]'}, u'SSCS_ACLog_1403': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1051': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1400': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'The ACLog shall be compliant with FDD document provided in Appendix', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'For failures numbers', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1050': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_573': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1167': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1052': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The AC Log shall provide a DSO 28V/Open "DSO_AC_EP_PINF" with max nominal current of 300mA max and a current limitation of 0.5A +/-100mA to limit the Pin F output current', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2590],[SES-ACEPC-661]'}, u'CAN-IRD-858': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,SSPCM SSCS', 'body': u'If value of the Software Identification Version (SIV) received by a LRU1 is not corresponding to the value expected from LRU2, LRU1 shall continue to send its messages to LRU2.', 'derived': u'True', 'additional': u'LRU1 & LRU2 could be EMDU, XLOG, GCU or SSPCM.The SIV changes when there is a CAN Frame definition evolution implying a compatibility break with previous version (for example: a signal has moved to another address in the frame or other frame)', 'rationale': u'In order to prevent problems with incompatible versions of LRUs softwares'}, u'SSCS_ACLog_816': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall meet the Radiated Emissions requirements defined in section 21 of RTCA/DO-160G Category M.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-539]'}, u'CAN-IRD-857': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,SSPCM SSCS', 'body': u'If value of the Software Identification Version (SIV) received by a LRU1 is not corresponding to the value expected from LRU2, LRU1 shall ignore content of all messages from LRU2.', 'derived': u'True', 'additional': u'LRU1 & LRU2 could be EMDU, XLOG, GCU or SSPCM.The SIV changes when there is a CAN Frame definition evolution implying a compatibility break with previous version (for example: a signal has moved to another address in the frame or other frame)', 'rationale': u'In order to prevent problems with incompatible versions of LRUs softwares'}, u'CAN-IRD-850': {'allocation': u'Emer Log SSCS', 'body': u'AC busbars shall include the following bubars:\n\uf0a7\tAC1_BUSBAR\n\uf0a7\tAC2_BUSBAR', 'refer': u'[SIRD-EPGDS-1896],[SIRD-EPGDS-1905]'}, u'CAN-IRD-853': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS,SSPCM SSCS', 'body': u'The special frame number 127 shall not be used for functionnal communication purpose by the CAN IRD.', 'derived': u'True', 'rationale': u'Reserved for internal SSPC Module use (maintenability)'}, u'CAN-IRD-852': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall transfer data from CAN to CAN according to the following gateway rules : ', 'refer': u'[SPE-BITE-1547]'}, u'CAN-IRD-495': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'CAN IDs of SPDA5 to EDMU frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-494': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'CAN IDs of SPDA4 to EDMU frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-496': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'CAN IDs of SPDA6 to EDMU frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-491': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'CAN IDs of SPDA1 to EDMU frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_953': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall monitor the Ground/flight DSI status inconsistency failure during CBIT', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-634]'}, u'CAN-IRD-493': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'CAN IDs of SPDA3 to EDMU frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-492': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'CAN IDs of SPDA2 to EDMU frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-716': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall be able to request RGCU_EDMU_NVM_PACKET_[1;34] every 500 ms.', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-1059]'}, u'CAN-IRD-717': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall be able to request AGCU_EDMU_NVM_PACKET_[1;42] every 500 ms.', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-1059]'}, u'CAN-IRD-714': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall be able to request EMERLOG_EDMU_NVM_PACKET_[1;14] every 500 ms.', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-1059]'}, u'CAN-IRD-715': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall be able to request LGCU_EDMU_NVM_PACKET_[1;34] every 500 ms.', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-1059]'}, u'CAN-IRD-712': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall be able to request ACLOG[1/2]_EDMU_NVM_PACKET_[1;42] every 500 ms.', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-1059]'}, u'CAN-IRD-713': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall be able to request DCLOG[1/2]_EDMU_NVM_PACKET_[1;42] every 500 ms.', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-1059]'}, u'CAN-IRD-710': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send EDMU_GCU_DISC_x every 100 ms to RGCU.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1166': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1455': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog shall declare an internal power supply failure after a confirmation time of 5s +/-0.5s to EDMU by CAN busses when:\n a power supply converter failure occur\nOR\n an internal fuse power supply failure occur', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1030],[SPE-BITE-1038],[SPE-BITE-1488]'}, u'SSCS_ACLog_704': {'status': u'MATURE', 'terminal': u'YES', 'additional': u'The Hardware and Software Part Number is stored in NVM during ATP', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall save into the NVM the Hardware, and Software Part number.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1671]'}, u'SSCS_ACLog_1089': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'The ACLog software shall use the phase order zero detectors to compute frequencies.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To define how the frequency has to be computed', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_777': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall meet the overpressure requirements defined in section 4 of RTCA/DO-160G Category A2.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-142]'}, u'SSCS_ACLog_1457': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'ACLOG2 cannot monitor AC BUS1, waiting for Bite psec Update', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLOG1 CBIT shall monitor AC BUS1 Overvoltage Protection activation', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1491]'}, u'SSCS_ACLog_445': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'ASI and contactor response time are included', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The Open Phase AC external protection shall be activated if any of the three phase currents of the External Power is lower than 30A +/-5A and the 2 others are higher than 50A +/-5A for the time delay 2,7s +/- 300ms.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-458]'}, u'SSCS_ACLog_701': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog shall have the following LEDs indicators:\n- Power supply indicator: this indicator is switch green when, one off the 28V external power supply is available (hardware controlled).\n- Good health indicator: green when no internal failure during PBIT and CBIT, red when at least one failure is detected during PBIT or CBIT\n- Communication indicator: blink Green (4Hz / duty cycle of 50%) when CAN communication is alive, off when there is no CAN communication.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-721]'}, u'SSCS_ACLog_1122': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'When an unbalanced protection is detected, the ACLog shall open the dedicated ACMP', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2460]'}, u'CAN-IRD-378': {'body': u'The following table is the bus load analysis based on a maximum fully loaded bus: \n1 bus with ACLOG2, DCLOG2 and EMERLOG', 'refer': u'[SIRD-EPGDS-114],End: \tTrue'}, u'SSCS_ACLog_1450': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall monitor contactors Lockout Discrepancy failures : \nATC1 for ACLog 1\nATC3 for ACLog 1\nATC2 for ACLog 2', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1478],[SPE-BITE-1479]'}, u'SSCS_ACLog_466': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'When I\xb2t  RCCB protection is detected for ACMP 3A RCCB, the ACLog2 shall proceed to the ACMP 3A RCCB opening.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1759],[SIRD-EPGDS-2460]'}, u'SSCS_ACLog_1453': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of Contactor Lockout Discrepancy Failure, the ACLOG shall report the concerned failure to EDMU using CAN busses.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1482]'}, u'CAN-IRD-358': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'The messages between EDMU and SSPCM shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN Protocol', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'CAN-IRD-359': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'The messages between EDMU and SSPCM shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN Protocol', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'CAN-IRD-356': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'The messages between EDMU and SSPCM shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN Protocol', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'CAN-IRD-357': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'The messages between EDMU and SSPCM shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN Protocol', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'CAN-IRD-355': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'The messages between EDMU and SSPCM shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN Protocol', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'CAN-IRD-352': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS,SSPCM SSCS', 'body': u'System ID shall be as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-119],[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_464': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'When I\xb2t  RCCB protection is detected for ACMP 1B RCCB, the ACLog2 shall proceed to the ACMP 1B RCCB opening.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1759],[SIRD-EPGDS-2460]'}, u'CAN-IRD-350': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS,SSPCM SSCS', 'body': u'Control Bus ID shall be as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-119],[SIRD-EPGDS-2102]'}, u'CAN-IRD-351': {'body': u'Side ID shall be the side of the subscriber (slave) LRU and shall be defined as follows:', 'additional': u'Side ID does not correspond to the side of the master (EDMU)', 'derived': u'True', 'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS,SSPCM SSCS', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-119],[SIRD-EPGDS-2102]'}, u'CAN-IRD-569': {'allocation': u'HS', 'body': u'RGCU shall send the following OMS data to EDMU through RGCU_EDMU_OMS_1 messages :\n- Digtal value of the  Right  generator oil temperature.\n- Status of the oil pressure\n- Status of oil filter\n- Status of the oil level\n- Validity attached to these data.', 'refer': u'[SIRD-EPGDS-2975],[SPE-BITE-1332]'}, u'CAN-IRD-216': {'allocation': u'AC Log SSCS', 'body': u'ACLOG[1/2] shall send its BITE Monitoring data to EDMU through ACLOG[1/2]_EDMU_BITE_x messages.', 'refer': u'[SIRD-EPGDS-390],[SIRD-EPGDS-462],[SIRD-EPGDS-482],[SIRD-EPGDS-1051],[SIRD-EPGDS-1869],[SIRD-EPGDS-1871],[SIRD-EPGDS-2030],[SIRD-EPGDS-2465],[SIRD-EPGDS-2773],[SPE-BITE-120],[SPE-BITE-126],[SPE-BITE-556],[SPE-BITE-575],[SPE-BITE-579],[SPE-BITE-582],[SPE-BITE-585],[SPE-BITE-616],[SPE-BITE-618],[SPE-BITE-619],[SPE-BITE-621],[SPE-BITE-623],[SPE-BITE-635],[SPE-BITE-751],[SPE-BITE-752],[SPE-BITE-772],[SPE-BITE-876],[SPE-BITE-879],[SPE-BITE-972],[SPE-BITE-973],[SPE-BITE-1000],[SPE-BITE-1016],[SPE-BITE-1086],[SPE-BITE-1485],[SPE-BITE-1488]'}, u'CAN-IRD-215': {'allocation': u'AC Log SSCS', 'body': u'ACLOG[1/2] shall send the following data to EDMU through ACLOG[1/2]_EDMU_MODULE_STATUS message:\n\uf0a7\tIBIT acceptance: LRU is in condition for IBIT test or not.\n\uf0a7\tits Module mode\n\uf0a7\tits Flight/Ground status : LRU is in Flight or on Ground\n\uf0a7\tThe validity of the Flight/Ground status\n\uf0a7\tPower supply voltage presence : voltage is present or not\n\uf0a7\tNVM download acceptance state', 'refer': u'[SIRD-EPGDS-387],[SIRD-EPGDS-461],[SIRD-EPGDS-1051],[SIRD-EPGDS-2466],[SIRD-EPGDS-6757],[SPE-BITE-176],[SPE-BITE-202]'}, u'CAN-IRD-214': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to ACLOG[1/2] through EDMU_XLOG_BITE message:\n\uf0a7\tIBIT test request: IBIT test is requested or not.', 'refer': u'[SIRD-EPGDS-387],[SIRD-EPGDS-461],[SIRD-EPGDS-2466],[SIRD-EPGDS-6757],[SPE-BITE-176],[SPE-BITE-202]'}, u'CAN-IRD-212': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request ACLOG[1/2]_EDMU_IDENT_x every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-211': {'allocation': u'AC Log SSCS', 'body': u'ACLOG[1/2] shall send the following data to EDMU through ACLOG[1/2]_EDMU_IDENT_x messages:\n\uf0a7\tSoftware Interface Version: ACLOG to EDMU Software Interface Version associated to this version of specification shall be 0x01.\n\uf0a7\tthe CRC32 of its software (A665 CRC32 calculation shall be used)\n\uf0a7\tits Module type : Module type is ACLOG1 or ACLOG2\n\uf0a7\tits LRU Part Number\n\uf0a7\tits SW Part Number\n\uf0a7\tit Serial Number', 'additional': u"For P/N and S/N :1 - Not used char to be filled with NULL char.2 - Char 1 is MSB of the string. Exple : P/N : ECE778785Char 1 = 'E'Char 2 = 'C'...Char 9 = '5'Char 10 = Null char...Char 16 = Null char", 'refer': u'[SIRD-EPGDS-1051],[SPE-BITE-1414]'}, u'CAN-IRD-210': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to ACLOG[1/2] through EDMU_XLOG_IDENT message:\n\uf0a7\tEDMU ACLOG Software Interface Version: EDMU to ACLOG Software Interface Version associated to this version of specification shall be 0x01.', 'refer': u'[SPE-BITE-1414]'}, u'SSCS_ACLog_1024': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'ASI 115V AC and ASI Current  input shall be filtered by a 1st order low pass filter with a cut off frequency of 10KHz +/-30%', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'ASI 115V specification', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-563': {'allocation': u'HS', 'body': u'RGCU shall send the following EICAS data to EDMU through RGCU_EDMU_EICAS_x messages :\n- Right Generator good / Fail  Status\n- Right Generator Oil Over temperature status\n- Right Generator ON/OFF status\n- Right GCU Communication fault status\n- Validity attached to these data.', 'refer': u'[SIRD-EPGDS-1052],[SIRD-EPGDS-1641],[SPE-BITE-1332]'}, u'CAN-IRD-564': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request RGCU_EDMU_EICAS_x every 500 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-219': {'allocation': u'AC Log SSCS', 'body': u'ACLOG[1/2] shall send its Engineering Data to EDMU through ACLOG[1/2]_EDMU_ENG_DATA_x messages.', 'derived': u'True', 'rationale': u'Provision'}, u'CAN-IRD-566': {'allocation': u'HS', 'body': u'RGCU shall send the following Synoptic data to EDMU through RGCU_EDMU_SYNOPTIC_1 messages: \n- Average digital value of the Generator Point Of Regulation voltage \n- Generator Line Contactor 2 , auxilliary contactor status \n- Excitation status of Right generator\n- Right engine Running\n- Validity attached to these data (data mentioned above)\n- Right Generator Point Of Regulation Frequency\n- Validity attached to this piece of data (Point Of Regulation Frequency).', 'refer': u'[SIRD-EPGDS-1052]'}, u'SSCS_ACLog_1478': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Label (12)', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall switch from AC External Power Mode ACTIVE to AC External Power Mode NOT ACTIVE when:\n- ELC ACEP OPEN Request is met\nAND\n- ELC Status is OPEN', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-6836]'}, u'SSCS_ACLog_1280': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'to avoid unexpected trip reset', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog shall prevent a continuous resetting of the RCCB trip by taking into account the reset trip command only if the CAN signal switch from inactive to active', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2196]'}, u'SSCS_ACLog_725': {'status': u'TBD', 'terminal': 'EMPTY', 'additional': u'tolerance added', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If the RCCB "CLOSED" command becomes valid on the CAN Bus 1 (Left) within the timeout (1s +/-100ms), the ACLog shall act according to the command received on CAN Bus 1 and ignore RCCB command from the CAN Bus 2 (right).', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2170]'}, u'SSCS_ACLog_1026': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'ASI 115V AC and ASI Current output ripple voltage shall be less than 80mV', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'ASI 115V specification', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1021': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'ASI 115V AC and ASI Current measurements shall be root mean square measures', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-375]'}, u'SSCS_ACLog_886': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall determinate its position (ACLog1 or ACLog2) at start up according to the following table:\n   \nOthers combinations are invalid\nTable 1: Pin programming table', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-657]'}, u'CAN-IRD-762': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the EDMU_GCU_LG_COM message every 100 ms', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-761': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data through EDMU_GCU_LG_COM message:\n- NG_WOFFW\n- RG_WOFFW\n- LG_WOFFW\n- NG_WOW\n- RG_WOW\n- LG_WOW\n- LRG_WOW\n- WOFFW\n- MG_WOW\n- WOW\n- WOW_Fail\n- WOW_STATUS_Valid : Input NDO containing WOW signals is not received or SSM invalid', 'refer': u'[SIRD-EPGDS-1563],[SIRD-EPGDS-2564],[SIRD-EPGDS-2565],[SIRD-EPGDS-2579],[SIRD-EPGDS-2762]'}, u'SSCS_ACLog_708': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-767': {'allocation': u'AC Log SSCS', 'body': u'RCCBs shall include the following RCCBs for ACLOG1:\n\uf0a7\tACMP3B', 'refer': u'[SIRD-EPGDS-1050],[SIRD-EPGDS-1081]'}, u'CAN-IRD-766': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall schedule the request sending according to the following table on EDMU-RGCU interface:', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-113],[SIRD-EPGDS-1059]'}, u'CAN-IRD-765': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the EDMU_GCU_ADS_COM message every 100 ms', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-764': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data through EDMU_GCU_ADS_COM message: \n- Pressure_Altitude\n- Pressure_Altitude_Valid : Input NDO containing Pressure_Altitude is not received or SSM invalid', 'refer': u'[SIRD-EPGDS-6306]'}, u'SSCS_ACLog_698': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'If capacitor technology is not dissimilar between ACLog and EMERLog, capacitors used shall at least be different in terms of values or voltage rating.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-904]'}, u'SSCS_ACLog_1022': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'In accordance with RAE-BA700-103 rev B', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'ASI 115V AC and ASI Current  shall be able to measure AC voltages with frequency from 340Hz to 650Hz', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'ASI 115V specification', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_887': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1009': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'When medium DSO 28V/Open circuit type is set to 28V state, the output voltage shall be >17V at 200 mA over the whole 28V variation range', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-752]'}, u'SSCS_ACLog_1279': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If RCCB "TRIPPED" command from EDMU is "Trip reset", the ACLog shall unlatch all associated ACMP protections.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2195]'}, u'SSCS_ACLog_1278': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The AClog shall report the status "trip" or "Open-Locked" only if the RCCB is open.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2177]'}, u'CAN-IRD-329': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall be the CAN scheduler on each CAN interface.', 'refer': u'[SIRD-EPGDS-111],[SIRD-EPGDS-112]'}, u'SSCS_ACLog_883': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'DSI NO / NC aux contact :Open = DSI input is OpenClosed = DSI input is grounded', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The AClog1 shall determine the AEC contactor status, status validity and failure of contactor according to the following table:\n \n \nTable 9: AEC contactor status, status validity and failure', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-943]'}, u'SSCS_ACLog_1374': {'status': u'MATURE', 'terminal': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The BITE NVM header shall be organized according to the following table : \n  \nTable 26: BITE NVM header', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1353]'}, u'SSCS_ACLog_1375': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The Index Last Fault shall contain the index of the last Fault Record filled.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1352]'}, u'SSCS_ACLog_1376': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If the Index of the last fault is equal to 191, the next fault index shall be 1.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1354]'}, u'SSCS_ACLog_1377': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The Last Flight Leg with fault shall be filled, when a fault is memorized, with the Flight Leg information received from Avionics.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1355]'}, u'SSCS_ACLog_1378': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The Last Flight Leg shall be filled as soon as the Flight Leg information received by the Avionics is different of this field.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1356]'}, u'SSCS_ACLog_1379': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Each fault Record shall be organized according the following table : \n  \nTable 27:  fault Record', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1357]'}, u'CAN-IRD-203': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request ACLOG[1/2]_EDMU_CB_STATUS_x status every 250 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1275': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The AClog shall memorize in non volatile memory the "trip" and the "Open-Locked" states of each RCCB.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2173]'}, u'SSCS_ACLog_1277': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'to have consistent display with AClog', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The AClog shall report to the EDMU the status "trip", "Open-Locked" and "trip cause" after memorization in AClog NVM.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2176]'}, u'CAN-IRD-324': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS,SSPCM SSCS', 'body': u'Equipment shall not initiate overload frame due to its incapacity to treat all incoming frames.', 'derived': u'True', 'rationale': u'To ensure equipment performances.', 'refer': u'[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_1543': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall provide DSO status feedback for every DSO implemented and send it to SW', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2738]'}, u'SSCS_ACLog_492': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The development and management of complex hardware shall be according to RTCA DO-254 and the guidelines provided by FAA ORDER 8110.105.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1589]'}, u'SSCS_ACLog_1541': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'DSI NO / NC aux contact :Open = DSI input is OpenClosed = DSI input is grounded', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The AClog2 shall compute contactors status and failure AEC which is in the opposite AC EPC according to the following table:\n   ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-944]'}, u'SSCS_ACLog_559': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'The opening sequence starts just after the DSO_NBPT grounded, not after the end of the DSO_NBPT 100ms ', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'To switch from a network configuration n to a network configuration n+1, the ACLog shall open simultaneously contactors which have to be open in the configuration n+1 (Opening sequence), and wait 20ms +/-1ms for opening contactor confirmation, then start the "AC Log Closure Sequence" requirement.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2554],[SES-ACEPC-245]'}, u'SSCS_ACLog_1428': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'ACLog shall provide upstream and downstream Power supplies conversion voltage presence monitoring to detect failure.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-792]'}, u'CAN-IRD-426': {'allocation': u'AC Log SSCS', 'body': u'ACLOG[1/2] shall send the following data to EDMU through ACLOG[1/2]_EDMU_ALARM_STATUS message:\n\uf0a7\tState of AC Alarm: Alarm is activated or not.', 'refer': u'[SIRD-EPGDS-1050]'}, u'SSCS_ACLog_1545': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall send failures detected during CBIT to both EDMUs using their CAN busses.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-126]'}, u'SSCS_ACLog_1544': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_552': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'To communicate a Power transfer to the Emerlog and DCLog Pcbs, the ACLog shall implement a DSO Ground/Open low power "DSO_NBPT"', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-680]'}, u'SSCS_ACLog_1425': {'status': u'TBD', 'terminal': u'YES', 'additional': u'waiting for system definition', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall meet the following combined temperature, altitude and humidity requirements : TBD.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-1000]'}, u'SSCS_ACLog_550': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall send IS_IN_FLIGHT and FLIGHT_STATE_VALID through the CAN busses.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2030],[SPE-BITE-635]'}, u'CAN-IRD-427': {'allocation': u'AC Log SSCS', 'body': u'AC alarms shall include the following alarms for ACLOG1:\nACLOG1_DP_ACT\nAC_BUS1_FAIL\nACLOG1_FAIL\nATC1_FAILED_CLOSED_CAS\nATC1_FAILED_OPEN_CAS\nATC3_FAILED_CLOSED_CAS\nATC3_FAILED_OPEN_CAS\nAEC_FAILED_CLOSED_CAS\nAEC_FAILED_OPEN_CAS', 'refer': u'[SIRD-EPGDS-1050],[SPE-BITE-1265]'}, u'SSCS_ACLog_557': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'cf \xa7 2.7', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'According to the power inputs availability, the ACLog shall configure the ATC1, ATC3, ATC2, ELC, GLC1, ALC and GLC2 contactors by following the truth table described below:\n   \nLegend:\nAC EP: \t0: AC external power not power ready\n\t1: AC external power power ready\nLGCU:\t0: Left GEN is not power ready\n\t1: Left GEN is power ready\nRGCU:\t0: Right is not power ready\n\t1: Right GEN is power ready\nAPU:\t0: APU GEN is not power ready\n\t1: APU GEN is power ready\nATCx, ELC:\t0: To open contactor\n\t\t1: To closed contactor\nGLCx, ALC:\t0: GLC is not acknowledged\n\t\t1: To acknowledge GCU\nTable 10: Network Management configuration table', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1318],[SIRD-EPGDS-1319],[SIRD-EPGDS-1336],[SIRD-EPGDS-1340],[SIRD-EPGDS-1341],[SIRD-EPGDS-1342],[SIRD-EPGDS-1343],[SIRD-EPGDS-1344],[SIRD-EPGDS-1346],[SIRD-EPGDS-1349],[SIRD-EPGDS-1350],[SIRD-EPGDS-1351],[SIRD-EPGDS-1353],[SIRD-EPGDS-1686],[SIRD-EPGDS-2040]'}, u'SSCS_ACLog_554': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'On a power input event, the ACLog "DSO_NBPT" shall be grounded during 100ms +/-20ms', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2059],[SIRD-EPGDS-2060]'}, u'SSCS_ACLog_1423': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u' The ACLog oscillator chose shall meet these constraints :\n- tolerence : less or equal than 100ppm \n- CAN bus speed of 500kbit/s', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2106]'}, u'SSCS_ACLog_679': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall provide 5 DSI Ground/Open 5mA to monitor TCB status (thanks to their auxiliaries contacts):\n- DSI_AC_CB_L1\n- DSI_AC_CB_L2\n- DSI_AC_CB_L3\n- DSI_AC_CB_L4\n- DSI_AC_CB_L5', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SES-ACEPC-333],[SES-ACEPC-496]'}, u'SSCS_ACLog_598': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog1 shall read the ELC auxiliaries contacts thanks to the DSI Ground/Open 5mA \n "DSI_AC_CTC1_OPP_NO" for Normally Opened aux contact: DSI Open = CTC Open and\n "DSI_AC_CTC1_OPP_NC" for Normally Closed aux contact : DSI Grounded = CTC Open', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-417]'}, u'SSCS_ACLog_673': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-572': {'allocation': u'HS', 'body': u'RGCU shall send the following data to EDMU through RGCU_EDMU_BITE_1 messages :\n- RIGHT_GCU CANA Bus or Receiver or Transmitter Failure (BUS/WIRE (CBITE) data)\n- RIGHT_GCU CANB Bus or Receiver or Transmitter Failure (BUS/WIRE (CBITE) data)\n- Validity attached to these data (BUS/WIRE (CBITE))\n- RIGHT_GCU RVFG ACBUS2 Overcurrent (BUS/WIRE (PRIT))\n- RIGHT_GCU RVFG Ex Fld Wire Failed (BUS/WIRE (PRIT))\n- RIGHT_GCU RVFG Ex Fld Wire/Winding/Rotor Failed (BUS/WIRE (PRIT))\n- RIGHT_GCU RVFG Gen PHA Wire Open (BUS/WIRE (PRIT))\n- RIGHT_GCU RVFG Gen PHB Wire Open (BUS/WIRE (PRIT))\n- RIGHT_GCU RVFG Gen PHC Wire Open (BUS/WIRE (PRIT))\n- RIGHT_GCU RVFG PMG Wire failed (BUS/WIRE (PRIT))\n- RIGHT_GCU RVFG AC Tie Bus Overcurrent Fail (BUS/WIRE (PRIT))\n- Validity attached to these data (BUS/WIRE (PRIT))', 'refer': u'[SIRD-EPGDS-2975],[SPE-BITE-120],[SPE-BITE-126]'}, u'SSCS_ACLog_599': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall send the ELC "Aux" failure through the CAN busses', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-973]'}, u'SSCS_ACLog_677': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall send RCCB protection cause through the CAN busses', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-497]'}, u'SSCS_ACLog_676': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACMP I\xb2t trip protection shall be latched and sent into NVM', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-499]'}, u'CAN-IRD-666': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data through EDMU_GCU_NVM_DL message:\n\uf0a7\tNVM Download request: NVM downloading operation is requested or not.\n\uf0a7\tNVM reset request: NVM reset operation is requested or not.\n\uf0a7\tNVM Block First byte: First byte of NVM block requested by EDMU.\n\uf0a7\tNVM Block size : Number of bytes of NVM requested by EDMU', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-653],[SPE-BITE-1054],[SPE-BITE-1057]'}, u'CAN-IRD-667': {'allocation': u'HS', 'body': u'AGCU shall send the following data through AGCU_EDMU_NVM_DL_STATUS message :\n\uf0a7\tNVM Download answer: LRU accepts or not the NVM download request from EDMU.\n\uf0a7\tThe size of the NVM : Size of the NVM of the LRU.\n\uf0a7\tThe number of NVM block packets : Number of packet needed to achieve NVM block download if request is accepted else 0.\n\uf0a7\tCRC NVM of block : CRC of NVM block if request is accepted else 0.', 'refer': u'[SIRD-EPGDS-652],[SPE-BITE-1054]'}, u'CAN-IRD-664': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request RGCU_EDMU_NVM_DL_STATUS every 500 ms.', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_558': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'ACLog1 and ACLog2 are not synchronized', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'To switch from a network configuration to another, after the opening sequence, the ACLog shall follow the AC closure sequence described here below:\n   \nTable 12: ACLOG1 /AC LOG2 closure sequence', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1801],[SIRD-EPGDS-2554]'}, u'CAN-IRD-662': {'allocation': u'HS', 'body': u'RGCU shall send the following data through RGCU_EDMU_NVM_DL_STATUS message :\n\uf0a7\tNVM Download answer: LRU accepts or not the NVM download request from EDMU.\n\uf0a7\tThe size of the NVM : Size of the NVM of the LRU.\n\uf0a7\tThe number of NVM block packets : Number of packet needed to achieve NVM block download if request is accepted else 0.\n\uf0a7\tCRC NVM of block : CRC of NVM block if request is accepted else 0.', 'refer': u'[SIRD-EPGDS-652],[SPE-BITE-1054]'}, u'CAN-IRD-663': {'allocation': u'HS', 'body': u'RGCU shall send NVM data to EDMU through RGCU_EDMU_NVM_PACKET_[1;42] messages :\n\uf0a7\tPacket number : The number of the NVM packet transmitted.\n\uf0a7\tNVM packet : 6 bytes of NVM.', 'refer': u'[SIRD-EPGDS-652],[SPE-BITE-1054]'}, u'CAN-IRD-109': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS', 'body': u'One CAN bus named EDMU-1-CAN-XLOG-2 shall connect the following LRUs:\n\uf0a7\tEDMU1\n\uf0a7\tACLOG2 on control Bus B\n\uf0a7\tDCLOG2 on control Bus B\n\uf0a7\tEMERLOG on control Bus B', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-110],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-312]'}, u'CAN-IRD-108': {'allocation': u'AC Log SSCS,DC Log SSCS,EDMU SSCS', 'body': u'One CAN bus named EDMU-2-CAN-XLOG-1 shall connect the following LRUs:\n\uf0a7\tEDMU2\n\uf0a7\tACLOG1 on control Bus B\n\uf0a7\tDCLOG1 on control Bus B', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-110],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-311]'}, u'CAN-IRD-107': {'allocation': u'AC Log SSCS,DC Log SSCS,EDMU SSCS', 'body': u'One CAN bus named EDMU-1-CAN-XLOG-1 shall connect the following LRUs:\n\uf0a7\tEDMU1\n\uf0a7\tACLOG1 on control Bus A\n\uf0a7\tDCLOG1 on control Bus A', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-110],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-311]'}, u'CAN-IRD-106': {'body': u'EPGDS CAN network shall be as follows:', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-110],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-164],[SIRD-EPGDS-311],[SIRD-EPGDS-312],End: \tTrue'}, u'SSCS_ACLog_1019': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'ASI 115V AC and ASI Current  input impedance shall be at least 99KOhms whether the ACLog is supplied or not', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'ASI 115V specification', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_980': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'Ground/Open DSI shall use a +12V (+/-5%)  polarization voltage', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-728]'}, u'CAN-IRD-668': {'allocation': u'HS', 'body': u'AGCU shall send NVM data to EDMU through AGCU_EDMU_NVM_PACKET_[1;42] messages :\n\uf0a7\tPacket number : The number of the NVM packet transmitted.\n\uf0a7\tNVM packet : 6 bytes of NVM.', 'refer': u'[SIRD-EPGDS-652],[SPE-BITE-1054]'}, u'CAN-IRD-669': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request AGCU_EDMU_NVM_DL_STATUS every 500 ms.', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-1059]'}, u'CAN-IRD-779': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request EMERLOG_EDMU_FUSE_STATUS_x every 250 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_774': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall meet the Vibration requirements defined in section 8 of RTCA/DO-160G:\n- Category S Curve C for Standard Vibrations \n- Category H Curve R for High-Level Short Duration', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-149]'}, u'SSCS_ACLog_784': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall meet the Humidity requirements defined in section 10 of RTCA/DO-160G Category W (Drip proof Test).', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-153]'}, u'SSCS_ACLog_783': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall meet the Fluid Susceptibility requirements defined in section 11 of RTCA/DO-160G Category F, Spray Test (Tests on samples).', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-155]'}, u'SSCS_ACLog_782': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall meet the Fungus Resistance requirements defined in section 13 of RTCA/DO-160G Category F.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-158]'}, u'SSCS_ACLog_781': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall meet the Magnetic Effect requirements defined in section 15 of RTCA/DO-160G Category Z.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-160]'}, u'CAN-IRD-818': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request RGCU_EDMU_ANALOG_x every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_827': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'When the differential protection is activated, ACLog1 shall open the ATC3 contactor', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-389]'}, u'SSCS_ACLog_1080': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall receive, at least, the following informations by CAN from the EDMU:\n- Flight leg\n- Flight phase\n- Aircraft tail\n- Time\n- Date ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-996]'}, u'SSCS_ACLog_1419': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog shall check all Current transformer function during PBIT', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-189]'}, u'CAN-IRD-815': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request AGCU_EDMU_ANALOG_x every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-814': {'allocation': u'HS', 'body': u'AGCU shall send the following data through AGCU_EDMU_ANALOG_x messages :\n- AGCU_PHA_VOLTAGE\n- Validity attached to AGCU_PHA_VOLTAGE\n- AGCU_PHB_VOLTAGE\n- Validity attached to AGCU_PHB_VOLTAGE\n- AGCU_PHC_VOLTAGE\n- Validity attached to AGCU_PHC_VOLTAGE\n- AGCU_PHA_CURRENT\n- Validity attached to AGCU_PHA_CURRENT\n- AGCU_PHB_CURRENT\n- Validity attached to AGCU_PHB_CURRENT\n- AGCU_PHC_CURRENT\n- Validity attached to AGCU_PHC_CURRENT', 'refer': u'[SIRD-EPGDS-2975]'}, u'CAN-IRD-817': {'allocation': u'HS', 'body': u'RGCU shall send the following data through RGCU_EDMU_ANALOG_x messages :\n- RGCU_PHA_VOLTAGE\n- Validity attached to RGCU_PHA_VOLTAGE\n- RGCU_PHB_VOLTAGE\n- Validity attached to RGCU_PHB_VOLTAGE\n- RGCU_PHC_VOLTAGE\n- Validity attached to RGCU_PHC_VOLTAGE\n- RGCU_PHA_CURRENT\n- Validity attached to RGCU_PHA_CURRENT\n- RGCU_PHB_CURRENT\n- Validity attached to RGCU_PHB_CURRENT\n- RGCU_PHC_CURRENT\n- Validity attached to RGCU_PHC_CURRENT', 'refer': u'[SIRD-EPGDS-2975]'}, u'SSCS_ACLog_766': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall meet the "Temperature Variation" requirements defined in section 5 of RTCA/DO-160G Category B.\nTemperature Elevation of 10 \xb0C is  applied to the ambiant temperature.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-143],[SES-ACEPC-291]'}, u'SSCS_ACLog_850': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'The reference voltage will be ASI_RCCB1_CURRENT_RET for ASI_RCCB1_CURRENT_PHx and ASI_RCCB2_CURRENT_RET for ASI_RCCB2_CURRENT_PHx', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog2 shall read, through current transformers, the three RCCB phases currents of ACMP3A and ACMP1B thanks to the following ASI:\n- ACMP3A phase A: ASI_RCCB1_CURRENT_PHA\n- ACMP3A phase B: ASI_RCCB1_CURRENT_PHB\n- ACMP3A phase C: ASI_RCCB1_CURRENT_PHC\n- ACMP1B phase A: ASI_RCCB2_CURRENT_PHA\n- ACMP1B phase B: ASI_RCCB2_CURRENT_PHB\n- ACMP1B phase C: ASI_RCCB2_CURRENT_PHC', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2453],[SES-ACEPC-348],[SES-ACEPC-488],[SES-ACEPC-489]'}, u'SSCS_ACLog_608': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_609': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog1 shall read the ATCx auxiliaries contacts thanks to the following DSI Ground/Open 5mA:\n- ATC1: \n DSI_AC_CTC1_NO for Normally Opened aux contact: DSI Open = CTC Open and \n DSI_AC_CTC1_NC for Normally Closed aux contact : DSI Grounded = CTC Open\n- ATC2: \n DSI_AC_CTC2_OPP_NO for Normally Opened aux contact: DSI Open = CTC Open and \n DSI_AC_CTC2_OPP_NC for Normally Closed aux contact : DSI Grounded = CTC Open\n- ATC3: \n DSI_AC_CTC2_NO for Normally Opened aux contact: DSI Open = CTC Open and\n DSI_AC_CTC2_NC for Normally Closed aux contact : DSI Grounded = CTC Open', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-430],[SES-ACEPC-431],[SES-ACEPC-432]'}, u'SSCS_ACLog_606': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_540': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_605': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_823': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-613': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to AGCU through EDMU_GCU_IDENT message:\n\uf0a7\tEDMU AGCU Software Interface Version: EDMU to AGCU Software Interface Version associated to this version of specification shall be 0x01.', 'refer': u'[SPE-BITE-1414]'}, u'SSCS_ACLog_1160': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-611': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send EDMU_GCU_FLIGHTINFO_x every 1 second to AGCU.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-610': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to AGCU through EDMU_GCU_FLIGHTINFO_x messages:\n\uf0a7\tDate : Digital values of Year, Month and Day\n\uf0a7\tValidity of Date and time : Date and time is valid or not\n\uf0a7\tTime : Digital values of Hour and Minute\n\uf0a7\tFlight phases\n\uf0a7\tValidity of Flight phase : Flight phase is valid or not\n\uf0a7\tAircraft tail\n\uf0a7\tValidity of Aircraft tail : Aircraft tail is valid or not\n\uf0a7\tFlight leg\n\uf0a7\tValidity of Flight leg : Flight leg is valid or not', 'refer': u'[SIRD-EPGDS-1898],[SPE-BITE-996]'}, u'SSCS_ACLog_1165': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1164': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-615': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request AGCU_EDMU_IDENT_x every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-614': {'allocation': u'HS', 'body': u'AGCU shall send the following data to EDMU through AGCU_EDMU_IDENT_x messages:\n\uf0a7\tSoftware Interface Version: AGCU to EDMU Software Interface Version associated to this version of specification shall be 0x01.\n\uf0a7\tthe CRC32 of its software (A665 CRC32 calculation shall be used)\n\uf0a7\tits Module type : Module type is AGCU\n\uf0a7\tits LRU Part Number\n\uf0a7\tits SW Part Number\n\uf0a7\tit Serial Number', 'refer': u'[SIRD-EPGDS-2975],[SPE-BITE-1414]'}, u'SSCS_ACLog_1169': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1168': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-619': {'allocation': u'EDMU SSCS', 'body': u'The messages between EDMU and GCU shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'CAN-IRD-618': {'allocation': u'EDMU SSCS', 'body': u'The messages between EDMU and GCU shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_1087': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall have at least 30% RAM/ROM spare capacity', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-888]'}, u'SSCS_ACLog_1084': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'Components in spare shall have no functional or safety impact in case of failure, at LRU or system level ', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-918]'}, u'SSCS_ACLog_1085': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW, SW', 'body': u'ACLog shall be designed in conformity with The Development Assurance Level (DAL) B', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': u'req allocation should be done through the ACEPC SES', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-194': {'allocation': u'AC Log SSCS', 'body': u'ACLOG[1/2] shall send the following data to EDMU through ACLOG[1/2]_EDMU_RCCB_STATUS_x message:\n\uf0a7\tState of RCCB: RCCB is open or closed.\n\uf0a7\tValidity of the status of RCCB: the status signal is valid or not.\n\uf0a7\tState of RCCB trip: RCCB is tripped or not.\n\uf0a7\tValidity of the trip of RCCB: the trip signal is valid or not.\n\uf0a7\tShed state of the RCCB: RCCB is shed or not.\n\uf0a7\tValidity of the shed state of RCCB: the signal is valid or not.\n\uf0a7\tOpen locked state of the RCCB: RCCB is open locked or not.\n\uf0a7\tValidity of the open locked state of RCCB: the signal is valid or not.\n\uf0a7\tDetection of AFD per phase: No AFD detected, Paralellel AFD detected or Series AFD detected.\n\uf0a7\tTrip cause of the RCCB phases: None, AFD,I2t trip, GFI trip, Overvoltage or Unbalanced.', 'refer': u'[SIRD-EPGDS-253],[SIRD-EPGDS-397],[SIRD-EPGDS-401],[SIRD-EPGDS-497],[SIRD-EPGDS-1050],[SIRD-EPGDS-1081],[SIRD-EPGDS-3143]'}, u'CAN-IRD-195': {'allocation': u'AC Log SSCS', 'body': u'RCCBs shall include the following RCCBs for ACLOG2:\n\uf0a7\tACMP1B\n\uf0a7\tACMP3A', 'refer': u'[SIRD-EPGDS-1050],[SIRD-EPGDS-1081]'}, u'CAN-IRD-196': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send EDMU_ACLOG_RCCB_CMD_x every 50 ms', 'refer': u'[SIRD-EPGDS-1059],[SIRD-EPGDS-2199],[SIRD-EPGDS-3146]'}, u'SSCS_ACLog_1110': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'To know if the other ACLog has a problem', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'The ACLog shall implement a DSO Ground/Open low power "DSO_ACLOG_VALID"', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To know if the other ACLog has a problem', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1326': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog1 shall compute the "ACLOG1_FAIL" CAS message according the following Logic : \nTRUE \nAt least One of the ACLog PBIT test is failed \nOR \nAt least one ACLog Discrete output is failed\nOR \nThe ACLog anti paralleling function is failed \nOR \nThe ACLog internal power supply is failed\nFALSE otherwise', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1195]'}, u'SSCS_ACLog_728': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If the time out expires without the RCCB "CLOSED" command being valid from the CAN Bus 1, the ACLog shall act with the first valid command received on one CAN bus and ignore RCCB command from the other CAN bus.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2163]'}, u'CAN-IRD-198': {'allocation': u'AC Log SSCS', 'body': u'ACLOG[1/2] shall send the following data to EDMU through ACLOG[1/2]_EDMU_PROTEC_STATUS message:\n\uf0a7\tState of AC protections: protection is activated or not.', 'derived': u'True', 'rationale': u'Provision'}, u'CAN-IRD-199': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request ACLOG[1/2]_EDMU_PROTEC_STATUS every 50 ms.', 'rationale': u'Provision', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1288': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall consider that protection(s) are not activated if NVM is corrupted at start-up.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-3026]'}, u'SSCS_ACLog_926': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of GCU Power Ready indication discrepancy failure, the ACLog shall declare the failure of the concerned GCU to the EDMU using CAN busses.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-579]'}, u'CAN-IRD-392': {'allocation': u'AC Log SSCS,DC Log SSCS,EDMU SSCS', 'body': u'The data of messages sent between EDMU and XLOG1 shall be compliant to the following document:', 'refer': u'[SIRD-EPGDS-164]'}, u'SSCS_ACLog_1281': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'To keep the Trip state if the AClog is replaced', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If the TRIPPED signal from EDMU is equal to "Trip set", the AClog shall set the RCCB "trip cause" in accordance with the trip cause sent by the EDMU', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2198]'}, u'CAN-IRD-390': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'The data of messages sent between EDMU and SSPCM shall be compliant to the following document:', 'refer': u'[SIRD-EPGDS-164],[SIRD-EPGDS-165]'}, u'SSCS_ACLog_1283': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'to have a trip cause consistent with the trip state', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If RCCB "TRIPPED" command from EDMU is "Trip reset", the AClog shall set the RCCB "Trip cause" to "None".', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2197]'}, u'SSCS_ACLog_1284': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'SIRD define reset after cold start, aircraft on ground (On Ground/ In Flight signals)', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACMP overvoltage protection shall be reset aircraft on ground (On Ground/ In Flight signals) through CAN busses.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2466]'}, u'SSCS_ACLog_1285': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'SIRD define reset after cold start, aircraft on ground (On Ground/ In Flight signals)', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACMP Unbalance protection shall be reset, aircraft on ground (On Ground/ In Flight signals) through CAN busses.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2466]'}, u'CAN-IRD-394': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS', 'body': u'The data of messages sent between EDMU and XLOG2 shall be compliant to the following document:', 'refer': u'[SIRD-EPGDS-164]'}, u'SSCS_ACLog_1287': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_542': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1132': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'ACLog shall Open all discret ouputs (DSO) when electronic pcb is not supplied or if DCLOG is NOT in functional mode.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2854]'}, u'SSCS_ACLog_775': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall meet the "Operational Shocks and Crash Safety" requirements defined in section 7 of RTCA/DO-160G Category B with a nominal pulse duration at 11ms.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-146]'}, u'SSCS_ACLog_1449': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Confirmation time for the ground/Flight DSI Status Inconsistency failure shall be 15 seconds +/- 0,5s.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1477]'}, u'SSCS_ACLog_826': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u"the relation between the differential current (I-I') and the ASI input voltage (V) is given by the following formula:\tV=(I-I')*Rb/1000.1000: Current tranformer nominal current ratio (1/1000)Rb: Current transformer burden (300Ohms)ASI and contactor response time are included", 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'When the ACLog detect a differential current higher than 40A +/-15A during a minimum of 50ms +/-20%, the differential protection shall be activated.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SES-ACEPC-344],[SES-ACEPC-345],[SES-ACEPC-360],[SES-ACEPC-648],[SES-ACEPC-697]'}, u'CAN-IRD-688': {'allocation': u'AC Log SSCS', 'body': u'RCCBs shall include the following RCCBs for ACLOG1:\n\uf0a7\tACMP3B', 'refer': u'[SIRD-EPGDS-1050],[SIRD-EPGDS-1081],[SIRD-EPGDS-1083]'}, u'SSCS_ACLog_825': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'The reference voltage will be ASI_DP_RET', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall provide 3 ASI to read, through current transformers, the Tie bus differential currents (bus between ATC2 and ATC3):\n- ASI_DP_PHA\n- ASI_DP_PHB\n- ASI_DP_PHC', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-388]'}, u'SSCS_ACLog_822': {'status': u'TBC', 'terminal': 'EMPTY', 'additional': u'waiting for system update', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLOG board MTBF shall be greater than 65 000 Flight hours. (TBC)', 'safety': u'YES, Design Objective', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2622]'}, u'SSCS_ACLog_1056': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of AC network reconfiguration, the ACLog shall apply, from step 0, the column of the sequencing command table corresponding to the color defined by the following table:\n   \n With legend: \n Grey (G): No action\n Blue (B): Only ACMP3B sequence by AC log1 Pcb,\n Red (R): Only ACMP1B, ACMP3A sequence by AC log2 Pcb,\n Purple (P): All ACMP sequence by the two AC log Pcbs.\nFigure 17: ACMP configuration commands', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2553]'}, u'CAN-IRD-689': {'allocation': u'AC Log SSCS', 'body': u'RCCBs shall include the following RCCBs for ACLOG2:\n\uf0a7\tACMP1B\n\uf0a7\tACMP3A', 'refer': u'[SIRD-EPGDS-1050],[SIRD-EPGDS-1081],[SIRD-EPGDS-1083]'}, u'SSCS_ACLog_1266': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_828': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'When the differential protection is activated, ACLog2 shall open the ATC2 contactor', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-389]'}, u'SSCS_ACLog_829': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'When the differential protection is activated, an AC_TIE_DP_TRIP failure shall be send through the CAN busses', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-390],[SPE-BITE-751]'}, u'CAN-IRD-727': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS', 'body': u'BNR data shall be encoded as two\u2019s complement fractional binary.', 'derived': u'True', 'rationale': u'To be compatible with AFDX data encoding', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-726': {'allocation': u'DC Log SSCS', 'body': u'DC busbars shall include the following bubars for DCLOG2:\n\uf0a7\tDC1_BUSBAR\n\uf0a7\tDC2_BUSBAR\n\uf0a7\tDC2_ESS_BUSBAR\n\uf0a7\tEMER2_BUSBAR\n\uf0a7\tAPU_BATT_BUSBAR\t', 'refer': u'[SIRD-EPGDS-1020],[SIRD-EPGDS-1055],[SIRD-EPGDS-1896],[SIRD-EPGDS-6773]'}, u'SSCS_ACLog_983': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'For Ground/Open DSI, the difference between "Voltage at input when in open circuit" and the switching threshold "Vth-up" shall be greater than 2 V.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-730]'}, u'SSCS_ACLog_545': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'The ACLog shall provide 2 DSI Ground/Open 1mA  the ("AC EP power ready" information from ACLog2):\n- DSI_PR_AC_EP\n- DSI_NPR_AC_EP ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To be able to know if the ACEP is PR or not', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_985': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'- contactors status (DSI_GLC_x, DSI_AGLC_x, DSI_AC_CTCx_x)- RCCB status (DSI_RCCBx_Nx, DSI_RCCBx_OPP_Nx)- TCB status (DSI_AC_CB_x)', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'In short circuit, discrete input current shall be 1mA \xb1 15% except for contactors, relays auxiliaries and CB status which need 5.9mA +/-15%', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-3075],[SES-ACEPC-731]'}, u'SSCS_ACLog_811': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall comply with conducted emissions requirements specified in MIL-STD-461C Section CE07.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-684]'}, u'SSCS_ACLog_986': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-680': {'allocation': u'EDMU SSCS', 'body': u'CAN IDs of AGCU to EDMU frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_897': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog shall test the watchdog during PBIT', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-110]'}, u'CAN-IRD-683': {'allocation': u'EDMU SSCS', 'body': u'CAN IDs of RGCU to EDMU frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-685': {'allocation': u'EDMU SSCS', 'body': u'CAN IDs of EDMU to RGCU frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-729': {'allocation': u'HS', 'body': u'RGCU shall send the following Synoptic data to EDMU through RGCU_EDMU_SYNOPTIC_2 messages: \n- Right Generator load\n- Validity attached to this piece of data.', 'refer': u'[SIRD-EPGDS-2125]'}, u'CAN-IRD-687': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to ACLOG[1/2] through EDMU_ACLOG_RCCB_CMD_x message:\n\uf0a7\tCommand of the RCCB: RCCB is open or closed.\n\uf0a7\tValidity of the command of RCCB: the status signal is valid or not.\n\uf0a7\tRCCB trip command: RCCB trip is set, reset or no change.\n\uf0a7\tValidity of the trip command of the RCCB: the trip signal is valid or not.\n\uf0a7\tOpen locked command of the RCCB: RCCB is set to open locked, not open locked or no change.\n\uf0a7\tValidity of the open locked command of RCCB: the signal is valid or not.\n\uf0a7\tTrip cause of the RCCB phases: None, AFD,I2t trip, GFI trip, Overvoltage or Unbalanced.', 'refer': u'[SIRD-EPGDS-220],[SIRD-EPGDS-401],[SIRD-EPGDS-497],[SIRD-EPGDS-498],[SIRD-EPGDS-2195],[SIRD-EPGDS-2198],[SIRD-EPGDS-2200],[SIRD-EPGDS-2206],[SIRD-EPGDS-2209],[SIRD-EPGDS-2210]'}, u'SSCS_ACLog_505': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_504': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'SIRD should be updated', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'When Ground Servicing Mode is ACTIVE, ACLog2 shall set:\n- "DSO_GS_MODE" to Active\n- "DSO_GS_ON" to Active', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-6844]'}, u'SSCS_ACLog_507': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'GS Push Button is a momentary switch', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u' \n \nThe ACLog shall take into account "DSI_ACEP_PB" falling edge for Ground Servicing changes:\n- DSI_GS_PB falling edge AND AC External Power is POWER READY AND ELC ACEP is OPEN Request AND 28V_AC_EP_TR is Present AND No GCU or APU is Power Ready\n- DSI_GS_PB falling edge OR AC External Power is NOT POWER READY AND ELC ACEP is CLOSE Request OR 28V_AC_EP_TR is NOT Present OR at least one GCU or APU is Power Ready OR ELC is Failed Open\n \nFigure 13: Ground Servicing push button activation', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-6839],[SES-ACEPC-529]'}, u'SSCS_ACLog_506': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall send the ground servicing mode informations through the CAN busses', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-561],[SIRD-EPGDS-1011],[SIRD-EPGDS-1753]'}, u'SSCS_ACLog_501': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Label (15)waiting for SIRD update (ACLOG2 --> ACLOG)', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall switch from Ground Servicing Mode NOT ACTIVE to Ground Servicing Mode ACTIVE when:\n- ELC Ground Servicing CLOSE Request\nAND\n- ELC Status is CLOSED ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-6842]'}, u'SSCS_ACLog_957': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Once ACLog Initiated BITE (IBIT) is performed, the ACLOG shall send to the EDMU the result of the sequence using CAN busses. ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-178]'}, u'SSCS_ACLog_1204': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'The J1 pinout shall be defined as follow:\n   \nNB: With an ACLog point of view:\n- +28V: ACLog input Power supply (secondary side)\n-  +5V, +3V3: Output power supplies for external device\n-  +3V3_B: Output buffered power supply for JTAG external device-\nTable 30: J1 connector', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To define connectors pins allocation', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_515': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1494': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The AC Log shall download NVM in 5 minutes maximum.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-3353]'}, u'SSCS_ACLog_508': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_909': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog shall monitor upstream and downstream Power supplies conversion voltage presence monitoring to detect failure.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-792]'}, u'SSCS_ACLog_1315': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'When the anti-paralleling hardware protection is activated, as described in the SSCS_ACLog_837, the ACLog shall apply an OPEN command to the corresponding contactor (ATCx or ELC).', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2573],[SIRD-EPGDS-2575],[SIRD-EPGDS-2576],[SIRD-EPGDS-2577]'}, u'SSCS_ACLog_1239': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'electronic protection cannot be conform to this req', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The loss of electrical protection for RCCB ACMPx  shall be less than 1e-9 per flight hour', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-921]'}, u'SSCS_ACLog_1238': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1234': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'After five (5) watchdog resets in flight, the ACLog shall be stated in reset mode.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-3141]'}, u'SSCS_ACLog_1237': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The loss of ATCx command shall be less than 1E-5 per flight hour', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SES-ACEPC-540]'}, u'SSCS_ACLog_1231': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'Conformal coating shall be applied to AC Log', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-3414]'}, u'SSCS_ACLog_1230': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'During IBIT and for a given network configuration, ACLog IBIT shall not lead to a change in contactor commands during more than 100ms [+0; -20%]', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1115]'}, u'SSCS_ACLog_1233': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-248': {'allocation': u'DC Log SSCS', 'body': u'DCLOG[1/2] shall send the following data to EDMU through DCLOG[1/2]_EDMU_CNTOR_STATUS message:\n\uf0a7\tState of DC contactors: contactor is open or closed.\n\uf0a7\tValidity of the state of DC contactor: the state signal is valid or not.', 'refer': u'[SIRD-EPGDS-1020],[SIRD-EPGDS-1055],[SIRD-EPGDS-1668]'}, u'CAN-IRD-249': {'allocation': u'DC Log SSCS', 'body': u'DC contactors shall include the following contactors for DCLOG1 and DCLOG2:\n\uf0a7\tTLC1\n\uf0a7\tTLC2\n\uf0a7\tDTC1\n\uf0a7\tDTC2\n\uf0a7\tDEC1\n\uf0a7\tDEC2\n\uf0a7\tSC\n\uf0a7\tMAIN_BLC\n\uf0a7\tAPU_BLC', 'refer': u'[SIRD-EPGDS-1020],[SIRD-EPGDS-1055],[SIRD-EPGDS-1668]'}, u'CAN-IRD-365': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS', 'body': u'The messages between EDMU and XLOG shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'CAN-IRD-364': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS', 'body': u'Time slot duration on EDMU-XLOG interfaces shall be 25 ms.', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-1059]'}, u'CAN-IRD-362': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall schedule the request messages sending according to the following table:', 'derived': u'True', 'rationale': u'EPGDS CAN Protocol', 'refer': u'[SIRD-EPGDS-113],[SIRD-EPGDS-299],[SIRD-EPGDS-1059]'}, u'CAN-IRD-361': {'allocation': u'EDMU SSCS', 'body': u'Major sequence frame duration on EDMU-SSPCM interfaces shall be 1000 ms.', 'derived': u'True', 'rationale': u'EPGDS CAN Protocol', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-1059]'}, u'CAN-IRD-360': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'Time slot duration on EDMU-SSPCM interfaces shall be 25 ms.', 'derived': u'True', 'rationale': u'EPGDS CAN Protocol', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-1059]'}, u'CAN-IRD-240': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request DCLOG[1/2]_EDMU_CB_STATUS_x every 250 ms', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-242': {'allocation': u'DC Log SSCS', 'body': u'DCLOG[1/2] shall send the following data to EDMU through DCLOG[1/2]_EDMU_ANALOG_x messages:\n\uf0a7\tAnalog measurement of DC: digital value of the measured current or voltage.\n\uf0a7\tValidity of the analog measurement of DC: the signal is valid or not.', 'refer': u'[SIRD-EPGDS-1055]'}, u'CAN-IRD-243': {'allocation': u'DC Log SSCS', 'body': u'DC analog measurements shall include the following value for DCLOG1:\n\uf0a7\tTRU1_OUT_VOLTAGE\n\uf0a7\tTRU1_OUT_CURRENT\n\uf0a7\tMAIN_BATT_VOLTAGE\n\uf0a7\tMAIN_BATT_CURRENT\n\uf0a7\tMAIN_BATT_TEMP', 'refer': u'[SIRD-EPGDS-1425],[SIRD-EPGDS-2334],[SIRD-EPGDS-2335]'}, u'CAN-IRD-244': {'allocation': u'DC Log SSCS', 'body': u'DC analog measurements shall include the following value for DCLOG2:\n\uf0a7\tTRU2_OUT_VOLTAGE\n\uf0a7\tTRU2_OUT_CURRENT\n\uf0a7\tAPU_BATT_VOLTAGE\n\uf0a7\tAPU_BATT_CURRENT\n\uf0a7\tAPU_BATT_TEMP', 'refer': u'[SIRD-EPGDS-1425],[SIRD-EPGDS-2334],[SIRD-EPGDS-2335]'}, u'CAN-IRD-245': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request DCLOG[1/2]_EDMU_ANALOG_x every 250 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-369': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall schedule the request sending according to the following table:', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-113],[SIRD-EPGDS-1059]'}, u'CAN-IRD-368': {'allocation': u'EDMU SSCS', 'body': u'Major sequence frame duration on EDMU-XLOG interfaces shall be 1000 ms.', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1460': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In addition to BIT/BITE information, ACLog shall send to the ENMU, using CAN busses, its discrete inputs and outputs statuses', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1540]'}, u'SSCS_ACLog_1461': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-439': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request EMERLOG_EDMU_ALARM_STATUS every 50 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1463': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ground servicing mode shall be the lowest priority of electrical network configuration.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2546]'}, u'CAN-IRD-536': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request LGCU_EDMU_EICAS_x every 500 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-534': {'allocation': u'AC Log SSCS', 'body': u'AC alarms shall include the following alarms for ACLOG2:\nACLOG2_DP_ACT\nAC_BUS2_FAIL\nACLOG2_FAIL\nATC2_FAILED_CLOSED_CAS\nATC2_FAILED_OPEN_CAS\nELC_FAILED_CLOSED_CAS\nELC_FAILED_OPEN_CAS', 'refer': u'[SIRD-EPGDS-1050],[SPE-BITE-1266]'}, u'CAN-IRD-535': {'allocation': u'HS', 'body': u'LGCU shall send the following EICAS data to EDMU through LGCU_EDMU_EICAS_1 message :\n- Left Generator good / Fail  Status\n- Left Generator Oil Over temperature status\n- Left Generator ON/OFF status\n- Left GCU Communication fault status\n- Validity attached to these data', 'refer': u'[SIRD-EPGDS-1052],[SIRD-EPGDS-1641],[SPE-BITE-1331]'}, u'CAN-IRD-433': {'allocation': u'DC Log SSCS', 'body': u'DC alarms shall include the following alarms for DCLOG2:\nAPU_BATT_OFF\nDC_ESS_BUS2_FAIL\nAPU_BATT_FAIL\nTRU2_FAIL\nDC_EMER_BUS2_FAIL\nAPU_BATT_BUS_FAIL\nDC_BUS2_FAIL\nDCLOG2_FAIL\nDCLOG2_DP_ACT\nDEC2_FAILED_CLOSED_CAS\nTLC2_FAILED_OPEN_CAS\nTLC2_FAILED_CLOSED_CAS\nDTC1_FAILED_OPEN_DC2_CAS\nDTC1_FAILED_CLOSED_DC2_CAS\nSC_FAILED_OPEN_CAS\nSC_FAILED_CLOSED_CAS\nAPU_BLC_FAILED_OPEN_CAS\nAPU_BLC_FAILED_CLOSED_CAS\nDTC2_FAILED_OPEN_DC2_CAS\nDTC2_FAILED_CLOSED_DC2_CAS\nDEC2_FAILED_OPEN_CAS\nAPU_BATT_DISCHARGING', 'refer': u'[SIRD-EPGDS-1055],[SIRD-EPGDS-3362],[SPE-BITE-1268]'}, u'CAN-IRD-432': {'allocation': u'DC Log SSCS', 'body': u'DC alarms shall include the following alarms for DCLOG1:\nMAIN_BATT_OFF\nMAIN_BATT_FAIL\nTRU1_FAIL\nDC_EMER_BUS1_FAIL\nMAIN_BATT_BUS_FAIL\nDC_BUS1_FAIL\nDCLOG1_FAIL\nDCLOG1_DP_ACT\nDEC1_FAILED_CLOSED_CAS\nTLC1_FAILED_OPEN_CAS\nTLC1_FAILED_CLOSED_CAS\nDTC1_FAILED_OPEN_DC1_CAS\nDTC1_FAILED_CLOSED_DC1_CAS\nMAIN_BLC_FAILED_OPEN_CAS\nMAIN_BLC_FAILED_CLOSED_CAS\nDTC2_FAILED_OPEN_DC1_CAS\nDTC2_FAILED_CLOSED_DC1_CAS\nDEC1_FAILED_OPEN_CAS\nMAIN_BATT_DISCHARGING', 'refer': u'[SIRD-EPGDS-1055],[SIRD-EPGDS-3362],[SPE-BITE-1267]'}, u'CAN-IRD-538': {'allocation': u'HS', 'body': u'LGCU shall send the following Synoptic data to EDMU through LGCU_EDMU_SYNOPTIC_1 messages: \n- Average digital value of the Generator Point Of Regulation voltage\n- Generator Line Contactor 1 , auxilliary contactor status \n- Excitation status of Left generator\n- Left engine Running\n- Validity attached to these data (data mentioned above)\n- Left Generator Point Of Regulation Frequency\n- Validity attached to this piece of data (Point Of Regulation Frequency)', 'refer': u'[SIRD-EPGDS-1641]'}, u'CAN-IRD-539': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request LGCU_EDMU_SYNOPTIC_x every 100 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-437': {'allocation': u'Emer Log SSCS', 'body': u'EMER alarms shall include the following alarms for EMERLOG:\nEMERLOG_DP_ACT\nXFER_ESS_EMERLOG\nXFER_R_EMERLOG\nXFER_L_EMERLOG\nESS_TRU_FAIL\nDC_ESS_BUS1_FAIL\nAC_ESS_BUS_FAIL\nEMERLOG_FAIL\nETC1_FAILED_CLOSED_CAS\nTLC3_FAILED_OPEN_CAS\nTLC3_FAILED_CLOSED_CAS\nETC2_FAILED_OPEN_CAS\nETC2_FAILED_CLOSED_CAS\nETC1_FAILED_OPEN_CAS\nRAT_GEN_INOP', 'refer': u'[SPE-BITE-1269]'}, u'CAN-IRD-436': {'allocation': u'Emer Log SSCS', 'body': u'EMERLOG shall send the following data to EDMU through EMERLOG_EDMU_ALARM_STATUS message:\n\uf0a7\tState of EMER Alarm: Alarm is activated or not.', 'refer': u'[SIRD-EPGDS-1905]'}, u'CAN-IRD-434': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request DCLOG[1/2]_EDMU_ALARM_STATUS every 50 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_998': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'In open state or not supplied, DSO output shall be compatible with the aircraft 28 VDC network voltage.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-743]'}, u'CAN-IRD-499': {'allocation': u'AC Log SSCS,DC Log SSCS,EDMU SSCS', 'body': u'CAN IDs of EDMU to XLOG1 frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_1136': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_431': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall be fully functional with DC input voltage between 17Vdc and 31.5Vdc', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-541]'}, u'SSCS_ACLog_430': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall have two ground connections:\n- GND Power for 28Vdc power supply\n- GND Signal for analog, discrete and digital signals.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-540]'}, u'SSCS_ACLog_437': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The AClog2 shall implement the following protections for AC External Power:\n- Undervoltage AC EP 115V ("ASI_ACEP_VOLTAGE_PHA", "ASI_ACEP_VOLTAGE_PHB" and "ASI_ACEP_VOLTAGE_PHC")\n- Overvoltage AC EP 115V\n- Overvoltage (ASI_DC_ACEP_PINE)\n- Overload (I2t) ("ASI_ACEP_CURRENT_PHA", "ASI_ACEP_CURRENT_PHB", "ASI_ACEP_CURRENT_PHC")\n- Unbalance protection\n- Phase Order\n- Underfrequency\n- Overfrequency\n- Open phase', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-450],[SIRD-EPGDS-1762],[SES-ACEPC-689]'}, u'SSCS_ACLog_439': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Limits for 400Hz and variable frequency AC overvoltage provided by the MIL-STD-704F', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The software Overvoltage AC external power protection shall be activated when one phase voltage (+/-5%) reaches the threshold during the time delay corresponding:\n  \n \n \n \nFigure 20: Software Overvoltage AC external power protection', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-454],[SIRD-EPGDS-2765]'}, u'SSCS_ACLog_438': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The undervoltage AC external power protection shall be activated when at least one phase voltage level is lower than 100V +/-10V during 5s +/-200ms\t', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-453]'}, u'SSCS_ACLog_959': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1176': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall test data stored in NVM during PBIT thanks to checksum or CRC calculation', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1048]'}, u'SSCS_ACLog_1010': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'High power DSO shall be able to drive 0.24A -/+20% permanent and 5A +/-10% during 100ms.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-718],[SES-ACEPC-858]'}, u'SSCS_ACLog_1308': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'When ACLog is not entered in functional mode, it shall only refresh watchdog is an infinite loop.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-3033]'}, u'SSCS_ACLog_1301': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u' After exposure to SEU/MBU, the equipement shall automatically recover its full performance.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-953]'}, u'SSCS_ACLog_963': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1302': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The component failure modes that could be triggered by impact of SEU/MBU on the system shall be identified and their consequences on the equipment behaviour analyzed.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-954]'}, u'SSCS_ACLog_1305': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1307': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The spurious activation of GFI protection on AClog shall be less than 7E-7 /FH', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2668]'}, u'SSCS_ACLog_1340': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall compute the "ATC2_FAILED_OPEN_CAS" CAS message according the following logic : \nTRUE\nATC2 is declared failed Open\nFALSE otherwise', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1211]'}, u'SSCS_ACLog_1518': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'DSI NO / NC aux contact :Open = DSI input is OpenClosed = DSI input is grounded', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog 2 shall compute the GLC2 contactor status, status validity and failure according to the following table:\n \nNB: for GLC2 contactors commands\nOPEN = Not Acknowledged\nCLOSE = Acknowledged\nTable 5: GLC2 contactor status, status validity and failure', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1765],[SPE-BITE-943]'}, u'SSCS_ACLog_1519': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'DSI NO / NC aux contact :Open = DSI input is OpenClosed = DSI input is grounded', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall determine the ATC2 contactors status, status validity and failure of contactors which are in its AC EPC according to the following table:\n \n \nTable 8: ATC2 contactors status, status validity and failure', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1833],[SPE-BITE-943],[SPE-BITE-944]'}, u'SSCS_ACLog_1515': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'ACLog2 shall apply open command for ELC when DSI_ELC_OPEN_REQ is grounded and aircraft is "On ground"', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'waiting for SES ACEPC DSI_ELC_OPEN_REQ declaration', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1516': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW, SW', 'body': u'ACLOG 2 shall send to ACLOG1 a low power GND/Open (ground active) discret output indicating the command state of ELC : "DSO_ELC_CMD"', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'waiting for SES ACEPC update', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1517': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW, SW', 'body': u'ACLOG 1 shall receive from ACLOG2 a discret intput GND/Open 1mA indicating the command state of ELC : "DSI_ELC_CMD"', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'waiting for SES ACEPC update', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1462': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'AClog shall interrupt a given configuration sequence and recalculate a new one (from opening sequence) for: \n Generator(s) availability,\n Tie AC lockout status,\n smoke isolation SW change,\n Ground Servicing.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2842]'}, u'SSCS_ACLog_1064': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall include I\xb2T protection for AC external power.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-459]'}, u'SSCS_ACLog_1267': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog1 and ACLog2 shall have its own EMH component for CAN interfaces.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2099]'}, u'CAN-IRD-796': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request DCLOG[1/2]_EDMU_SNPTC_COLOR_x every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1127': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If ASI_AC_BUSBAR_VOLT_PHA or ASI_AC_BUSBAR_VOLT_PHB or ASI_AC_BUSBAR_VOLT_PHC is higher than 90Vrms +/-5Vrms during at least 500ms +/-50ms, the ACLog shall\n- grounded the DSO low power "DSO_AC_BUS_AVAIL" \nAND\n- set to "Power is available" the corresponding "ACx_BUSBAR_AVAIL" through the CAN.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2987],[SES-ACEPC-937],[SES-ACEPC-940]'}, u'CAN-IRD-795': {'allocation': u'DC Log SSCS', 'body': u'DCLOG[1/2] shall send the state of synoptic element colors through DCLOG[1/2]_EDMU_SNPTC_COLOR_x messages', 'refer': u'[SIRD-EPGDS-1055],[SPE-BITE-1185],[SPE-BITE-1186]'}, u'CAN-IRD-792': {'allocation': u'AC Log SSCS', 'body': u'ACLOG[1/2] shall send the state of synoptic element colors through ACLOG[1/2]_EDMU_SNPTC_COLOR_x messages', 'refer': u'[SIRD-EPGDS-1050],[SPE-BITE-1184]'}, u'CAN-IRD-793': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request ACLOG[1/2]_EDMU_SNPTC_COLOR_x every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-659': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request LGCU_EDMU_NVM_DL_STATUS every 500 ms.', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-1059]'}, u'CAN-IRD-658': {'allocation': u'HS', 'body': u'LGCU shall send NVM data to EDMU through LGCU_EDMU_NVM_PACKET_[1;42] messages :\n\uf0a7\tPacket number : The number of the NVM packet transmitted.\n\uf0a7\tNVM packet : 6 bytes of NVM.', 'refer': u'[SIRD-EPGDS-652],[SPE-BITE-1054]'}, u'CAN-IRD-657': {'allocation': u'HS', 'body': u'LGCU shall send the following data through LGCU_EDMU_NVM_DL_STATUS message :\n\uf0a7\tNVM Download answer: LRU accepts or not the NVM download request from EDMU.\n\uf0a7\tThe size of the NVM : Size of the NVM of the LRU.\n\uf0a7\tThe number of NVM block packets : Number of packet needed to achieve NVM block download if request is accepted else 0.\n\uf0a7\tCRC NVM of block : CRC of NVM block if request is accepted else 0.', 'refer': u'[SIRD-EPGDS-652],[SPE-BITE-1054]'}, u'CAN-IRD-656': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data through EDMU_GCU_NVM_DL message:\n\uf0a7\tNVM Download request: NVM downloading operation is requested or not.\n\uf0a7\tNVM reset request: NVM reset operation is requested or not.\n\uf0a7\tNVM Block First byte: First byte of NVM block requested by EDMU.\n\uf0a7\tNVM Block size : Number of bytes of NVM requested by EDMU', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-653],[SPE-BITE-1054],[SPE-BITE-1057]'}, u'SSCS_ACLog_1044': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The CAN bus communication shall be compliant with the ARINC-825 standard.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-780]'}, u'CAN-IRD-654': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request EMERLOG_EDMU_NVM_DL_STATUS every 500 ms.', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-1059]'}, u'CAN-IRD-653': {'allocation': u'Emer Log SSCS', 'body': u'EMERLOG shall send NVM data to EDMU through EMERLOG_EDMU_NVM_PACKET_[1;42] messages :\n\uf0a7\tPacket number : The number of the NVM packet transmitted.\n\uf0a7\tNVM packet : 6 bytes of NVM.', 'refer': u'[SIRD-EPGDS-652],[SPE-BITE-1054]'}, u'CAN-IRD-652': {'allocation': u'Emer Log SSCS', 'body': u'EMERLOG shall send the following data through EMERLOG_EDMU_NVM_DL_STATUS message :\n\uf0a7\tNVM Download answer: LRU accepts or not the NVM download request from EDMU.\n\uf0a7\tThe size of the NVM : Size of the NVM of the LRU.\n\uf0a7\tThe number of NVM block packets : Number of packet needed to achieve NVM block download if request is accepted else 0.\n\uf0a7\tCRC NVM of block : CRC of NVM block if request is accepted else 0.', 'refer': u'[SIRD-EPGDS-652],[SPE-BITE-1054]'}, u'CAN-IRD-798': {'allocation': u'Emer Log SSCS', 'body': u'EMERLOG shall send the state of synoptic element colors through EMERLOG_EDMU_SNPTC_COLOR_x messages', 'refer': u'[SIRD-EPGDS-1905],[SPE-BITE-1187]'}, u'CAN-IRD-799': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request EMERLOG_EDMU_SNPTC_COLOR_x every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-150': {'allocation': u'SSPCM SSCS', 'body': u'SSPCM shall send the following information through SSPCM_EDMU_CONFCHECK_x messages for configuration check :\n\uf0a7\tthe configuration parameters of SSPCx of 1 SSPCM\n\uf0a7\tthe compatibility status of the configuration with opposite EDMU of SSPCx of 1 SSPCM', 'refer': u'[SIRD-EPGDS-169]'}, u'CAN-IRD-151': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'Configuration parameters of the SSPC shall be the following:\n\uf0a7\tSSPCs ratings: Digital value of the rating.\n\uf0a7\tSSPCs Backup default state: Set the default state of the SSPC: Open, closed or Last known state.\n\uf0a7\tPhase grouping configuration : SSPC is single phase or multiphase\n\uf0a7\tArcFault programming : ArcFault detection is not activated, detect and report or detect and trip\n\uf0a7\tType of SSPC : SSPC is AC or DC', 'additional': u'The SSPC OverHeat protection is disabled by configuration.', 'refer': u'[SIRD-EPGDS-508],[SIRD-EPGDS-678]'}, u'CAN-IRD-152': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to SSPCM through EDMU_SSPCM_CONFSET_25 message:\n\uf0a7\tEDMU SSPCM Software Interface Version: EDMU to SSPCM Software Interface Version associated to this version of specification shall be 0x03.', 'refer': u'[SPE-BITE-1414]'}, u'CAN-IRD-153': {'allocation': u'SSPCM SSCS', 'body': u'SSPCM shall send the following data to EDMU through EDMU_SSPCM_CONFCHECK_25 message:\n\uf0a7\tSSPCM EDMU Software Interface Version: SSPCM to EDMU Software Interface Version associated to this version of specification shall be 0x03.', 'refer': u'[SIRD-EPGDS-169],[SPE-BITE-1414]'}, u'CAN-IRD-154': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall be able to configure one SSPCM every 500 ms with EDMU_SSPCM_CONFSET_x.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-155': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send EDMU_SSPCM_CONFCHECK_x to one SSPCM every 500 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-157': {'allocation': u'SSPCM SSCS', 'body': u'SSCPM shall send the following data to EDMU through SSPCM_EDMU_SSPCINFO_x messages:\n\uf0a7\tTrip Cause of each SSPC : Trip cause is No trip cause, AFD, GFI or I2t\n\uf0a7\tType of detected ArcFault: No Arc Fault Detected, Parallel Arc Fault Detected or Series Arc Fault Detected', 'refer': u'[SIRD-EPGDS-253],[SIRD-EPGDS-1079]'}, u'CAN-IRD-158': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request SSPCM_EDMU_SSPCINFO_x data every 500 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_936': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Thanks to the DSI Ground/Open 1mA "DSI_OL_AC_EP" and "DSI_NOL_AC_EP", ACLog1 CBIT shall monitor AC EP Overload signals indication discrepancy failure from ACLOG2 according to the following table:\n \n \n \nTable 37: ACEP overload informations (status & failure)', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2620],[SPE-BITE-598]'}, u'SSCS_ACLog_651': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'1000V minimum could be a good choice', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'The ACLog CAN busses transceivers shall be isolated from the CAN controller (\xb5c) thanks to a galvanic isolation circuit with an insulation voltage compliant with lightening requirements', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'For lightning protection', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_491': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The development and management of DC Log software shall be according to RTCA/EUROCAE DO-178B/ED-12B and the guidelines provided by FAA ORDER 8110.49.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1588]'}, u'SSCS_ACLog_1062': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Each anti-paralleling detection states shall be communicated through the CAN busses', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2773]'}, u'SSCS_ACLog_768': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall meet the "Ground Survival Low Temperature" requirements defined in section 4 of RTCA/DO-160G Category A2.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-136]'}, u'CAN-IRD-299': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request EMERLOG_EDMU_ENG_DATA_x every 1 second.', 'derived': u'True', 'rationale': u'Provision', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-298': {'allocation': u'Emer Log SSCS', 'body': u'EMERLOG shall send its Engineering Data to EDMU through EMERLOG_EDMU_ENG_DATA_x messages.', 'derived': u'True', 'rationale': u'Provision'}, u'CAN-IRD-296': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request EMERLOG_EDMU_MODULE_STATUS and EMERLOG_EDMU_BITE_x  every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-295': {'allocation': u'Emer Log SSCS', 'body': u'EMERLOG shall send its BITE Monitoring data to EDMU through EMERLOG_EDMU_BITE_x messages.', 'refer': u'[SIRD-EPGDS-390],[SIRD-EPGDS-482],[SIRD-EPGDS-648],[SIRD-EPGDS-1058],[SIRD-EPGDS-1835],[SIRD-EPGDS-1837],[SIRD-EPGDS-1840],[SIRD-EPGDS-1857],[SIRD-EPGDS-1859],[SIRD-EPGDS-1869],[SIRD-EPGDS-1871],[SIRD-EPGDS-2030],[SIRD-EPGDS-2247],[SIRD-EPGDS-2248],[SIRD-EPGDS-2265],[SIRD-EPGDS-2835],[SIRD-EPGDS-6778],[SPE-BITE-120],[SPE-BITE-126],[SPE-BITE-708],[SPE-BITE-717],[SPE-BITE-719],[SPE-BITE-727],[SPE-BITE-729],[SPE-BITE-730],[SPE-BITE-807],[SPE-BITE-812],[SPE-BITE-814],[SPE-BITE-826],[SPE-BITE-828],[SPE-BITE-835],[SPE-BITE-844],[SPE-BITE-922],[SPE-BITE-926],[SPE-BITE-955],[SPE-BITE-974],[SPE-BITE-1028],[SPE-BITE-1047],[SPE-BITE-1082],[SPE-BITE-1113],[SPE-BITE-1504],[SPE-BITE-1509],[SPE-BITE-1513]'}, u'CAN-IRD-294': {'allocation': u'Emer Log SSCS', 'body': u'EMERLOG shall send the following data to EDMU through EMERLOG_EDMU_MODULE_STATUS message:\n\uf0a7\tIBIT acceptance: LRU is in condition for IBIT test or not.\n\uf0a7\tits Module mode\n\uf0a7\tits Flight/Ground status : LRU is in Flight or on Ground\n\uf0a7\tThe validity of the Flight/Ground status\n\uf0a7\tPower supply voltage presence : voltage is present or not\n\uf0a7\tNVM download acceptance state', 'refer': u'[SIRD-EPGDS-387],[SIRD-EPGDS-647],[SIRD-EPGDS-1058],[SPE-BITE-182],[SPE-BITE-202]'}, u'CAN-IRD-293': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to EMERLOG through EDMU_XLOG_BITE message:\n\uf0a7\tIBIT test request: IBIT test is requested or not.', 'refer': u'[SIRD-EPGDS-387],[SIRD-EPGDS-647],[SPE-BITE-182],[SPE-BITE-202]'}, u'CAN-IRD-291': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request EMERLOG_EDMU_IDENT_x every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-290': {'allocation': u'Emer Log SSCS', 'body': u'EMERLOG shall send the following data to EDMU through EMERLOG_EDMU_IDENT_x messages:\n\uf0a7\tSoftware Interface Version: EMERLOG to EDMU Software Interface Version associated to this version of specification shall be 0x01.\n\uf0a7\tthe CRC32 of its software (A665 CRC32 calculation shall be used)\n\uf0a7\tits Module type : Module type is EMERLOG\n\uf0a7\tits LRU Part Number\n\uf0a7\tits SW Part Number\n\uf0a7\tit Serial Number', 'refer': u'[SIRD-EPGDS-1058],[SPE-BITE-1414]'}, u'CAN-IRD-488': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'CAN IDs of EDMU to SPDA6 frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_869': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'When the AC Bus 2 overvoltage protection is activated, ACLog2 shall open ACMP1B and ACMP3A RCCBs', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2460]'}, u'CAN-IRD-846': {'body': u'The following CAN messages sent by DCLOG1 and DCLOG2 shall be redundant :\n- DCLOG1_EDMU_NETWORK_STATUS_1 and DCLOG2_EDMU_NETWORK_STATUS_1 are redundant\n- DCLOG1_EDMU_CNTOR_STATUS and DCLOG2_EDMU_CNTOR_STATUS are redundant', 'additional': u'EDMU performs a source selection between the two producers', 'derived': u'True', 'allocation': u'DC Log SSCS,EDMU SSCS', 'rationale': u'Availability of the input signals used for by EDMU for shedding', 'refer': u'[SIRD-EPGDS-1020]'}, u'SSCS_ACLog_1412': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog shall suspend its communications on CAN busses when Preliminary Tests are failed.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-927]'}, u'CAN-IRD-844': {'allocation': u'Emer Log SSCS', 'body': u'EMERLOG shall send the following data to EDMU through EMERLOG_EDMU_NETWORK_STATUS_2 message:\n\uf0a7\tEMER_SHED_1: shed status of the left WTC', 'refer': u'[SIRD-EPGDS-1896],[SIRD-EPGDS-2833]'}, u'CAN-IRD-845': {'body': u'The following CAN messages sent by ACLOG1 and ACLOG2 shall be redundant :\n- ACLOG1_EDMU_NETWORK_STATUS_1 and ACLOG2_EDMU_NETWORK_STATUS_1 are redundant\n- ACLOG1_EDMU_CNTOR_STATUS and ACLOG2_EDMU_CNTOR_STATUS are redundant', 'additional': u'EDMU performs a source selection between the two producers', 'derived': u'True', 'allocation': u'AC Log SSCS,EDMU SSCS', 'rationale': u'Availability of the input signals used for by EDMU for shedding  ', 'refer': u'[SIRD-EPGDS-180]'}, u'SSCS_ACLog_862': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'The reference voltage will be ASI_RCCB1_CURRENT_RET', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog1 shall read, through current transformers, the neutral current of ACMP3B thanks to the ASI "ASI_RCCB1_CURRENT_GFI"', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2453],[SES-ACEPC-845]'}, u'CAN-IRD-483': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'CAN IDs of EDMU to SPDA1 frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-848': {'body': u'NVM download shall be done in 5 minutes maximum.', 'additional': u'First byte of first packet = First byte of the NVM, 2nd byte of first packet = 2nd byte of the NVM....', 'derived': u'True', 'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS', 'rationale': u'To avoid transfering the NVM in erratic order.', 'refer': u'[SIRD-EPGDS-3353]'}, u'CAN-IRD-486': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'CAN IDs of EDMU to SPDA4 frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-487': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'CAN IDs of EDMU to SPDA5 frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-484': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'CAN IDs of EDMU to SPDA2 frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-485': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'CAN IDs of EDMU to SPDA3 frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_1550': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'The ACLog shall check than HW Part Number (HW_PN) stored in NVM is compatible with SW Part Number (SW_PN), following the table bellow :\n  \n ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'hardware / Software compatibility need to be define at PCB level', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1100': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u"The microcontroller's power supplies voltages shall be monitored by a supervisor", 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To ensure a sufficient power supply voltage when the microcontroller start up', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_941': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'ACLOG 1 : ACMP 3BACLOG 2 : ACMP 1B, ACMP 3A', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of RCCB Auxiliary Status discrepancy failure, the ACLog shall declare the failure to the EDMU using CAN busses.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-618]'}, u'SSCS_ACLog_940': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall monitor RCCB auxiliary status discrepancy failure during CBIT', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-617],[SPE-BITE-1065]'}, u'SSCS_ACLog_943': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACMP I\xb2t protection status shall be communicated through the CAN busses.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SPE-BITE-879],[SPE-BITE-1000]'}, u'SSCS_ACLog_942': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall monitor GFI protections activation on each controlled RCCB during CBIT ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-624]'}, u'SSCS_ACLog_1107': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'To inform the other ACLog that this ACLog has a problem', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'ACLog shall open "DSO_ACLOG_VALID" when a failure is detected \n- during Preliminary tests\nOR\n- during PBIT (internal failure)\nOR\n- during IBIT (internal failure)\nOR\n- if multiplexers, used to compete I/Os of microcontroler, are failed during CBIT\notherwise "DSO_ACLOG_VALID" is grounded.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To inform the other ACLog that this ACLog has a problem', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_982': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog GND/Open DSI switching thresholds shall correspond to : \n\tan input voltage between - 4.0 V and + 4.5 V for a ground state (+ 4.5 V = Vth-down Minimum), \n\tan input voltage between + 10.5 V and + 50.0 V for an open state (+ 10.5 V = Vth-up Maximum).\n \n \nFigure 33: Ground/Open DSI Switching thresholds', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-729]'}, u'SSCS_ACLog_939': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'ACLOG 1 : ACMP 3BACLOG 2 : ACMP 1B, ACMP 3A', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall monitor RCCB command failure (RCCB Failed Open and RCCB Failed Closed) during CBIT', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-755],[SPE-BITE-756]'}, u'SSCS_ACLog_1415': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall confirm any failure detected during Preliminary Test by performing the test sequence (failed) a second time.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1427]'}, u'SSCS_ACLog_1104': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_901': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall declare the failure to the EDMU using CAN busses, if one of the PBIT test is detected as failed and the failure is not internal to the board.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-120]'}, u'CAN-IRD-367': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS', 'body': u'The messages between EDMU and XLOG shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_1041': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of TCB matrix failure, the ACLog shall declare the failure to the EDMU using CAN busses after a confirmation Time of 5 seconds +/- 0,5s.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1086],[SPE-BITE-1515]'}, u'CAN-IRD-366': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS', 'body': u'The messages between EDMU and XLOG shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_1067': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1451': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall monitor Contactor Lockout Discrepancy according to the following table : \n \n \nFigure 38:  Contactor Lockout Discrepancy', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1481]'}, u'SSCS_ACLog_1410': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall send the ATC2 "Aux" failure through the CAN busses', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-563],[SPE-BITE-973]'}, u'SSCS_ACLog_776': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall meet the Humidity requirements defined in section 6 of RTCA/DO-160G Category A.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-144]'}, u'SSCS_ACLog_707': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog CAN controller (\xb5C) shall be fully compliant with ISO-11898-1, CAN 2.0B, 29 bits extended identifier standard.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_900': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog shall check its Analog Signal Inputs during PBIT which permit to verify at least two useful points of measure (min, middle and max value) of the ASI.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-117],[SPE-BITE-187],[SPE-BITE-264],[SPE-BITE-265],[SPE-BITE-266],[SPE-BITE-267]'}, u'SSCS_ACLog_1413': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1061': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The anti-paralleling function shall be hardware based, for detection and for the prohibition of contactor closure.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2578]'}, u'SSCS_ACLog_1139': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-205': {'allocation': u'AC Log SSCS', 'body': u'ACLOG[1/2] shall send the following data to EDMU through ACLOG[1/2]_EDMU_ANALOG_x message:\n\uf0a7\tAnalog measurement of AC: digital value of the measured current or voltage.\n\uf0a7\tValidity of the analog measurement of AC: the signal is valid or not.', 'refer': u'[SIRD-EPGDS-1050]'}, u'CAN-IRD-207': {'allocation': u'AC Log SSCS', 'body': u'AC analog measurements shall include the following value for ACLOG2:\n\uf0a7\tEXT_AC_PHA_VOLTAGE\n\uf0a7\tEXT_AC_PHB_VOLTAGE\n\uf0a7\tEXT_AC_PHC_VOLTAGE\n\uf0a7\tEXT_AC_PHA_POWER\n\uf0a7\tEXT_AC_PHB_POWER\n\uf0a7\tEXT_AC_PHC_POWER\n\uf0a7\tEXT_AC_FREQUENCY\n\uf0a7\tEXT_AC_LOAD', 'refer': u'[SIRD-EPGDS-1050]'}, u'CAN-IRD-201': {'allocation': u'AC Log SSCS', 'body': u'ACLOG[1/2] shall send the following data to EDMU through ACLOG[1/2]_EDMU_CB_STATUS_x messages:\n\uf0a7\tState of AC CB: CB is open or closed.\n\uf0a7\tValidity of the state of AC CB: the state signal is valid or not.', 'additional': u'Indicate the CBx master contact is \u201cclose\u201d or \u201copen\u201d.', 'refer': u'[SIRD-EPGDS-253],[SIRD-EPGDS-502],[SIRD-EPGDS-1008]'}, u'CAN-IRD-578': {'allocation': u'HS', 'body': u'RGCU shall send the following data to EDMU through RGCU_EDMU_MODULE_STATUS message:\n\uf0a7\tIBIT acceptance: LRU is in condition for IBIT test or not.\n\uf0a7\tTrip Reset acceptance: LRU is in condition for Reset of trip or not.\n\uf0a7\tUnlatch failure acceptance: LRU is in condition for unlatching failures or not.\n\uf0a7\tits Flight/Ground status : LRU is in Flight or on Ground\n\uf0a7\tThe validity of the Flight/Ground status\n\uf0a7\tNVM download acceptance state', 'refer': u'[SIRD-EPGDS-2533],[SIRD-EPGDS-2975],[SPE-BITE-202]'}, u'CAN-IRD-579': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request RGCU_EDMU_BITE_x and RGCU_EDMU_MODULE_STATUS every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-576': {'allocation': u'HS', 'body': u'RGCU shall send the following data to EDMU through RGCU_EDMU_BITE_5 messages :\n- RIGHT_GCU RVFG Over Frequency\n- RIGHT_GCU RVFG Under Frequency\n- RIGHT_GCU RVFG Overvoltage\n- RIGHT_GCU RVFG Undervoltage\n- RIGHT_GCU RVFG Oil Temperature High\n- RIGHT_GCU RVFG Phase Sequence Failure\n- RIGHT_GCU RVFG Over Current Under Speed Failure\n- RIGHT_GCU RVFG Deta Current Failure\n- RIGHT_GCU RVFG Rotary Diode Short Circuit\n- RIGHT_GCU RVFG Phase Open\n- Validity attached to these data (RLDP_OMS)\n- BITE_SPARE_2 data', 'refer': u'[SIRD-EPGDS-2975],[SPE-BITE-120],[SPE-BITE-126]'}, u'CAN-IRD-577': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to RGCU through EDMU_GCU_BITE message:\n\uf0a7\tIBIT test request: IBIT test is requested or not.\n\uf0a7\tTrip Reset request: Reset of trip is requested or not.\n\uf0a7\tUnlatch failure request: Unlatch of failures is requested or not.\n\uf0a7\tNVM download request: NVM download is resquested or not', 'refer': u'[SPE-BITE-202]'}, u'CAN-IRD-574': {'allocation': u'HS', 'body': u'RGCU shall send the following data to EDMU through RGCU_EDMU_BITE_3 messages :\n- RIGHT_GCU ROLS Circuit or Wire failed (GEN (CBITE))\n- RIGHT_GCU Bus Ready Acknowledgement From Distribution Circuit or Wire failed (GEN (CBITE))\n- RIGHT_GCU Not Bus Ready Acknowledgement From Distribution Circuit or Wire failed (GEN (CBITE))\n- RIGHT_GCU RVFG LOP sensor or Wire  Failure (GEN (CBITE))\n- RIGHT_GCU RVFG Delta Oil Press Sensor or Wire failure (GEN (CBITE))\n- RIGHT_GCU Right Engine Run Switch Off Failed (GEN (CBITE))\n- RIGHT_GCU OWN BUS PHA Voltage Sense  Circuit or Wire failure High (GEN (CBITE))\n- RIGHT_GCU OWN BUS PHB Voltage Sense  Circuit or Wire failure High (GEN (CBITE))\n- RIGHT_GCU OWN BUS PHC Voltage Sense  Circuit or Wire failure High (GEN (CBITE))\n- RIGHT_GCU OWN BUS PHA Voltage Sense  Circuit or Wire failure Low (GEN (CBITE))\n- RIGHT_GCU OWN BUS PHB Voltage Sense  Circuit or Wire failure Low (GEN (CBITE))\n- RIGHT_GCU OWN BUS PHC Voltage Sense  Circuit or Wire failure Low (GEN (CBITE))\n- Validity attached to these data (GEN (CBITE))\n- RIGHT_GCU RVFG PHA Feeder DP Failure (GEN (PRIT))\n- RIGHT_GCU RVFG PHB Feeder DP  Failure (GEN (PRIT))\n- RIGHT_GCU RVFG PHC Feeder Dp Failure (GEN (PRIT))\n- RIGHT_GCU RVFG Shaft Overspeed (GEN (PRIT))\n- RIGHT GCU RVFG  SUSP Contactor (GEN (PRIT))\n- Validity attached to these data (GEN (PRIT))', 'refer': u'[SIRD-EPGDS-1641],[SIRD-EPGDS-2975],[SPE-BITE-120],[SPE-BITE-126]'}, u'CAN-IRD-575': {'allocation': u'HS', 'body': u'RGCU shall send the following data to EDMU through RGCU_EDMU_BITE_4 messages :\n- RIGHT_GCU or Pin Prog Wire Failure (LRU (CBITE))\n- RGCU or RVFG Temp Bulb Failure (LRU (CBITE))\n- Validity attached to these data (LRU (CBITE))\n- RIGHT_GCU RVFG Failure (LRU (PRIT))\n- RIGHT_GCU Open Neutral Condition Failure (LRU (PRIT))\n- RIGHT_GCU internal Failure (LRU (PRIT))\n- RIGHT_GCU POR Sense Wire Failure (LRU (PRIT))\n- RIGHT_GCU POR PHA Sense Wire Failure (LRU (PRIT))\n- RIGHT_GCU POR PHB Sense Wire Failure (LRU (PRIT))\n- RIGHT_GCU POR PHC Sense Wire Failure (LRU (PRIT))\n- Validity attached to these data (LRU (PRIT))', 'refer': u'[SIRD-EPGDS-2975],[SPE-BITE-120],[SPE-BITE-126]'}, u'CAN-IRD-208': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request ACLOG[1/2]_EDMU_ANALOG_x every 250 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-573': {'allocation': u'HS', 'body': u'RGCU shall send the following data to EDMU through RGCU_EDMU_BITE_2 messages : \n- RIGHT_GCU ATC2 Wire Coail Failure (CONTACTOR (CBITE))\n- RIGHT_GCU_GLC2 Aux or Wire Failure (CONTACTOR (CBITE))\n- Validity attached to these data (CONTACTOR (CBITE))\n- RIGHT_GCU GLC2 or Wire Failure (CONTACTOR (PRIT))\n- RIGHT_GCU GLC2 Failed to Open - GLC2 aux or sense wire (CONTACTOR (PRIT))\n- RIGHT_GCU GLC2 Fail to Close Driver OC (CONTACTOR (PRIT))\n- RIGHT_GCU GLC2 Fail to Close Wire Open (CONTACTOR (PRIT))\n- Validity attached to these data (CONTACTOR (PRIT))', 'refer': u'[SIRD-EPGDS-2975],[SPE-BITE-120],[SPE-BITE-126]'}, u'CAN-IRD-570': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request RGCU_EDMU_OMS_x every 500 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1414': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'transparency capacitors need to be charged trough a resistor to limit inrush--> delay', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'The ACLog transparency time function shall be fully operational 2s max after power up', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'transparency capacitors need to be charged trough a resistor to limit inrush--> delay', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-778': {'allocation': u'Emer Log SSCS', 'body': u'EMERLOG shall send the following data to EDMU through EMERLOG_EDMU_FUSE_STATUS_x messages:\n\uf0a7\tState of EMER Fuse: Fuse is open or closed.\n\uf0a7\tValidity of the state of EMER Fuse: the state signal is valid or not.', 'refer': u'[SIRD-EPGDS-253],[SIRD-EPGDS-3037]'}, u'CAN-IRD-476': {'allocation': u'DC Log SSCS', 'body': u'DC busbars shall include the following bubars for DCLOG1:\n\uf0a7\tDC1_BUSBAR\n\uf0a7\tDC2_BUSBAR\n\uf0a7\tDC2_ESS_BUSBAR\n\uf0a7\tEMER1_BUSBAR\n\uf0a7\tMAIN_BATT_BUSBAR', 'refer': u'[SIRD-EPGDS-1020],[SIRD-EPGDS-1055],[SIRD-EPGDS-1896],[SIRD-EPGDS-6773]'}, u'SSCS_ACLog_1038': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall monitor TCB matrix failure during CBIT, at each TCB status monitoring', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1085]'}, u'SSCS_ACLog_547': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'To know if the aircraft is in flight or in ground, the ACLog shall implement two complementary DSI ground/Open 1mA:\n- DSI_WOW_ON_GROUND (Open: Flight, Ground: Ground)\n- DSI_WOW_IN_FLIGHT (Open: Ground, Ground: Flight)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-493],[SES-ACEPC-494]'}, u'SSCS_ACLog_1496': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The following data from EDMU1 shall be not redundant with the data sent by EDMU2:\n NVM control commands\n IBITE control commands', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-3149]'}, u'CAN-IRD-429': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request ACLOG[1/2]_EDMU_ALARM_STATUS every 50 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-772': {'allocation': u'AC Log SSCS', 'body': u'ACLOG[1/2] shall send the following data to EDMU through ACLOG[1/2]_EDMU_FUSE_STATUS_x messages:\n\uf0a7\tState of AC Fuse: Fuse is open or closed.\n\uf0a7\tValidity of the state of AC Fuse: the state signal is valid or not.', 'refer': u'[SIRD-EPGDS-253],[SIRD-EPGDS-3037]'}, u'CAN-IRD-773': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request ACLOG[1/2]_EDMU_FUSE_STATUS_x every 250 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-775': {'allocation': u'DC Log SSCS', 'body': u'DCLOG[1/2] shall send the following data to EDMU through DCLOG[1/2]_EDMU_FUSE_STATUS_x messages:\n\uf0a7\tState of DC Fuse: Fuse is open or closed.\n\uf0a7\tValidity of the state of DC Fuse: the state signal is valid or not.', 'refer': u'[SIRD-EPGDS-253],[SIRD-EPGDS-3037]'}, u'CAN-IRD-776': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request DCLOG[1/2]_EDMU_FUSE_STATUS_x every 250 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1137': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'AC1_BUSBAR_AVAIL=1 --> present', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog1 shall compute "AC_BUS1_FAIL" CAS message according to the following logic : \nTRUE\nAC1_BUSBAR_AVAIL=0\nAND\n[(DSI_PR_RGEN=Grounded and DSI_NPR_RGEN=Open)\nOR\n(DSI_PR_LGEN=Grounded and DSI_NPR_LGEN=Open) \nOR\n(DSI_PR_AC_EP=Grounded and DSI_NPR_AC_EP=Open) \nOR\n(DSI_PR_APU=Grounded and DSI_NPR_APU=Open)]\nFALSE otherwise', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1199]'}, u'SSCS_ACLog_1068': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Note: Each RCCB command has an associated validity bit. Therefore it is possible for one RCCB on the AClog to have invalid data while the others do not. It is also possible for some of the RCCB on the Aclog to have the Left bus active and some of the RCCB to have the Right bus as the active bus. (This can happen if the one EDMU has missing data so it sets its output commands as invalid. This effectively switches the control of this RCCB to the other EDMU without causing all of the RCCBs to be switched to the other EDMU.)tolerance added', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If both CAN RCCB "CLOSED" commands are invalid for 1s +/-100ms, the RCCB shall be set as described below until one of the busses provides valid RCCB command:\n- CLOSE ACMP3A and 3B and OPEN ACMP1B, if the aircraft is in flight\n- OPEN ACMP3A, 3B and 1B if the aircraft is on ground', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2166],[SIRD-EPGDS-2848],[SIRD-EPGDS-2970]'}, u'SSCS_ACLog_659': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1032': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'ASI input signal shall be acquired in differential mode', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-762]'}, u'SSCS_ACLog_1345': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall send following CAS messages to the EDMU using CAN busses : \nACLOG2_FAIL\nAC_BUS2_FAIL\nACLOG2_DP_ACT\nATC2_FAILED_CLOSED_CAS\nATC2_FAILED_OPEN_CAS\nELC_FAILED_CLOSED_CAS\nELC_FAILED_OPEN_CAS', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1266]'}, u'SSCS_ACLog_1344': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall compute the "EXT_AC_Online" message according the following logic : \nTRUE\nExternal power is available\nAND\nELC contactor is CLOSED\nFALSE otherwise ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1340]'}, u'SSCS_ACLog_1341': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall compute the "ELC_FAILED_CLOSED_CAS" CAS message according the following logic : \nTRUE\nELC is declared failed Closed\nFALSE otherwise', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1212]'}, u'SSCS_ACLog_1138': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall compute "AC_BUS2_FAIL" CAS message according to the following logic : \nTRUE\nAC2_BUSBAR_AVAIL=0\nAND\n[(DSI_PR_RGEN=Grounded and DSI_NPR_RGEN=Open)\nOR\n(DSI_PR_LGEN=Grounded and DSI_NPR_LGEN=Open) \nOR\n(AC External Power is "Power Ready") \nOR\n(DSI_PR_APU=Grounded and DSI_NPR_APU=Open)]\nFALSE otherwise', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1208]'}, u'SSCS_ACLog_1343': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall compute the "EXT_AC_PWR_AVAIL" message according the following logic : \nTRUE\nExternal power AC is available\nFALSE otherwise ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1339]'}, u'SSCS_ACLog_683': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'To determine LxCy (line x, column y) TCB status, the ACLog shall only set DSO_AC_CB_Cy to ground and read the LxCy TCB status on DSI_AC_CB_Lx', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To read CB status', 'issue': u'1', 'refer': 'EMPTY'}, u'CAN-IRD-338': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS', 'body': u'The max time between the last frame of command sent by the EDMU and the first frame of the answer transmitted by the ACLOG (resp. DCLOG, resp. EMERLOG) shall be less than 3 ms.', 'refer': u'[SIRD-EPGDS-114]'}, u'CAN-IRD-339': {'allocation': u'HS', 'body': u'The max time between the last frame of command sent by the EDMU and the first frame of the answer transmitted by the GCU shall be less than 6 ms.', 'refer': u'[SIRD-EPGDS-114]'}, u'SSCS_ACLog_736': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog2 shall command ATC2 through DSO_CDE_AC_CTC2:\n- 28V to closed ATC2 contactor\n- Open to open ATC2 contactor', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-444],[SES-ACEPC-446]'}, u'SSCS_ACLog_713': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog1 shall read the ACMPx RCCB auxiliaries contacts thanks to the following DSI Ground/Open 5mA:\n- ACMP3B: DSI_RCCB1_NO (Ground: closed, Open: Open) and DSI_RCCB1_NC (Ground: Open, Open: closed)\n- ACMP3A: DSI_RCCB1_OPP_NO (Ground: closed, Open: Open) and DSI_RCCB1_OPP_NC (Ground: Open, Open: closed)\n- ACMP1B: DSI_RCCB2_OPP_NO (Ground: closed, Open: Open) and DSI_RCCB2_OPP_NC (Ground: Open, Open: closed)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-423],[SES-ACEPC-424],[SES-ACEPC-425]'}, u'SSCS_ACLog_1262': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall clear protections status, except for ACMP, stored in the NVM after cold start, aircraft on ground, or Initiated Test Command.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1756]'}, u'SSCS_ACLog_1263': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Each monitoring datas by ACLog shall be send to EDMUs through CAN busses', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1896]'}, u'SSCS_ACLog_1260': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'During the Initiated BIT, the ACLog shall inhibit any external NVM access request.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1103]'}, u'SSCS_ACLog_1261': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'the ACLog shall employ circular buffers and any required NVM corruption prevention circuits and routines.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1743]'}, u'CAN-IRD-330': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall initiate each time slot.', 'refer': u'[SIRD-EPGDS-115]'}, u'CAN-IRD-331': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS,SSPCM SSCS', 'body': u'Each time slot shall be initiated by setting \u201cSlot start\u201d bit to 1.', 'refer': u'[SIRD-EPGDS-115]'}, u'CAN-IRD-332': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS', 'body': u'Data requested shall be encoded in the frame identifier sent by EDMU.', 'refer': u'[SIRD-EPGDS-113],[SIRD-EPGDS-115]'}, u'CAN-IRD-333': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS', 'body': u'As soon as a remote LRU receive a request command on one CAN bus it shall answer with the requested data on this CAN Bus.', 'additional': u'The request command received on the bus CAN A are not synchronous with the ones received on bus CAN B.', 'refer': u'[SIRD-EPGDS-116]'}, u'CAN-IRD-334': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS', 'body': u'The subscriber shall stay silent if no communication is requested by EDMU.', 'refer': u'[SIRD-EPGDS-117]'}, u'CAN-IRD-335': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,SSPCM SSCS', 'body': u'The subscriber shall transmit all requested frames during the dedicated time slot.', 'refer': u'[SIRD-EPGDS-118]'}, u'CAN-IRD-336': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,SSPCM SSCS', 'body': u'If one message can\u2019t be sent in the dedicated time slot, it shall be removed from the CAN queue.', 'refer': u'[SIRD-EPGDS-118]'}, u'CAN-IRD-337': {'allocation': u'SSPCM SSCS', 'body': u'The max time between the last frame of command sent by the EDMU and the first frame of the answer transmitted by the SSPCM shall be less than 0.3 ms.', 'refer': u'[SIRD-EPGDS-114]'}, u'SSCS_ACLog_549': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_548': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall compute the aircraft position status (IS_IN_FLIGHT) and its validity (FLIGHT_STATE_VALID) thanks to the following truth table:\n   \nTable 2: Weight on wheel', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'IDEM'}, u'SSCS_ACLog_1432': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'All ACLog components shall be protected from condensation induced by external temperature change from cold to warm.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-1014]'}, u'CAN-IRD-508': {'allocation': u'Emer Log SSCS,EDMU SSCS', 'body': u'CAN IDs of EMERLOG to EDMU frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_955': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Upon EDMU initiated BITE request, the ACLog shall perform a PBIT sequence and monitor the same failure than PBIT during intiated bite, except for DSO contactors behavior.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-176],[SPE-BITE-186],[SPE-BITE-859]'}, u'SSCS_ACLog_716': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_905': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall perform CBIT after the following events : \n- PBIT,\n- warm start,\n- Cold start, on flight.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-122]'}, u'SSCS_ACLog_541': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-502': {'allocation': u'DC Log SSCS,EDMU SSCS', 'body': u'CAN IDs of DCLOG1 to EDMU frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-501': {'allocation': u'AC Log SSCS,EDMU SSCS', 'body': u'CAN IDs of ACLOG1 to EDMU frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_717': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Each ACLog shall determine its own ACMPx RCCB status, status validity and failure by following the here below table:\n   \nTable 13: ACMPx RCCB status, status validity and failure', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1065],[SPE-BITE-1066]'}, u'CAN-IRD-507': {'allocation': u'DC Log SSCS,EDMU SSCS', 'body': u'CAN IDs of DCLOG2 to EDMU frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-506': {'allocation': u'AC Log SSCS,EDMU SSCS', 'body': u'CAN IDs of ACLOG2 to EDMU frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'CAN-IRD-505': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS', 'body': u'CAN IDs of EDMU to XLOG2 frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_686': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall communicate each TCB status through CAN busses', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-1008]'}, u'CAN-IRD-217': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request ACLOG[1/2]_EDMU_MODULE_STATUS and ACLOG[1/2]_EDMU_BITE_x  every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1031': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'ASI 28V input impedance shall be higher than 99 k\u03a9 whether the ACLog is supplied or not.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-759]'}, u'SSCS_ACLog_682': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'timing of 125ms is added because the refreshing time in CAN IRD is 250ms (cf. req SSCS 695)', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall monitor every 125ms +/-10ms the TCB status by considering the following wiring matrix:\n   \nFigure 28: CB Matrix', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-777]'}, u'SSCS_ACLog_1466': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Label (1)waiting for SIRD update', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall switch from AC external power NOT CONNECTED to AC external power CONNECTED when: PIN E voltage PRESENCE is detected', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-6824]'}, u'SSCS_ACLog_680': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall provide 5 DSO Ground/Open medium power to monitor TCB status (thanks to their auxiliaries contacts):\n- DSO_AC_CB_C1\n- DSO_AC_CB_C2\n- DSO_AC_CB_C3\n- DSO_AC_CB_C4\n- DSO_AC_CB_C5', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SES-ACEPC-333],[SES-ACEPC-776]'}, u'SSCS_ACLog_681': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall provide a DSI Ground/Open 5mA and a DSO Ground/Open medium power to check the matrix wiring:\n- DSI_AC_CB_TEST\n- DSO_AC_CB_TEST', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SES-ACEPC-497]'}, u'SSCS_ACLog_844': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'DSO_CDE_AC_CTC1 and DSO_CDE_AC_CTC2 shall be commanded by the microcontroller through the anti-paralleling function', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To specify the HW function wiring', 'issue': u'1', 'refer': 'EMPTY'}, u'SSCS_ACLog_688': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_689': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog  shall be designed as a line replaceable module (LRM)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-201]'}, u'SSCS_ACLog_1002': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'Low power DSO Output impedance shall be higher than 1 M\u03a9 when output is open or when the equipment is not powered. ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-746],[SES-ACEPC-747],[SES-ACEPC-748]'}, u'SSCS_ACLog_449': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The AC external protection states shall be communicated through the CAN busses.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-462]'}, u'SSCS_ACLog_763': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall meet the "Operating Low Temperature" requirements defined in section 4 of RTCA/DO-160G Category A2.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-132]'}, u'SSCS_ACLog_1001': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'Low power DSO shall be able to drive 20 DSI at 1mA.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-745]'}, u'CAN-IRD-118': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'One CAN bus named EDMU-2-CAN-SPDA-2 shall connect the following LRUs:\n\uf0a7\tEDMU2\n\uf0a7\t8 x SSPCM of SPDA-2 on control Bus A', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-312]'}, u'CAN-IRD-119': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'One CAN bus named EDMU-1-CAN-SPDA-3 shall connect the following LRUs:\n\uf0a7\tEDMU1\n\uf0a7\t8 x SSPCM of SPDA-3 on control Bus A', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-311]'}, u'SSCS_ACLog_767': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall meet the "Ground Survival High Temperature" requirements defined in section 4 of RTCA/DO-160G Category A2.\nTemperature Elevation of 10\xb0C is  applied to the ambient temperature.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-137],[SES-ACEPC-291]'}, u'SSCS_ACLog_1469': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Label (5)', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall switch from AC External power NOT POWER READY to AC External power POWER READY when:\n- AC external power is CONNECTED\nAND\n- There is no AC EP 115V Protection\nAND\n- There is no PINE Over Voltage Protection\nAND\n- The aircraft position is "On Ground"', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1419],[SIRD-EPGDS-6827]'}, u'CAN-IRD-114': {'allocation': u'EDMU SSCS', 'body': u'One CAN bus named EDMU-2-CAN-RGCU shall connect the following LRUs:\n\uf0a7\tEDMU2\n\uf0a7\tRGCU on control Bus A', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-110],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-312]'}, u'CAN-IRD-115': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'One CAN bus named EDMU-1-CAN-SPDA-1 shall connect the following LRUs:\n\uf0a7\tEDMU1\n\uf0a7\t8 x SSPCM of SPDA-1 on control Bus A', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-311]'}, u'CAN-IRD-116': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'One CAN bus named EDMU-2-CAN-SPDA-1 shall connect the following LRUs:\n\uf0a7\tEDMU2\n\uf0a7\t8 x SSPCM of SPDA-1 on control Bus B', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-311]'}, u'CAN-IRD-117': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'One CAN bus named EDMU-1-CAN-SPDA-2 shall connect the following LRUs:\n\uf0a7\tEDMU1\n\uf0a7\t8 x SSPCM of SPDA-2 on control Bus B', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-312]'}, u'CAN-IRD-110': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS', 'body': u'One CAN bus named EDMU-2-CAN-XLOG-2 shall connect the following LRUs:\n\uf0a7\tEDMU2\n\uf0a7\tACLOG2 on control Bus A\n\uf0a7\tDCLOG2 on control Bus A\n\uf0a7\tEMERLOG on control Bus A', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-110],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-312]'}, u'CAN-IRD-111': {'allocation': u'EDMU SSCS', 'body': u'One CAN bus named EDMU-1-CAN-LGCU shall connect the following LRUs:\n\uf0a7\tEDMU1\n\uf0a7\tLGCU on control Bus A\n\uf0a7\tAGCU on control Bus A', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-110],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-311]'}, u'CAN-IRD-112': {'allocation': u'EDMU SSCS', 'body': u'One CAN bus named EDMU-2-CAN-LGCU shall connect the following LRUs:\n\uf0a7\tEDMU2\n\uf0a7\tLGCU on control Bus B\n\uf0a7\tAGCU on control Bus B', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-110],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-311]'}, u'CAN-IRD-113': {'allocation': u'EDMU SSCS', 'body': u'One CAN bus named EDMU-1-CAN-RGCU shall connect the following LRUs:\n\uf0a7\tEDMU1\n\uf0a7\tRGCU on control Bus B', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-110],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-312]'}, u'SSCS_ACLog_1030': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'ASI 28V input shall be filtered by low-pass filters with a cut-off frequency lower than 10kHz +/-30%', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-758]'}, u'SSCS_ACLog_761': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'All 115/200 Vac powered components shall be able to withstand without damage a voltage of 1500 V (60Hz) between individually isolated terminals and between all terminals and case for 1 minute, without any leakage current in excess of 1.0 mA or evidence of damage due to arcing, flashover or insulation breakdown.\nRemark: Any filter component or transient protection device not designed to withstand such a test can be disconnected before carrying out this test.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-109]'}, u'SSCS_ACLog_1003': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'When grounded, low power DSO Ground/Open circuit type shall have an output voltage <1.5V at 20mA', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-747]'}, u'SSCS_ACLog_1040': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'The ACLog shall declare a TCB matrix failure if the following table is not respected\n   \nTable 38: TCB matrix', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'Matrix Bite strategy', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_919': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall monitor Contactor Failed Open failure for all driven contactors during CBIT', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-749]'}, u'SSCS_ACLog_1006': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'Medium power DSO shall be able to drive 200mA +/-10%', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-857]'}, u'SSCS_ACLog_735': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog1 shall command ATC1 through DSO_CDE_AC_CTC1:\n- 28V to closed ATC1 contactor\n- Open to open ATC1 contactor', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-459],[SES-ACEPC-461]'}, u'SSCS_ACLog_1037': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'The ACLog shall implement a non volatile memory type EEPROM (external to the microcontroller)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'Non volatile memory to stock failures', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1007': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'Medium Power DSO Output impedance shall be higher than 1 M\u03a9 when output is open or when the equipment is not powered. ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-750],[SES-ACEPC-751],[SES-ACEPC-752]'}, u'CAN-IRD-808': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request RGCU_EDMU_SNPTC_COLOR_x every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-807': {'allocation': u'HS', 'body': u'AGCU shall send the state of synoptic element colors through AGCU_EDMU_SNPTC_COLOR_x messages', 'refer': u'[SIRD-EPGDS-1052],[SPE-BITE-1188]'}, u'CAN-IRD-804': {'allocation': u'HS', 'body': u'RGCU shall send the state of synoptic element colors through RGCU_EDMU_SNPTC_COLOR_x messages', 'refer': u'[SIRD-EPGDS-1052],[SPE-BITE-1190]'}, u'CAN-IRD-805': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request RGCU_EDMU_SNPTC_COLOR_x every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-802': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request LGCU_EDMU_SNPTC_COLOR_x every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-801': {'allocation': u'HS', 'body': u'LGCU shall send the state of synoptic element colors through LGCU_EDMU_SNPTC_COLOR_x messages', 'refer': u'[SIRD-EPGDS-1052],[SPE-BITE-1189]'}, u'SSCS_ACLog_906': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_440': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The Overvoltage AC external power protection on Pin E shall be activated when voltage is higher than 42V+/-5V during 80ms+/-20ms', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-464]'}, u'CAN-IRD-567': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request RGCU_EDMU_SYNOPTIC_x every 100 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1178': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog shall confirm any failure detected during PBIT by performing the test sequence (failed) a second time.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1067]'}, u'SSCS_ACLog_441': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'- The relation between the current (I) and the ASI input voltage (V) is given by the following formula: V=(Rb)xI/1000Rb: Current transformer burden resistor (six 47Ohms +/-1% resistors in parrallel)1000: Current tranformer nominal current ratio (1/1000)this req is conform to the next version of SES ACEPC definition', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The Overload AC external protection shall be activated when one phase current is higher than the treshold and the timing describe below (with Inom=170A):\n \n  \nTable 23:  Overload AC external protection definition', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-844],[SES-ACEPC-853],[SES-ACEPC-920]'}, u'SSCS_ACLog_615': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall send the ATCx state through the CAN busses', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1668]'}, u'SSCS_ACLog_614': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'DSI NO / NC aux contact :Open = DSI input is OpenClosed = DSI input is grounded', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog1 shall determine the ATCx contactors status, status validity and failure of contactors which are in its AC EPC according to the following table:\n \n \nATCx = AT1 or ATC3\nTable 7: ATC1&3 contactors status, status validity and failure', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1833],[SPE-BITE-943],[SPE-BITE-944]'}, u'SSCS_ACLog_1174': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall inhibite spares or not used functions failure monitoring.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-963]'}, u'SSCS_ACLog_616': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog1 shall send the ATC1 and ATC3 "Aux" failure through the CAN busses', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-563],[SPE-BITE-973]'}, u'SSCS_ACLog_611': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_610': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog2 shall read the ATCx auxiliaries contacts thanks to the following DSI Ground/Open 5mA:\n- ATC1:\n DSI_AC_CTC1_OPP_NO for Normally Opened aux contact: DSI Open = CTC Open and \n DSI_AC_CTC1_OPP_NC for Normally Closed aux contact : DSI Grounded = CTC Open\n- ATC2:\n DSI_AC_CTC2_NO for Normally Opened aux contact: DSI Open = CTC Open and \n DSI_AC_CTC2_NC for Normally Closed aux contact : DSI Grounded = CTC Open\n- ATC3: \n DSI_AC_CTC2_OPP_NO for Normally Opened aux contact: DSI Open = CTC Open and \n DSI_AC_CTC2_OPP_NC for Normally Closed aux contact : DSI Grounded = CTC Open', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-430],[SES-ACEPC-431],[SES-ACEPC-432]'}, u'SSCS_ACLog_613': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_612': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1077': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall be able to retrieve and send the BITE NVM content through the Can busses upon EDMU request.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-652],[SPE-BITE-1054]'}, u'CAN-IRD-601': {'allocation': u'HS', 'body': u'AGCU shall send the following data to EDMU through AGCU_EDMU_BITE_1 messages :\n- APU_GCU ALC Wire or Coil Failed (BUS/WIRE (CBITE))\n- APU_GCU ATC Driver Failed OFF from AGCU to LGCU (BUS/WIRE (CBITE))\n- APU_GCU ATC Driver Failed ON from AGCU to LGCU (BUS/WIRE (CBITE))\n- APU_GCU ATC Lockout request from AGCU to LGCU (BUS/WIRE (CBITE))\n- APU_GCU CANA Bus or Receiver or Transmitter Failure (BUS/WIRE (CBITE))\n- APU_GCU CANB Bus or Receiver or Transmitter Failure (BUS/WIRE (CBITE))\n- Validity attached to these data (BUS/WIRE (CBITE))\n- APU_GCU AC BUS 2 Overcurrent Failure (BUS/WIRE (PRIT))\n- APU_GCU AC BUS 1 Overcurrent Failure (BUS/WIRE (PRIT))\n- APU_GCU APUGEN Ex Fld Wire Failed (BUS/WIRE (PRIT))\n- APU_GCU APUGEN Ex Fld Wire/Winding/Rotor Failed (BUS/WIRE (PRIT))\n- APU_GCU APUGEN Gen PHA Wire Open (BUS/WIRE (PRIT))\n- APU_GCU APUGEN Gen PHB Wire Open (BUS/WIRE (PRIT))\n- APU_GCU APUGEN Gen PHC Wire Open (BUS/WIRE (PRIT))\n- APU_GCU APUGEN PMG Wire failed (BUS/WIRE (PRIT))\n- APU_GCU AC TIE Bus Overcurrent Failure (BUS/WIRE (PRIT))\n- Validity attached to these data (BUS/WIRE (PRIT))', 'refer': u'[SIRD-EPGDS-2975],[SPE-BITE-120],[SPE-BITE-126]'}, u'CAN-IRD-602': {'allocation': u'HS', 'body': u'AGCU shall send the following data to EDMU through AGCU_EDMU_BITE_2 messages :\n- APU_GCU ATC3 Aux or Wire Failure (CONTACTOR (CBITE))\n- APU_GCU ATC1 Aux or Wire Failure (CONTACTOR (CBITE))\n- APU_GCU ATC3 Wire Coail Failure (CONTACTOR (CBITE))\n- Validity attached to these data  (CONTACTOR (CBITE))\n- APU_GCU ALC or Wire Failure (CONTACTOR (PRIT))\n- APU_GCU ALC Failed to Open - ALC aux or sense wire (CONTACTOR (PRIT))\n- APU_GCU ALC Fail to Close Driver OC (CONTACTOR (PRIT))\n- APU_GCU ALC Fail to Close Wire Open (CONTACTOR (PRIT))\n- Validity attached to these data (CONTACTOR (PRIT))', 'refer': u'[SIRD-EPGDS-2975],[SPE-BITE-120],[SPE-BITE-126]'}, u'CAN-IRD-603': {'allocation': u'HS', 'body': u'AGCU shall send the following data to EDMU through AGCU_EDMU_BITE_3 messages :\n- APU_GCU Bus Ready Acknowledgement From Distribution Circuit or Wire failed (GEN (CBITE) )\n- APU_GCU Not Bus Ready Acknowledgement From Distribution Circuit or Wire failed (GEN (CBITE) )\n- APU_GCU APU Ready To load circuit OR Wire failure(GEN (CBITE) )\n- APU_GCU APU Load Shed Circuit or wire fail (GEN (CBITE) )\n- APU_GCU OWN BUS PHA Voltage Sense  Circuit or Wire failure High (GEN (CBITE) )\n- APU_GCU OWN BUS PHB Voltage Sense  Circuit or Wire failure High (GEN (CBITE) )\n- APU_GCU OWN BUS PHC Voltage Sense  Circuit or Wire failure High (GEN (CBITE) )\n- APU_GCU OWN BUS PHA Voltage Sense  Circuit or Wire failure Low (GEN (CBITE) )\n- APU_GCU OWN BUS PHB Voltage Sense  Circuit or Wire failure Low (GEN (CBITE) )\n- APU_GCU OWN BUS PHC Voltage Sense  Circuit or Wire failure Low (GEN (CBITE) )\n- Validity attached to these data (GEN (CBITE) )\n- APU_GCU APUGEN PHA Feeder DP Failure (GEN (PRIT))\n- APU_GCU APUGEN PHB Feeder DP  Failure (GEN (PRIT))\n- APU_GCU APUGEN PHC Feeder Dp Failure (GEN (PRIT))\n- APU_GCU APUGEN Shaft Overspeed (GEN (PRIT))\n- APU GCU APUGEN  SUSP Contactor  (GEN (PRIT))\n- Validity attached to these data (GEN (PRIT))', 'refer': u'[SIRD-EPGDS-1641],[SIRD-EPGDS-2975],[SPE-BITE-120],[SPE-BITE-126]'}, u'CAN-IRD-604': {'allocation': u'HS', 'body': u'AGCU shall send the following data to EDMU through AGCU_EDMU_BITE_4 messages :\n- APU_GCU or Pin Prog Wire Failure (LRU (CBITE))\n- AGCU or APUGEN Temp Bulb Failure (LRU (CBITE))\n- Validity attached to these data (LRU (CBITE))\n- APU_GCU APUGEN Failure (LRU (PRIT))\n- APU_GCU Open Neutral Condition Failure\n- APU_GCU internal Failure (LRU (PRIT))\n- APU_GCU POR Sense Wire Failure (LRU (PRIT))\n- APU_GCU POR PHA Sense Wire Failure (LRU (PRIT))\n- APU_GCU POR PHB Sense Wire Failure (LRU (PRIT))\n- APU_GCU POR PHC Sense Wire Failure (LRU (PRIT))\n- Validity attached to these data (LRU (PRIT))', 'refer': u'[SIRD-EPGDS-2975],[SPE-BITE-120],[SPE-BITE-126]'}, u'CAN-IRD-605': {'allocation': u'HS', 'body': u'AGCU shall send the following data to EDMU through AGCU_EDMU_BITE_5 messages :\n- APU_GEN Over Frequency\n- APU_GEN Under Frequency\n- APU_GEN Overvoltage\n- APU_GEN Undervoltage\n- APU_GEN Oil Temperature High\n- APU_GEN Phase Sequence Failure\n- APU_GEN Over Current Under Speed Failure\n- APU_GEN Deta Current Failure\n- APU_GEN Rotary Diode Short Circuit\n- APU_GEN Phase Open\n- Validity attached to these data (RLDP_OMS)\n- BITE_SPARE_2 data', 'refer': u'[SIRD-EPGDS-2975],[SPE-BITE-120],[SPE-BITE-126]'}, u'CAN-IRD-606': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to AGCU through EDMU_GCU_BITE message:\n\uf0a7\tIBIT test request: IBIT test is requested or not.\n\uf0a7\tTrip Reset request: Reset of trip is requested or not.\n\uf0a7\tUnlatch failure request: Unlatch of failures is requested or not.\n\uf0a7\tNVM download request: NVM download is resquested or not', 'refer': u'[SPE-BITE-202]'}, u'CAN-IRD-607': {'allocation': u'HS', 'body': u'AGCU shall send the following data to EDMU through AGCU_EDMU_MODULE_STATUS message:\n\uf0a7\tIBIT acceptance: LRU is in condition for IBIT test or not.\n\uf0a7\tTrip Reset acceptance: LRU is in condition for Reset of trip or not.\n\uf0a7\tUnlatch failure acceptance: LRU is in condition for unlatching failures or not.\n\uf0a7\tits Flight/Ground status : LRU is in Flight or on Ground\n\uf0a7\tThe validity of the Flight/Ground status\n\uf0a7\tNVM download acceptance state', 'refer': u'[SIRD-EPGDS-2533],[SIRD-EPGDS-2975],[SPE-BITE-202]'}, u'CAN-IRD-608': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request AGCU_EDMU_BITE_x and AGCU_EDMU_MODULE_STATUS every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1482': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Label (14)waiting for SIRD update (ACLOG2 --> ACLOG)', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall switch from ELC Ground Servicing CLOSE Request to ELC Ground Servicing OPEN Request when:\n- ELC ACEP CLOSE Request\nOR\n- AC External Power is NOT POWER READY\nOR\n- "28V_AC_EP_TR" is NOT present\nOR\n- "DSI_GS_PB" falling edge is detected\nOR\n- At least one GCU or APU is Power Ready\nOR\n- ELC is FAILED OPEN', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1831],[SIRD-EPGDS-2562]'}, u'SSCS_ACLog_1079': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Each fault detected by the ACLog shall be stored into the NVM with the following contents:\n- Fault code\n- Snapshot data\n- Flight leg\n- Flight phase\n- Occurrence count\n- Aircraft tail\n- Time\n- Date', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-905]'}, u'SSCS_ACLog_1483': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'ACLog2 shall command ELC:\n- to CLOSE when ELC Ground Servicing CLOSE Request state is ACTIVE\n- to OPEN when ELC Ground Servicing OPEN Request state is ACTIVE', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'needed for ACEP definition', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_446': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Each AC external protections activation shall be latched and sent into NVM', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-460]'}, u'SSCS_ACLog_1035': {'status': u'TBD', 'terminal': 'EMPTY', 'additional': u'ASI 28V specification', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'ASI 28V voltage measure shall have a precision better than 4% on full scale (without taking account AC EPC resistor tolerance)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'ASI 28V specification', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_447': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'SIRD should be updated', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Each AC external protection activation shall be reset when one of these events occurs:\n- Cold Start on Ground\nOR\n- IBIT\nOR\n- AC External Power Mode switches from ACTIVE to NOT ACTIVE\nOR\n- Ground Servicing Mode switches from ACTIVE to NOT ACTIVE', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-461]'}, u'SSCS_ACLog_1342': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall compute the "ELC_FAILED_OPEN_CAS" CAS message according the following logic : \nTRUE\nELC is declared failed Open\nFALSE otherwise', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1213]'}, u'CAN-IRD-530': {'allocation': u'EDMU SSCS', 'body': u'The data of messages sent between EDMU and RGCU shall be compliant to the following document:', 'refer': u'[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_759': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The insulation resistance between individually isolated 115/200 Vac terminals and between all terminals and case shall be greater than 20 M\u03a9 when tested at a voltage of 500 Vdc\xb110%\nRemark: Any filter component or transient protection device not designed to withstand such a test can be disconnected before carrying out this test', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-107]'}, u'SSCS_ACLog_1546': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'ACLOG1 cannot monitor AC BUS2, waiting for Bite psec Update', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u' ACLOG2 CBIT shall monitor AC BUS2 Overvoltage Protection activation', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1493]'}, u'SSCS_ACLog_981': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'Ground/Open DSI shall be designed with an hysteresis of 3V minimum ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-726]'}, u'SSCS_ACLog_1372': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog shall allocate an area of at least 36 kbytes for BITE purpose in NVM.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1350]'}, u'SSCS_ACLog_1034': {'status': u'TBD', 'terminal': 'EMPTY', 'additional': u'ASI 28V specification', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'ASI 28V shall be able to measure DC voltages from 0V to 46V', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'ASI 28V specification', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_845': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall send the anti-paralleling failure status (ANTI_PARALLELING_FUNC) after a confiramation time of 5seconds +/-0.5s through the CAN busses', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1484],[SPE-BITE-1485]'}, u'SSCS_ACLog_837': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog Anti paralleling hardware function shall compute the contactor command according to the following table:\n   \nThe Hardware function will give an "antiparalleling detection status" to the software which needs to be compiled with the DSO contator status\nTable 24: Anti paralleling truth table', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2573],[SIRD-EPGDS-2575],[SIRD-EPGDS-2576],[SIRD-EPGDS-2577]'}, u'SSCS_ACLog_836': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall consider a voltage presence thanks to ASI_AC_CTCx_APx when one phase voltage is higher than 55Vrms +/-5Vrms', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2574]'}, u'SSCS_ACLog_831': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The differential protection shall be reset after a cold start if the aircraft is on ground, or through an Initiated test command ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-387]'}, u'SSCS_ACLog_830': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'When the differential protection is activated, the default shall be latched and sent into NVM.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-386]'}, u'SSCS_ACLog_833': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog2 shall read the upstream and downstream voltages of ATC2 and ELC (phase A) thanks to the following ASI:\n- ATC2: ASI_AC_CTC1_AP1 and ASI_AC_CTC1_AP2\n- ELC: ASI_AC_CTC2_AP1 and ASI_AC_CTC2_AP2', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2571]'}, u'SSCS_ACLog_832': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog1 shall read the upstream and downstream voltages of ATC1 and ATC3 (phase A) thanks to the following ASI:\n- ATC1: ASI_AC_CTC1_AP1 and ASI_AC_CTC1_AP2\n- ATC3: ASI_AC_CTC2_AP1 and ASI_AC_CTC2_AP2', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2571]'}, u'SSCS_ACLog_839': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Label (4)', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall set the 28V/Open "DSO_AC_EP_PINF" to NOT ACTIVE (set to OPEN state) when:\n- AC EP 115V is NOT PRESENT\nOR\n- At least one AC EP 115V protection occurs\nOR\n- PIN E voltage is NOT PRESENT with a confirmation time of 30ms +/-3ms\nOR\n- PIN E Over Voltage Protection occurs\nOR\n- ELC is FAIL CLOSED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1830],[SIRD-EPGDS-2121],[SES-ACEPC-691]'}, u'CAN-IRD-734': {'allocation': u'DC Log SSCS', 'body': u'DCLOG[1/2] shall send its I/O statuses and the validty of these I/O statuses to EDMU through DCLOG[1/2]_EDMU_IO_STATE_x messages.', 'refer': u'[SIRD-EPGDS-3368],[SPE-BITE-1540]'}, u'CAN-IRD-735': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request DCLOG[1/2]_EDMU_IO_STATE_x every 250 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1181': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog shall consider the disappearance of a failure after a "clearance time" which not exceed half the failure appearance confirmation time.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1072]'}, u'CAN-IRD-737': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request ACLOG[1/2]_EDMU_IO_STATE_x every 250 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-730': {'allocation': u'HS', 'body': u'AGCU shall send the following Synoptic data to EDMU through AGCU_EDMU_SYNOPTIC_2 messages: \n- APU Generator load\n- Validity attached to this piece of data', 'refer': u'[SIRD-EPGDS-2125]'}, u'CAN-IRD-731': {'allocation': u'AC Log SSCS', 'body': u'ACLOG[1/2] shall send its I/O statuses and the validity of these I/O statuses to EDMU through ACLOG[1/2]_EDMU_IO_STATE_x messages.', 'refer': u'[SPE-BITE-1540]'}, u'SSCS_ACLog_1185': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1184': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'28V DC1 fuse,DC ESS2 fuse,AC EP TR fuse.', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall provide internal DSI to monitor the upstream and downstream voltage of each fuses of the board', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2815],[SPE-BITE-790]'}, u'SSCS_ACLog_1008': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'When grounded, medium DSO Ground/Open circuit type shall have an output voltage <1.5V at 100mA', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-751]'}, u'SSCS_ACLog_1189': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1188': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog shall inhibit 28V board supply presence memorization in NVM when corresponding voltage is not present.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1017]'}, u'CAN-IRD-738': {'allocation': u'Emer Log SSCS', 'body': u'EMERLOG shall send its I/O statuses and the validty of these I/O statuses to EDMU through EMERLOG_EDMU_IO_STATE_x messages.', 'refer': u'[SIRD-EPGDS-3072],[SIRD-EPGDS-3368],[SPE-BITE-1540]'}, u'CAN-IRD-739': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request EMERLOG_EDMU_IO_STATE_x every 250 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_534': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'AC EP Push Button is a momentary switch', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u' \n The ACLog shall take into account "DSI_ACEP_PB" falling edge for AC External Power Mode changes:\n- DSI_ACEP_PB falling edge AND AC External Power is POWER READY \n- DSI_ACEP_PB falling edge OR AC External Power is NOT POWER READYOR ELC is Failed Open\n \nFigure 5: AC EP Push Button activation', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1444],[SES-ACEPC-662],[SES-ACEPC-692]'}, u'SSCS_ACLog_535': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_536': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u"DSO_ACEP_ON doesn't only concern ACEP, but Ground servicing mode too.", 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog2 shall command the Ground/Open "DSO_ACEP_ON" following this table:\n \n \nTable 18: DSO_ACEP_ON commands', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-6837],[SES-ACEPC-530]'}, u'SSCS_ACLog_537': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'When AC External Power is POWER READY, ACLog2 shall set:\n- Ground/Open "DSO_PR_AC_EP" to active state (GROUND)\n- Ground/Open "DSO_NPR_AC_EP" to not active state (OPEN)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'should be allocated to ACLOG at SIRD level (req 2014)', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_539': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1128': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If ASI_AC_OPP_BUSBAR_VOLT_PHA is higher than 90Vrms +/-5Vrms during at least 500ms +/-50ms, the ACLog shall \n- grounded the DSO low power "DSO_AC_BUS_OPP_AVAIL"\nAND \n- set to "Power is available" the corresponding "ACx_BUSBAR_AVAIL" through the CAN.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2987],[SES-ACEPC-938],[SES-ACEPC-939]'}, u'SSCS_ACLog_973': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall be provided with keying pins, in order to avoid incorrect location.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-671]'}, u'SSCS_ACLog_1381': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'the Flight Leg Fault Counter shall be incremented for each new fault into the same flight leg.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1361]'}, u'SSCS_ACLog_1380': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The Fault Code shall be filled according the fault code of the fault detected by the ACLog', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1360]'}, u'SSCS_ACLog_1228': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall command ATC1, ATC2, ATC3 and AEC according to the following truth table:\n   \nTable 22: Smoke isolation procedure', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-1371]'}, u'SSCS_ACLog_1382': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If there is more than 32 faults for the same flight Leg, additional faults shall not be memorized except for reoccurrence of faults already memorized.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1362]'}, u'SSCS_ACLog_1385': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Time First occurrence shall be filled by the Time received by the avionics at the moment that fault occurs for the first time.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1363]'}, u'SSCS_ACLog_1384': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Date first Occurrence shall be filled by the date received by the avionic at the moment that fault occurs for the first time.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1365]'}, u'SSCS_ACLog_1387': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Time Last Occurrence shall be filled by the Time received by the avionics at the moment of the last reoccurrence of the same fault.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1367]'}, u'SSCS_ACLog_1386': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Date Last Occurrence shall be filled by the date received by the avionics at the moment of the last reoccurrence of the same fault.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1366]'}, u'SSCS_ACLog_1222': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Failure without impact on the Network management', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of AUX failure detected on ATCx, ACLog shall keep the same ATCx command', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1833]'}, u'SSCS_ACLog_1388': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Flight Leg shall be filled by the Flight Leg provided by the avionics at the moment the fault occurs.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1368]'}, u'SSCS_ACLog_1220': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Failure without impact on the Network management', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of Aux failure detected on ALC, the ALC command shall not be modified', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1824]'}, u'SSCS_ACLog_1221': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'SIRD should be updated', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If ALC contactor status is open and ALC failure is "command" (contactor failed open), then ACLog shall:\n- apply ALC acknowledgment as "not acknowledged" ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1819]'}, u'SSCS_ACLog_1226': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Each ACLog shall send by CAN busses the AC electrical network configuration of the both sides for the power management shedding function:\n AC Bus bar presence (AC Bus 1, AC Bus 2, AC Ess Bus)\n Contactors status', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-180],[SIRD-EPGDS-6310],[SIRD-EPGDS-6311],[SIRD-EPGDS-6313]'}, u'SSCS_ACLog_1227': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'The EMERLOG_DSI_XFR datas are sended by the EDMU through the CAN busses', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall compute the smoke isolation position and the associated validity status according to following truth table:\n  \nTable 21: XFR modes and Validity', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-3073]'}, u'SSCS_ACLog_1224': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall memorize failures detected during PBIT or CBIT into the NVM ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-904]'}, u'SSCS_ACLog_1225': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall compute the AC Bus 1 bus bar, AC Bus 2 bus bar and AEC supply sources according to the following truth table:\n   \nTable 11: AC Busbar power source', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-6774]'}, u'CAN-IRD-375': {'body': u'The following table is the bus load analysis based on a maximum fully loaded bus: \n1 bus with 8 SSPCMs with 24 SSPCs by SSPCM', 'refer': u'[SIRD-EPGDS-114],End: \tTrue'}, u'CAN-IRD-279': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request EMERLOG_EDMU_PROTEC_STATUS every 50 ms.', 'rationale': u'Provision', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-278': {'status': u'TBD', 'allocation': u'Emer Log SSCS', 'body': u'EMER protections shall include the following protections:\n\uf0a7\tTBD', 'derived': u'True', 'rationale': u'Provision'}, u'CAN-IRD-275': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request EMERLOG_EDMU_CNTOR_STATUS every 50 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-274': {'allocation': u'Emer Log SSCS', 'body': u'EMER contactors shall include the following contactors:\n\uf0a7\tTLC3\n\uf0a7\tETC1\n\uf0a7\tETC2\n\uf0a7\tRLC', 'refer': u'[SIRD-EPGDS-1021],[SIRD-EPGDS-1668],[SIRD-EPGDS-1905]'}, u'CAN-IRD-277': {'allocation': u'Emer Log SSCS', 'body': u'EMERLOG shall send the following data to EDMU through EMERLOG_EDMU_PROTEC_STATUS message:\n\uf0a7\tState of EMER protections: protection is activated or not.\n\uf0a7\tValidity of the state of EMER protection: the state signal is valid or not.', 'derived': u'True', 'rationale': u'Provision'}, u'CAN-IRD-271': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request EMERLOG_EDMU_NETWORK_STATUS every 50 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-270': {'allocation': u'Emer Log SSCS', 'body': u'Supplying sources shall include the following sources or disconnected or invalid:\n\uf0a7\tR_GEN;\n\uf0a7\tL_GEN;\n\uf0a7\tAPU_GEN;\n\uf0a7\tEXT_AC;\n\uf0a7\tMAIN_BATT;\n\uf0a7\tAPU_BATT;\n\uf0a7\tRAT_GEN;\n\uf0a7\tTRU1;\n\uf0a7\tTRU2;\n\uf0a7\tESS_TRU;', 'refer': u'[SIRD-EPGDS-1021],[SIRD-EPGDS-1896],[SIRD-EPGDS-1905]'}, u'CAN-IRD-273': {'allocation': u'Emer Log SSCS', 'body': u'EMERLOG shall send the following data to EDMU through EMERLOG_EDMU_CNTOR_STATUS message:\n\uf0a7\tState of EMER contactors: contactor is open or closed.\n\uf0a7\tValidity of the state of EMER contactor: the state signal is valid or not.', 'refer': u'[SIRD-EPGDS-1021],[SIRD-EPGDS-1668],[SIRD-EPGDS-1905]'}, u'SSCS_ACLog_1452': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The confirmation time for ACLog Contactor Lockout Discrepancy failure shall be 3 seconds +/- 0,5s.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1480]'}, u'CAN-IRD-547': {'allocation': u'HS', 'body': u'LGCU shall send the following data to EDMU through LGCU_EDMU_BITE_3 messages :\n- LEFT_GCU ROLS Circuit or Wire failed (GEN (CBITE))\n- LEFT_GCU Bus Ready Acknowledgement From Distribution Circuit or Wire failed (GEN (CBITE))\n- LEFT_GCU Not Bus Ready Acknowledgement From Distribution Circuit or Wire failed (GEN (CBITE))\n- LEFT_GCU LVFG LOP sensor or Wire  Failure (GEN (CBITE))\n- LEFT_GCU LVFG Delta Oil Press Sensor or Wire failure (GEN (CBITE))\n- LEFT_GCU Left Engine Run Switch Off Failed (GEN (CBITE))\n- LEFT_GCU OWN BUS PHA Voltage Sense  Circuit or Wire failure High (GEN (CBITE)) \n- LEFT_GCU OWN BUS PHB Voltage Sense  Circuit or Wire failure High (GEN (CBITE))\n- LEFT_GCU OWN BUS PHC Voltage Sense  Circuit or Wire failure High (GEN (CBITE))\n- LEFT_GCU OWN BUS PHA Voltage Sense  Circuit or Wire failure Low (GEN (CBITE)) \n- LEFT_GCU OWN BUS PHB Voltage Sense  Circuit or Wire failure Low (GEN (CBITE))\n- LEFT_GCU OWN BUS PHC Voltage Sense  Circuit or Wire failure Low (GEN (CBITE))\n- Validity attached to these data (GEN (CBITE))\n- LEFT_GCU LVFG PHA Feeder DP Failure (GEN (PRIT))\n- LEFT_GCU LVFG PHB Feeder DP  Failure (GEN (PRIT))\n- LEFT_GCU LVFG PHC Feeder Dp Failure (GEN (PRIT))\n- LEFT_GCU LVFG Shaft Overspeed (GEN (PRIT))\n- LEFT_GCU LVFG  SUSP Contactor (GEN (PRIT))\n- Validity attached to these data', 'refer': u'[SIRD-EPGDS-1641],[SIRD-EPGDS-2975],[SPE-BITE-120],[SPE-BITE-126]'}, u'CAN-IRD-546': {'allocation': u'HS', 'body': u'LGCU shall send the following data to EDMU through LGCU_EDMU_BITE_2 messages :\n- LEFT_GCU ATC1 Aux or Wire Failure (CONTACTOR (CBITE))\n- LEFT_GCU ATC1 Wire Coail Failure (CONTACTOR (CBITE))\n- Validity attached to these data (CONTACTOR (CBITE))\n- LEFT_GCU GLC1 or Wire Failure (CONTACTOR (PRIT))\n- LEFT_GCU GLC1 Fail to Close Driver OC (CONTACTOR (PRIT))\n- LEFT_GCU GLC1 Fail to Close Wire Open (CONTACTOR (PRIT))\n- LEFT_GCU GLC1 Failed to Open - GLC1 aux or sense wire (CONTACTOR (PRIT))\n- Validity attached to these data (CONTACTOR (PRIT))', 'refer': u'[SIRD-EPGDS-2975],[SPE-BITE-120],[SPE-BITE-126]'}, u'CAN-IRD-545': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request LGCU_EDMU_BITE_x and LGCU_EDMU_MODULE_STATUS every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-544': {'allocation': u'HS', 'body': u'LGCU shall send the following data to EDMU through LGCU_EDMU_BITE_1 messages :\n- ATC 1 Lockout Drive status from LEFT_GCU to APU_GCU (BUS/WIRE (CBITE) data)\n- LEFT_GCU CANA Bus or Receiver or Transmitter Failure (BUS/WIRE (CBITE) data)\n- LEFT_GCU CANB Bus or Receiver or Transmitter Failure (BUS/WIRE (CBITE) data)\n- Validity attached to these data (BUS/WIRE (CBITE) data)\n- LEFT_GCU LVFG AC_TIE Overcurrent (BUS/WIRE (PRIT))\n- LEFT_GCU LVFG ACBUS1 Overcurrent (BUS/WIRE (PRIT))\n- LEFT_GCU LVFG Ex Fld Wire Failed (BUS/WIRE (PRIT))\n- LEFT_GCU LVFG Ex Fld Wire/Winding/Rotor Failed (BUS/WIRE (PRIT))\n- LEFT_GCU LVFG Gen PHA Wire Open (BUS/WIRE (PRIT))\n- LEFT_GCU LVFG Gen PHB Wire Open (BUS/WIRE (PRIT))\n- LEFT_GCU LVFG Gen PHC Wire Open (BUS/WIRE (PRIT))\n- LEFT_GCU LVFG PMG Wire failed (BUS/WIRE (PRIT))\n- Validity attached to these data (BUS/WIRE (PRIT))', 'refer': u'[SIRD-EPGDS-2975],[SPE-BITE-120],[SPE-BITE-126]'}, u'CAN-IRD-542': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request LGCU_EDMU_OMS_x every 500 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-541': {'allocation': u'HS', 'body': u'LGCU shall send the following OMS data to EDMU through LGCU_EDMU_OMS_1 message :\n- Digtal value of the Left generator oil temperature.\n- Status of the oil pressure\n- Status of oil filter\n- Status of the oil level\n- Status of ATC Lockout request wire failure\n- Validity attached to these data', 'refer': u'[SIRD-EPGDS-2975],[SPE-BITE-1331]'}, u'SSCS_ACLog_1020': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_880': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall send the AEC "Aux" failure through the CAN busses', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-563],[SPE-BITE-973]'}, u'CAN-IRD-422': {'status': u'TBD', 'allocation': u'AC Log SSCS', 'body': u'AC protections shall include the following protections for ACLOG1:\n\uf0a7\tTBD', 'derived': u'True', 'rationale': u'Provision'}, u'CAN-IRD-423': {'status': u'TBD', 'allocation': u'AC Log SSCS', 'body': u'AC protections shall include the following protections for ACLOG2:\n\uf0a7\tTBD', 'derived': u'True', 'rationale': u'Provision'}, u'CAN-IRD-424': {'status': u'TBD', 'allocation': u'DC Log SSCS', 'body': u'DC protections shall include the following protections for DCLOG2:\n\uf0a7\tTBD', 'derived': u'True', 'rationale': u'Provision'}, u'SSCS_ACLog_885': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'ACLog shall provide 5 DSI Ground/Open 1mA for pin programming to differentiate ACLog1 from ACLog2:\n- DSI_PINPROG1\n- DSI_PINPROG2\n- DSI_PINPROG3\n- DSI_PINPROG4\n- DSI_PINPROG5', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-657]'}, u'CAN-IRD-549': {'allocation': u'HS', 'body': u'LGCU shall send the following data to EDMU through LGCU_EDMU_BITE_5 messages :\n- LEFT_GCU LVFG Over Frequency\n- LEFT_GCU LVFG Under Frequency\n- LEFT_GCU LVFG Overvoltage\n- LEFT_GCU LVFG Undervoltage\n- LEFT_GCU LVFG Oil Temperature High\n- LEFT_GCU LVFG Phase Sequence Failure\n- LEFT_GCU LVFG Over Current Under Speed Failure\n- LEFT_GCU LVFG Deta Current Failure\n- LEFT_GCU LVFG Rotary Diode Short Circuit\n- LEFT_GCU LVFG Phase Open\n- Validity attached to these data (RLDP_OMS)\n- BITE_SPARE_2 data', 'refer': u'[SIRD-EPGDS-2975],[SPE-BITE-120],[SPE-BITE-126]'}, u'CAN-IRD-548': {'allocation': u'HS', 'body': u'LGCU shall send the following data to EDMU through LGCU_EDMU_BITE_4 messages :\n- LEFT_GCU or Pin Prog Wire Failure (LRU (CBITE))\n- LGCU or LVFG Temp Bulb Failure (LRU (CBITE))\n- Validity attached to these data (LRU (CBITE))\n- LEFT_GCU LVFG Failure (LRU (PRIT))\n- LEFT_GCU Open Neutral Condition Failure (LRU (PRIT))\n- LEFT_GCU internal Failure (LRU (PRIT))\n- LEFT_GCU POR Sense Wire Failure (LRU (PRIT))\n- LEFT_GCU POR PHA Sense Wire Failure (LRU (PRIT))\n- LEFT_GCU POR PHB Sense Wire Failure (LRU (PRIT))\n- LEFT_GCU POR PHC Sense Wire Failure (LRU (PRIT))\n- Validity attached to these data (LRU (PRIT))', 'refer': u'[SIRD-EPGDS-2975],[SPE-BITE-120],[SPE-BITE-126]'}, u'SSCS_ACLog_1405': {'status': u'TBC', 'terminal': 'EMPTY', 'additional': u'Should be specified at SIRD Level', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'When a command without validity of one CAN bus is already processing, the ACLog shall ignore the same commmand received through the other CAN bus', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'Shall be specified at SIRD Level', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-691': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'The messages between EDMU and SSPCM shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN Protocol', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_480': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u"The opening contactor time is not includied in this time , it's only the detection time", 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The GFI protection time delay detection shall be less than 4ms +/- 1 ms', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-395]'}, u'CAN-IRD-690': {'body': u'The load of each time slot shall be less than 70%.', 'refer': u'[SIRD-EPGDS-114],End: \tTrue'}, u'SSCS_ACLog_1313': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1259': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall ignore Initiated BITE request if at least one of the following condition is met : \n- Aircraft In Flight\n- Ground status is Invalid\n- Initiated BITE is already running\n- NVM Download in progress\n- NVM Reset in progress.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1106]'}, u'SSCS_ACLog_1258': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1257': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall reset BITE information stored in NVM on EDMU request through CAN bus.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1057]'}, u'SSCS_ACLog_1256': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of any protection activation, the ACLOG shall declare the corresponding failure to the EDMU using CAN buses.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SPE-BITE-556]'}, u'SSCS_ACLog_1255': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The number of life limited components shall be justified and accepted by ZEPS safety department.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-928]'}, u'SSCS_ACLog_1254': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1253': {'status': u'TBD', 'terminal': u'YES', 'additional': u'waiting for system definition', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The list of applicable fungi to be used to qualify ACLog for fungus Resistance tests shall be as following :TBD.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-157]'}, u'SSCS_ACLog_1252': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The list of applicable fluids to be used to qualify ACEPCs for Fluid Susceptibility tests shall be as following :\n- Solvent and Cleaning Fluids\n- Insecticides\n- Sullage\n- Disinfectant (heavy duty phenolics)\n- Fire Extinguishants\n- Beverage spillage\n    \nTable 33: Applicable fluid List', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-154]'}, u'SSCS_ACLog_1528': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'NVM reset shall be inhibited if at least one of the following condition is met : \nAircraft in flight\nInitiated BIT In progress \nNVM Download in progress ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1552]'}, u'SSCS_ACLog_1300': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The impact of SEU/MBU on the system shall assessed taking into account that the aircraft is exposed to an Atmospheric Neutron Flux of 4230 N/cm\xb2.h for an altitude of 51 000 feet.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-952]'}, u'SSCS_ACLog_454': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1121': {'status': u'TBC', 'terminal': 'EMPTY', 'additional': u'computed command added', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of absence of RCCB protections, the ACLog shall compute the RCCB command and states in accordance with the following table (TBC):\n   \nTable 20: RCCB computed commands', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2206]'}, u'SSCS_ACLog_516': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_867': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The AC Bus overvoltage protection shall be activated when an AC Bus phase voltage is higher than 134V +/-15V during 1s +/-100ms', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2463]'}, u'SSCS_ACLog_1141': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'external failure', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW, SW', 'body': u'The ACLog shall verify the presence (wiring) of the current transformers dedicated to the differential protection and currents tranformers dedicated to the AC EP current monitoring (only ACLog2) only during PBIT (Not during IBIT)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To detect CT failure', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_718': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog1 shall compute the ACMP3B_closed_state status by following the truth table here below and send it through the CAN busses:\n   \nTable 14: ACMP3B_closed_state status', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1081],[SPE-BITE-616],[SPE-BITE-755]'}, u'SSCS_ACLog_719': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall compute the ACMP1B_closed_state and ACMP3A_closed_state status by following the truth table here below and send it through the CAN busses:\n   \nTable 15:  ACMP1B_closed_state and ACMP3A_closed_state status', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1081],[SPE-BITE-616],[SPE-BITE-756]'}, u'SSCS_ACLog_653': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'ACLog Pcb common mode internal capacitance C1, and C2 as the following figure, shall not exceed 100pf:\n   \nFigure 30: CAN busses internal capacitance', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2098]'}, u'SSCS_ACLog_1131': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'Net crossing shall be avoided for CAN busses', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'For hardware design and routing', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-648': {'allocation': u'DC Log SSCS', 'body': u'DCLOG[1/2] shall send NVM data to EDMU through DCLOG[1/2]_EDMU_NVM_PACKET_[1;42] messages :\n\uf0a7\tPacket number : The number of the NVM packet transmitted.\n\uf0a7\tNVM packet : 6 bytes of NVM.', 'refer': u'[SIRD-EPGDS-652],[SPE-BITE-1054]'}, u'CAN-IRD-649': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request DCLOG[1/2]_EDMU_NVM_DL_STATUS every 500 ms.', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_657': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The bit timing of CAN frame shall be the followed:\n- Rate : 500kbit/s,\n- Tbit: 2\uf06ds\n- Tq:125ns\n- No of Tq/bit:16\n- Prop_Seg+Phase_seg1:11Tq,\n- Phase seq2 4Tq,\n- Re-Synchronisation Jump Width: 1 Tq,\n- Location of sample point: at least 75%\n- Max Information Processing Time: less or equal to 2Tq,', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2106]'}, u'SSCS_ACLog_656': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The outputs voltage levels of the ACLog CAN bus transceivers shall be compliant with those defined into ISO11898-2, \xa77.2.2.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2105]'}, u'CAN-IRD-644': {'body': u'The bytes of the NVM block shall be transmitted consecutively.', 'additional': u'First byte of first packet = First byte of the NVM, 2nd byte of first packet = 2nd byte of the NVM....', 'derived': u'True', 'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS', 'rationale': u'To avoid transfering the NVM in erratic order.', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-749],[SPE-BITE-1054]'}, u'SSCS_ACLog_658': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'To pull the floating isolated ground to the mechanical ground, the isolated transceiver ground shall be wired to the mechanical ground through a 30KOhms +/-10% resistor', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To provide a reference', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-646': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data through EDMU_XLOG_NVM_DL message:\n\uf0a7\tNVM Download request: NVM downloading operation is requested or not.\n\uf0a7\tNVM reset request: NVM reset operation is requested or not.\n\uf0a7\tNVM Block First byte: First byte of NVM block requested by EDMU.\n\uf0a7\tNVM Block size : Number of bytes of NVM requested by EDMU', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-653],[SPE-BITE-1054],[SPE-BITE-1057]'}, u'CAN-IRD-647': {'allocation': u'DC Log SSCS', 'body': u'DCLOG[1/2] shall send the following data through DCLOG[1/2]_EDMU_NVM_DL_STATUS message :\n\uf0a7\tNVM Download answer: LRU accepts or not the NVM download request from EDMU.\n\uf0a7\tThe size of the NVM : Size of the NVM of the LRU.\n\uf0a7\tThe number of NVM block packets : Number of packet needed to achieve NVM block download if request is accepted else 0.\n\uf0a7\tCRC NVM of block : CRC of NVM block if request is accepted else 0.', 'refer': u'[SIRD-EPGDS-652],[SPE-BITE-1054]'}, u'SSCS_ACLog_714': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog2 shall read the ACMPx RCCB auxiliaries contacts thanks to the following DSI Ground/Open 5mA:\n- ACMP3B: DSI_RCCB1_OPP_NO (Ground: closed, Open: Open) and DSI_RCCB1_OPP_NC (Ground: Open, Open: closed)\n- ACMP3A: DSI_RCCB1_NO (Ground: closed, Open: Open) and DSI_RCCB1_NC (Ground: Open, Open: closed)\n- ACMP1B: DSI_RCCB2_NO (Ground: closed, Open: Open) and DSI_RCCB2_NC (Ground: Open, Open: closed)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-423],[SES-ACEPC-424],[SES-ACEPC-425]'}, u'CAN-IRD-641': {'body': u'When NVM download conditions are met, LRU shall transmit its NVM content if requested by EDMU.', 'additional': u'During a transfer, if the NVM download  operation is not requested anymore the LRU stops the transmission of the NVM content. ', 'derived': u'True', 'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS', 'rationale': u'CAN NVM download protocol', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-749],[SPE-BITE-1054]'}, u'CAN-IRD-642': {'body': u'The LRU NVM download request shall stay active during the whole LRU NVM transfer except if the NVM transfer is aborted by EDMU.', 'additional': u'NVM download is stopped if NVM request bit goes to 0 before end of NVM downloading process.', 'derived': u'True', 'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS', 'rationale': u'CAN NVM download protocol', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-749],[SPE-BITE-1054]'}, u'CAN-IRD-643': {'body': u'The LRU NVM download answer shall stay active during the whole LRU NVM transfer except if the NVM transfer is aborted by the LRU.', 'additional': u'NVM download is stopped if NVM request bit goes to 0 before end of NVM downloading process.', 'derived': u'True', 'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS', 'rationale': u'CAN NVM download protocol', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-749],[SPE-BITE-1054]'}, u'CAN-IRD-165': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request SSPCM_EDMU_IDENT_x every 1 second.', 'additional': u'The request is done by EDMU with EDMU_SSPCM_FLIGHTINFO_x message.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-167': {'allocation': u'SSPCM SSCS', 'body': u'SSPCM shall send its BITE Monitoring data to EDMU through SSPCM_EDMU_FAILUREMON_x messages and following parameters:\n\uf0a7\tThe open failure state of each SSPC\n\uf0a7\tThe close failure state of each SSPC\n\uf0a7\tThe failure state of I2t protection of each SSPC\n\uf0a7\tThe failure state of AFD protection of each SSPC\n\uf0a7\tThe failure state of each DSI of each SSPC\n\uf0a7\tThe phase order\n\uf0a7\tThe availability of each power supply control of SSPCM\n\uf0a7\tThe failure state on the power supply output for other SSPCM\n\uf0a7\tThe loss of each a 28 V Input of SSPCM\n\uf0a7\tThe failure state of 5s Power Cut Detection\n\uf0a7\tThe failure state of Pin-strapping for Module Type (it is in an undefined state).\n\uf0a7\tThe failure state of NVM of SSPCM\n\uf0a7\tThe failure state of internal SPI communication (At least one SSPC does not respond properly)\n\uf0a7\tThe overheat state of at least on SSPC on the SSPCM\n\uf0a7\tThe failure state of each SSPCM temperature sensor.\n\uf0a7\tThe Configuration compatibility state with the hardware of the SSPCM\t', 'refer': u'[SIRD-EPGDS-1711],[SPE-BITE-126]'}, u'CAN-IRD-161': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request SSPCM_EDMU_INTERLOCUTORS_x every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-160': {'allocation': u'SSPCM SSCS', 'body': u'SSCPM shall send the following data to EDMU through SSPCM_EDMU_INTERLOCUTORS_x messages:\n\uf0a7\tSSPC EDMU listened: EDMU which is listened for each SSPC P/CD control command: SSPC listens to CAN A or CAN B or none.\n\uf0a7\tPhase order : indicates if the order of the phase is valid or not\n\uf0a7\tPower supply presence of each power supply of the SSPCM : Power supply is available or not', 'refer': u'[SIRD-EPGDS-1079]'}, u'CAN-IRD-163': {'allocation': u'SSPCM SSCS', 'body': u'SSCPM shall send the following data to EDMU through SSPCM_EDMU_IDENT_x messages:\n\uf0a7\tits Module type : Module type is the type of the SSPCM.\n\uf0a7\tits LRU Part Number\n\uf0a7\tit Serial Number', 'additional': u'Example of module type : AC9, DC12, etc ...', 'refer': u'[SIRD-EPGDS-1079]'}, u'SSCS_ACLog_864': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'The reference voltage will be ASI_RCCB1_CURRENT_RET for ASI_RCCB1_CURRENT_GFI and ASI_RCCB2_CURRENT_RET for ASI_RCCB2_CURRENT_GFI', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog2 shall read, through current transformers, the neutral currents of ACMP3A and ACMP1B thanks to the following ASI:\n- ACMP3A: ASI_RCCB1_CURRENT_GFI\n- ACMP1B: ASI_RCCB2_CURRENT_GFI', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2453],[SES-ACEPC-845]'}, u'CAN-IRD-168': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request SSPCM_EDMU_FAILUREMON_x every 500 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1172': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_568': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall provide 6 DSI Ground/Open 1mA to receive the Power Ready (PR) and the Not Power Ready (NPR) signals from the GCUs:\n- DSI_PR_RGEN for Power Ready: DSI Grounded = Power Ready \n- DSI_NPR_RGEN for Not Power Ready: DSI Grounded = Not Power Ready \n- DSI_PR_LGEN for Power Ready: DSI Grounded = Power Ready \n- DSI_NPR_LGEN for Not Power Ready: DSI Grounded = Not Power Ready \n- DSI_PR_APU for Power Ready: DSI Grounded = Power Ready \n- DSI_NPR_APU for Not Power Ready: DSI Grounded = Not Power Ready\n ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-499],[SES-ACEPC-500]'}, u'SSCS_ACLog_1370': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Confirmation time for RCCB Failed Open and RCCB Failed Closed failure shall be 2s +/- 0,5s.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1379]'}, u'SSCS_ACLog_896': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall lauch and perform independently its own PBIT order.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-258]'}, u'CAN-IRD-289': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to EMERLOG through EDMU_XLOG_IDENT message:\n\uf0a7\tEDMU EMERLOG Software Interface Version: EDMU to EMERLOG Software Interface Version associated to this version of specification shall be 0x01.', 'refer': u'[SPE-BITE-1414]'}, u'SSCS_ACLog_1371': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Confirmation time for RCCB auxiliary status discrepancy failure shall be 2s +/- 0,5s.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1380]'}, u'CAN-IRD-285': {'allocation': u'Emer Log SSCS', 'body': u'EMERLOG shall send the following data to EDMU through EMERLOG_EDMU_ANALOG_x message:\n\uf0a7\tAnalog measurement of EMER: digital value of the measured current or voltage.\n\uf0a7\tValidity of the analog measurement of EMER: the signal is valid or not.', 'refer': u'[SIRD-EPGDS-3023]'}, u'CAN-IRD-286': {'allocation': u'Emer Log SSCS', 'body': u'EMER analog measurements shall include the following value: \n\uf0a7\tAC_ESS_BUSBAR_PHA_VOLTAGE\n\uf0a7\tAC_ESS_BUSBAR_PHB_VOLTAGE\n\uf0a7\tAC_ESS_BUSBAR_PHC_VOLTAGE\n\uf0a7\tESS_TRU_OUT_VOLTAGE\n\uf0a7\tESS_TRU_OUT_CURRENT\n\uf0a7\tESS_TRU_OUT_REVERSE_CURRENT\n\uf0a7\tAC_ESS_BUSBAR_PHA_FREQUENCY\n\uf0a7\tAC_ESS_BUSBAR_PHB_FREQUENCY\n\uf0a7\tAC_ESS_BUSBAR_PHC_FREQUENCY', 'refer': u'[SIRD-EPGDS-2336]'}, u'CAN-IRD-287': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request EMERLOG_EDMU_ANALOG_x every 250 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-281': {'allocation': u'Emer Log SSCS', 'body': u'EMERLOG shall send the following data to EDMU through EMERLOG_EDMU_CB_STATUS_x messages:\n\uf0a7\tState of EMER CB: CB is open or closed.\n\uf0a7\tValidity of the state of EMER CB: the state signal is valid or not.', 'additional': u'Indicate the CBx master contact is \u201cclose\u201d or \u201copen\u201d.', 'refer': u'[SIRD-EPGDS-253],[SIRD-EPGDS-1008],[SIRD-EPGDS-2051],[SIRD-EPGDS-2052]'}, u'CAN-IRD-283': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request EMERLOG_EDMU_CB_STATUS_x every 250 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_879': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall send the AEC State through the CAN busses', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1668]'}, u'SSCS_ACLog_1373': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The BITE NVM area shall be composed of one header and 191 Fault records according the following table : \n  \nTable 25: BITE NVM area', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1351]'}, u'SSCS_ACLog_902': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog shall test the "5s Power cut" function one time at the begining of CBIT, twice if the first test is failed', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-111],[SPE-BITE-1550]'}, u'CAN-IRD-832': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send EDMU_XLOG_DISC_1 every 250 ms to DCLOG.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-831': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to EMERLOG through EDMU_XLOG_DISC_1 :\n- ELC_CNTOR_CLOSED status from ACLOG2 : ELC is closed or open\n- Validity of ELC_CNTOR_CLOSED : Signal is valid or not\n- RAT_HEATER_SSPC_CLOSED status from SSPCM : SSPC is closed or open\n- Validity of RAT_HEATER_SSPC_CLOSED : Signal is valid or not', 'refer': u'[SIRD-EPGDS-2538]'}, u'SSCS_ACLog_871': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall provide a DSI Ground/Open 1mA "DSI_ACEP_PB"', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-662]'}, u'SSCS_ACLog_870': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'The reference voltage will be ASI_DC_ACEP_PINE_RET', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'The ACLog shall provide an ASI DC "ASI_DC_ACEP_PINE"', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'need to be define in SES', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_872': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall provide a DSI Ground/Open 1mA "DSI_GS_PB"', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-529]'}, u'SSCS_ACLog_875': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog2 shall read AEC auxiliaries contacts thanks to the DSI Ground/Open 5mA\n "DSI_AC_CTC3_OPP_NO" for Normally Opened aux contact: DSI Open = CTC Open and \n "DSI_AC_CTC3_OPP_NC" for Normally Closed aux contact : DSI Grounded = CTC Open', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-433]'}, u'SSCS_ACLog_874': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog1 shall read AEC auxiliaries contacts thanks to the DSI Ground/Open 5mA \n "DSI_AC_CTC3_NO" for Normally Opened aux contact: DSI Open = CTC Open and \n "DSI_AC_CTC3_NC" for Normally Closed aux contact : DSI Grounded = CTC Open', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-433]'}, u'SSCS_ACLog_877': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_876': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1147': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_971': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog printed circuit board shall be designed to established standards, meeting design requirements as specified in IPC2221.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-3327]'}, u'SSCS_ACLog_972': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog PCBs housed within card racks (LRUs) shall be individually keyed, clearly marked and color coded if necessary such that the cards cannot be inserted into the incorrect slot.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-391]'}, u'SSCS_ACLog_486': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The GFI protection shall be reset through CAN busses.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-401]'}, u'SSCS_ACLog_974': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall have a conspicuous and efficient locking mechanism that securely holds the card in place, independently of the enclosure box or rack cover.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-392]'}, u'SSCS_ACLog_975': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall include extractors to facilitate card removal, and clamp into the position.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-698]'}, u'SSCS_ACLog_976': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1140': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'The ACLog2 shall send "EXT_AC_CONNECTED" through the CAN busses when AC External Power is CONNECTED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To define associated CAN bit', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_978': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'Ground/Open DSI shall be designed to protect the board against reverse currents (e.g. by a diode) ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-723]'}, u'SSCS_ACLog_979': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'Ground/Open DSI shall be filtered by a 1st order low pass filter,featuring a time constant of 3ms +/-30%.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-725]'}, u'SSCS_ACLog_977': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall be design to be cooled by natural convection', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-122]'}, u'SSCS_ACLog_1149': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall monitor Contactors Auxiliary status discrepancy failure during CBIT', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-563],[SPE-BITE-583],[SPE-BITE-944]'}, u'SSCS_ACLog_1148': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_903': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog shall test the Antiparallelling function during CBIT by computing the anti-paralleling failure according the following truth table:\n \n \nTable 39: Anti-paralleling protection (status & failure)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1483]'}, u'SSCS_ACLog_1170': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_650': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'- ACLog1: CAN bus 1A and CAN bus 2A- ACLog2: CAN bus 1B and CAN bus 2B', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall provide two CAN busses to communicate with EDMUs:\n- CAN1_H & CAN1_L\n- CAN2_H & CAN2_L\t', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-3148],[SPE-BITE-199],[SES-ACEPC-531],[SES-ACEPC-532]'}, u'SSCS_ACLog_1116': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACMP Unbalance protection status shall be communicated through CAN busses.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2465]'}, u'SSCS_ACLog_770': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall meet the "Short Time High Operating Temperature" requirements defined in section 4 of RTCA/DO-160G Category A2.\nTemperature Elevation of 10\xb0C is  applied to the ambient temperature.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-134]'}, u'SSCS_ACLog_1179': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1142': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Upon Initiated BIT request, the ACLOG shall reset latched protections', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1033]'}, u'SSCS_ACLog_922': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Confirmation time for ACLog Contactor Auxiliary Status Discrepancy failure shall be 2s +/-0.5s', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-811]'}, u'CAN-IRD-238': {'allocation': u'DC Log SSCS', 'body': u'DCLOG[1/2] shall send the following data to EDMU through DCLOG[1/2]_EDMU_CB_STATUS_x message:\n\uf0a7\tState of DC CB: CB is open or closed.\n\uf0a7\tValidity of the status of DC CB: the state signal is valid or not.', 'additional': u'Indicate the CBx master contact is \u201cclose\u201d or \u201copen\u201d.', 'refer': u'[SIRD-EPGDS-253],[SIRD-EPGDS-1008],[SIRD-EPGDS-2050],[SIRD-EPGDS-2053],[SIRD-EPGDS-2054]'}, u'SSCS_ACLog_1036': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'The ACLog shall implement a Tyco Electronic connector Ref 2-5767004-2 dedicated to microcontroller debugging and traceing (Nexus)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'Imposed by debugging and traceing tools', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1177': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'PBIT tests results shall be independant of the inputs of the ACLog for the functions tested during PBIT.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-268]'}, u'CAN-IRD-231': {'allocation': u'DC Log SSCS', 'body': u'Supplying sources shall include the following sources or disconnected or invalid:\n\uf0a7\tR_GEN;\n\uf0a7\tL_GEN;\n\uf0a7\tAPU_GEN;\n\uf0a7\tEXT_AC;\n\uf0a7\tMAIN_BATT;\n\uf0a7\tAPU_BATT;\n\uf0a7\tRAT_GEN;\n\uf0a7\tTRU1;\n\uf0a7\tTRU2;\n\uf0a7\tESS_TRU;', 'refer': u'[SIRD-EPGDS-1020],[SIRD-EPGDS-1055],[SIRD-EPGDS-1896],[SIRD-EPGDS-6773]'}, u'CAN-IRD-232': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request DCLOG[1/2]_EDMU_NETWORK_STATUS_x every 50 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-235': {'status': u'TBD', 'allocation': u'DC Log SSCS', 'body': u'DC protections shall include the following protections for DCLOG1:\n\uf0a7\tTBD', 'derived': u'True', 'rationale': u'Provision'}, u'CAN-IRD-234': {'allocation': u'DC Log SSCS', 'body': u'DCLOG[1/2] shall send the following data to EDMU through DCLOG[1/2]_EDMU_PROTEC_STATUS message:\n\uf0a7\tState of DC protections: protection is activated or not.', 'derived': u'True', 'rationale': u'Provision'}, u'CAN-IRD-236': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request DCLOG[1/2]_EDMU_PROTEC_STATUS every 50 ms.', 'rationale': u'Provision', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1491': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW, SW', 'body': u'The AC Log shall allocate an area of at least 2 kbytes for CONTEXT purpose in NVM.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'specified CONTEXT memory size', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-582': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send EDMU_GCU_FLIGHTINFO_x every 1 second to RGCU.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-581': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to RGCU through EDMU_GCU_FLIGHTINFO_x messages:\n\uf0a7\tDate : Digital values of Year, Month and Day\n\uf0a7\tValidity of Date and time : Date and time is valid or not\n\uf0a7\tTime : Digital values of Hour and Minute\n\uf0a7\tFlight phases\n\uf0a7\tValidity of Flight phase : Flight phase is valid or not\n\uf0a7\tAircraft tail\n\uf0a7\tValidity of Aircraft tail : Aircraft tail is valid or not\n\uf0a7\tFlight leg\n\uf0a7\tValidity of Flight leg : Flight leg is valid or not', 'refer': u'[SIRD-EPGDS-1898],[SPE-BITE-996]'}, u'SSCS_ACLog_1492': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'There is no ASI spare quantity defined in SIRD OR SESThere is no DSOspare quantity defined in SIRD OR SES', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The AC Log shall provide the DSI, DSO and ASI spares  numbers below:\n \n \nTable 31: DSI, DSO and ASI used and spares number', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-871],[SIRD-EPGDS-876],[SES-ACEPC-506],[SES-ACEPC-507],[SES-ACEPC-787]'}, u'CAN-IRD-586': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request RGCU_EDMU_IDENT_x every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-585': {'allocation': u'HS', 'body': u'RGCU shall send the following data to EDMU through RGCU_EDMU_IDENT_x messages:\n\uf0a7\tSoftware Interface Version: RGCU to EDMU Software Interface Version associated to this version of specification shall be 0x01.\n\uf0a7\tthe CRC32 of its software (A665 CRC32 calculation shall be used)\n\uf0a7\tits Module type : Module type is RGCU\n\uf0a7\tits LRU Part Number\n\uf0a7\tits SW Part Number\n\uf0a7\tit Serial Number', 'additional': u"For P/N and S/N :1 - Not used char to be filled with NULL char.2 - Char 1 is MSB of the string. Exple : P/N : ECE778785Char 1 = 'E'Char 2 = 'C'...Char 9 = '5'Char 10 = Null char...Char 16 = Null char", 'refer': u'[SIRD-EPGDS-2975],[SPE-BITE-1414]'}, u'CAN-IRD-584': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to RGCU through EDMU_GCU_IDENT message:\n\uf0a7\tEDMU RGCU Software Interface Version: EDMU to RGCU Software Interface Version associated to this version of specification shall be 0x01.', 'refer': u'[SPE-BITE-1414]'}, u'SSCS_ACLog_1499': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The AC Log shall include the 20 milliseconds of opening time of the contactors in all delay times or confirmation times of protection functions.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-245]'}, u'SSCS_ACLog_1498': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'DSO interfaces shall be protected against short circuits to ground and +28VDC.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-3329],[SES-ACEPC-1018]'}, u'CAN-IRD-431': {'allocation': u'DC Log SSCS', 'body': u'DCLOG[1/2] shall send the following data to EDMU through DCLOG[1/2]_EDMU_ALARM_STATUS message:\n\uf0a7\tState of DC Alarm: Alarm is activated or not.', 'refer': u'[SIRD-EPGDS-1055]'}, u'SSCS_ACLog_921': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of Contator failed Open, Failed Closed, or contactor auxiliary status discrepancy failure, the ACLog shall declare the failure to the EDMU using CAN busses', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-575],[SPE-BITE-585],[SPE-BITE-972]'}, u'SSCS_ACLog_1173': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-464': {'allocation': u'AC Log SSCS', 'body': u'ACLOG[1/2] shall send the following data to EDMU through ACLOG[1/2]_EDMU_RCCB_CURRENT_x messages:\n\uf0a7\tCurrent of each RCCB phase: Analog value of the measured current.\n\uf0a7\tValidity of each RCCB phase current: the current signal is valid or not.', 'refer': u'[SIRD-EPGDS-1050],[SIRD-EPGDS-1083]'}, u'CAN-IRD-465': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request ACLOG[1/2]_EDMU_RCCB_CURRENT_x every 250 ms', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-466': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS', 'body': u'The messages between EDMU and XLOG shall be set as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-2102]'}, u'CAN-IRD-461': {'allocation': u'DC Log SSCS', 'body': u'DCLOG[1/2] shall send its Engineering Data to EDMU through DCLOG[1/2]_EDMU_ENG_DATA_x messages.', 'derived': u'True', 'rationale': u'Provision'}, u'CAN-IRD-462': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request DCLOG[1/2]_EDMU_ENG_DATA_x every 1 second.', 'derived': u'True', 'rationale': u'Provision', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-745': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the EDMU_GCU_LEEC_COM_message every 100 ms', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-744': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data through EDMU_GCU_LEEC_COM_1 message:\n- Engine_Running  : Left Engine running status\n- Engine_Running_NDO_Valid : Input NDO containing Engine_Running is not received or SSM invalid\n- N2_Selected :  N2 selected in %\n- N2_Selected_NDO_Valid : Input NDO containing N2_Selected is not received or SSM invalid\n- L_Eng_Run_Sw_OFF_Pole_1 : Left Engine Fuel Cut Off switch OFF position\n- L_Eng_Run_Sw_OFF_Pole_1_NDO_Valid : Input NDO containing L_Eng_Run_Sw_OFF_Pole_1 is not received or SSM invalid', 'refer': u'[SIRD-EPGDS-6304]'}, u'CAN-IRD-747': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data through EDMU_GCU_LG_COM_message:\n- NG_WOFFW\n- RG_WOFFW\n- LG_WOFFW\n- NG_WOW\n- RG_WOW\n- LG_WOW\n- LRG_WOW\n- WOFFW\n- MG_WOW\n- WOW\n- WOW_Fail\n- WOW_STATUS_Valid : Input NDO containing WOW signals is not received or SSM invalid', 'refer': u'[SIRD-EPGDS-1563],[SIRD-EPGDS-2564],[SIRD-EPGDS-2565],[SIRD-EPGDS-2579],[SIRD-EPGDS-2762]'}, u'SSCS_ACLog_1171': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_481': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'When a GFI protection is activated for ACMP 3B RCCB, the ACLog1 shall proceed to the ACMP 3B RCCB opening.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-393],[SIRD-EPGDS-2460]'}, u'SSCS_ACLog_1429': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'ACLog shall provide 2 DSI Ground/Open 1mA "DSI_OL_AC_EP" and "DSI_NOL_AC_EP" to monitor AC EP Overload signals', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2620]'}, u'CAN-IRD-728': {'allocation': u'HS', 'body': u'LGCU shall send the following Synoptic data to EDMU through LGCU_EDMU_SYNOPTIC_2 messages: \n- Left Generator load\n- Validity attached to this piece of data', 'refer': u'[SIRD-EPGDS-2125]'}, u'SSCS_ACLog_646': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall implement an hardware function to detect power interrupt greater than 5s +/- 1s (Loss 5s function).', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-690]'}, u'SSCS_ACLog_1201': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'The P1 pinout shall be defined as follow:\n   \n   \nTable 28: P1 connector Pinout', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To define connectors pins allocation', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_913': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of Contactor DSO failure, the ACLog shall declare the failure to the EDMU using CAN busses', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-619],[SPE-BITE-772]'}, u'SSCS_ACLog_920': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall monitor Contactor Failed Closed failure for all driven contactors during CBIT', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-750]'}, u'SSCS_ACLog_1202': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'The P2 pinout shall be defined as follow:\n   \n   \nTable 29: P2 connector Pinout', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To define connectors pins allocation', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_655': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'ACLog CAN transceivers shall be fully compliant with ISO 11898-2, high speed specification.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2100]'}, u'SSCS_ACLog_1358': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1359': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall \n- authorize all AC External protection when "AC external power CONNECTED"\nAND\n- inhibit them else', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-6846]'}, u'SSCS_ACLog_1049': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog MTBF shall be calculated with the following sources of information:\n- Historical Reliability Validation test results or in-service removals ,\n- Accumulated data from the field or historical test results\n- Generic Data from sources such as NPRD-95, EPRD-97, FMD-97, NSWC-06 Mechanical, MIL-HDBK-217F, other reliability prediction models or databases.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-673]'}, u'SSCS_ACLog_1352': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall compute the "Ext_AC_Voltage_Yellow" synoptic message according the following Logic : \nTRUE\nAt least one AC EP phase voltage sent on CAN bus is greater or equal to 134V.\n OR\nAt least one AC EP phase voltage sent on CAN bus is lower or equal to 97V.\nFALSE otherwise', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1141]'}, u'SSCS_ACLog_1073': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog1 shall transmit the three ACMP3B phases current (analog values) to the EDMU on the CAN busses', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-1083]'}, u'SSCS_ACLog_1350': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'the ACLog2 shall compute the "Ext_AC_Frequency_Yellow" synoptic message according the following Logic : \nTRUE\nExternal AC Power supply frequency sent on CAN bus is lower or equal to 375Hz,\nOR \nExternal AC Power supply frequency sent on CAN bus is greater or equal to 485Hz\nFALSE otherwise.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1136]'}, u'SSCS_ACLog_1351': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall compute the "Ext_AC_Power_Yellow" synoptic message according the following Logic : \nTRUE\nExternal AC Power supply Load sent on CAN bus is lower or equal to 10KVA.\nOR\nExternal AC Power supply Load sent on CAN bus is greater or equal to 60KVA.\nFALSE otherwise', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1140]'}, u'SSCS_ACLog_1422': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall include dedicated connector, accessible from in front of EPCs, to download applicative software when they are installed into the aircraft conforming to Software Field Loading as per RTCA DO-178B.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-686]'}, u'SSCS_ACLog_1205': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_654': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The differential capacitor Cdiff measured on the next figure shall not exceed 50pf:\n   \nFigure 31: CAN busses differential capacitance', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2251]'}, u'SSCS_ACLog_1427': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1217': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'SIRD should be updated', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If GLC2 contactor status is open and GLC2 failure is "command" (contactor failed open), then AClog shall:\n- apply GLC2 acknowledgment as "not acknowledged" ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1816]'}, u'SSCS_ACLog_1216': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'SIRD shhould be updated', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If GLC1 contactor status is open and GLC1 failure is "command" (contactor failed open), then ACLog shall:\n- apply GLC1 acknowledgment as "not acknowledged" ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1815]'}, u'SSCS_ACLog_1214': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Failure without impact on the Network management', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of Aux failure detected on ELC, the ELC command shall not be modified', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1832]'}, u'SSCS_ACLog_1565': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'For ground phases, the probability of Loss of external power protection when required, classified as a potentially Minor failure condition, shall be equal to or less than 1E-04 per flight hour.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-985]'}, u'SSCS_ACLog_1564': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'For ground phases, the probability of Loss of external power, classified as a potentially No Safety Effect failure condition, shall be equal to or less than 1E-04 per flight hour.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-984]'}, u'SSCS_ACLog_1219': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'SIRD should be updated', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If ALC contactor status is closed and ALC failure is "command" (contactor failed closed), then ACLog shall:\n- open ATC1 and ATC3.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1817]'}, u'SSCS_ACLog_1070': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall send ACMPx "Aux" failure through the CAN busses', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-618]'}, u'CAN-IRD-301': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to EMERLOG through EDMU_XLOG_FLIGHTINFO_x messages:\n\uf0a7\tDate : Digital values of Year, Month and Day\n\uf0a7\tValidity of Date and time : Date and time is valid or not\n\uf0a7\tTime : Digital values of Hour and Minute\n\uf0a7\tFlight phases\n\uf0a7\tValidity of Flight phase : Flight phase is valid or not\n\uf0a7\tAircraft tail\n\uf0a7\tValidity of Aircraft tail : Aircraft tail is valid or not\n\uf0a7\tFlight leg\n\uf0a7\tValidity of Flight leg : Flight leg is valid or not', 'refer': u'[SIRD-EPGDS-1898],[SPE-BITE-996]'}, u'SSCS_ACLog_1560': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'shedding capability including microcontroler cannot be conform to this req', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'For all Flight phases, the probability of Loss of load shedding capability when needed, Normal power available, classified as a potentially Hazardous failure condition, shall be equal to or less than 1.00E-07 per flight hour.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-988]'}, u'CAN-IRD-302': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send EDMU_XLOG_FLIGHTINFO_x every 1 second to EMERLOG.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1406': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-519': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'CAN IDs of EDMU to SPDA7 frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_1404': {'status': u'TBC', 'terminal': 'EMPTY', 'additional': u'Should be specified at SIRD Level', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'For command data received which have not an associated validity, the ACLog shall take into account the first command received', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'Shall be specified at SIRD Level', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1126': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Label (2)waiting for SIRD update', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall switch from AC external power CONNECTED to AC external power NOT CONNECTED when: PIN E voltage is NOT PRESENT', 'safety': 'EMPTY', 'verification': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-6824]'}, u'SSCS_ACLog_1046': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog functional connectors P1 and P2 shall have a spare capacity of at least 15% each', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-786]'}, u'SSCS_ACLog_571': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'DSI PR / NPR:Open = DSI input is OpenClosed = DSI input is grounded', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The source availability of the right gen, left gen and APU shall be determined thanks to the following table:\n \n \n \nTable 3: Power sources availability', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2591]'}, u'SSCS_ACLog_572': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1186': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-510': {'allocation': u'EDMU SSCS', 'body': u'CAN IDs of EDMU to ALGCU frames are defined below :', 'derived': u'True', 'rationale': u'Detailed CAN Identifier', 'refer': u'[SIRD-EPGDS-2102]'}, u'SSCS_ACLog_729': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The AClog shall remain with the current active "CLOSED" command unless its data becomes invalid (CAN bus loss or invalid data field). ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2164]'}, u'CAN-IRD-513': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send EDMU_SSPCM_IBITE every 500 ms.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_578': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Power Ready = Label (7),Not Power Ready = Label (8)', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog1 shall determine the AC EP POWER READY and the AC EP PR failure thanks to the following table:\n  \n \nTable 17:  AC EP POWER READY and the AC EP PR failure', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2619],[SPE-BITE-595]'}, u'SSCS_ACLog_579': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1409': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_695': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The age of a signal send on CAN busses shall be less than a half the refresh time of this signal on CAN busses', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-603]'}, u'SSCS_ACLog_694': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall continue to use the data on one CAN bus until the data become not available (or not valid)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-316]'}, u'SSCS_ACLog_1206': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'If a new Network configuration occurs or if a new EDMU command is required during a sequencing command, the ACLog shall stop the current sequencing and launch a new one by taking into account the news inputs datas (AC Network and  EDMU commands).', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To converge quickly to a stable state', 'issue': u'1', 'refer': 'EMPTY'}, u'SSCS_ACLog_1123': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'If an ACMP protection is activated, the following correponding ACMP states shall be sended through the CAN busses :\n- TRIPPED_STATE: Tripped\n- OPEN_LOCKED_STATE: Not Open Locked', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'to inform EDMU', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_693': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Applicable to redundancy Data only. Except for PCD control command, there is not mix betwenn redundant messages. If all the data are valid on the redundant message, the redundant message is used. If not, no switching occurs.For PCD control command refer to the commutation chapter.', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If a message is not available (or contain not valid data) on one CAN bus, ACLog shall use the message data received  on the redundant CAN bus.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-315],[SIRD-EPGDS-3148]'}, u'SSCS_ACLog_692': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'At power-up, the ACLog shall work by default with the data received on the CAN bus 1', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-314]'}, u'SSCS_ACLog_754': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog2 shall acknowledge RCGU thanks to DSO_BUS_ACKN_GEN and DSO_BUS_NACKN_GEN (to close GLC2):\n- To acknowledge (to close): DSO_BUS_ACKN_GEN set to ground and DSO_BUS_NACKN_GEN set to open\n- To not acknowledge (to open): DSO_BUS_ACKN_GEN set to open and DSO_BUS_NACKN_GEN set to ground', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-6763],[SES-ACEPC-583]'}, u'SSCS_ACLog_755': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog1 shall acknowledge APU CGU thanks to DSO_BUS_ACKN_APU and DSO_BUS_NACKN_APU (to close ALC):\n- To acknowledge (to close): DSO_BUS_ACKN_APU set to ground and DSO_BUS_NACKN_APU set to open\n- To not acknowledge (to open): DSO_BUS_ACKN_APU set to open and DSO_BUS_NCKN_APU set to ground', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-6763],[SES-ACEPC-582]'}, u'SSCS_ACLog_756': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_757': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_699': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'ACLog design shall be dissimilar from EMERLog design in terms of:\n- network management \n- protection function design\n- active and passive component technologies used for network management and protection functions', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-903]'}, u'SSCS_ACLog_751': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall provide 4 DSO Ground/Open low power to acknowledge GCUs (to close GLC1, GLC2 and ALC contactors):\n- DSO_BUS_ACKN_GEN\n- DSO_BUS_NACKN_GEN\n- DSO_BUS_ACKN_APU\n- DSO_BUS_NACKN_APU', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-582],[SES-ACEPC-583]'}, u'SSCS_ACLog_596': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'DSI NO / NC aux contact :Open = DSI input is OpenClosed = DSI input is grounded', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall compute the ELC contactor status, status validity and failure according to the following table:\n \n \nTable 6: ELC contactor status, status validity and failure for ACLog2', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1830],[SIRD-EPGDS-1831],[SIRD-EPGDS-1832],[SPE-BITE-943],[SPE-BITE-944]'}, u'SSCS_ACLog_753': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog1 shall acknowledge LCGU thanks to DSO_BUS_ACKN_GEN and DSO_BUS_NACKN_GEN (to close GLC1):\n- To acknowledge (to close): DSO_BUS_ACKN_GEN set to ground and DSO_BUS_NACKN_GEN set to open\n- To not acknowledge (to open): DSO_BUS_ACKN_GEN set to open and DSO_BUS_NACKN_GEN set to ground', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-6763],[SES-ACEPC-582]'}, u'CAN-IRD-121': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'One CAN bus named EDMU-1-CAN-SPDA-4 shall connect the following LRUs:\n\uf0a7\tEDMU1\n\uf0a7\t8 x SSPCM of SPDA-4 on control Bus B', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-312]'}, u'CAN-IRD-120': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'One CAN bus named EDMU-2-CAN-SPDA-3 shall connect the following LRUs:\n\uf0a7\tEDMU2\n\uf0a7\t8 x SSPCM of SPDA-3 on control Bus B', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-311]'}, u'CAN-IRD-123': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'One CAN bus named EDMU-1-CAN-SPDA-5 shall connect the following LRUs:\n\uf0a7\tEDMU1\n\uf0a7\t8 x SSPCM of SPDA-5 on control Bus A', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-311]'}, u'CAN-IRD-122': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'One CAN bus named EDMU-2-CAN-SPDA-4 shall connect the following LRUs:\n\uf0a7\tEDMU2\n\uf0a7\t8 x SSPCM of SPDA-4 on control Bus A', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-312]'}, u'CAN-IRD-125': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'One CAN bus named EDMU-1-CAN-SPDA-6 shall connect the following LRUs:\n\uf0a7\tEDMU1\n\uf0a7\t8 x SSPCM of SPDA-6 on control Bus B', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-312]'}, u'CAN-IRD-124': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'One CAN bus named EDMU-2-CAN-SPDA-5 shall connect the following LRUs:\n\uf0a7\tEDMU2\n\uf0a7\t8 x SSPCM of SPDA-5 on control Bus B', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-311]'}, u'CAN-IRD-127': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'One CAN bus named EDMU-1-CAN-SPDA-7 shall connect the following LRUs:\n\uf0a7\tEDMU1\n\uf0a7\t8 x SSPCM of SPDA-7 on control Bus A', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-311]'}, u'CAN-IRD-126': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'One CAN bus named EDMU-2-CAN-SPDA-6 shall connect the following LRUs:\n\uf0a7\tEDMU2\n\uf0a7\t8 x SSPCM of SPDA-6 on control Bus A', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-312]'}, u'CAN-IRD-129': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'One CAN bus named EDMU-1-CAN-SPDA-8 shall connect the following LRUs:\n\uf0a7\tEDMU1\n\uf0a7\t8 x SSPCM of SPDA-8 on control Bus B', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-312],[SIRD-EPGDS-882]'}, u'CAN-IRD-128': {'allocation': u'EDMU SSCS,SSPCM SSCS', 'body': u'One CAN bus named EDMU-2-CAN-SPDA-7 shall connect the following LRUs:\n\uf0a7\tEDMU2\n\uf0a7\t8 x SSPCM of SPDA-7 on control Bus B', 'refer': u'[SIRD-EPGDS-103],[SIRD-EPGDS-104],[SIRD-EPGDS-105],[SIRD-EPGDS-109],[SIRD-EPGDS-120],[SIRD-EPGDS-121],[SIRD-EPGDS-122],[SIRD-EPGDS-123],[SIRD-EPGDS-125],[SIRD-EPGDS-311]'}, u'SSCS_ACLog_595': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog2 shall read the ELC auxiliaries contacts thanks to the DSI Ground/Open 5mA \n "DSI_AC_CTC1_NO" for Normally Opened aux contact: DSI Open = CTC Open and \n "DSI_AC_CTC1_NC" for Normally Closed aux contact : DSI Grounded = CTC Open', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-417]'}, u'SSCS_ACLog_648': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog transparency time, from when the last power supply is lower than 20V, shall be at least 6ms', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2313]'}, u'SSCS_ACLog_459': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'- The relation between the current (I) and the ASI input voltage (V) is given by the following formula: V=(Rb)xI/1000Rb: Current transformer burden resistor (four 91Ohms resistors in parrallel)1000: Current tranformer nominal current ratio (1/1000)', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The i2t protection shall be activated when one phase current is higher than the following blue curve (with IN=60A):\n   \n   \nFigure 24: ACMP i2t protection definition', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-442],[SES-ACEPC-366],[SES-ACEPC-920]'}, u'SSCS_ACLog_591': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If GLC2 contactor status is closed and GLC2 failure is "command" (contactor failed closed), then ACLog shall:\n- open ATC2', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1814]'}, u'SSCS_ACLog_1207': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_649': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall be able to be powered by the three +28V power supplies:\n- 28V_AC_EP_TR\n- 28V_DC_BUS1\n- 28V_DC_ESS_BUS2', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-253],[SES-ACEPC-542]'}, u'SSCS_ACLog_1329': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog1 shall compute the "ATC1_FAILED_OPEN_CAS" CAS message according the following logic : \nTRUE\nATC1 is declared failed Open\nFALSE otherwise', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1202]'}, u'SSCS_ACLog_1328': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog1 shall compute the "ATC1_FAILED_CLOSED_CAS" CAS message according the following logic : \nTRUE  \nATC1 is declared failed Closed\nFALSE otherwise', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1201]'}, u'SSCS_ACLog_1327': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog1 shall compute the "ACLOG1_DP_ACT" CAS message according the following Logic : \nTRUE \nDifferential protection is active \nFALSE otherwise', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1200]'}, u'SSCS_ACLog_721': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall manage the ACMPs RCCB in accordance with the EDMU commands sent through the CAN busses', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-220]'}, u'SSCS_ACLog_1325': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall inhibit ATC1, ATC2 and AEC Open failure detection when CAN busses are lost or if the computed XFR validity is invalid.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-3129]'}, u'SSCS_ACLog_1324': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The number of watchdog resets shall be deleted when "On ground" transition is detected through the WOW DSI', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-3142]'}, u'SSCS_ACLog_597': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall send the ELC state through the CAN busses', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1668]'}, u'SSCS_ACLog_1471': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'When AC External Power is NOT Power Ready, ACLog2 shall set:\n- Ground/Open "DSO_PR_AC_EP" to not active state (OPEN)\n- Ground/Open "DSO_NPR_AC_EP" to active state (GROUND)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'should be allocated to ACLOG at SIRD level (req 6829)', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1321': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If ACMP contactor failure is "command" (ACMP failed closed or open) during 2s +/- 0,5 s, an open command shall be applied to the corresponding ACMP', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-3131],[SIRD-EPGDS-3132]'}, u'SSCS_ACLog_1320': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Failure without impact on the ACMP management', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of status failure detected on ACMP, the ACMP command shall not be modified', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-3133]'}, u'SSCS_ACLog_1011': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1470': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Label (6)', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall switch from AC External power POWER READY to AC External power NOT POWER READY when:\n- AC external power is NOT CONNECTED\nOR\n- At least one AC EP 115V Protection is ACTIVE\nOR\n- PINE Over Voltage Protection is ACTIVE\nOR\n- The aircraft position is "In flight"', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1419],[SIRD-EPGDS-6828]'}, u'CAN-IRD-651': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data through EDMU_XLOG_NVM_DL message:\n\uf0a7\tNVM Download request: NVM downloading operation is requested or not.\n\uf0a7\tNVM reset request: NVM reset operation is requested or not.\n\uf0a7\tNVM Block First byte: First byte of NVM block requested by EDMU.\n\uf0a7\tNVM Block size : Number of bytes of NVM requested by EDMU', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-653],[SPE-BITE-1054],[SPE-BITE-1057]'}, u'SSCS_ACLog_672': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'time to perform  its Preliminary Tests', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The Warm Start time shall be less than 200ms +/-20ms (including 60ms of HW power up time)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1561]'}, u'SSCS_ACLog_1477': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Label (11)', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall switch from AC External Power Mode NOT ACTIVE to AC External Power Mode ACTIVE when:\n- ELC ACEP CLOSE Request is met\nAND\n- ELC Status is CLOSED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-6835]'}, u'SSCS_ACLog_722': {'status': u'TBD', 'terminal': 'EMPTY', 'additional': u'tolerance added', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall wait for up to 1s +/-10ms (from the CBIT beginning) to receive valid RCCB "CLOSED" commands from the CAN Bus 1 (Left).', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2162]'}, u'SSCS_ACLog_1208': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'The ACLog2 shall consider "28V_AC_EP_TR" PRESENCE when internal DSI is ACTIVE', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'ACLog need to know the "28V_AC_EP_TR" PRESENCE for ACEP function ', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_924': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall monitor Power Ready indication discrepancy failure from GCUs during CBIT', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-168]'}, u'SSCS_ACLog_1475': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Label (10)should be linked to SIRD 6833 when allocation will be corrected because this function has been reworked', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall switch from ELC ACEP CLOSE Request to ELC ACEP OPEN Request when:\n- AC External power is NOT POWER READY\nOR\n- ELC contactor is Failed Open\nOR\n- A "DSI_ACEP_PB" falling edge is detected', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1831]'}, u'SSCS_ACLog_1566': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'electronic command (include microcontroller) cannot be conform to this req', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'For all Flight phases, the probability of Inadvertent paralleling of Main AC Generators, L-Gen and R-Gen (loss of anti-paralleling protection)., classified as a potentially Hazardous failure condition, shall be equal to or less than 1E-07 per flight hour.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-979]'}, u'SSCS_ACLog_760': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The insulation resistance between individually isolated discrete terminals and between all terminals and case shall be greater than 1 M\u03a9 when tested at a voltage of 100Vdc \xb1 5%.\nRemark: Any filter component or transient protection device not designed to withstand such a test can be disconnected before carrying out this test.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-108]'}, u'SSCS_ACLog_1045': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall continue to communicate in normal mode when a ground-offset is up to +/-2,5Vrms voltage fluctuation or ground voltage fluctuation up to+/-4Vdc.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-783]'}, u'SSCS_ACLog_628': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If ATC2 contactor status is open and ATC2 failure is "command" (contactor failed open), ACLog shall:\n- open ATC2', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1826]'}, u'SSCS_ACLog_629': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'open command of ELC is done with DSO_ELC_OPEN_REQSIRD should be updated', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If ATC3 contactor status is closed and ATC3 failure is "command" (contactor failed closed), ACLog1 shall:\n- apply AGCU Acknowledgement as "not acknowledged"\nAND\n- activate DSO_ELC_OPEN_REQ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1827]'}, u'SSCS_ACLog_1109': {'status': u'TBD', 'terminal': 'EMPTY', 'additional': u'To inform the other ACLog that this ACLog has a problem', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'The ACLog shall implement a DSI Ground/Open 1mA "DSI_ACLOG_OPP_VALID"', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To inform the other ACLog that this ACLog has a problem', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_937': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of AC EP Overload signals indication discrepancy failure, ACLog1 shall declare the failure to the EDMU through the CAN busses. ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-3381],[SPE-BITE-753]'}, u'SSCS_ACLog_930': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The Overvoltage AC external power hardware protection shall be activated and latched when one phase voltage (ASI_ACEP_VOLTAGE_PHA, ASI_ACEP_VOLTAGE_PHB, ASI_ACEP_VOLTAGE_PHC) is higher than 180Vrms (+/-10%) during 300ms (+/-10%)', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2765],[SIRD-EPGDS-2766]'}, u'SSCS_ACLog_932': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'AC EP Overvoltage protection,AC EP Undervoltage protection,AC EP Phase order protection,AC EP Overfrequency protection,AC EP Underfrequency protection,AC EP Overcurrent protection. ', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'ACLog2 shall monitor AC EP protections activation during CBIT', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-620]'}, u'SSCS_ACLog_933': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of protection activation, ACLog2 shall declare the failure to the EDMU using CAN busses.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-621]'}, u'SSCS_ACLog_1103': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'The ACLog microcontroller shall be surveyed by an external hardawre watchdog', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To detect microcontroller abnormal behaviors', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1276': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The AClog shall memorize in non volatile memory all the trip causes of each RCCB.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2174]'}, u'SSCS_ACLog_624': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'SIRD should be updated', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If ATC1 contactor status is closed and ATC1 failure is "command" (contactor failed closed), ACLog shall:\n- apply LGCU Acknowledgement as "not acknowledged"\nAND\n- apply AGCU Acknowledgement as "not acknowledged" ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1820]'}, u'SSCS_ACLog_574': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The computed PR failure of each source (RGEN, LGEN and APU) shall be sent through the CAN busses', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-168]'}, u'SSCS_ACLog_626': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If ATC1 contactor status is open and ATC1 failure is "command" (contactor failed open), ACLog shall:\n- open ATC1', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1821]'}, u'SSCS_ACLog_627': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'SIRD should be updated', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If ATC2 contactor status is closed and ATC2 failure is "command" (contactor failed closed), ACLOG shall:\n- apply Open command for ELC  \nAND \n- apply RGCU Acknowledgement as "not acknowledged"', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-1825]'}, u'CAN-IRD-635': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data through EDMU_XLOG_NVM_DL message:\n\uf0a7\tNVM Download request: NVM downloading operation is requested or not.\n\uf0a7\tNVM reset request: NVM reset operation is requested or not.\n\uf0a7\tNVM Block First byte: First byte of NVM block requested by EDMU.\n\uf0a7\tNVM Block size : Number of bytes of NVM requested by EDMU', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-653],[SPE-BITE-1054],[SPE-BITE-1057]'}, u'CAN-IRD-634': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request ACLOG[1/2]_EDMU_NVM_DL_STATUS every 500 ms.', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1066': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-636': {'allocation': u'AC Log SSCS', 'body': u'ACLOG[1/2] shall send the following data through ACLOG[1/2]_EDMU_NVM_DL_STATUS message :\n\uf0a7\tNVM Download answer: LRU accepts or not the NVM download request from EDMU.\n\uf0a7\tThe size of the NVM : Size of the NVM of the LRU.\n\uf0a7\tThe number of NVM block packets : Number of packet needed to achieve NVM block download if request is accepted else 0.\n\uf0a7\tCRC NVM of block : CRC of NVM block if request is accepted else 0.', 'refer': u'[SIRD-EPGDS-652],[SPE-BITE-1054]'}, u'CAN-IRD-631': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall schedule the request sending according to the following table on EDMU-LGCU interface:', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-113],[SIRD-EPGDS-1059]'}, u'CAN-IRD-630': {'allocation': u'EDMU SSCS', 'body': u'Major sequence frame duration on EDMU-GCU interfaces shall be 1000 ms.', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-114],[SIRD-EPGDS-1059]'}, u'CAN-IRD-633': {'allocation': u'AC Log SSCS', 'body': u'ACLOG[1/2] shall send NVM data to EDMU through ACLOG[1/2]_EDMU_NVM_PACKET_[1;42] messages :\n\uf0a7\tPacket number : The number of the NVM packet transmitted.\n\uf0a7\tNVM packet : 6 bytes of NVM.', 'refer': u'[SIRD-EPGDS-652],[SPE-BITE-1054]'}, u'SSCS_ACLog_1063': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Each anti-paralleling detection activation shall be latched and sent into NVM.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2772]'}, u'CAN-IRD-639': {'allocation': u'EDMU SSCS', 'body': u'On a CAN bus, EDMU shall request only one LRU NVM download at once.', 'derived': u'True', 'rationale': u'To avoid important bus load.', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-749],[SPE-BITE-1054]'}, u'SSCS_ACLog_1069': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Response time between the reception of the command from the EDMU Module and the effective opening/closure of the RCCB shall be less than 65ms +/-5ms (RCCB opening/closure time need be taken into account)', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2167]'}, u'SSCS_ACLog_771': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall meet the "Operating High Temperature" requirements defined in section 4 of RTCA/DO-160G Category A2.\nTemperature Elevation of 10\xb0C is  applied to the ambient temperature.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-133],[SES-ACEPC-291]'}, u'SSCS_ACLog_479': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'the relation between the current (I) and the ASI input voltage (V) is given by the following formula: V=Rgfi x I/1000Rgfi: Resistor dedicated to the GFI protection (two 3KOhms +/-1% resistors in parrallel)', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The GFI protection shall be activated when GFI current level is higher than 2A +/-0.2A', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-846],[SES-ACEPC-852]'}, u'SSCS_ACLog_575': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The overload information of the right gen, left gen and APU shall be determined thanks to the following table:\n   \nTable 36: power source overload informations (status & failure)', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2618]'}, u'SSCS_ACLog_1440': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog2 shall provide a DSO Ground/Open low power "DSO_GS_MODE" (active ground).', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-527]'}, u'SSCS_ACLog_1506': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW, SW', 'body': u'The hardware Overvoltage protection shall provide the trip information to inject into the software overvoltage function the SW', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'without this requirement, the failure declared will be a DSO failure, not an overvoltage', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_904': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog shall test the hardware AC external power overvoltage protection function during PBIT', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-264]'}, u'SSCS_ACLog_1441': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog2 shall provide a DSO Ground/Open medium power "DSO_GS_ON" (active ground).', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-655]'}, u'SSCS_ACLog_1013': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1074': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog2 shall transmit the three ACMP1B and ACMP3A phases current (analog values) to the EDMU on the CAN busses', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-1083]'}, u'CAN-IRD-661': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data through EDMU_GCU_NVM_DL message:\n\uf0a7\tNVM Download request: NVM downloading operation is requested or not.\n\uf0a7\tNVM reset request: NVM reset operation is requested or not.\n\uf0a7\tNVM Block First byte: First byte of NVM block requested by EDMU.\n\uf0a7\tNVM Block size : Number of bytes of NVM requested by EDMU', 'refer': u'[SIRD-EPGDS-652],[SIRD-EPGDS-653],[SPE-BITE-1054],[SPE-BITE-1057]'}, u'SSCS_ACLog_1012': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'High Power DSO Output impedance shall be higher than 1 M\u03a9 when output is open or when the equipment is not powered. ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-754],[SES-ACEPC-755],[SES-ACEPC-756]'}, u'SSCS_ACLog_709': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_527': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'Label (16)waiting for SIRD update (ACLOG2 --> ACLOG)', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall switch from Ground Servicing Mode ACTIVE to Ground Servicing Mode NOT ACTIVE when:\n- ELC Ground Servicing OPEN Request\nAND\n- ELC Status is OPEN', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-6843]'}, u'SSCS_ACLog_1071': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If the ACMPx status is "closed" and the failure is "command", the ACLog shall send a failure "RCCBx_FAILED_CLOSED" through the CAN busses', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-616]'}, u'SSCS_ACLog_929': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of ACLog2 AC EP Power Ready indication discrepancy failure, ACLog1 shall declare the failure to the EDMU using CAN busses', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-597]'}, u'CAN-IRD-709': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following discrete signals to RGCU through EDMU_GCU_DISC_x messages:\n- AC2 Busbar availibility: Power is available or not\n- GLC2 Aux from ACLOG1\n- GLC2 Aux from ACLOG2\n- ATC2 Aux from ACLOG1\n- ATC2 Aux from ACLOG2', 'refer': u'[SIRD-EPGDS-6313]'}, u'SSCS_ACLog_773': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall meet the acceleration requirements defined in Method 513.5 of  MlL-STD-810F.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-151]'}, u'SSCS_ACLog_807': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall meet the induced signal susceptibility requirements defined in section 19 of RTCA/DO-160G Category ZW.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-183]'}, u'SSCS_ACLog_808': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog shall meet the Voltage Spike requirements defined in section 17 of RTCA/DO-160G Category A.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-165]'}, u'CAN-IRD-703': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following discrete signals to LGCU through EDMU_GCU_DISC_x messages:\n- AC1 Busbar availibility: Power is available or not\n- GLC1 Aux from ACLOG1\n- GLC1 Aux from ACLOG2\n- ATC1 Aux from ACLOG1\n- ATC1 Aux from ACLOG2', 'refer': u'[SIRD-EPGDS-6310]'}, u'SSCS_ACLog_1459': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The ACLog main function shall not be affected by a failure or loss of PBIT functionalities.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1407]'}, u'CAN-IRD-704': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send EDMU_GCU_DISC_x every 100 ms to LGCU.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-707': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send EDMU_GCU_DISC_x every 100 ms to AGCU.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-706': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following discrete signals to AGCU through EDMU_GCU_DISC_x messages :\n- ALC Aux from ACLOG1\n- ALC Aux from ACLOG2\n- ATC2 Aux from ACLOG1\n- ATC2 Aux from ACLOG2\n- ATC3 Aux from ACLOG1\n- ATC3 Aux from ACLOG2\n- ATC2 Lockout from ACLOG2', 'refer': u'[SIRD-EPGDS-6311]'}, u'SSCS_ACLog_1191': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall monitor the AC Bus Differential protection activation during CBIT', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-150]'}, u'SSCS_ACLog_1192': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of antiparalleling protection activation, the ACLog shall declare the failure to the EDMU using CAN busses', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-623]'}, u'SSCS_ACLog_1193': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of Differential Protection activation, the ACLog shall declare the failure to the EDMU using CAN busses', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-752]'}, u'SSCS_ACLog_1194': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall monitor the Phase order protection activation during CBIT', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-159],[SPE-BITE-884]'}, u'SSCS_ACLog_1195': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Confirmation time for DSO failure shall be 2s +/- 0,5s.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-796],[SPE-BITE-954]'}, u'SSCS_ACLog_1196': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Confirmation time for ACLog Contactor Failed Closed failure or Contactor Failed Open failure shall be 2s +/- 0,5 s.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-810]'}, u'SSCS_ACLog_1198': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1199': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_928': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of GCU Overload indication discrepancy failure, the ACLog shall declare the failure of the concerned GCU to the EDMU using CAN busses.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-582]'}, u'SSCS_ACLog_1048': {'status': u'MATURE', 'terminal': u'YES', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'The ACLog shall meet the flammability and fire resistance requirements defined in section 26 of RTCA/DO-160G Category C.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SES-ACEPC-856]'}, u'SSCS_ACLog_892': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'As soon as a preliminary test is detected as failed, the ACLog shall refresh watchdog in an infinite loop.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-3033],[SPE-BITE-119]'}, u'SSCS_ACLog_1072': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If the ACMPx status is "open" and the failure is "command", the ACLog shall send a failure "RCCBx_FAILED_OPEN" through the CAN busses', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-616]'}, u'SSCS_ACLog_1398': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'The internals ACLog power supplies shall reach their final values in less than 60ms', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'correspond to the power supply start up and hardware reset max time', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1396': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'The ACLog2 shall consider "AC EP 115V presence" when :\n- three phases (ASI_ACEP_VOLTAGE_PHx) are higher than 90Vrms +/-5Vrms during 5ms +/-1ms', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To define ACEP 115V presence ', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1397': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'The ACLog shall send the ATCx Lockout status validity through the CAN busses', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'Cf FDD', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1394': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'While the ACLog is perfoming a sequencing command step (step 0 to step 4), the ACLog shall send the signal ACMPx_SHED_STATE as "Shed", else "Not Shed"', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-3143]'}, u'SSCS_ACLog_1395': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'If there are more than 255 occurences for the same fault (same fault code) in a same flight leg, additional occurences shall not be memorized.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1383]'}, u'SSCS_ACLog_1393': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'The ACLog shall send the EXT_AC_FREQUENCY signal corresponding to the AC EP Phase A frequency to EDMU using CAN busses', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'To define EXT_AC_FREQUENCY CAN signal', 'issue': u'3', 'refer': 'EMPTY'}, u'SSCS_ACLog_1390': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'A/C Tail shall be filled by the A/C Tail provided by the Avionics at the moment the fault occurs. ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1370]'}, u'SSCS_ACLog_1391': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'Data shall be filled with the Engineering data (snapshot and more if necessary) of the LRU concerning the fault. ', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1371]'}, u'CAN-IRD-349': {'body': u'LRU ID for SSPCM shall be as follows:', 'additional': u'"All" LRU ID are used by EDMU only to address all SSPCMs of SPDAx', 'derived': u'True', 'allocation': u'EDMU SSCS,SSPCM SSCS', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-119],[SIRD-EPGDS-2102]'}, u'CAN-IRD-348': {'body': u'LRU ID for GCU shall be as follows:\nALGCU = AGCU & LGCU', 'additional': u'ALGCU LRU ID are used by EDMU only', 'derived': u'True', 'allocation': u'EDMU SSCS', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-119]'}, u'SSCS_ACLog_1458': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'In case of AC BUS Overvoltage protection activation, the ACLOG shall declare the failure to the EDMU using CAN Busses.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1492],[SPE-BITE-1494]'}, u'SSCS_ACLog_1530': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'SW', 'body': u'ACLog shall maintain its DSO in INACTIVE state when AC Log is FAILED (not enter in functional mode).', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'The DSO states in Failed mode need to be specifiy', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-345': {'body': u'Subscriber CAN frame identifier shall be as follows:', 'additional': u'Subscribers are ACLOG, DCLOG, EMERLOG, SSPCM and GCU', 'derived': u'True', 'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS,SSPCM SSCS', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-119],[SIRD-EPGDS-2102]'}, u'CAN-IRD-344': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS,SSPCM SSCS', 'body': u'EDMU CAN frame identifier shall be as follows:', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-119],[SIRD-EPGDS-2102]'}, u'CAN-IRD-347': {'body': u'LRU ID for XLOG shall be as follows:\nXLOG1 = DCLOG1 & ACLOG1\nXLOG2 = DCLOG2 & ACLOG2 & EMERLOG', 'additional': u'XLOG1 and XLOG2 LRU ID are used by EDMU only.', 'derived': u'True', 'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-119],[SIRD-EPGDS-2102]'}, u'CAN-IRD-346': {'allocation': u'AC Log SSCS,DC Log SSCS,Emer Log SSCS,EDMU SSCS,SSPCM SSCS', 'body': u'Type ID shall be as follows:\nXLOG = EMERLOG & DCLOG & ACLOG', 'derived': u'True', 'rationale': u'EPGDS CAN definition', 'refer': u'[SIRD-EPGDS-119],[SIRD-EPGDS-2102]'}, u'CAN-IRD-262': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send EDMU_XLOG_FLIGHTINFO_x every 1 second to DCLOG.', 'refer': u'[SIRD-EPGDS-1059]'}, u'CAN-IRD-261': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to DCLOG[1/2] through EDMU_XLOG_FLIGHTINFO_x messages:\n\uf0a7\tDate : Digital values of Year, Month and Day\n\uf0a7\tValidity of Date and time : Date and time is valid or not\n\uf0a7\tTime : Digital values of Hour and Minute\n\uf0a7\tFlight phases\n\uf0a7\tValidity of Flight phase : Flight phase is valid or not\n\uf0a7\tAircraft tail\n\uf0a7\tValidity of Aircraft tail : Aircraft tail is valid or not\n\uf0a7\tFlight leg\n\uf0a7\tValidity of Flight leg : Flight leg is valid or not', 'refer': u'[SIRD-EPGDS-1898],[SPE-BITE-996]'}, u'SSCS_ACLog_1497': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'DSI interfaces shall be protected against short circuits to ground and +28VDC.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-3329]'}, u'SSCS_ACLog_1306': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW', 'body': u'The loss of continuous monitoring of AClog GFI protection shall be less than 1E-6 /FH', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'1', 'refer': u'[SIRD-EPGDS-2667]'}, u'SSCS_ACLog_1443': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': u'network configuration is not restored but  calculate"after a cold start in flight" added', 'conformity': u'NO', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'AC Log shall restore protections according to last value saved into NVM after a warm start or after a cold start in flight.\nIn all others start up cases, the protection are initiated with not activated state.', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SIRD-EPGDS-2847],[SIRD-EPGDS-3420]'}, u'CAN-IRD-268': {'allocation': u'Emer Log SSCS', 'body': u'EMERLOG shall send the following data to EDMU through EMERLOG_EDMU_NETWORK_STATUS_1 message:\n\uf0a7\tAvailability of the EMER busbars: Busbar is powered or not.\n\uf0a7\tValidity of the availability of the EMER busbars: the availability signal is valid or not.\n\uf0a7\tAvailability of the AC busbars: Busbar is powered or not.\n\uf0a7\tValidity of the availability of the AC busbars: the availability signal is valid or not.\n\uf0a7\tSupplying source of the EMER busbars: the source which supplies the busbar or Invalid.\n\uf0a7\t"Reconfiguration in Progress" signal : network is in reconfiguration or network is stable\n\uf0a7\t"Batt power only" signal : Only Battery Power available or at least another Aircraft power available other than Batts.\n\uf0a7\t"EMER power only" signal : Only EMER Power available or Not Only EMER Power available\n\uf0a7\t"RAT Gen on" signal : RAT is on or off\n\uf0a7\t"RAT STS" signal : (RAT deployed and RAT operational) or (RAT not deployed and RAT not operational)\n\uf0a7\tESS_TRU Overload signal \n\uf0a7\tESS_TRU Not Overload signal \n\uf0a7\tESS_TRU Fail signal \n\uf0a7\tESS_TRU Not Fail signal ', 'refer': u'[SIRD-EPGDS-1015],[SIRD-EPGDS-1017],[SIRD-EPGDS-1021],[SIRD-EPGDS-1896],[SIRD-EPGDS-1905],[SIRD-EPGDS-2307],[SIRD-EPGDS-2677],[SIRD-EPGDS-6778],[SPE-BITE-1269]'}, u'CAN-IRD-269': {'allocation': u'Emer Log SSCS', 'body': u'EMER busbars shall include the following bubars:\n\uf0a7\tAC_ESS_BUSBAR\n\uf0a7\tDC1_ESS_BUSBAR\n\uf0a7\tDC2_ESS_BUSBAR', 'refer': u'[SIRD-EPGDS-1021],[SIRD-EPGDS-1896],[SIRD-EPGDS-1905]'}, u'SSCS_ACLog_1229': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'During IBIT, the ACLog shall keep DSO contactors commands unchanged except when testing \xb5C watchdog', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1114]'}, u'SSCS_ACLog_1444': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'NA', 'derived': u'YES', 'allocation': u'HW', 'body': u'The ACLog shall provide 3 ASI "ASI_ACEP_VOLTAGE_PHA", "ASI_ACEP_VOLTAGE_PHB" and "ASI_ACEP_VOLTAGE_PHC" to monitor AC External Power phases', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': u'"ASI_ACEP_VOLTAGE_PHA", "ASI_ACEP_VOLTAGE_PHB" and "ASI_ACEP_VOLTAGE_PHC" not declare in SES', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-554': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to LGCU through EDMU_GCU_IDENT message:\n\uf0a7\tEDMU LGCU Software Interface Version: EDMU to LGCU Software Interface Version associated to this version of specification shall be 0x01.', 'refer': u'[SPE-BITE-1414]'}, u'CAN-IRD-555': {'allocation': u'HS', 'body': u'LGCU shall send the following data to EDMU through LGCU_EDMU_IDENT_x messages:\n\uf0a7\tSoftware Interface Version: LGCU to EDMU Software Interface Version associated to this version of specification shall be 0x01.\n\uf0a7\tthe CRC32 of its software (A665 CRC32 calculation shall be used)\n\uf0a7\tits Module type : Module type is LGCU\n\uf0a7\tits LRU Part Number\n\uf0a7\tits SW Part Number\n\uf0a7\tit Serial Number', 'refer': u'[SIRD-EPGDS-2975],[SPE-BITE-1414]'}, u'CAN-IRD-556': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall request LGCU_EDMU_IDENT_x every 1 second.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_894': {'status': u'DEL', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': 'EMPTY', 'derived': 'EMPTY', 'allocation': 'EMPTY', 'body': u'DELETED', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': 'EMPTY'}, u'CAN-IRD-551': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to LGCU through EDMU_GCU_FLIGHTINFO_x messages:\n\uf0a7\tDate : Digital values of Year, Month and Day\n\uf0a7\tValidity of Date and time : Date and time is valid or not\n\uf0a7\tTime : Digital values of Hour and Minute\n\uf0a7\tFlight phases\n\uf0a7\tValidity of Flight phase : Flight phase is valid or not\n\uf0a7\tAircraft tail\n\uf0a7\tValidity of Aircraft tail : Aircraft tail is valid or not\n\uf0a7\tFlight leg\n\uf0a7\tValidity of Flight leg : Flight leg is valid or not', 'refer': u'[SIRD-EPGDS-1898],[SPE-BITE-996]'}, u'CAN-IRD-552': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send EDMU_GCU_FLIGHTINFO_x every 1 second to LGCU.', 'refer': u'[SIRD-EPGDS-1059]'}, u'SSCS_ACLog_1531': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'BITE NVM access for downloading shall be inhibited when at least one of the following conditions are met : \nIBIT In progress \nNVM Reset in progress\nAircraft in flight', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-1553]'}, u'CAN-IRD-558': {'allocation': u'EDMU SSCS', 'body': u'EDMU shall send the following data to LGCU through EDMU_GCU_BITE message:\n\uf0a7\tIBIT test request: IBIT test is requested or not.\n\uf0a7\tTrip Reset request: Reset of trip is requested or not.\n\uf0a7\tUnlatch failure request: Unlatch of failures is requested or not.\n\uf0a7\tNVM download request: NVM download is resquested or not', 'refer': u'[SPE-BITE-202]'}, u'CAN-IRD-559': {'allocation': u'HS', 'body': u'LGCU shall send the following data to EDMU through LGCU_EDMU_MODULE_STATUS message:\n\uf0a7\tIBIT acceptance: LRU is in condition for IBIT test or not.\n\uf0a7\tTrip Reset acceptance: LRU is in condition for Reset of trip or not.\n\uf0a7\tUnlatch failure acceptance: LRU is in condition for unlatching failures or not.\n\uf0a7\tits Flight/Ground status : LRU is in Flight or on Ground\n\uf0a7\tThe validity of the Flight/Ground status\n\uf0a7\tNVM download acceptance state', 'refer': u'[SIRD-EPGDS-2533],[SIRD-EPGDS-2975],[SPE-BITE-202]'}, u'SSCS_ACLog_899': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'HW, SW', 'body': u'The ACLog shall check its Discrete Signal Inputs during PBIT which permits to verify the switch between the high and the low state of the DSI.', 'safety': u'YES', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-116]'}, u'SSCS_ACLog_898': {'status': u'MATURE', 'terminal': 'EMPTY', 'additional': 'EMPTY', 'conformity': u'YES', 'derived': 'EMPTY', 'allocation': u'SW', 'body': u'The ACLog shall maintain all the DSO in open state during PBIT', 'safety': 'EMPTY', 'verification': 'EMPTY', 'rationale': 'EMPTY', 'issue': u'3', 'refer': u'[SPE-BITE-121]'}}
        filename_is = export_is.exportIS(filename_is="test_is",
                                         reference=dico_parameters["reference"],
                                         issue=dico_parameters["issue"],
                                         release=dico_parameters["release"],
                                         author=dico_parameters["author"],
                                         dico_upper=doc_upper,
                                         project=dico_parameters["system"],
                                         tbl_cr=all)
    def test_create_is(self):
        return
        component = "ACLOG_SW" #"BITE" # "ACLOG_SW"
        ihm = StubIHM()
        dico_parameters ={"system":"Dassault F5X",
                          "item":"ESSNESS",
                          "component":"ENM",
                          "detect":"",
                          "implemented":"SW_ENM/05",
                          "project":"SW_ENM-5.2",
                          "release":"SW_ENM/05",
                          "baseline":"SW_ENM_05_01",
                          "reference":"CCB_SW_ENM_001",
                          "issue":"1.0",
                          "author":"Olivier Appere",
                          "login":"appereo1",
                          "cr_type":"SACR"}
        ihm.setParameters(dico_parameters)
        system = "Dassault F5X PDS"
        item = ""
        login = "appereo1"
        password = "jeudi2009"
        queue = Queue.Queue()
        thread = ThreadQuery("doc",master=ihm,queue=queue)
        thread._startSession(system=system,
                             item=item,
                             database="db_sms_pds",
                             login=login,password=password)
        #thread = ThreadQuery(master=ihm)
        self.setG7000(component=component)
        thread._exportIS(dirname_upper=self.dirname_upper,
                           dirname_req=self.dirname_req,
                           reference=dico_parameters["reference"],
                           release=dico_parameters["release"],
                           issue=dico_parameters["issue"],
                           hlr_selected=True)
    def test_check_is_g7000(self):
        return
        """
        Test IS check
        :return:
        """
        component = "ACLOG_SW" #"BITE" # "ACLOG_SW"
        ihm = StubIHM()
        thread = ThreadQuery(master=ihm)
        self.setG7000(component=component)
        thread._checkISCmd(self.dirname_upper,
                           self.dirname_req,
                           self.filename_is,
                           hlr_selected=True,
                           component=component)
    def test_check_is_llr(self):
        return
        ihm = StubIHM()
        thread = ThreadQuery(master=ihm)
        thread._checkISCmd(self.dirname_upper,
                           self.dirname_req,
                           self.filename_is,
                           hlr_selected=False)
    def test_export_is_llr(self):
        return
        ihm = StubIHM()
        thread = ThreadQuery(master=ihm)
        thread._exportIS(self.dirname_req,
                         self.dirname_upper,
                         False,
                         "ET4561-S",
                         "1.4",
                         "SW_ENM/04",
                         self.hsid_dirname)
    def test_export_is(self):
        return
        ihm = StubIHM()
        thread = ThreadQuery(master=ihm)
        thread._exportIS(self.dirname_req,
                         self.dirname_upper,
                         True,
                         "ET4561-S",
                         "1.4",
                         "SW_ENM/04")
    def test_export_derived(self):
        return
        hlr = Derived(self.dirname_req,
              hlr_selected=True)
        hlr.listDir()
        hlr.invert()
        hlr.getDerived()
        filename = hlr.export()
    def test_check_is_generic(self):
        return
        check_is.openLog("SCI")
        check_is = CheckIS()
        check_is.closeLog()
        check_is.CheckISGeneric(self.filename_is,"SCI",True)
    def testProcessIG(self):
        return
        from get_ig_jquery import easyIG
        if 0==0:
            easyig = easyIG(self.ig,
                            self.saq)
        else:
            easyig = easyIG()
        easyig.start()
    def testBlockDiag(self):
        return
        from blockdiag.command import BlockdiagApp
        diag_filename = "../sqa/doc/blocdiag_certif.diag"
        args=["-fttf/walkway/Walkway.ttf",diag_filename]
        BlockdiagApp().run(args)
    def test_getDescriptionDoc(self):
        return
        list_doc=(("SAQ312_PLDVPR.doc","Template"),
                   ("SAQ313_PLDRD.doc","Template"),
                    ("SAQ319_PLD_Critical_Design_Review.xls","Template"))
        tool = Tool()
        for txt,expected in list_doc:
            description,reference = tool._getDescriptionDoc(txt)
            try:
                assert(expected in description)
            except AssertionError:
                print "Result:",description,expected
    def test_readEOC(self):
        return
        #data = ("abc","def","ghi")
        #from docid import MyTkApp
        #fenetre = Tk()
        #app = MyTkApp(data)
        #dico_addr = {"hw_sw_compat":("0x400","0x401"),"pn":("0x404","0x424"),"checksum":("0x400","0x404")}
        #app.setAddr(dico_addr)
        #app.start()
        #return
        current_dir = os.getcwd()
        ihm = StubIHM()
        thread = ThreadQuery(master=ihm)
        if 0==1:
            print "F5X_SW_ENM.hex"
            filename = join(current_dir,"qualification/bin/F5X_SW_ENM.hex")
            thread._readEOC(filename)
        if 0==1:
            print "ACENM-1.3.srec"
            filename = join(current_dir,"qualification/bin/ACENM-1.3.srec")
            thread._readEOC(filename,{"hw_sw_compat":("0x400","0x401"),"pn":("0x404","0x424"),"checksum":("0x400","0x404")})
        print "F5X_ESS_HARDWARE.hex"
        #dico_addr = {'hw_sw_compat': ['0x5600', '0x5602'], 'pn': ['0x5604', '0x5624'], 'checksum': ['0x5624', '0x5626']}
        dico_addr = {'hw_sw_compat': ['0x55600', '0x55602'], 'pn': ['0x55604', '0x55624'], 'checksum': ['0x55624', '0x55626']}
        filename = join(current_dir,"qualification/bin/F5X_ESS_HARDWARE.hex")
        thread._readEOC(filename,dico_addr)
        return
        sys.path.append("intelhex")
        from intelhex import IntelHex,IntelHex16bit
        current_dir = os.getcwd()
        filename = join(current_dir,"qualification/F5X_SW_ENM.hex")
        ih = IntelHex()
        ih.fromfile(filename,format='hex')
        print "Hw/Sw compatiblity",ih[0x400]
        pn = ""
        for x in range(0x400,0x424):
            y = ih[x]
            if y >= 0x20:
                #print "{:d}:{:s}".format(x,chr(y))
                pn += chr(y)
        print "PN",pn
            #print "{:d}:{:d}".format(x,ih[x])
        #print "PN1",ih[0x403]
        #print "PN2",chr(ih[0x404])
        #print "PN3",ih[0x405]
        #print "PN4",ih[0x406]
        #print "PN5",ih[0x407]
        #for address in ih:
        #    print "Address:",address

    def test_createCR(self):
        return
        tool = Tool()
        tool.createCR(output_filename="result/test.html")

    def test_SubPN(self):
        pn = "ECE3E-A338-0501"
        result = re.sub(r'ECE[A-Z0-9]{2}-A([0-9]{3})-([0-9]{4})',r'A\1L\2',pn)
        print "test_SubPN:",result

    def test_OS(self):
        return
        from tkintertable.Tables import TableCanvas
        import platform
        ostyp = TableCanvas.checkOSType()
        print "OS:",ostyp
        platform = platform.system()
        print "Platform:",platform

    def test_listSubProjects(self):
        return
        release = "SW_ENM/06"
        baseline = "SW_ENM_06_06"
        project = "SW_ENM-6.6"
        ihm = StubIHM()
        self.logSynergy(ihm)
        cid = BuildDoc(ihm,
                       session_started=True)
        list_projects = [[release,baseline,project]]
        prj_name, prj_version = cid.getProjectInfo(project)
        cid.findSubProjects(prj_name,
                             prj_version,
                             list_projects)
        #print "TBL",list_projects
        for sub_release,sub_baseline,sub_project in list_projects:
            if project != sub_project:
                ihm.log("Find sub project {:s}".format(sub_project))
        if 0==1:
            cid.getItemsInFolder(design_keyword,
                                 project,
                                 baseline,
                                 release,
                                 only_name=True,
                                 exclude=["SwDD_"],
                                 with_extension=True,
                                 mute=True,
                                 converted_list=list_llr_document)

    def test_listSubDir(self):
        """

        :return:
        """
        if 0==1:
            user_release = "SW_ENM/06"
            user_baseline = "SW_ENM_06_06"
            user_project = "SW_ENM-6.6"
        else:
            user_release = "SW_WHCC/04"
            user_baseline = "SW_WHCC_04_00"
            user_project = "SW_WHCC-4.0"
        ihm = StubIHM()
        self.logSynergy(ihm)
        cid = BuildDoc(ihm,
                       session_started=True)

        # Get LLR
        list_objects = []
        list_file_specs = []

        design_keyword = "S[w|W]DD"
        user_exclude = ["SwDD_"]
        ihm.log("Looking for Low Level requirement in SwDD folder ...")
        cid.getItemsInFolder(design_keyword,
                             project = user_project,
                             baseline = user_baseline,
                             release = user_release,
                             only_name=True,
                             exclude=user_exclude,
                             with_extension=True,
                             mute=False,
                             converted_list=list_objects,
                             list_found_items=list_file_specs)

        print "Répertoire racine: ",design_keyword
        print "Fichier(s) ou répertoire(s) exclus:",user_exclude
        co_comment = "Mofification de la conception suite revue SDR CR15-8675"
        ci_comment = co_comment
        print "Check out\n"
        for object in list_objects:
            # Check out
            print "ccm co -c \"{:s}\" {:s} ".format(co_comment,object)

        print "\nCheck in\n"
        for object in list_objects:
            # Check in
            print "ccm ci -c \"{:s}\" {:s} ".format(co_comment,object)

        print "\nAssociate a task with objects\n"
        for file_spec in list_file_specs:
            # Associate a task with objects
            print "ccm task -a 17 -obj {:s}".format(file_spec)

    def test_createConditionStatus(self):
        return
        def callback(arg):
            pass
        master = Tk()
        queue = Queue.Queue()
        notebook = Pmw.NoteBook(master)
        queue_thread_gui = Queue.Queue()
        interface = docid.Interface(notebook,
                                    queue,
                                    queue_thread_gui = queue_thread_gui)
        print "End Interface init"
        interface.list_cr_doamin = ("SCR","SACR")
        condition, detect_attribut = interface._createConditionStatus()

    def test_AccessControlList(self):
        tool = Tool()
        list_systems = tool.getSystemName()
        print "list_systems",list_systems
        for system in list_systems:
            print "System:",system[0]
            list_users = tool.get_writers_vs_systems(system[0])
            if list_users:
                for user in list_users:
                    print "   ",user[0]

    def test_PBS(self):
        list_cr_type = []
        tool = Tool()
        cr_type = tool._getItemCRType(system="Dassault F5X PDS",item="ESSNESS")
        list_cr_type.append(cr_type)
        result = tool.getListComponents(system="Dassault F5X PDS",item="ESSNESS")
        for name,cr_type in result:
            list_cr_type.append(cr_type)
        print "RESULT",list_cr_type

    def test_CR_Panel(self):
        return
        thread_build_docx = False
        master = Tk()
        queue = Queue.Queue()
        #type_frame = Frame(fenetre)
        # notebook
        #Pmw.initialise(fenetre)
        #fenetre.resizable(False, False)
        #notebook = Pmw.NoteBook(fenetre)
        #notebook.pack(fill='both', expand=1, padx=10, pady=10)
        #docid = Gui(fenetre,
        #            queue)
        notebook = Pmw.NoteBook(master)
        notebook.pack(fill='both', expand=1, padx=10, pady=2)
        page_create_ccb = notebook.add('Create CCB')
        change = ChangeGui("Dassault F5X PDS")
        top = Frame(page_create_ccb)
        top_frame = change.build_cid_folder(top,img_display='normal')
        top_frame.pack(anchor=NW,side=LEFT)
        ccb_right = change._build_ccb_folder(top,img_display='normal')
        ccb_right.pack()
        top.pack()
        list_cr_frame = change._build_list_cr_frame(page_create_ccb)
        list_cr_frame.pack(anchor=W,
                           fill=BOTH)
        notebook.setnaturalsize()
        #change.createCkeckButtonDomainPanel(type_frame,
        #                                      ccb_var_type,
        #                                      change.excr_type,
        #                                      change.ccb_type)
        #type_frame.pack()
        master.mainloop()
    def test_readGproc(self):
        return
        current_dir = os.getcwd()
        ihm = StubIHM()
        thread = ThreadQuery(master=ihm)
        xml = join(current_dir,"qualification/GPROC/Makefile-7.1.gproc")
        xsl = join(current_dir,"template\\gproc_makefile.xsl")
        html_name = Tool.getFileName(xml)
        html_filename = join(current_dir,"result\\" + html_name)
        thread._readBPROC(xml,xsl,html_filename,display=False)
        xml = join(current_dir,"qualification/BPROC/ASI_28V_A LESS-6.0_1229745227089609305.bproc")
        xsl = join(current_dir,"template/xsl_procedure_ece-1.0.xsl")
        #xsl = join(current_dir,"template\\gproc_makefile.xsl")
        html_name = Tool.getFileName(xml)
        html_filename = join(current_dir,"result\\" + html_name)
        thread._readBPROC(xml,xsl,html_filename,display=False)
    def test_readBproc(self):
        return
        def HighlightPattern(text):
            char = {r'"(.*)"':r'<span class="green">\1</span>',}
            for before, after in char.iteritems():
                text = re.sub(before,after,text)
            text_filtered = text
            return text_filtered
        current_dir = os.getcwd()
        directory = join(current_dir,"qualification/BPROC")
        xml = join(current_dir,"qualification/BPROC/ASI_28V_A LESS-6.0_1229745227089609305.bproc")
        xsl = join(current_dir,"template/xsl_procedure_ece-1.0.xsl")
        html_filename = join(current_dir,"result\CONTACT_B_CMD RESS.html")
        htmlC = HtmlConverter(xml,xsl)
        #html_final = htmlC.toHtml(html_filename)
        html_final = '<tr><td width="60%">Set "DSI_TRU_OVL_GEN_OVL_SC" of LESS board to \'1000Hz\' and duty cycle to 50% (input PWM)<br></td></tr>'
        #text_result = HighlightPattern(text_test)
        #print text_result
        #return
        parser = BProc_HTMLParser("td")
        parser.text = ""
        parser.tbl = []
        parser.dico = {}
        parser.foundCell = False
        parser.feed(html_final)
        print parser.text
        #parser.tbl
        #for x in parser.tbl:
        #    print "X",x
        return
        html_final_filtered = parser.text
        htmlFile = html_filename
        with open(htmlFile, 'w') as html_handler:
            try:
                html_handler.write(html_final_filtered)
            except UnicodeEncodeError,e:
                print e
        os.startfile(html_filename)
    def runTest (self):
        pass
        #print("Running Test")
    def setUp(self):
        #print("Setting up Test cases")
        current_dir = os.getcwd()
        self.dirname_upper = join(current_dir,"qualification/SET_F5X_ENM/UPPER")
        self.dirname_req = join(current_dir,"qualification/SET_F5X_ENM/SWRD")
        self.filename_is = join(current_dir,"qualification/SET_F5X_ENM/IS/IS_SwRD_ENM_ET3135_S-5.1.1.xlsm")
        self.hsid_dirname = "/Users/olivier/github/local/HSID"
        self.ig = join(current_dir,"qualification/IG/procedures_zodiac_aero_electric.htm")
        self.saq = join(current_dir,"qualification/IG/formulaires_saq.htm")
    def setF5X(self,component=""):
        current_dir = os.getcwd()
        if component == "SW_WHCC":
            self.dirname_upper = join(current_dir,"qualification/SET_F5X_WHCC/UPPER")
            self.dirname_req = join(current_dir,"qualification/SET_F5X_WHCC/SWRD")
            self.filename_is = join(current_dir,"qualification/SET_F5X_WHCC/IS/IS_SwRD_WHCC-3.1.0.xlsm")
    def setG7000(self,component=""):
        current_dir = os.getcwd()
        if component == "ACLOG_SW":
            self.dirname_upper = join(current_dir,"qualification/debug_G7000_IS-checker/ACENM/Upper")
            self.dirname_req = join(current_dir,"qualification/debug_G7000_IS-checker/ACENM/Spec")
            self.filename_is = join(current_dir,"qualification/debug_G7000_IS-checker/ACENM/Copie de IS_SwRD_ACENM-1.6.0.xlsm")
        elif component == "DCENM":
            self.dirname_upper = join(current_dir,"qualification/debug_G7000_IS-checker/Input Data/Specification")
            self.dirname_req = join(current_dir,"qualification/debug_G7000_IS-checker/SwRD")
            #self.filename_is = join(current_dir,"qualification/debug_G7000_IS-checker/SwRD/IS_SwRD_DCENM - Copie.xlsm")
            self.filename_is = join(current_dir,"qualification/debug_G7000_IS-checker/IS/IS_SwRD_DCENM.xlsm")
        elif component == "BITE":
            self.dirname_upper = ""
            self.dirname_req = ""
            self.filename_is = join(current_dir,"qualification/SET_G7000_BITE/Copie de IS_SwRD_BITE.xlsm")
        else:
            self.dirname_upper = join(current_dir,"qualification/ACENM/Upper")
            self.dirname_req = join(current_dir,"qualification/ACENM/Spec")
            self.filename_is = join(current_dir,"qualification/ACENM/Copie de IS_SwRD_ACENM-1.5.1.xlsm")
    def tearDown(self):
        pass
        #print("Cleaning up Test cases")
# def suite():
#     suite = unittest.TestSuite()
#     #suite.addTest(Test('test_hyperlink'))
#     suite.addTest(Test('test_check_is'))
#     return suite
#
# if __name__ == '__main__':
#     runner = unittest.TextTestRunner()
#     test_suite = suite()
#     runner.run (test_suite)
